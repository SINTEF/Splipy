name: Python package

on:
  push:
    branches: [ master ]
    tags: ["*"]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v3

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies and package
        run: |
          python -m pip install --upgrade pip wheel uv
          make sync
      - name: Test with pytest
        run: |
          make test

  build_core_wheels:
    name: Build wheels
    needs: [test]
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel uv cibuildwheel
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir dist core/
        env:
          CIBW_BUILD: cp311-* cp312-* cp313-*
          CIBW_SKIP: '*musllinux* *i686*'
      - uses: actions/upload-artifact@v4
        with:
          name: core-wheels-${{ matrix.os }}
          path: ./dist/*.whl

  build_rest:
    name: Build sdist and non-compiled wheels
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel uv
      - name: Build sdist
        run: make sdist
      - name: Build wheel
        run: uv build --wheel --package splipy
      - uses: actions/upload-artifact@v4
        with:
          name: core-sdist
          path: ./dist/splipy_core-*.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: splipy-sdist
          path: ./dist/splipy-*.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: splipy-wheel
          path: ./dist/*.whl

  deploy:
    name: Deploy
    needs: [build_core_wheels, build_rest]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist-core
          pattern: core-*
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          path: dist-splipy
          pattern: splipy-*
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.pypi_core_pwd }}
          packages-dir: dist-core/
      - uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.pypi_pwd }}
          packages-dir: dist-splipy/

  test-deploy:
    name: Test Deploy
    needs: [build_core_wheels, build_rest]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist-core
          pattern: core-*
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          path: dist-splipy
          pattern: splipy-*
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.pypi_core_test_pwd }}
          packages-dir: dist-core/
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
      - uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.pypi_test_pwd }}
          packages-dir: dist-splipy/
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
