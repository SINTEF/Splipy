# --- Automatic generated test file  ---
# Generator    : generate_affine.py
# Date         : 2016-02-10
# Git revision : ce198333cbf3bf3a7d964b947e07c74c43df1cdd

import numpy as np
from splipy import Volume, Surface, Curve, BSplineBasis
from math import sqrt
import unittest


class TestAffine(unittest.TestCase):
    def test_translate_curve_2D_p2_rational(self):
        controlpoints = np.array([[ -5. ,   2. ,   0.7],
       [ 21. ,   2. ,   1.2],
       [ 46. ,  -3. ,   1.2],
       [ 78. ,   3. ,   0.9],
       [ 95. ,   4. ,   1.2]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.3,  1.9,  3.3,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 4.9,  4.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 4.900000
        pt2[...,1] -= 4.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p3_rational(self):
        controlpoints = np.array([[ -5. ,  -3. ,   1.1],
       [ 20. ,   4. ,   1.4],
       [ 51. ,   0. ,   0.6],
       [ 72. ,  -1. ,   1.1],
       [ 99. ,   0. ,   1.3]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  2.2,  3. ,  3. ,  3. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 8.7,  5.4])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 8.700000
        pt2[...,1] /= 5.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p43_rational(self):
        controlpoints = np.array([[   2. ,   -4. ,    1.3],       [  17. ,    3. ,    1. ],       [  27. ,    0. ,    0.9],       [  40. ,   -3. ,    0.6],       [  57. ,   -5. ,    1.3],       [  75. ,   -4. ,    1.2],       [  85. ,    0. ,    1.1],       [  95. ,   -3. ,    0.7],       [  -4. ,   21. ,    0.8],       [  18. ,   23. ,    0.9],       [  25. ,   28. ,    0.7],       [  38. ,   21. ,    1.4],       [  58. ,   25. ,    1. ],       [  74. ,   24. ,    1.5],       [  82. ,   26. ,    0.5],       [ 100. ,   27. ,    1.4],       [   0. ,   45. ,    0.5],       [  10. ,   47. ,    1.2],       [  30. ,   45. ,    0.7],       [  42. ,   52. ,    0.7],       [  57. ,   52. ,    0.5],       [  71. ,   47. ,    0.9],       [  85. ,   45. ,    0.8],       [  97. ,   51. ,    1. ],       [   2. ,   75. ,    0.6],       [  18. ,   79. ,    0.7],       [  25. ,   78. ,    1.1],       [  46. ,   72. ,    1.2],       [  59. ,   71. ,    1.4],       [  76. ,   78. ,    0.8],       [  89. ,   77. ,    1.3],       [  95. ,   71. ,    1.4],       [  -1. ,  101. ,    1.3],       [  10. ,   95. ,    1.5],       [  25. ,   99. ,    1.4],       [  41. ,   97. ,    0.8],       [  53. ,   98. ,    1.4],       [  70. ,  101. ,    1. ],       [  84. ,  103. ,    0.8],       [ 102. ,  102. ,    1.4]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  1.9,  3.3,  4.2,  5. ,  5. ,  5. ,
        5. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  2.3,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 4.6,  0.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 4.600000
        pt2[...,1] -= 0.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p33_rational(self):
        controlpoints = np.array([[   2. ,    1. ,    0.6],       [  21. ,    1. ,    0.8],       [  30. ,    4. ,    0.5],       [  51. ,   -5. ,    0.9],       [  68. ,   -4. ,    0.8],       [  82. ,   -4. ,    1.2],       [ 100. ,   -1. ,    0.6],       [  -3. ,   21. ,    0.8],       [  13. ,   22. ,    0.7],       [  30. ,   22. ,    1.5],       [  49. ,   29. ,    0.6],       [  66. ,   24. ,    0.6],       [  86. ,   25. ,    1.4],       [ 101. ,   21. ,    0.8],       [   4. ,   50. ,    0.7],       [  13. ,   45. ,    1.1],       [  35. ,   47. ,    0.8],       [  49. ,   47. ,    1.3],       [  71. ,   51. ,    0.6],       [  84. ,   50. ,    1.1],       [  99. ,   47. ,    0.8],       [   2. ,   70. ,    0.8],       [  11. ,   79. ,    1.1],       [  37. ,   73. ,    1.2],       [  54. ,   76. ,    1.4],       [  68. ,   77. ,    1. ],       [  80. ,   77. ,    1.3],       [ 100. ,   76. ,    1.3],       [  -1. ,   97. ,    1.4],       [  21. ,  102. ,    1.3],       [  29. ,   95. ,    1.5],       [  45. ,   99. ,    0.9],       [  65. ,   99. ,    0.8],       [  88. ,   95. ,    0.8],       [  97. ,   99. ,    1.3]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  1.7,  3.1,  4.1,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  2.2,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.5,  4.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.500000
        pt2[...,1] /= 4.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p4_rational_C0_periodic(self):
        controlpoints = np.array([[  97. ,   -4. ,    1.2],
       [  72. ,   66. ,    1.1],
       [  -4. ,   96. ,    1.4],
       [ -69. ,   69. ,    1. ],
       [-100. ,    0. ,    1. ],
       [ -70. ,  -71. ,    1. ],
       [   3. ,  -99. ,    1.4],
       [  66. ,  -71. ,    0.6]])
        basis0 = BSplineBasis(4, np.array([-1.4,  0. ,  0. ,  0. ,  1.1,  2.3,  3.2,  4.2,  4.6,  6. ,  6. ,
        6. ,  7.1]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 4.8,  9.5,  8.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 4.800000
        pt2[...,1] -= 9.500000
        pt2[...,2] -= 8.300000
        allZero           = pt2
        allZero[...,:-1] -= pt
        self.assertAlmostEqual(np.linalg.norm(allZero), 0.0)

    def test_scale_curve_2D_p3_rational_C0_periodic(self):
        controlpoints = np.array([[  97. ,   -1. ,    1.4],
       [  67. ,   74. ,    1.1],
       [   0. ,   95. ,    0.6],
       [ -76. ,   69. ,    1.1],
       [ -96. ,   -2. ,    1.4],
       [ -72. ,  -67. ,    1.4],
       [  -4. , -100. ,    1.4],
       [  67. ,  -68. ,    0.7]])
        basis0 = BSplineBasis(3, np.array([-0.8,  0. ,  0. ,  1.2,  1.7,  2.8,  3.9,  5.1,  6.2,  7. ,  7. ,
        8.2]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 5.4,  2.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 5.400000
        pt2[...,1] /= 2.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p22_rational_C0_periodic(self):
        controlpoints = np.array([[ 64. ,   2. ,   0.8],
       [-32. ,  51. ,   1. ],
       [-26. , -54. ,   1.2],
       [ 73. ,   4. ,   0.8],
       [-38. ,  66. ,   0.9],
       [-34. , -62. ,   1.5],
       [ 90. ,  -3. ,   0.8],
       [-40. ,  75. ,   1.1],
       [-47. , -71. ,   1. ],
       [ 99. ,  -1. ,   1.4],
       [-52. ,  84. ,   1.3],
       [-48. , -85. ,   1.3]])
        basis0 = BSplineBasis(2, np.array([-1.2,  0. ,  0.6,  1.8,  3. ,  3.6]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  2. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 4.7,  9.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 4.700000
        pt2[...,1] -= 9.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p33_rational_C0_periodic(self):
        controlpoints = np.array([[ 59. ,   0. ,   0.6],       [ 16. ,  55. ,   1.4],       [-49. ,  30. ,   1. ],       [-53. , -31. ,   1.5],       [ 15. , -55. ,   1.2],       [ 66. ,   4. ,   0.7],       [ 17. ,  59. ,   1.5],       [-50. ,  38. ,   0.9],       [-52. , -44. ,   0.7],       [ 22. , -64. ,   0.9],       [ 70. ,  -4. ,   1. ],       [ 18. ,  68. ,   0.6],       [-65. ,  39. ,   0.9],       [-55. , -45. ,   1.1],       [ 27. , -66. ,   1.1],       [ 81. ,   4. ,   1.2],       [ 22. ,  74. ,   0.7],       [-64. ,  48. ,   1.2],       [-67. , -51. ,   0.7],       [ 21. , -75. ,   0.6],       [ 88. ,  -1. ,   0.6],       [ 28. ,  83. ,   1.5],       [-69. ,  50. ,   1.5],       [-66. , -55. ,   0.9],       [ 25. , -88. ,   1.1],       [ 93. ,   0. ,   0.8],       [ 26. ,  88. ,   1. ],       [-81. ,  55. ,   0.6],       [-80. , -59. ,   1.3],       [ 24. , -92. ,   1. ],       [ 99. ,   3. ,   0.8],       [ 27. ,  93. ,   1.4],       [-83. ,  57. ,   1.2],       [-81. , -59. ,   1.3],       [ 28. , -93. ,   1.2]])
        basis0 = BSplineBasis(3, np.array([-1.1,  0. ,  0. ,  0.9,  2.2,  2.9,  4. ,  4. ,  4.9]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.4,  1.6,  2.7,  4.4,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 4.3,  7.2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.300000
        pt2[...,1] /= 7.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p3_rational_C1_periodic(self):
        controlpoints = np.array([[ 104. ,   -3. ,    0.6],
       [  65. ,   74. ,    0.7],
       [ -22. ,   95. ,    1. ],
       [ -88. ,   42. ,    0.7],
       [ -94. ,  -43. ,    1.3],
       [ -22. ,  -99. ,    0.7],
       [  59. ,  -79. ,    0.7]])
        basis0 = BSplineBasis(3, np.array([-2.1, -0.7,  0. ,  0.7,  1.8,  2.9,  4.1,  4.9,  6.3,  7. ,  7.7,
        8.8]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 1.8,  5.4])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 1.800000
        pt2[...,1] -= 5.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p3_rational_C1_periodic(self):
        controlpoints = np.array([[ 101. ,   -1. ,    1.4],
       [  69. ,   71. ,    0.7],
       [   0. ,  103. ,    1.4],
       [ -69. ,   75. ,    1.1],
       [ -96. ,    2. ,    1.4],
       [ -67. ,  -71. ,    0.7],
       [   0. , -102. ,    1.2],
       [  74. ,  -67. ,    1.2]])
        basis0 = BSplineBasis(3, np.array([-2.1, -0.7,  0. ,  1.2,  1.7,  3.3,  4.2,  5.3,  5.9,  7.3,  8. ,
        9.2,  9.7]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 5.3,  7.4])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 5.300000
        pt2[...,1] /= 7.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p32_rational_C1_periodic(self):
        controlpoints = np.array([[ 59. ,   1. ,   0.6],
       [ 13. ,  58. ,   0.7],
       [-47. ,  38. ,   1.3],
       [-48. , -37. ,   0.8],
       [ 18. , -61. ,   1.4],
       [ 68. ,  -4. ,   0.7],
       [ 20. ,  60. ,   0.8],
       [-57. ,  37. ,   1.2],
       [-58. , -41. ,   1. ],
       [ 16. , -69. ,   0.8],
       [ 80. ,  -2. ,   1.1],
       [ 26. ,  68. ,   0.6],
       [-59. ,  48. ,   0.6],
       [-62. , -47. ,   0.7],
       [ 25. , -78. ,   1. ],
       [ 87. ,  -5. ,   1.4],
       [ 23. ,  83. ,   0.8],
       [-67. ,  47. ,   1. ],
       [-68. , -50. ,   0.8],
       [ 27. , -79. ,   1.4],
       [ 94. ,   3. ,   1. ],
       [ 28. ,  92. ,   1.3],
       [-76. ,  49. ,   1.1],
       [-78. , -54. ,   0.6],
       [ 32. , -88. ,   1. ],
       [ 98. ,  -1. ,   1. ],
       [ 26. ,  96. ,   1. ],
       [-80. ,  54. ,   0.8],
       [-80. , -57. ,   1.1],
       [ 28. , -93. ,   1.5]])
        basis0 = BSplineBasis(3, np.array([-1.8, -0.9,  0. ,  1.4,  1.7,  3.2,  4.1,  5. ,  6.4,  6.7]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  2.3,  3.4,  4.3,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 3.3,  5.5])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 3.300000
        pt2[...,1] -= 5.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p43_rational_C1_periodic(self):
        controlpoints = np.array([[  55. ,    3. ,    1.5],
       [  19. ,   53. ,    1.5],
       [ -46. ,   35. ,    1. ],
       [ -45. ,  -35. ,    0.7],
       [  22. ,  -56. ,    1.4],
       [  72. ,    1. ,    1.3],
       [  18. ,   71. ,    1. ],
       [ -60. ,   38. ,    0.8],
       [ -65. ,  -47. ,    1.4],
       [  17. ,  -66. ,    1.3],
       [  83. ,    4. ,    1.2],
       [  22. ,   83. ,    1.2],
       [ -74. ,   55. ,    1.4],
       [ -66. ,  -52. ,    0.6],
       [  26. ,  -83. ,    0.5],
       [ 103. ,   -1. ,    0.6],
       [  32. ,   96. ,    0.6],
       [ -85. ,   58. ,    1.4],
       [ -79. ,  -56. ,    0.9],
       [  31. ,  -99. ,    0.8]])
        basis0 = BSplineBasis(4, np.array([-2. , -0.8,  0. ,  0. ,  1.3,  2. ,  3.2,  4. ,  4. ,  5.3,  6. ]),1)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.7,  3.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.700000
        pt2[...,1] /= 3.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p4(self):
        controlpoints = np.array([[  -2.,    1.],
       [  16.,   -1.],
       [  31.,   -2.],
       [  45.,   -3.],
       [  63.,    1.],
       [  87.,   -2.],
       [ 103.,   -4.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  3.1,  4. ,  4. ,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 1.9,  4.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 1.900000
        pt2[...,1] -= 4.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p4(self):
        controlpoints = np.array([[  -3.,   -4.],
       [  20.,   -3.],
       [  28.,    2.],
       [  54.,    1.],
       [  67.,    0.],
       [  80.,    2.],
       [ 104.,   -3.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  2.8,  4. ,  4. ,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 2.2,  8.1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 2.200000
        pt2[...,1] /= 8.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p34(self):
        controlpoints = np.array([[  -5.,   -1.],       [   9.,   -5.],       [  30.,   -1.],       [  44.,   -4.],       [  53.,    1.],       [  72.,   -3.],       [  82.,    4.],       [ 101.,    4.],       [  -4.,   19.],       [  14.,   16.],       [  28.,   21.],       [  45.,   19.],       [  59.,   15.],       [  71.,   19.],       [  82.,   24.],       [ 104.,   23.],       [   0.,   37.],       [  13.,   40.],       [  27.,   44.],       [  42.,   36.],       [  59.,   38.],       [  72.,   39.],       [  85.,   43.],       [  97.,   38.],       [  -1.,   57.],       [   9.,   56.],       [  24.,   55.],       [  42.,   61.],       [  57.,   59.],       [  75.,   62.],       [  89.,   57.],       [  95.,   58.],       [  -3.,   81.],       [  16.,   84.],       [  25.,   81.],       [  40.,   77.],       [  56.,   75.],       [  71.,   84.],       [  82.,   83.],       [  97.,   80.],       [   1.,  100.],       [  16.,  103.],       [  24.,  100.],       [  43.,   95.],       [  55.,   96.],       [  72.,   95.],       [  83.,   96.],       [ 101.,  102.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  1.8,  2.6,  4.4,  4.6,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.6,  1.9,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 0.4,  1.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 0.400000
        pt2[...,1] -= 1.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p44(self):
        controlpoints = np.array([[   2.,   -4.],       [  20.,    3.],       [  50.,    2.],       [  72.,   -4.],       [  95.,   -5.],       [  -3.,   20.],       [  29.,   17.],       [  50.,   14.],       [  71.,   13.],       [  99.,   20.],       [   0.,   38.],       [  23.,   37.],       [  45.,   29.],       [  71.,   35.],       [  99.,   35.],       [  -5.,   52.],       [  25.,   49.],       [  54.,   45.],       [  74.,   48.],       [  98.,   49.],       [  -4.,   64.],       [  23.,   63.],       [  46.,   64.],       [  79.,   63.],       [  97.,   69.],       [   0.,   79.],       [  25.,   88.],       [  47.,   86.],       [  76.,   87.],       [  96.,   78.],       [  -4.,  104.],       [  29.,  103.],       [  48.,   98.],       [  77.,   95.],       [  96.,   96.]])
        basis0 = BSplineBasis(4, np.array([ 0.,  0.,  0.,  0.,  1.,  2.,  2.,  2.,  2.]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  1.9,  2.6,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 7.9,  9.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 7.900000
        pt2[...,1] /= 9.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p2_C0_periodic(self):
        controlpoints = np.array([[ 97.,   2.],
       [ 31.,  98.],
       [-77.,  61.],
       [-78., -62.],
       [ 31., -91.]])
        basis0 = BSplineBasis(2, np.array([-0.9,  0. ,  0.8,  2. ,  2.8,  4.1,  5. ,  5.8]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 0.5,  8.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 0.500000
        pt2[...,1] -= 8.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p3_C0_periodic(self):
        controlpoints = np.array([[ 102.,    1.],
       [  -4.,  102.],
       [ -98.,   -3.],
       [   3., -101.]])
        basis0 = BSplineBasis(3, np.array([-0.8,  0. ,  0. ,  0.8,  2.2,  3. ,  3. ,  3.8]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 11. ,   3.1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 11.000000
        pt2[...,1] /= 3.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p24_C0_periodic(self):
        controlpoints = np.array([[  62.,   -5.],       [  34.,   47.],       [ -13.,   55.],       [ -50.,   25.],       [ -56.,  -25.],       [ -12.,  -63.],       [  40.,  -47.],       [  71.,    0.],       [  38.,   52.],       [ -13.,   63.],       [ -64.,   28.],       [ -58.,  -29.],       [ -19.,  -63.],       [  45.,  -52.],       [  75.,    4.],       [  51.,   55.],       [ -19.,   76.],       [ -67.,   30.],       [ -67.,  -29.],       [ -13.,  -72.],       [  46.,  -63.],       [  85.,    3.],       [  51.,   61.],       [ -24.,   82.],       [ -75.,   37.],       [ -80.,  -40.],       [ -23.,  -84.],       [  54.,  -70.],       [  91.,    4.],       [  58.,   75.],       [ -17.,   93.],       [ -83.,   36.],       [ -87.,  -37.],       [ -17.,  -86.],       [  60.,  -72.],       [ 104.,   -3.],       [  66.,   78.],       [ -18.,  102.],       [ -91.,   48.],       [ -95.,  -46.],       [ -19.,  -94.],       [  59.,  -76.]])
        basis0 = BSplineBasis(2, np.array([-1.1,  0. ,  1.4,  2.1,  3.2,  3.9,  4.8,  5.9,  7. ,  8.4]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  1.7,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 8.6,  5.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 8.600000
        pt2[...,1] -= 5.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p34_C0_periodic(self):
        controlpoints = np.array([[  63.,   -1.],       [  42.,   48.],       [ -18.,   55.],       [ -50.,   25.],       [ -53.,  -29.],       [ -15.,  -64.],       [  38.,  -49.],       [  64.,   -1.],       [  45.,   49.],       [ -21.,   70.],       [ -66.,   32.],       [ -60.,  -33.],       [ -17.,  -66.],       [  41.,  -55.],       [  78.,   -4.],       [  48.,   60.],       [ -22.,   70.],       [ -73.,   30.],       [ -70.,  -36.],       [ -19.,  -74.],       [  46.,  -62.],       [  84.,    4.],       [  49.,   67.],       [ -16.,   77.],       [ -77.,   35.],       [ -76.,  -33.],       [ -20.,  -84.],       [  48.,  -62.],       [  91.,    0.],       [  54.,   70.],       [ -23.,   86.],       [ -79.,   40.],       [ -80.,  -44.],       [ -25.,  -95.],       [  52.,  -69.],       [ 101.,    3.],       [  61.,   73.],       [ -26.,   97.],       [ -95.,   48.],       [ -93.,  -48.],       [ -21., -101.],       [  59.,  -77.]])
        basis0 = BSplineBasis(3, np.array([-1.3,  0. ,  0. ,  1.2,  2. ,  2.8,  3.9,  4.7,  6. ,  6. ,  7.2]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1. ,  1.9,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.1,  5.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.100000
        pt2[...,1] /= 5.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p4_C1_periodic(self):
        controlpoints = np.array([[ 104.,   -5.],
       [  73.,   65.],
       [   3.,  101.],
       [ -67.,   70.],
       [-105.,    0.],
       [ -76.,  -74.],
       [   4.,  -98.],
       [  68.,  -73.]])
        basis0 = BSplineBasis(4, np.array([-2.2, -0.6,  0. ,  0. ,  0.7,  2. ,  2.9,  4.3,  4.8,  6.4,  7. ,
        7. ,  7.7,  9. ]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 4.7,  0.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 4.700000
        pt2[...,1] -= 0.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p43_C1_periodic(self):
        controlpoints = np.array([[ 56.,   2.],
       [ 17.,  61.],
       [-45.,  31.],
       [-48., -39.],
       [ 17., -61.],
       [ 74.,   1.],
       [ 21.,  67.],
       [-57.,  41.],
       [-61., -43.],
       [ 23., -68.],
       [ 79.,  -2.],
       [ 22.,  72.],
       [-63.,  46.],
       [-61., -47.],
       [ 23., -75.],
       [ 89.,  -2.],
       [ 23.,  87.],
       [-70.,  49.],
       [-78., -54.],
       [ 23., -86.],
       [ 95.,  -2.],
       [ 30.,  98.],
       [-84.,  57.],
       [-83., -61.],
       [ 34., -99.]])
        basis0 = BSplineBasis(4, np.array([-2.4, -0.7,  0. ,  0. ,  1.3,  1.6,  3.3,  4. ,  4. ,  5.3,  5.6]),1)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1. ,  2.2,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 8.6,  0.1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 8.600000
        pt2[...,1] -= 0.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p33_C1_periodic(self):
        controlpoints = np.array([[  60.,    0.],
       [  17.,   60.],
       [ -53.,   31.],
       [ -45.,  -33.],
       [  16.,  -55.],
       [  77.,   -4.],
       [  25.,   69.],
       [ -60.,   39.],
       [ -56.,  -46.],
       [  25.,  -65.],
       [  82.,    4.],
       [  25.,   85.],
       [ -70.,   51.],
       [ -70.,  -47.],
       [  27.,  -80.],
       [ 102.,    2.],
       [  32.,   91.],
       [ -79.,   55.],
       [ -79.,  -60.],
       [  29.,  -93.]])
        basis0 = BSplineBasis(3, np.array([-2.4, -0.6,  0. ,  0.7,  2.2,  2.6,  4.4,  5. ,  5.7,  7.2]),1)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.1,  8.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.100000
        pt2[...,1] /= 8.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p3_rational(self):
        controlpoints = np.array([[  0. ,  -4. ,   4. ,   1.3],
       [ 15. ,   3. ,  -4. ,   1.1],
       [ 43. ,   1. ,   1. ,   0.9],
       [ 64. ,  -2. ,  -3. ,   0.7],
       [ 80. ,  -3. ,   4. ,   0.9],
       [ 97. ,   2. ,   0. ,   0.9]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  2.2,  3.1,  4. ,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 5.6,  5.7,  2.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 5.600000
        pt2[...,1] -= 5.700000
        pt2[...,2] -= 2.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p4_rational(self):
        controlpoints = np.array([[   2. ,    4. ,   -3. ,    1.1],
       [  17. ,    4. ,   -2. ,    0.8],
       [  30. ,   -1. ,   -4. ,    0.6],
       [  41. ,    3. ,   -4. ,    1.3],
       [  54. ,    4. ,    2. ,    0.8],
       [  67. ,    2. ,   -3. ,    1. ],
       [  86. ,   -4. ,    3. ,    0.7],
       [ 102. ,    2. ,   -4. ,    1.2]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  2.8,  3.7,  5. ,  5. ,  5. ,
        5. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([  9.5,  11. ,   2.1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 9.500000
        pt2[...,1] /= 11.000000
        pt2[...,2] /= 2.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p3_rational(self):
        controlpoints = np.array([[  -4. ,    3. ,    1. ,    0.7],
       [  21. ,   -4. ,   -4. ,    0.9],
       [  47. ,    4. ,   -3. ,    1.4],
       [  70. ,   -5. ,   -1. ,    0.8],
       [ 103. ,   -4. ,   -5. ,    1.4]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.8,  1.8,  3. ,  3. ,  3. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.mirror([0, 0, 1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p44_rational(self):
        controlpoints = np.array([[   0. ,    1. ,   -1. ,    1.2],       [  17. ,   -1. ,    2. ,    1. ],       [  41. ,   -2. ,   -2. ,    0.9],       [  64. ,    4. ,   -2. ,    0.7],       [  84. ,   -1. ,    1. ,    1.3],       [  98. ,    4. ,   -4. ,    1.4],       [  -4. ,   10. ,    1. ,    1. ],       [  21. ,   10. ,   -4. ,    1. ],       [  40. ,   10. ,   -1. ,    1.2],       [  64. ,   17. ,   -5. ,    1. ],       [  80. ,   16. ,    4. ,    1.1],       [  99. ,   15. ,   -4. ,    0.6],       [  -4. ,   29. ,    3. ,    1.4],       [  23. ,   24. ,   -3. ,    1.4],       [  44. ,   30. ,    0. ,    1.2],       [  61. ,   30. ,    0. ,    1.3],       [  76. ,   29. ,    3. ,    1.5],       [  99. ,   30. ,    3. ,    0.5],       [   2. ,   47. ,    4. ,    1.5],       [  23. ,   37. ,   -2. ,    1. ],       [  35. ,   39. ,    3. ,    0.8],       [  57. ,   41. ,   -4. ,    1.3],       [  81. ,   42. ,   -4. ,    0.6],       [ 102. ,   47. ,   -1. ,    1.5],       [   0. ,   59. ,    4. ,    0.9],       [  18. ,   62. ,   -4. ,    0.6],       [  39. ,   60. ,   -2. ,    0.7],       [  64. ,   55. ,    3. ,    1.2],       [  81. ,   57. ,    1. ,    0.7],       [  97. ,   58. ,   -4. ,    1.3],       [   4. ,   74. ,    2. ,    0.6],       [  17. ,   69. ,   -5. ,    1.1],       [  36. ,   76. ,    4. ,    1.3],       [  57. ,   76. ,   -3. ,    1.4],       [  79. ,   69. ,   -3. ,    0.6],       [ 104. ,   70. ,   -1. ,    0.6],       [  -1. ,   83. ,   -2. ,    1.4],       [  16. ,   86. ,   -3. ,    1.4],       [  38. ,   83. ,    0. ,    0.8],       [  56. ,   87. ,   -3. ,    1. ],       [  75. ,   81. ,   -5. ,    1.5],       [ 104. ,   89. ,    4. ,    1.4],       [  -5. ,   99. ,   -3. ,    0.7],       [  15. ,   96. ,    1. ,    1.3],       [  41. ,  104. ,    4. ,    0.9],       [  64. ,   95. ,    4. ,    0.8],       [  77. ,  100. ,   -1. ,    1. ],       [  97. ,   96. ,   -4. ,    1. ]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  1.8,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  3.3,  4.1,  5. ,  5. ,  5. ,
        5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 3.7,  2.6,  9.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 3.700000
        pt2[...,1] -= 2.600000
        pt2[...,2] -= 9.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p43_rational(self):
        controlpoints = np.array([[  -5. ,    2. ,    2. ,    0.9],       [  16. ,   -3. ,    3. ,    0.7],       [  26. ,   -2. ,    1. ,    1.3],       [  40. ,   -2. ,   -5. ,    0.5],       [  52. ,    3. ,    3. ,    1.2],       [  67. ,   -3. ,   -3. ,    0.6],       [  88. ,   -1. ,   -2. ,    1.4],       [  95. ,    3. ,    0. ,    0.5],       [   4. ,   18. ,   -5. ,    1.2],       [  15. ,   20. ,    1. ,    0.6],       [  32. ,   15. ,    2. ,    0.6],       [  46. ,   14. ,    4. ,    1.1],       [  56. ,   18. ,    3. ,    0.7],       [  67. ,   14. ,   -5. ,    0.9],       [  88. ,   14. ,   -4. ,    0.6],       [  98. ,   21. ,   -3. ,    0.9],       [  -4. ,   36. ,   -3. ,    1.2],       [  16. ,   34. ,   -5. ,    1.3],       [  27. ,   37. ,   -5. ,    0.7],       [  43. ,   36. ,   -3. ,    1. ],       [  55. ,   30. ,    2. ,    0.8],       [  67. ,   33. ,    4. ,    0.8],       [  83. ,   33. ,    4. ,    0.6],       [ 102. ,   35. ,   -1. ,    0.7],       [   1. ,   47. ,   -2. ,    0.5],       [  12. ,   48. ,    2. ,    0.7],       [  26. ,   49. ,    1. ,    1.3],       [  45. ,   49. ,   -2. ,    1.2],       [  58. ,   46. ,    3. ,    0.6],       [  74. ,   46. ,   -2. ,    1.4],       [  88. ,   54. ,   -5. ,    1.5],       [  97. ,   47. ,   -2. ,    1.1],       [   0. ,   67. ,    0. ,    1.4],       [  11. ,   66. ,    1. ,    1.2],       [  31. ,   65. ,   -3. ,    0.5],       [  47. ,   68. ,   -2. ,    1.3],       [  59. ,   69. ,    0. ,    1.1],       [  71. ,   69. ,   -4. ,    1.2],       [  89. ,   66. ,   -1. ,    0.7],       [ 102. ,   63. ,   -1. ,    0.6],       [   3. ,   79. ,    2. ,    1.3],       [  12. ,   78. ,   -2. ,    0.6],       [  33. ,   87. ,   -1. ,    0.6],       [  41. ,   82. ,    2. ,    0.6],       [  54. ,   84. ,   -3. ,    1. ],       [  66. ,   81. ,    2. ,    1.3],       [  85. ,   85. ,   -2. ,    1.3],       [ 103. ,   80. ,    4. ,    0.8],       [   4. ,   98. ,    0. ,    1. ],       [  18. ,  102. ,    2. ,    0.6],       [  30. ,   95. ,   -2. ,    0.8],       [  42. ,   97. ,   -4. ,    1.3],       [  60. ,   99. ,   -3. ,    1.5],       [  73. ,  103. ,    4. ,    1.3],       [  90. ,  100. ,    3. ,    0.7],       [ 102. ,  100. ,   -5. ,    0.8]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  2.4,  3.3,  4.3,  5. ,  5. ,  5. ,
        5. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.6,  2.2,  3.4,  3.7,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([  3.2,  11.4,  10.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.200000
        pt2[...,1] /= 11.400000
        pt2[...,2] /= 10.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p33_rational(self):
        controlpoints = np.array([[  -2. ,    3. ,   -5. ,    1.2],
       [  30. ,    2. ,    0. ,    0.6],
       [  70. ,    0. ,    4. ,    0.7],
       [ 103. ,    4. ,   -1. ,    1.1],
       [  -1. ,   12. ,   -1. ,    0.7],
       [  34. ,   12. ,    4. ,    1.1],
       [  62. ,   14. ,    1. ,    1.1],
       [ 102. ,   16. ,    3. ,    0.7],
       [   2. ,   33. ,   -5. ,    0.7],
       [  34. ,   33. ,    2. ,    0.6],
       [  64. ,   32. ,   -3. ,    1. ],
       [  96. ,   29. ,    0. ,    1.3],
       [  -4. ,   54. ,    3. ,    1.3],
       [  34. ,   49. ,    1. ,    1. ],
       [  66. ,   53. ,   -1. ,    1.1],
       [ 101. ,   54. ,   -1. ,    0.9],
       [  -4. ,   66. ,    3. ,    1. ],
       [  30. ,   63. ,   -5. ,    0.6],
       [  67. ,   66. ,    2. ,    0.8],
       [ 101. ,   62. ,    4. ,    1.4],
       [   3. ,   84. ,   -5. ,    1.5],
       [  33. ,   81. ,    0. ,    0.6],
       [  64. ,   84. ,   -4. ,    0.8],
       [ 102. ,   87. ,   -3. ,    0.9],
       [   0. ,   95. ,   -1. ,    0.7],
       [  29. ,  103. ,    1. ,    0.6],
       [  67. ,   95. ,    4. ,    0.6],
       [  96. ,   95. ,    2. ,    0.7]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.7,  2. ,  2. ,  2. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  1.7,  2.7,  4.3,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.mirror([0, 3, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,1] = -pt2[...,1]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p342_rational(self):
        controlpoints = np.array([[   4. ,   -4. ,   -2. ,    1.4],       [  15. ,    2. ,   -3. ,    1.4],       [  34. ,    3. ,    1. ,    0.5],       [  50. ,    3. ,   -4. ,    1.1],       [  69. ,    1. ,   -5. ,    0.9],       [  83. ,    0. ,   -1. ,    0.6],       [  98. ,    3. ,    2. ,    0.7],       [   2. ,   10. ,   -5. ,    0.5],       [  21. ,    7. ,    2. ,    0.8],       [  30. ,    8. ,   -4. ,    1.1],       [  47. ,   13. ,   -1. ,    0.6],       [  68. ,   13. ,   -3. ,    0.8],       [  84. ,   15. ,   -4. ,    1.5],       [  95. ,   12. ,   -4. ,    1. ],       [  -2. ,   25. ,    4. ,    1.4],       [  15. ,   27. ,    0. ,    0.6],       [  31. ,   26. ,    2. ,    1.3],       [  52. ,   28. ,    3. ,    0.9],       [  63. ,   23. ,    3. ,    0.9],       [  79. ,   20. ,   -5. ,    1.3],       [  99. ,   20. ,    1. ,    1.2],       [   1. ,   35. ,   -5. ,    1.5],       [  19. ,   34. ,    3. ,    1.5],       [  32. ,   37. ,    4. ,    1.4],       [  51. ,   35. ,   -4. ,    1.4],       [  66. ,   40. ,   -3. ,    1.2],       [  81. ,   37. ,    4. ,    1. ],       [  97. ,   41. ,    3. ,    1.4],       [  -1. ,   50. ,    1. ,    0.6],       [  13. ,   46. ,    1. ,    0.8],       [  36. ,   52. ,   -5. ,    0.8],       [  50. ,   53. ,   -3. ,    1.4],       [  70. ,   50. ,    3. ,    1.4],       [  79. ,   52. ,    1. ,    0.8],       [ 100. ,   53. ,    4. ,    1.2],       [  -5. ,   59. ,    2. ,    1.1],       [  21. ,   60. ,   -5. ,    0.7],       [  35. ,   60. ,   -2. ,    0.6],       [  52. ,   66. ,    0. ,    0.8],       [  69. ,   58. ,    1. ,    1. ],       [  83. ,   61. ,   -5. ,    0.8],       [ 101. ,   63. ,    3. ,    0.9],       [  -1. ,   71. ,    3. ,    0.8],       [  13. ,   79. ,   -4. ,    0.6],       [  35. ,   72. ,   -3. ,    0.6],       [  48. ,   75. ,   -3. ,    0.9],       [  70. ,   71. ,    3. ,    0.6],       [  79. ,   73. ,   -3. ,    1.4],       [  95. ,   72. ,   -2. ,    0.6],       [   2. ,   91. ,   -1. ,    1.4],       [  20. ,   89. ,   -5. ,    0.8],       [  37. ,   89. ,    1. ,    1.1],       [  46. ,   91. ,    2. ,    1.2],       [  66. ,   89. ,    4. ,    0.7],       [  78. ,   85. ,    1. ,    1.2],       [  95. ,   91. ,    1. ,    0.7],       [   3. ,  104. ,    3. ,    1.5],       [  13. ,   99. ,   -5. ,    1.1],       [  37. ,  102. ,    2. ,    1.2],       [  53. ,   98. ,   -2. ,    1.4],       [  65. ,  103. ,    1. ,    1.4],       [  87. ,  103. ,    4. ,    1. ],       [  96. ,  104. ,   -4. ,    0.7],       [   1. ,    1. ,   25. ,    1.3],       [  21. ,   -3. ,   20. ,    0.9],       [  32. ,   -4. ,   20. ,    0.9],       [  46. ,    4. ,   22. ,    0.9],       [  69. ,   -4. ,   25. ,    0.8],       [  86. ,    4. ,   26. ,    1.4],       [  95. ,    0. ,   23. ,    1.3],       [  -2. ,   10. ,   26. ,    1.2],       [  14. ,    9. ,   28. ,    1.4],       [  35. ,   14. ,   23. ,    0.6],       [  51. ,   11. ,   27. ,    0.8],       [  68. ,   16. ,   23. ,    1.5],       [  79. ,    8. ,   29. ,    1.2],       [  97. ,   14. ,   21. ,    1.1],       [   4. ,   27. ,   22. ,    0.8],       [  16. ,   20. ,   27. ,    1.1],       [  38. ,   20. ,   21. ,    1.1],       [  52. ,   23. ,   20. ,    1. ],       [  65. ,   29. ,   28. ,    1. ],       [  81. ,   23. ,   21. ,    0.8],       [ 104. ,   26. ,   25. ,    1.3],       [   0. ,   41. ,   27. ,    1.2],       [  21. ,   42. ,   28. ,    1.2],       [  37. ,   34. ,   26. ,    0.8],       [  47. ,   40. ,   25. ,    0.7],       [  63. ,   34. ,   23. ,    1.4],       [  82. ,   38. ,   24. ,    1.2],       [ 102. ,   39. ,   24. ,    0.8],       [   1. ,   48. ,   20. ,    1. ],       [  15. ,   52. ,   23. ,    0.7],       [  34. ,   45. ,   23. ,    1.4],       [  53. ,   54. ,   24. ,    0.9],       [  63. ,   50. ,   26. ,    0.9],       [  84. ,   51. ,   21. ,    1.2],       [ 102. ,   50. ,   25. ,    1.3],       [   0. ,   61. ,   24. ,    1.1],       [  19. ,   58. ,   25. ,    0.6],       [  30. ,   62. ,   26. ,    0.6],       [  50. ,   59. ,   29. ,    1.2],       [  61. ,   61. ,   29. ,    0.7],       [  82. ,   66. ,   24. ,    1. ],       [ 102. ,   66. ,   25. ,    0.9],       [   3. ,   78. ,   28. ,    1.1],       [  15. ,   74. ,   28. ,    1. ],       [  29. ,   73. ,   25. ,    1.3],       [  54. ,   71. ,   26. ,    0.7],       [  66. ,   78. ,   20. ,    0.7],       [  87. ,   78. ,   24. ,    0.9],       [ 100. ,   70. ,   28. ,    0.6],       [   3. ,   86. ,   26. ,    1.2],       [  12. ,   86. ,   22. ,    0.8],       [  34. ,   85. ,   23. ,    0.6],       [  52. ,   86. ,   21. ,    1.3],       [  69. ,   88. ,   28. ,    1. ],       [  86. ,   82. ,   24. ,    1.1],       [ 104. ,   88. ,   24. ,    0.8],       [  -3. ,   95. ,   25. ,    1.5],       [  15. ,  101. ,   27. ,    0.9],       [  33. ,   95. ,   25. ,    0.9],       [  47. ,  101. ,   27. ,    0.6],       [  69. ,  102. ,   20. ,    0.6],       [  88. ,   96. ,   26. ,    0.7],       [  96. ,   95. ,   29. ,    1.3],       [  -5. ,   -3. ,   54. ,    0.6],       [  15. ,   -2. ,   51. ,    0.6],       [  30. ,   -2. ,   50. ,    1.3],       [  54. ,   -1. ,   53. ,    0.6],       [  65. ,   -5. ,   54. ,    1.2],       [  84. ,    0. ,   49. ,    1.4],       [ 101. ,   -3. ,   54. ,    0.8],       [  -4. ,   15. ,   53. ,    1.1],       [  18. ,   10. ,   51. ,    0.9],       [  36. ,   15. ,   53. ,    0.7],       [  45. ,   16. ,   54. ,    0.6],       [  68. ,    9. ,   52. ,    1.4],       [  82. ,   14. ,   48. ,    0.7],       [ 101. ,    8. ,   53. ,    1. ],       [   0. ,   27. ,   52. ,    1.2],       [  15. ,   26. ,   47. ,    1.4],       [  30. ,   26. ,   49. ,    1. ],       [  54. ,   28. ,   51. ,    1.5],       [  62. ,   24. ,   48. ,    1.1],       [  86. ,   25. ,   47. ,    0.8],       [ 101. ,   22. ,   50. ,    1.2],       [  -4. ,   34. ,   51. ,    0.6],       [  14. ,   42. ,   48. ,    0.5],       [  33. ,   34. ,   53. ,    1.1],       [  52. ,   40. ,   47. ,    0.9],       [  63. ,   36. ,   54. ,    1.1],       [  83. ,   39. ,   52. ,    1. ],       [ 104. ,   40. ,   53. ,    1.4],       [  -4. ,   46. ,   48. ,    1.1],       [  20. ,   51. ,   53. ,    0.6],       [  28. ,   49. ,   46. ,    0.6],       [  49. ,   47. ,   46. ,    0.9],       [  68. ,   45. ,   48. ,    1.1],       [  79. ,   50. ,   47. ,    1.4],       [ 101. ,   45. ,   47. ,    1.4],       [   1. ,   59. ,   46. ,    1.4],       [  14. ,   65. ,   49. ,    1. ],       [  32. ,   60. ,   46. ,    0.9],       [  50. ,   63. ,   51. ,    0.6],       [  70. ,   65. ,   52. ,    1.1],       [  84. ,   65. ,   47. ,    1.2],       [  98. ,   59. ,   53. ,    1.4],       [  -5. ,   77. ,   54. ,    1.5],       [  21. ,   76. ,   53. ,    1. ],       [  34. ,   73. ,   50. ,    1. ],       [  45. ,   75. ,   54. ,    1.2],       [  66. ,   76. ,   45. ,    1.5],       [  81. ,   71. ,   51. ,    1.3],       [ 102. ,   79. ,   49. ,    1.3],       [  -5. ,   82. ,   49. ,    0.8],       [  21. ,   87. ,   45. ,    0.8],       [  35. ,   87. ,   48. ,    0.8],       [  48. ,   85. ,   45. ,    1. ],       [  68. ,   89. ,   45. ,    0.8],       [  84. ,   83. ,   50. ,    0.6],       [ 101. ,   85. ,   50. ,    1.3],       [  -5. ,   95. ,   46. ,    0.9],       [  14. ,   96. ,   53. ,    1.2],       [  36. ,  100. ,   47. ,    1.2],       [  47. ,  103. ,   46. ,    0.9],       [  63. ,   99. ,   54. ,    0.6],       [  85. ,  100. ,   50. ,    1.1],       [ 102. ,   98. ,   47. ,    0.6],       [   1. ,    1. ,   74. ,    0.6],       [  20. ,   -3. ,   77. ,    1. ],       [  28. ,    1. ,   70. ,    1.3],       [  45. ,    1. ,   77. ,    1.1],       [  68. ,   -3. ,   78. ,    1.3],       [  81. ,   -3. ,   77. ,    0.6],       [ 104. ,   -3. ,   73. ,    0.5],       [   0. ,   17. ,   79. ,    1.2],       [  16. ,    9. ,   72. ,    0.6],       [  34. ,   12. ,   71. ,    0.8],       [  48. ,   14. ,   75. ,    1. ],       [  65. ,   11. ,   75. ,    0.5],       [  86. ,    7. ,   78. ,    0.6],       [  95. ,   16. ,   72. ,    1.1],       [   3. ,   24. ,   70. ,    1.5],       [  18. ,   24. ,   74. ,    1.5],       [  32. ,   26. ,   71. ,    0.9],       [  48. ,   20. ,   78. ,    0.8],       [  68. ,   20. ,   70. ,    1.4],       [  80. ,   27. ,   73. ,    0.5],       [ 103. ,   26. ,   71. ,    0.6],       [   0. ,   36. ,   70. ,    1.4],       [  12. ,   33. ,   79. ,    1.2],       [  29. ,   40. ,   71. ,    0.6],       [  45. ,   41. ,   72. ,    1.2],       [  63. ,   40. ,   77. ,    1.3],       [  82. ,   33. ,   76. ,    0.8],       [  95. ,   35. ,   75. ,    1.4],       [  -2. ,   46. ,   70. ,    0.8],       [  16. ,   51. ,   70. ,    1.3],       [  36. ,   45. ,   73. ,    1.1],       [  52. ,   48. ,   79. ,    1.5],       [  67. ,   49. ,   71. ,    1.4],       [  79. ,   51. ,   70. ,    0.6],       [  98. ,   53. ,   77. ,    0.6],       [  -5. ,   57. ,   79. ,    1.4],       [  13. ,   57. ,   70. ,    0.9],       [  32. ,   59. ,   74. ,    0.7],       [  54. ,   61. ,   77. ,    1. ],       [  66. ,   66. ,   75. ,    0.8],       [  84. ,   65. ,   79. ,    1.2],       [  96. ,   62. ,   71. ,    0.6],       [   2. ,   71. ,   78. ,    0.8],       [  18. ,   77. ,   77. ,    0.5],       [  33. ,   77. ,   75. ,    0.8],       [  54. ,   76. ,   74. ,    1.3],       [  69. ,   72. ,   76. ,    0.9],       [  87. ,   77. ,   72. ,    1.4],       [ 101. ,   72. ,   76. ,    1.4],       [  -3. ,   83. ,   73. ,    1.4],       [  15. ,   89. ,   70. ,    1.3],       [  34. ,   89. ,   79. ,    1. ],       [  50. ,   85. ,   72. ,    1.4],       [  67. ,   90. ,   74. ,    1.5],       [  84. ,   92. ,   70. ,    1.1],       [  96. ,   87. ,   77. ,    1.3],       [   1. ,  102. ,   74. ,    0.6],       [  12. ,   97. ,   71. ,    0.7],       [  31. ,  104. ,   77. ,    0.8],       [  47. ,   99. ,   75. ,    0.9],       [  66. ,  102. ,   78. ,    1.2],       [  82. ,  103. ,   74. ,    1.2],       [ 102. ,  103. ,   72. ,    0.9],       [   3. ,    0. ,   98. ,    1.4],       [  19. ,   -3. ,  100. ,    1.3],       [  36. ,    2. ,   95. ,    1.1],       [  45. ,   -1. ,  101. ,    0.5],       [  69. ,    3. ,   95. ,    0.7],       [  83. ,   -4. ,   98. ,    0.8],       [  95. ,   -1. ,   96. ,    1.2],       [  -1. ,   13. ,   95. ,    0.6],       [  16. ,   12. ,   97. ,    0.8],       [  37. ,   11. ,   97. ,    1.5],       [  50. ,   13. ,   97. ,    1.1],       [  67. ,   12. ,   95. ,    1.3],       [  78. ,    9. ,  103. ,    0.6],       [ 103. ,   16. ,   99. ,    0.8],       [  -3. ,   24. ,   98. ,    0.9],       [  17. ,   27. ,   97. ,    1.5],       [  35. ,   26. ,   96. ,    0.8],       [  49. ,   24. ,  103. ,    1.1],       [  71. ,   24. ,  103. ,    1.3],       [  79. ,   21. ,   99. ,    1.4],       [ 104. ,   29. ,   98. ,    1.1],       [   3. ,   41. ,   96. ,    0.7],       [  21. ,   32. ,   98. ,    1.5],       [  30. ,   36. ,  103. ,    0.8],       [  52. ,   41. ,   98. ,    0.6],       [  63. ,   37. ,  101. ,    1.4],       [  78. ,   39. ,  102. ,    1.4],       [  97. ,   41. ,  101. ,    0.5],       [  -4. ,   46. ,   99. ,    1. ],       [  12. ,   52. ,  100. ,    0.9],       [  29. ,   54. ,   98. ,    1.1],       [  47. ,   48. ,  101. ,    0.8],       [  65. ,   47. ,  100. ,    0.7],       [  82. ,   52. ,   97. ,    0.7],       [  96. ,   51. ,  101. ,    0.6],       [   1. ,   60. ,   98. ,    1.1],       [  19. ,   60. ,  102. ,    1.1],       [  35. ,   62. ,  101. ,    1.3],       [  48. ,   62. ,  101. ,    0.9],       [  67. ,   59. ,   98. ,    0.6],       [  87. ,   58. ,  100. ,    0.6],       [  97. ,   64. ,   95. ,    0.8],       [  -4. ,   76. ,  103. ,    1.1],       [  12. ,   76. ,   96. ,    1. ],       [  37. ,   71. ,  103. ,    0.5],       [  54. ,   74. ,   97. ,    0.8],       [  63. ,   79. ,  104. ,    1.5],       [  85. ,   72. ,  100. ,    1. ],       [  99. ,   78. ,  101. ,    1.3],       [   2. ,   90. ,   98. ,    0.9],       [  14. ,   86. ,   95. ,    0.9],       [  35. ,   85. ,  104. ,    1.4],       [  53. ,   85. ,   95. ,    1.2],       [  64. ,   83. ,  101. ,    1.2],       [  79. ,   87. ,  101. ,    1.1],       [ 100. ,   89. ,  103. ,    0.5],       [   4. ,  100. ,   99. ,    0.9],       [  16. ,  101. ,  104. ,    0.8],       [  29. ,   97. ,   96. ,    1. ],       [  54. ,   95. ,   96. ,    0.6],       [  62. ,   95. ,  100. ,    1.4],       [  88. ,   98. ,   99. ,    0.5],       [ 103. ,  102. ,  101. ,    0.5]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.8,  2. ,  2.7,  4.1,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  2.2,  3.3,  3.7,  4.7,  6. ,  6. ,
        6. ,  6. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.7,  1.8,  3.3,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 3.3,  4. ,  8.4])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 3.300000
        pt2[...,1] -= 4.000000
        pt2[...,2] -= 8.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p332_rational(self):
        controlpoints = np.array([[  -2. ,    4. ,    1. ,    1. ],       [  20. ,   -3. ,   -5. ,    1.4],       [  43. ,   -5. ,   -1. ,    1.1],       [  58. ,   -4. ,   -4. ,    1.5],       [  82. ,   -5. ,    3. ,    1. ],       [  96. ,    0. ,    0. ,    1.3],       [   0. ,   16. ,    0. ,    0.6],       [  22. ,   17. ,   -1. ,    1.1],       [  35. ,   15. ,   -5. ,    0.7],       [  61. ,   13. ,   -3. ,    0.9],       [  83. ,   15. ,   -2. ,    0.6],       [  95. ,   17. ,   -4. ,    0.6],       [   2. ,   23. ,   -5. ,    0.9],       [  16. ,   33. ,    1. ,    0.8],       [  35. ,   27. ,    0. ,    1.3],       [  60. ,   33. ,    1. ,    1.2],       [  75. ,   24. ,    0. ,    0.9],       [ 100. ,   32. ,   -2. ,    1.2],       [   1. ,   41. ,    2. ,    0.7],       [  20. ,   45. ,   -2. ,    0.7],       [  42. ,   47. ,    4. ,    0.7],       [  57. ,   39. ,   -1. ,    0.5],       [  84. ,   41. ,   -2. ,    1.1],       [  98. ,   37. ,    4. ,    1. ],       [   1. ,   56. ,    4. ,    0.8],       [  15. ,   56. ,   -5. ,    1.3],       [  38. ,   53. ,    2. ,    0.5],       [  63. ,   60. ,    2. ,    1.4],       [  82. ,   59. ,    3. ,    0.9],       [ 100. ,   61. ,   -5. ,    1.4],       [  -3. ,   72. ,   -4. ,    0.6],       [  24. ,   70. ,   -1. ,    0.9],       [  36. ,   71. ,   -3. ,    0.5],       [  62. ,   72. ,   -4. ,    1.5],       [  83. ,   74. ,   -2. ,    1.3],       [  98. ,   73. ,   -1. ,    0.5],       [   2. ,   81. ,    2. ,    1.3],       [  15. ,   90. ,    4. ,    1. ],       [  40. ,   82. ,    1. ,    1.4],       [  55. ,   83. ,   -2. ,    1.5],       [  84. ,   88. ,   -2. ,    0.7],       [  96. ,   85. ,   -2. ,    1.5],       [  -4. ,   96. ,    0. ,    0.5],       [  17. ,   95. ,   -3. ,    0.9],       [  40. ,  103. ,   -5. ,    0.6],       [  62. ,   97. ,    0. ,    1.1],       [  77. ,  103. ,    1. ,    0.8],       [ 103. ,   98. ,    0. ,    0.5],       [   2. ,    2. ,   16. ,    0.9],       [  20. ,   -1. ,   22. ,    0.9],       [  41. ,    4. ,   24. ,    1.2],       [  57. ,   -4. ,   17. ,    0.7],       [  77. ,    4. ,   24. ,    0.9],       [ 101. ,   -2. ,   16. ,    0.9],       [  -5. ,   12. ,   15. ,    1.3],       [  21. ,   14. ,   23. ,    0.7],       [  43. ,   14. ,   21. ,    0.7],       [  60. ,   11. ,   23. ,    0.8],       [  77. ,   18. ,   16. ,    0.6],       [ 100. ,   14. ,   16. ,    1.3],       [   1. ,   29. ,   15. ,    1.3],       [  19. ,   27. ,   16. ,    0.7],       [  43. ,   32. ,   16. ,    1.4],       [  57. ,   29. ,   24. ,    1.2],       [  82. ,   27. ,   21. ,    0.8],       [  99. ,   32. ,   24. ,    1.1],       [  -5. ,   38. ,   24. ,    0.8],       [  24. ,   40. ,   24. ,    0.7],       [  36. ,   39. ,   22. ,    0.6],       [  56. ,   44. ,   24. ,    0.5],       [  80. ,   38. ,   24. ,    0.6],       [ 102. ,   43. ,   24. ,    1.5],       [   1. ,   57. ,   22. ,    1.3],       [  22. ,   59. ,   21. ,    0.8],       [  39. ,   58. ,   18. ,    0.8],       [  56. ,   56. ,   15. ,    0.9],       [  79. ,   58. ,   24. ,    1. ],       [ 101. ,   55. ,   20. ,    1. ],       [   3. ,   71. ,   17. ,    1.3],       [  20. ,   76. ,   18. ,    1.3],       [  35. ,   69. ,   22. ,    1.5],       [  61. ,   74. ,   18. ,    1.1],       [  77. ,   76. ,   15. ,    0.9],       [  97. ,   67. ,   19. ,    0.9],       [   0. ,   88. ,   18. ,    0.6],       [  22. ,   87. ,   21. ,    1.1],       [  42. ,   88. ,   17. ,    1. ],       [  61. ,   89. ,   16. ,    1.1],       [  75. ,   86. ,   19. ,    1.5],       [  96. ,   87. ,   15. ,    1.5],       [  -5. ,   96. ,   17. ,    0.8],       [  24. ,   98. ,   16. ,    1.3],       [  44. ,  100. ,   22. ,    0.6],       [  60. ,   95. ,   15. ,    1.3],       [  84. ,  102. ,   17. ,    1.1],       [  95. ,   95. ,   23. ,    0.7],       [  -2. ,    2. ,   39. ,    1.3],       [  23. ,    1. ,   37. ,    0.7],       [  37. ,    4. ,   42. ,    0.7],       [  60. ,    4. ,   44. ,    0.8],       [  82. ,    0. ,   40. ,    1.2],       [  99. ,   -4. ,   35. ,    0.6],       [   0. ,   14. ,   42. ,    1.4],       [  21. ,   18. ,   43. ,    1.3],       [  38. ,   16. ,   41. ,    1. ],       [  64. ,   18. ,   35. ,    1.3],       [  82. ,   10. ,   43. ,    0.7],       [ 102. ,   13. ,   40. ,    1.1],       [   4. ,   26. ,   36. ,    1.4],       [  20. ,   32. ,   44. ,    1.2],       [  41. ,   27. ,   41. ,    0.6],       [  55. ,   32. ,   43. ,    1. ],       [  77. ,   25. ,   39. ,    0.9],       [ 103. ,   24. ,   41. ,    1.1],       [  -5. ,   42. ,   35. ,    0.8],       [  24. ,   38. ,   37. ,    1.3],       [  43. ,   44. ,   39. ,    1.1],       [  59. ,   39. ,   37. ,    1. ],       [  76. ,   40. ,   41. ,    0.5],       [  96. ,   46. ,   43. ,    1.1],       [  -5. ,   53. ,   44. ,    0.7],       [  17. ,   59. ,   39. ,    1.4],       [  40. ,   55. ,   38. ,    0.8],       [  56. ,   53. ,   37. ,    1.2],       [  77. ,   55. ,   37. ,    1.2],       [  99. ,   55. ,   35. ,    1. ],       [   4. ,   70. ,   43. ,    0.7],       [  15. ,   74. ,   36. ,    0.8],       [  41. ,   73. ,   40. ,    0.8],       [  58. ,   74. ,   35. ,    0.8],       [  78. ,   74. ,   36. ,    0.6],       [  99. ,   74. ,   36. ,    1. ],       [   4. ,   88. ,   44. ,    1.2],       [  17. ,   81. ,   39. ,    1.2],       [  39. ,   83. ,   44. ,    1.4],       [  63. ,   89. ,   44. ,    1. ],       [  79. ,   85. ,   39. ,    0.6],       [ 102. ,   89. ,   39. ,    0.9],       [   3. ,   96. ,   44. ,    1.1],       [  22. ,   99. ,   43. ,    0.6],       [  44. ,   99. ,   43. ,    0.7],       [  55. ,  101. ,   38. ,    1. ],       [  83. ,  100. ,   42. ,    1.2],       [  97. ,  103. ,   41. ,    1.2],       [  -3. ,    0. ,   63. ,    1. ],       [  19. ,    3. ,   56. ,    0.6],       [  44. ,   -4. ,   63. ,    0.9],       [  56. ,    3. ,   57. ,    1.5],       [  80. ,    4. ,   58. ,    1. ],       [ 104. ,   -3. ,   60. ,    1.3],       [   4. ,   17. ,   62. ,    1.3],       [  20. ,   14. ,   60. ,    1.1],       [  41. ,   11. ,   56. ,    1.5],       [  61. ,   17. ,   57. ,    0.6],       [  79. ,   16. ,   64. ,    0.5],       [ 101. ,   14. ,   59. ,    0.5],       [   1. ,   33. ,   55. ,    0.8],       [  23. ,   30. ,   63. ,    0.9],       [  41. ,   28. ,   59. ,    0.6],       [  61. ,   31. ,   55. ,    1. ],       [  81. ,   25. ,   59. ,    0.6],       [ 101. ,   24. ,   57. ,    1.2],       [  -3. ,   42. ,   64. ,    1.5],       [  18. ,   43. ,   60. ,    0.8],       [  39. ,   42. ,   58. ,    1. ],       [  56. ,   44. ,   64. ,    1.1],       [  79. ,   38. ,   63. ,    0.8],       [ 102. ,   40. ,   55. ,    1. ],       [   2. ,   57. ,   56. ,    1. ],       [  23. ,   59. ,   63. ,    0.5],       [  42. ,   52. ,   58. ,    1.4],       [  63. ,   53. ,   61. ,    1.3],       [  76. ,   56. ,   60. ,    0.9],       [ 104. ,   61. ,   64. ,    1. ],       [  -4. ,   68. ,   64. ,    1.1],       [  19. ,   70. ,   61. ,    0.6],       [  40. ,   66. ,   62. ,    0.8],       [  57. ,   69. ,   62. ,    0.6],       [  78. ,   71. ,   57. ,    1. ],       [  99. ,   72. ,   55. ,    0.6],       [  -4. ,   80. ,   62. ,    1.2],       [  15. ,   85. ,   63. ,    0.5],       [  42. ,   86. ,   63. ,    1.3],       [  62. ,   87. ,   64. ,    1.3],       [  80. ,   87. ,   59. ,    1.3],       [  99. ,   84. ,   58. ,    1.4],       [  -5. ,   97. ,   55. ,    0.7],       [  21. ,  102. ,   63. ,    1. ],       [  42. ,   95. ,   63. ,    1. ],       [  61. ,  101. ,   63. ,    1.4],       [  79. ,  103. ,   61. ,    1.2],       [  99. ,  102. ,   62. ,    1. ],       [   0. ,    1. ,   81. ,    0.9],       [  22. ,   -5. ,   80. ,    0.6],       [  41. ,    0. ,   75. ,    1.4],       [  62. ,   -4. ,   84. ,    1.3],       [  84. ,    3. ,   83. ,    1. ],       [ 102. ,   -2. ,   80. ,    1. ],       [   2. ,   15. ,   83. ,    1.4],       [  22. ,   10. ,   82. ,    1.1],       [  40. ,   14. ,   77. ,    0.9],       [  55. ,   11. ,   80. ,    1.1],       [  82. ,   16. ,   83. ,    0.8],       [ 104. ,   10. ,   79. ,    0.5],       [   3. ,   28. ,   82. ,    1.4],       [  22. ,   23. ,   84. ,    1. ],       [  41. ,   26. ,   75. ,    0.6],       [  63. ,   31. ,   75. ,    0.6],       [  80. ,   30. ,   77. ,    0.6],       [ 101. ,   28. ,   84. ,    1.4],       [   3. ,   42. ,   84. ,    1.3],       [  16. ,   43. ,   84. ,    0.9],       [  38. ,   46. ,   83. ,    0.6],       [  61. ,   37. ,   83. ,    1.3],       [  81. ,   39. ,   80. ,    1. ],       [  97. ,   38. ,   84. ,    0.6],       [  -4. ,   54. ,   76. ,    1.2],       [  24. ,   57. ,   79. ,    1.4],       [  36. ,   61. ,   76. ,    0.8],       [  58. ,   59. ,   79. ,    1.2],       [  80. ,   57. ,   82. ,    1.1],       [  99. ,   61. ,   80. ,    1.1],       [   4. ,   68. ,   78. ,    1.2],       [  20. ,   74. ,   81. ,    0.9],       [  40. ,   72. ,   82. ,    1.2],       [  62. ,   73. ,   80. ,    1.2],       [  77. ,   68. ,   75. ,    1. ],       [  99. ,   74. ,   76. ,    0.7],       [   3. ,   85. ,   82. ,    0.9],       [  18. ,   86. ,   76. ,    0.9],       [  41. ,   89. ,   83. ,    0.7],       [  56. ,   88. ,   76. ,    1.3],       [  78. ,   81. ,   82. ,    0.9],       [ 101. ,   81. ,   83. ,    1.5],       [  -5. ,   96. ,   83. ,    0.8],       [  24. ,   95. ,   81. ,    0.8],       [  44. ,  104. ,   83. ,    0.6],       [  61. ,  104. ,   79. ,    0.5],       [  77. ,   95. ,   80. ,    0.9],       [  98. ,  100. ,   80. ,    0.8],       [  -5. ,    4. ,  102. ,    1. ],       [  19. ,    1. ,  104. ,    1.1],       [  42. ,    4. ,  104. ,    0.6],       [  55. ,   -1. ,  100. ,    0.8],       [  81. ,   -4. ,   99. ,    1.2],       [  98. ,   -2. ,  100. ,    0.6],       [   2. ,    9. ,  103. ,    0.9],       [  21. ,   18. ,  101. ,    0.8],       [  39. ,   15. ,   97. ,    1.3],       [  64. ,   18. ,   97. ,    1. ],       [  84. ,   16. ,   95. ,    1.1],       [  96. ,    9. ,  100. ,    1. ],       [   2. ,   28. ,   97. ,    0.6],       [  18. ,   29. ,   97. ,    1. ],       [  35. ,   31. ,  104. ,    0.8],       [  57. ,   30. ,   98. ,    0.8],       [  78. ,   30. ,  100. ,    0.8],       [ 104. ,   25. ,   95. ,    1.4],       [   3. ,   47. ,   96. ,    1. ],       [  19. ,   43. ,   95. ,    1. ],       [  38. ,   46. ,   96. ,    1.1],       [  64. ,   45. ,   95. ,    0.6],       [  84. ,   47. ,  100. ,    1.4],       [  95. ,   47. ,   99. ,    0.6],       [  -5. ,   56. ,  102. ,    1.1],       [  21. ,   59. ,  102. ,    1.1],       [  36. ,   57. ,  104. ,    0.9],       [  55. ,   61. ,  102. ,    0.8],       [  81. ,   52. ,  100. ,    0.7],       [ 102. ,   58. ,  101. ,    1.3],       [  -5. ,   72. ,  100. ,    1. ],       [  16. ,   76. ,  104. ,    1.4],       [  36. ,   69. ,  104. ,    0.9],       [  63. ,   71. ,  102. ,    1.2],       [  82. ,   74. ,  104. ,    0.6],       [ 100. ,   69. ,  102. ,    1.4],       [   2. ,   84. ,  104. ,    1.2],       [  18. ,   83. ,   97. ,    1.2],       [  39. ,   86. ,  103. ,    1.3],       [  64. ,   89. ,   97. ,    0.7],       [  75. ,   81. ,  104. ,    1.4],       [  99. ,   84. ,   97. ,    1.1],       [   4. ,   98. ,  102. ,    0.5],       [  16. ,   96. ,   98. ,    1.3],       [  40. ,   97. ,  104. ,    0.6],       [  61. ,   98. ,  103. ,    1.3],       [  77. ,   97. ,  102. ,    0.8],       [  97. ,  103. ,  104. ,    1.3]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  2.1,  3.1,  4. ,  4. ,  4. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.7,  1.7,  3.3,  4.3,  5.1,  6. ,  6. ,  6. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  2.1,  3.1,  3.8,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 2.2,  8.1,  2.7])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 2.200000
        pt2[...,1] /= 8.100000
        pt2[...,2] /= 2.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p323_rational(self):
        controlpoints = np.array([[   3. ,    1. ,    0. ,    1.5],       [  32. ,    0. ,    3. ,    1.4],       [  66. ,   -4. ,   -1. ,    1. ],       [ 103. ,    3. ,   -4. ,    0.8],       [   2. ,   24. ,    0. ,    1.2],       [  34. ,   23. ,    1. ,    0.5],       [  65. ,   22. ,   -2. ,    0.8],       [  99. ,   24. ,   -2. ,    0.5],       [   0. ,   43. ,    3. ,    1.5],       [  37. ,   38. ,    4. ,    1.4],       [  64. ,   43. ,    3. ,    1.4],       [ 104. ,   35. ,    2. ,    1.4],       [  -4. ,   61. ,   -3. ,    1.3],       [  37. ,   59. ,   -2. ,    0.8],       [  65. ,   63. ,    2. ,    1.3],       [ 104. ,   61. ,    1. ,    0.8],       [  -4. ,   82. ,   -1. ,    1.1],       [  32. ,   75. ,    3. ,    0.8],       [  66. ,   80. ,    1. ,    0.6],       [  97. ,   82. ,   -5. ,    1.1],       [   0. ,   95. ,   -5. ,    1.4],       [  34. ,  103. ,    1. ,    0.9],       [  62. ,   99. ,    0. ,    0.7],       [ 101. ,   99. ,   -5. ,    1.1],       [   2. ,    2. ,   27. ,    0.7],       [  29. ,   -4. ,   22. ,    1.1],       [  63. ,    3. ,   26. ,    1.4],       [ 101. ,    0. ,   25. ,    1.1],       [   4. ,   20. ,   29. ,    1.5],       [  29. ,   20. ,   23. ,    0.9],       [  65. ,   22. ,   21. ,    1.3],       [  99. ,   21. ,   20. ,    1. ],       [   3. ,   42. ,   25. ,    1.4],       [  37. ,   40. ,   20. ,    1.1],       [  61. ,   37. ,   27. ,    1.1],       [ 103. ,   40. ,   20. ,    1.1],       [   0. ,   57. ,   24. ,    0.7],       [  28. ,   64. ,   26. ,    1. ],       [  68. ,   63. ,   20. ,    1.4],       [  99. ,   56. ,   29. ,    1.5],       [   4. ,   75. ,   25. ,    0.8],       [  37. ,   75. ,   24. ,    1. ],       [  69. ,   76. ,   20. ,    1. ],       [  96. ,   78. ,   25. ,    0.5],       [   0. ,   99. ,   28. ,    1.5],       [  28. ,   97. ,   20. ,    1.3],       [  70. ,   96. ,   20. ,    0.6],       [  99. ,   95. ,   26. ,    1.1],       [   1. ,    4. ,   53. ,    1. ],       [  28. ,   -5. ,   54. ,    1.3],       [  62. ,    4. ,   45. ,    0.5],       [  95. ,   -4. ,   54. ,    1. ],       [  -5. ,   15. ,   50. ,    1.3],       [  31. ,   23. ,   49. ,    0.6],       [  67. ,   21. ,   45. ,    1.2],       [  95. ,   24. ,   47. ,    0.6],       [   3. ,   37. ,   51. ,    1.3],       [  34. ,   43. ,   49. ,    1.2],       [  65. ,   42. ,   48. ,    1.3],       [ 101. ,   38. ,   47. ,    0.9],       [  -2. ,   55. ,   51. ,    1.2],       [  32. ,   61. ,   49. ,    0.9],       [  68. ,   62. ,   47. ,    0.6],       [  95. ,   62. ,   52. ,    1. ],       [   4. ,   75. ,   53. ,    0.9],       [  31. ,   76. ,   52. ,    1.4],       [  64. ,   82. ,   53. ,    1. ],       [  97. ,   80. ,   49. ,    0.9],       [   3. ,   98. ,   54. ,    0.5],       [  30. ,  104. ,   48. ,    1.4],       [  63. ,   98. ,   53. ,    1.4],       [  98. ,   95. ,   46. ,    1.1],       [  -5. ,    0. ,   73. ,    0.9],       [  31. ,   -5. ,   76. ,    0.8],       [  69. ,   -4. ,   74. ,    1. ],       [ 104. ,    0. ,   76. ,    0.6],       [  -3. ,   17. ,   71. ,    0.8],       [  34. ,   17. ,   76. ,    0.8],       [  70. ,   17. ,   76. ,    1. ],       [ 100. ,   22. ,   75. ,    1.1],       [  -3. ,   37. ,   72. ,    1.2],       [  32. ,   36. ,   74. ,    1.4],       [  61. ,   39. ,   74. ,    1.4],       [ 102. ,   36. ,   79. ,    1.5],       [   0. ,   61. ,   71. ,    1.4],       [  36. ,   60. ,   71. ,    0.8],       [  67. ,   63. ,   72. ,    1.4],       [  95. ,   64. ,   75. ,    0.6],       [  -4. ,   78. ,   74. ,    0.7],       [  29. ,   78. ,   75. ,    1.2],       [  70. ,   76. ,   73. ,    1.4],       [  96. ,   79. ,   71. ,    1. ],       [  -5. ,  104. ,   75. ,    1.3],       [  31. ,   98. ,   70. ,    0.5],       [  67. ,   96. ,   74. ,    1.2],       [  97. ,  101. ,   79. ,    1.4],       [   1. ,   -1. ,  101. ,    0.9],       [  28. ,    1. ,   99. ,    0.7],       [  70. ,    2. ,  101. ,    1. ],       [  98. ,   -5. ,   96. ,    0.6],       [  -2. ,   15. ,   95. ,    1. ],       [  31. ,   17. ,  102. ,    0.5],       [  71. ,   19. ,  103. ,    0.6],       [  98. ,   15. ,   96. ,    1.1],       [  -2. ,   43. ,   96. ,    0.9],       [  29. ,   44. ,  103. ,    0.8],       [  68. ,   35. ,  102. ,    1.1],       [ 102. ,   38. ,   95. ,    0.7],       [  -2. ,   59. ,  104. ,    0.8],       [  38. ,   62. ,   97. ,    0.6],       [  67. ,   57. ,   99. ,    1. ],       [ 103. ,   58. ,  101. ,    0.6],       [  -2. ,   78. ,  100. ,    0.9],       [  35. ,   84. ,   96. ,    1.1],       [  68. ,   79. ,  103. ,    1.1],       [  96. ,   79. ,   99. ,    0.7],       [  -4. ,   99. ,  103. ,    1.1],       [  30. ,  104. ,  100. ,    0.5],       [  70. ,  104. ,   99. ,    1. ],       [ 100. ,   97. ,  100. ,    1.1]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.7,  2. ,  2. ,  2. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  2.3,  2.8,  3.9,  5. ,  5. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  1.7,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.mirror([0, 0, 2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p4_rational_C0_periodic(self):
        controlpoints = np.array([[  97. ,   -3. ,   -3. ,    0.9],
       [  76. ,   66. ,   -1. ,    1.4],
       [  19. ,   94. ,    4. ,    0.9],
       [ -48. ,   82. ,   -3. ,    1.4],
       [ -90. ,   30. ,   -4. ,    0.5],
       [ -98. ,  -34. ,    4. ,    1. ],
       [ -53. ,  -87. ,   -3. ,    1.3],
       [  15. , -101. ,    3. ,    0.7],
       [  76. ,  -66. ,    0. ,    1.5]])
        basis0 = BSplineBasis(4, np.array([-1.2,  0. ,  0. ,  0. ,  1.3,  1.8,  2.8,  3.8,  5.1,  5.8,  7. ,
        7. ,  7. ,  8.3]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 7.2,  4.8,  2.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 7.200000
        pt2[...,1] -= 4.800000
        pt2[...,2] -= 2.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p3_rational_C0_periodic(self):
        controlpoints = np.array([[ 104. ,   -4. ,    3. ,    0.7],
       [   4. ,   98. ,   -3. ,    0.7],
       [-104. ,   -4. ,    2. ,    0.7],
       [   0. , -100. ,   -2. ,    1.4]])
        basis0 = BSplineBasis(3, np.array([-0.9,  0. ,  0. ,  1.2,  2.1,  3. ,  3. ,  4.2]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 3.7,  6. ,  2.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 3.700000
        pt2[...,1] /= 6.000000
        pt2[...,2] /= 2.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p3_rational_C0_periodic(self):
        controlpoints = np.array([[  98. ,    4. ,   -3. ,    1.5],
       [   2. ,   98. ,   -4. ,    0.7],
       [-102. ,    1. ,    3. ,    1.3],
       [   1. ,  -98. ,   -1. ,    0.7]])
        basis0 = BSplineBasis(3, np.array([-0.7,  0. ,  0. ,  1.4,  2.3,  3. ,  3. ,  4.4]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.mirror([3, 0, 0])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p33_rational_C0_periodic(self):
        controlpoints = np.array([[ 57. ,   3. ,   0. ,   1.1],
       [ 15. ,  57. ,   4. ,   0.9],
       [-51. ,  31. ,   2. ,   0.8],
       [-45. , -39. ,   4. ,   0.8],
       [ 19. , -61. ,  -3. ,   1.5],
       [ 75. ,   1. ,  -5. ,   0.7],
       [ 24. ,  70. ,  -1. ,   0.6],
       [-61. ,  39. ,   3. ,   1.3],
       [-63. , -44. ,  -5. ,   1. ],
       [ 24. , -68. ,  -4. ,   1.3],
       [ 81. ,  -2. ,  -4. ,   1.4],
       [ 26. ,  77. ,   0. ,   0.9],
       [-73. ,  50. ,  -4. ,   0.5],
       [-68. , -48. ,   1. ,   1.4],
       [ 29. , -85. ,   1. ,   0.9],
       [ 99. ,  -1. ,   0. ,   0.7],
       [ 28. ,  91. ,  -4. ,   1.2],
       [-84. ,  55. ,  -5. ,   0.6],
       [-79. , -63. ,   3. ,   1.3],
       [ 35. , -98. ,  -1. ,   0.9]])
        basis0 = BSplineBasis(3, np.array([-1.2,  0. ,  0. ,  0.9,  1.7,  2.8,  4. ,  4. ,  4.9]),0)
        basis1 = BSplineBasis(3, np.array([ 0.,  0.,  0.,  1.,  2.,  2.,  2.]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 4.9,  4.6,  6.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 4.900000
        pt2[...,1] -= 4.600000
        pt2[...,2] -= 6.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p23_rational_C0_periodic(self):
        controlpoints = np.array([[  58. ,    4. ,    3. ,    0.9],       [  39. ,   48. ,    1. ,    1.3],       [ -16. ,   59. ,    0. ,    0.8],       [ -58. ,   23. ,    3. ,    0.6],       [ -50. ,  -24. ,   -3. ,    0.8],       [ -13. ,  -59. ,    1. ,    1.2],       [  33. ,  -47. ,    3. ,    1. ],       [  66. ,   -2. ,    1. ,    1.2],       [  40. ,   56. ,    3. ,    0.7],       [ -19. ,   60. ,    4. ,    0.7],       [ -63. ,   30. ,   -1. ,    0.5],       [ -56. ,  -25. ,    3. ,    1.2],       [ -18. ,  -66. ,    0. ,    0.6],       [  43. ,  -48. ,   -1. ,    1.4],       [  68. ,    0. ,    0. ,    1.5],       [  43. ,   60. ,   -4. ,    0.5],       [ -14. ,   67. ,   -2. ,    1.4],       [ -64. ,   28. ,   -2. ,    1.4],       [ -69. ,  -27. ,   -1. ,    1.1],       [ -12. ,  -66. ,    0. ,    0.7],       [  40. ,  -59. ,    4. ,    1.4],       [  78. ,   -2. ,   -4. ,    0.8],       [  49. ,   58. ,    2. ,    0.6],       [ -21. ,   71. ,   -3. ,    1.3],       [ -65. ,   29. ,   -4. ,    1.2],       [ -68. ,  -32. ,    3. ,    0.7],       [ -17. ,  -79. ,    4. ,    1.2],       [  49. ,  -60. ,   -3. ,    0.8],       [  83. ,    1. ,   -5. ,    0.9],       [  52. ,   60. ,   -2. ,    1.3],       [ -18. ,   80. ,    3. ,    1.1],       [ -79. ,   37. ,   -4. ,    1.2],       [ -78. ,  -36. ,    4. ,    0.9],       [ -20. ,  -80. ,    0. ,    1.2],       [  50. ,  -68. ,    0. ,    1.2],       [  90. ,    0. ,   -1. ,    0.9],       [  59. ,   73. ,   -5. ,    0.6],       [ -18. ,   84. ,   -5. ,    1.1],       [ -81. ,   37. ,   -3. ,    0.9],       [ -76. ,  -44. ,   -3. ,    0.6],       [ -19. ,  -87. ,    2. ,    1.4],       [  56. ,  -70. ,    0. ,    1.1],       [  90. ,   -2. ,   -5. ,    1.2],       [  58. ,   72. ,    0. ,    0.8],       [ -18. ,   96. ,   -1. ,    1.2],       [ -82. ,   42. ,    2. ,    1.2],       [ -83. ,  -37. ,   -2. ,    0.7],       [ -26. ,  -91. ,    2. ,    0.7],       [  56. ,  -75. ,    1. ,    1.4],       [ 104. ,    3. ,    2. ,    0.6],       [  61. ,   78. ,    0. ,    0.8],       [ -20. ,   93. ,    3. ,    0.5],       [ -94. ,   45. ,   -2. ,    0.8],       [ -89. ,  -43. ,   -5. ,    0.6],       [ -24. ,  -98. ,    4. ,    0.5],       [  60. ,  -82. ,    1. ,    0.7]])
        basis0 = BSplineBasis(2, np.array([-1.4,  0. ,  1.3,  2.4,  2.9,  4. ,  5.3,  5.6,  7. ,  8.3]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  2.1,  2.9,  3.9,  5.3,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 6.8,  9.5,  4.1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 6.800000
        pt2[...,1] /= 9.500000
        pt2[...,2] /= 4.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p24_rational_C0_periodic(self):
        controlpoints = np.array([[ 59. ,   3. ,  -4. ,   0.8],       [ 41. ,  42. ,  -1. ,   1.4],       [-13. ,  63. ,   4. ,   0.8],       [-53. ,  30. ,  -5. ,   0.5],       [-58. , -30. ,   3. ,   1.4],       [-16. , -58. ,   0. ,   1.5],       [ 38. , -43. ,   1. ,   0.5],       [ 64. ,   2. ,   4. ,   1.4],       [ 44. ,  49. ,  -3. ,   0.9],       [-16. ,  67. ,  -1. ,   0.9],       [-59. ,  29. ,   0. ,   1.4],       [-65. , -34. ,   3. ,   0.7],       [-19. , -64. ,   4. ,   0.8],       [ 47. , -52. ,  -2. ,   0.8],       [ 74. ,  -2. ,   1. ,   1.5],       [ 45. ,  55. ,   4. ,   0.8],       [-13. ,  72. ,  -5. ,   0.8],       [-71. ,  36. ,  -5. ,   0.6],       [-66. , -34. ,  -5. ,   1.3],       [-17. , -71. ,   2. ,   1.5],       [ 44. , -59. ,  -2. ,   1.2],       [ 81. ,  -4. ,  -2. ,   0.8],       [ 52. ,  68. ,  -2. ,   0.6],       [-16. ,  84. ,   2. ,   1. ],       [-78. ,  36. ,   3. ,   0.7],       [-80. , -40. ,   1. ,   0.7],       [-21. , -79. ,  -5. ,   1.3],       [ 54. , -63. ,  -1. ,   0.9],       [ 89. ,  -4. ,   2. ,   0.7],       [ 61. ,  75. ,   4. ,   0.7],       [-23. ,  93. ,   2. ,   1. ],       [-84. ,  44. ,  -2. ,   1.2],       [-85. , -40. ,   2. ,   0.7],       [-18. , -93. ,   3. ,   1.3],       [ 60. , -77. ,   4. ,   0.9],       [ 98. ,  -3. ,   3. ,   1.3],       [ 58. ,  77. ,  -5. ,   1.3],       [-19. ,  97. ,   3. ,   1. ],       [-95. ,  47. ,   1. ,   0.6],       [-92. , -47. ,  -3. ,   0.6],       [-21. , -96. ,   3. ,   0.5],       [ 63. , -76. ,   4. ,   0.6]])
        basis0 = BSplineBasis(2, np.array([-0.6,  0. ,  1.3,  1.9,  3.3,  4.2,  4.8,  6.4,  7. ,  8.3]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.6,  1.8,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.mirror([0, 0, 1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p342_rational_C0_periodic(self):
        controlpoints = np.array([[  52. ,   -3. ,   -2. ,    0.5],       [  33. ,   37. ,   -2. ,    1. ],       [  -3. ,   45. ,   -1. ,    1.3],       [ -40. ,   37. ,   -2. ,    0.9],       [ -46. ,    3. ,   -4. ,    0.5],       [ -34. ,  -39. ,   -4. ,    1.4],       [  -2. ,  -54. ,    2. ,    1.4],       [  38. ,  -41. ,    0. ,    1.2],       [  57. ,    4. ,   -5. ,    0.6],       [  37. ,   44. ,   -2. ,    0.9],       [  -4. ,   56. ,    2. ,    1.2],       [ -43. ,   36. ,    4. ,    1.2],       [ -60. ,    2. ,    4. ,    1.3],       [ -44. ,  -37. ,    3. ,    0.8],       [   4. ,  -61. ,   -5. ,    1.5],       [  45. ,  -39. ,   -1. ,    1.1],       [  60. ,   -2. ,    1. ,    1.1],       [  45. ,   45. ,   -2. ,    1. ],       [   4. ,   64. ,    1. ,    1.2],       [ -41. ,   49. ,   -2. ,    1.2],       [ -63. ,   -5. ,   -5. ,    1.3],       [ -44. ,  -47. ,    2. ,    1.1],       [  -3. ,  -63. ,    4. ,    0.9],       [  42. ,  -49. ,   -1. ,    1.3],       [  71. ,   -2. ,   -4. ,    0.7],       [  48. ,   54. ,   -2. ,    1.4],       [   3. ,   74. ,    0. ,    1.5],       [ -47. ,   46. ,   -4. ,    0.5],       [ -72. ,   -1. ,    0. ,    1.1],       [ -55. ,  -51. ,   -3. ,    1. ],       [  -4. ,  -75. ,    3. ,    1.4],       [  55. ,  -48. ,    4. ,    0.8],       [  79. ,    3. ,    1. ,    1.4],       [  54. ,   58. ,   -1. ,    0.8],       [  -3. ,   75. ,    0. ,    1.3],       [ -53. ,   53. ,    4. ,    1.1],       [ -76. ,   -3. ,    4. ,    1.5],       [ -61. ,  -55. ,    3. ,    1.4],       [   0. ,  -83. ,    1. ,    1.1],       [  56. ,  -55. ,    2. ,    1. ],       [  83. ,   -1. ,   -5. ,    0.5],       [  59. ,   59. ,   -3. ,    1.3],       [  -2. ,   88. ,    4. ,    1.3],       [ -65. ,   56. ,   -1. ,    0.8],       [ -84. ,   -2. ,    3. ,    1.1],       [ -64. ,  -66. ,   -5. ,    1.2],       [   0. ,  -86. ,   -3. ,    1.5],       [  62. ,  -65. ,    0. ,    1.5],       [  97. ,    4. ,   -2. ,    1. ],       [  66. ,   69. ,   -5. ,    1.4],       [   1. ,   91. ,    1. ,    1.4],       [ -69. ,   70. ,   -3. ,    1.3],       [ -91. ,    0. ,   -3. ,    1.5],       [ -64. ,  -63. ,    3. ,    1. ],       [  -3. ,  -98. ,    2. ,    0.5],       [  63. ,  -68. ,    1. ,    0.7],       [  98. ,    0. ,   -3. ,    1.1],       [  72. ,   71. ,    0. ,    0.5],       [  -4. ,   99. ,    3. ,    1. ],       [ -70. ,   70. ,    1. ,    0.6],       [-105. ,    4. ,   -1. ,    1.3],       [ -66. ,  -72. ,    3. ,    1.3],       [  -1. , -105. ,    2. ,    0.9],       [  67. ,  -74. ,   -4. ,    1.4],       [  50. ,    4. ,   13. ,    0.8],       [  34. ,   37. ,   12. ,    0.7],       [   2. ,   46. ,    5. ,    0.8],       [ -35. ,   38. ,   14. ,    1.1],       [ -51. ,    1. ,   10. ,    1.2],       [ -31. ,  -39. ,   12. ,    0.5],       [  -5. ,  -49. ,    7. ,    1.4],       [  31. ,  -41. ,    5. ,    0.8],       [  53. ,    0. ,   10. ,    1.1],       [  35. ,   44. ,   10. ,    1. ],       [   0. ,   61. ,    9. ,    0.7],       [ -39. ,   41. ,   11. ,    1. ],       [ -53. ,   -4. ,   10. ,    1.1],       [ -39. ,  -42. ,   10. ,    1.1],       [   1. ,  -63. ,   11. ,    1.3],       [  42. ,  -46. ,   12. ,    1.4],       [  60. ,    2. ,    6. ,    1.4],       [  46. ,   46. ,    6. ,    1.2],       [  -1. ,   68. ,    9. ,    1.1],       [ -43. ,   43. ,   12. ,    1.3],       [ -62. ,   -5. ,    6. ,    1. ],       [ -45. ,  -44. ,   10. ,    0.7],       [  -3. ,  -63. ,   14. ,    1.2],       [  44. ,  -45. ,    7. ,    0.7],       [  68. ,    0. ,    8. ,    1.3],       [  54. ,   45. ,    5. ,    0.8],       [   1. ,   76. ,   12. ,    1. ],       [ -48. ,   48. ,   12. ,    0.7],       [ -72. ,    1. ,   11. ,    1. ],       [ -46. ,  -51. ,    8. ,    1.3],       [  -3. ,  -72. ,    8. ,    1.3],       [  51. ,  -50. ,   11. ,    0.5],       [  77. ,   -4. ,    6. ,    0.7],       [  56. ,   59. ,   12. ,    1. ],       [  -3. ,   79. ,   11. ,    0.7],       [ -57. ,   52. ,   13. ,    0.7],       [ -79. ,   -5. ,    9. ,    0.8],       [ -61. ,  -54. ,    6. ,    0.7],       [  -5. ,  -74. ,    8. ,    1.5],       [  50. ,  -61. ,    6. ,    1.4],       [  82. ,   -3. ,    8. ,    1.4],       [  64. ,   62. ,    9. ,    1.4],       [  -4. ,   80. ,   13. ,    1.4],       [ -63. ,   61. ,   12. ,    0.9],       [ -84. ,    2. ,    7. ,    0.6],       [ -63. ,  -65. ,   12. ,    0.8],       [   0. ,  -90. ,    5. ,    0.5],       [  55. ,  -57. ,   13. ,    0.6],       [  89. ,   -4. ,   11. ,    1.3],       [  60. ,   62. ,    5. ,    0.9],       [  -4. ,   92. ,   12. ,    0.8],       [ -62. ,   63. ,    6. ,    1.3],       [ -89. ,   -3. ,   11. ,    1.1],       [ -65. ,  -68. ,   10. ,    0.8],       [   3. ,  -95. ,    6. ,    1. ],       [  61. ,  -64. ,   11. ,    1.4],       [  98. ,    2. ,    9. ,    0.8],       [  74. ,   69. ,    6. ,    0.5],       [   3. ,   97. ,    8. ,    0.5],       [ -70. ,   72. ,   10. ,    1.2],       [ -97. ,   -5. ,   10. ,    1.1],       [ -76. ,  -75. ,   14. ,    0.6],       [  -4. ,  -99. ,   12. ,    1.1],       [  66. ,  -73. ,   12. ,    1.3],       [  47. ,   -1. ,   19. ,    1.4],       [  35. ,   40. ,   21. ,    1.5],       [  -3. ,   46. ,   24. ,    1.4],       [ -41. ,   30. ,   24. ,    0.9],       [ -53. ,   -1. ,   22. ,    0.6],       [ -40. ,  -32. ,   17. ,    0.5],       [   4. ,  -48. ,   17. ,    0.5],       [  32. ,  -33. ,   16. ,    0.8],       [  54. ,   -4. ,   16. ,    0.9],       [  38. ,   39. ,   18. ,    1.3],       [  -3. ,   53. ,   22. ,    0.6],       [ -45. ,   36. ,   19. ,    1.3],       [ -56. ,   -4. ,   20. ,    1.4],       [ -45. ,  -45. ,   18. ,    1.5],       [   1. ,  -55. ,   20. ,    0.8],       [  43. ,  -46. ,   22. ,    1. ],       [  67. ,    4. ,   15. ,    0.6],       [  47. ,   47. ,   17. ,    0.6],       [   1. ,   67. ,   17. ,    0.6],       [ -44. ,   49. ,   22. ,    0.5],       [ -61. ,   -3. ,   22. ,    0.7],       [ -43. ,  -44. ,   15. ,    0.8],       [  -5. ,  -68. ,   21. ,    1.1],       [  49. ,  -45. ,   18. ,    0.9],       [  72. ,    2. ,   21. ,    0.9],       [  54. ,   53. ,   22. ,    1. ],       [   1. ,   69. ,   16. ,    1.2],       [ -55. ,   51. ,   23. ,    1.4],       [ -67. ,    0. ,   21. ,    0.6],       [ -53. ,  -55. ,   22. ,    1.2],       [  -4. ,  -69. ,   16. ,    1.4],       [  47. ,  -52. ,   18. ,    1.5],       [  81. ,    4. ,   21. ,    0.6],       [  58. ,   56. ,   15. ,    1. ],       [   4. ,   82. ,   23. ,    0.9],       [ -54. ,   53. ,   24. ,    0.8],       [ -80. ,    1. ,   22. ,    1.1],       [ -58. ,  -52. ,   21. ,    1. ],       [  -4. ,  -75. ,   22. ,    0.7],       [  55. ,  -56. ,   15. ,    0.9],       [  82. ,    2. ,   20. ,    1.3],       [  61. ,   56. ,   20. ,    0.7],       [  -5. ,   85. ,   22. ,    1.1],       [ -63. ,   65. ,   21. ,    1. ],       [ -84. ,   -2. ,   22. ,    1.4],       [ -61. ,  -63. ,   20. ,    0.8],       [  -5. ,  -89. ,   15. ,    0.7],       [  61. ,  -61. ,   22. ,    0.8],       [  89. ,    4. ,   18. ,    1.2],       [  63. ,   62. ,   24. ,    0.7],       [  -1. ,   96. ,   22. ,    1.2],       [ -65. ,   68. ,   24. ,    1.3],       [ -95. ,   -2. ,   15. ,    1.5],       [ -67. ,  -69. ,   21. ,    0.8],       [   4. ,  -97. ,   22. ,    1. ],       [  69. ,  -63. ,   23. ,    0.8],       [  97. ,    1. ,   23. ,    1.5],       [  67. ,   73. ,   15. ,    1.5],       [   4. ,   99. ,   21. ,    1.2],       [ -72. ,   74. ,   19. ,    1.4],       [-103. ,    0. ,   20. ,    0.7],       [ -69. ,  -73. ,   16. ,    1. ],       [   1. ,  -98. ,   17. ,    1.3],       [  68. ,  -74. ,   19. ,    0.5],       [  49. ,   -4. ,   25. ,    1.3],       [  36. ,   38. ,   32. ,    1. ],       [  -1. ,   47. ,   28. ,    0.8],       [ -38. ,   34. ,   34. ,    0.8],       [ -49. ,    3. ,   30. ,    0.5],       [ -40. ,  -38. ,   34. ,    0.6],       [  -3. ,  -50. ,   31. ,    0.8],       [  40. ,  -35. ,   33. ,    1.3],       [  52. ,    4. ,   30. ,    1. ],       [  36. ,   39. ,   25. ,    0.7],       [  -3. ,   53. ,   33. ,    0.6],       [ -45. ,   36. ,   30. ,    0.9],       [ -60. ,   -5. ,   30. ,    1. ],       [ -41. ,  -43. ,   26. ,    0.7],       [   2. ,  -56. ,   34. ,    1.1],       [  37. ,  -40. ,   32. ,    1.1],       [  62. ,   -4. ,   29. ,    1.3],       [  47. ,   42. ,   26. ,    0.8],       [   1. ,   60. ,   34. ,    0.6],       [ -46. ,   49. ,   28. ,    1. ],       [ -65. ,    0. ,   33. ,    1.3],       [ -45. ,  -42. ,   31. ,    0.9],       [   1. ,  -61. ,   27. ,    1. ],       [  41. ,  -44. ,   34. ,    0.5],       [  74. ,   -5. ,   31. ,    0.8],       [  52. ,   53. ,   26. ,    1.2],       [  -1. ,   69. ,   27. ,    1.2],       [ -52. ,   50. ,   32. ,    1. ],       [ -76. ,    1. ,   33. ,    0.7],       [ -48. ,  -54. ,   26. ,    0.9],       [  -2. ,  -76. ,   29. ,    0.8],       [  48. ,  -49. ,   34. ,    1.4],       [  79. ,    3. ,   30. ,    1.3],       [  52. ,   59. ,   34. ,    0.5],       [   1. ,   80. ,   28. ,    1.4],       [ -59. ,   53. ,   25. ,    1.1],       [ -77. ,   -1. ,   31. ,    0.6],       [ -57. ,  -54. ,   32. ,    0.7],       [  -5. ,  -74. ,   27. ,    0.5],       [  53. ,  -58. ,   31. ,    1. ],       [  81. ,    2. ,   32. ,    0.9],       [  58. ,   65. ,   31. ,    0.9],       [  -3. ,   83. ,   27. ,    0.9],       [ -64. ,   62. ,   29. ,    1.2],       [ -82. ,    1. ,   25. ,    0.8],       [ -65. ,  -63. ,   32. ,    0.6],       [  -5. ,  -89. ,   33. ,    0.5],       [  57. ,  -64. ,   31. ,    0.8],       [  90. ,    0. ,   33. ,    1.2],       [  61. ,   61. ,   34. ,    0.6],       [   4. ,   97. ,   26. ,    0.7],       [ -69. ,   62. ,   27. ,    1.4],       [ -88. ,   -4. ,   30. ,    0.8],       [ -61. ,  -67. ,   26. ,    0.5],       [  -2. ,  -93. ,   34. ,    1.2],       [  70. ,  -65. ,   29. ,    0.9],       [  95. ,   -1. ,   28. ,    0.7],       [  67. ,   70. ,   25. ,    0.9],       [   0. ,  104. ,   31. ,    0.6],       [ -67. ,   67. ,   28. ,    0.6],       [ -97. ,   -3. ,   30. ,    1.1],       [ -76. ,  -73. ,   32. ,    1.3],       [   2. , -102. ,   34. ,    0.9],       [  75. ,  -72. ,   34. ,    1.1],       [  54. ,   -3. ,   43. ,    1.2],       [  33. ,   35. ,   44. ,    1.1],       [  -3. ,   52. ,   38. ,    0.7],       [ -40. ,   35. ,   41. ,    1.1],       [ -53. ,    4. ,   42. ,    0.8],       [ -36. ,  -34. ,   44. ,    0.8],       [  -4. ,  -49. ,   42. ,    1.5],       [  36. ,  -40. ,   42. ,    1.4],       [  52. ,    2. ,   37. ,    0.5],       [  43. ,   43. ,   36. ,    1. ],       [   1. ,   53. ,   41. ,    0.5],       [ -41. ,   44. ,   44. ,    0.6],       [ -58. ,   -3. ,   41. ,    1.2],       [ -42. ,  -43. ,   39. ,    1.2],       [   1. ,  -57. ,   35. ,    0.8],       [  42. ,  -44. ,   44. ,    0.8],       [  59. ,    0. ,   37. ,    0.7],       [  40. ,   41. ,   42. ,    1. ],       [  -1. ,   61. ,   36. ,    0.5],       [ -41. ,   40. ,   37. ,    1.1],       [ -64. ,   -5. ,   44. ,    0.9],       [ -41. ,  -45. ,   36. ,    1.5],       [   4. ,  -66. ,   43. ,    1.2],       [  43. ,  -45. ,   39. ,    0.7],       [  68. ,    4. ,   37. ,    1.1],       [  52. ,   51. ,   36. ,    0.5],       [  -1. ,   74. ,   43. ,    0.5],       [ -53. ,   52. ,   35. ,    0.5],       [ -76. ,   -1. ,   35. ,    1.4],       [ -50. ,  -52. ,   37. ,    0.8],       [  -1. ,  -73. ,   38. ,    0.5],       [  49. ,  -55. ,   44. ,    1.3],       [  77. ,   -4. ,   44. ,    1.2],       [  59. ,   57. ,   38. ,    0.9],       [   0. ,   82. ,   38. ,    1.3],       [ -57. ,   52. ,   43. ,    0.6],       [ -77. ,    4. ,   35. ,    0.8],       [ -60. ,  -57. ,   37. ,    0.7],       [  -4. ,  -84. ,   35. ,    0.9],       [  57. ,  -57. ,   35. ,    0.8],       [  90. ,   -4. ,   37. ,    0.9],       [  61. ,   59. ,   43. ,    0.6],       [   0. ,   84. ,   44. ,    0.7],       [ -59. ,   58. ,   38. ,    0.6],       [ -84. ,   -4. ,   38. ,    1. ],       [ -63. ,  -57. ,   43. ,    0.9],       [  -5. ,  -87. ,   36. ,    0.7],       [  57. ,  -63. ,   41. ,    1.1],       [  91. ,    2. ,   37. ,    0.9],       [  67. ,   65. ,   36. ,    0.5],       [  -3. ,   91. ,   35. ,    1.3],       [ -63. ,   61. ,   44. ,    1.1],       [ -94. ,    0. ,   43. ,    0.8],       [ -63. ,  -71. ,   43. ,    1.1],       [  -1. ,  -95. ,   42. ,    1.3],       [  60. ,  -65. ,   36. ,    1.4],       [  97. ,    4. ,   43. ,    1.1],       [  66. ,   70. ,   37. ,    0.5],       [  -3. ,   98. ,   36. ,    1.2],       [ -68. ,   70. ,   43. ,    0.7],       [-103. ,    1. ,   44. ,    1.1],       [ -71. ,  -67. ,   35. ,    1.4],       [  -1. , -104. ,   35. ,    1. ],       [  71. ,  -75. ,   35. ,    1.5]])
        basis0 = BSplineBasis(3, np.array([-0.7,  0. ,  0. ,  1.3,  1.8,  3.2,  3.9,  4.6,  6.3,  7. ,  7. ,
        8.3]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2.6,  4.2,  5. ,  5. ,  5. ,
        5. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.8,  1.9,  2.9,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 5.5,  3.5,  9.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 5.500000
        pt2[...,1] -= 3.500000
        pt2[...,2] -= 9.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p432_rational_C0_periodic(self):
        controlpoints = np.array([[  53. ,   -4. ,   -3. ,    0.7],       [  21. ,   42. ,    3. ,    1.1],       [ -30. ,   46. ,   -5. ,    0.6],       [ -52. ,   -3. ,    2. ,    1.4],       [ -21. ,  -41. ,   -1. ,    1.4],       [  26. ,  -43. ,   -3. ,    1.3],       [  70. ,   -2. ,   -5. ,    1.2],       [  30. ,   55. ,    1. ,    0.9],       [ -37. ,   62. ,   -5. ,    1.2],       [ -71. ,   -1. ,    2. ,    1.2],       [ -30. ,  -56. ,   -2. ,    0.5],       [  36. ,  -55. ,    0. ,    1. ],       [  88. ,   -3. ,    4. ,    0.5],       [  37. ,   72. ,   -3. ,    0.5],       [ -39. ,   70. ,   -1. ,    0.7],       [ -82. ,   -2. ,    1. ,    1. ],       [ -45. ,  -77. ,    0. ,    1.4],       [  37. ,  -76. ,   -2. ,    1.5],       [ 102. ,    1. ,   -2. ,    1.2],       [  53. ,   85. ,    4. ,    1.4],       [ -49. ,   83. ,   -2. ,    1.3],       [ -98. ,   -3. ,    4. ,    0.8],       [ -48. ,  -88. ,    0. ,    1. ],       [  52. ,  -89. ,    3. ,    0.7],       [  53. ,   -2. ,   19. ,    1.4],       [  22. ,   39. ,   20. ,    1. ],       [ -23. ,   40. ,   19. ,    0.8],       [ -47. ,    4. ,   20. ,    0.6],       [ -25. ,  -40. ,   17. ,    0.5],       [  21. ,  -47. ,   18. ,    0.8],       [  67. ,   -4. ,   22. ,    0.7],       [  36. ,   57. ,   21. ,    0.9],       [ -39. ,   59. ,   22. ,    0.6],       [ -70. ,   -4. ,   16. ,    1. ],       [ -33. ,  -56. ,   23. ,    1. ],       [  35. ,  -59. ,   22. ,    0.9],       [  79. ,   -5. ,   20. ,    1.3],       [  45. ,   75. ,   15. ,    0.6],       [ -39. ,   69. ,   23. ,    1.1],       [ -85. ,   -5. ,   19. ,    0.9],       [ -45. ,  -71. ,   20. ,    1.4],       [  41. ,  -72. ,   15. ,    1. ],       [ 102. ,   -3. ,   24. ,    1. ],       [  53. ,   90. ,   17. ,    1.3],       [ -55. ,   82. ,   22. ,    1.3],       [ -98. ,    3. ,   21. ,    1.1],       [ -49. ,  -89. ,   19. ,    1.5],       [  49. ,  -89. ,   24. ,    1.1],       [  52. ,    1. ,   38. ,    0.7],       [  27. ,   38. ,   36. ,    1.2],       [ -26. ,   48. ,   40. ,    1.3],       [ -47. ,    3. ,   35. ,    0.8],       [ -21. ,  -39. ,   42. ,    1.2],       [  28. ,  -47. ,   36. ,    0.5],       [  65. ,   -1. ,   37. ,    1.2],       [  33. ,   54. ,   41. ,    1.4],       [ -33. ,   52. ,   43. ,    1.2],       [ -62. ,   -1. ,   44. ,    0.7],       [ -38. ,  -62. ,   35. ,    1.4],       [  31. ,  -54. ,   36. ,    1. ],       [  82. ,   -4. ,   37. ,    0.9],       [  38. ,   75. ,   37. ,    0.9],       [ -38. ,   69. ,   40. ,    0.9],       [ -88. ,   -2. ,   44. ,    0.8],       [ -41. ,  -73. ,   42. ,    1.4],       [  44. ,  -70. ,   43. ,    1.1],       [  95. ,   -1. ,   36. ,    0.8],       [  49. ,   90. ,   43. ,    1.3],       [ -52. ,   83. ,   40. ,    1.5],       [-100. ,   -1. ,   42. ,    1.5],       [ -52. ,  -89. ,   44. ,    1.4],       [  46. ,  -88. ,   39. ,    0.8]])
        basis0 = BSplineBasis(4, np.array([-1.3,  0. ,  0. ,  0. ,  1.3,  1.8,  2.7,  4. ,  4. ,  4. ,  5.3]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.4,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.8,  2. ,  2. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 8.2,  2.1,  4.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 8.200000
        pt2[...,1] /= 2.100000
        pt2[...,2] /= 4.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p432_rational_C0_periodic(self):
        controlpoints = np.array([[  51. ,    4. ,    0. ,    1. ],       [  31. ,   34. ,    0. ,    1.1],       [  -8. ,   44. ,   -4. ,    1. ],       [ -45. ,   19. ,   -3. ,    0.9],       [ -42. ,  -25. ,    4. ,    0.6],       [ -13. ,  -48. ,   -3. ,    0.9],       [  28. ,  -41. ,    4. ,    1.5],       [  64. ,    1. ,   -4. ,    1. ],       [  40. ,   50. ,   -1. ,    1.1],       [ -14. ,   60. ,    4. ,    1.5],       [ -51. ,   24. ,   -2. ,    0.5],       [ -57. ,  -28. ,   -1. ,    0.9],       [ -13. ,  -62. ,   -4. ,    1. ],       [  38. ,  -47. ,    4. ,    1.3],       [  71. ,   -5. ,    0. ,    1. ],       [  45. ,   52. ,    4. ,    0.7],       [ -12. ,   71. ,    4. ,    1.3],       [ -67. ,   31. ,    1. ,    0.5],       [ -67. ,  -36. ,   -5. ,    1.3],       [ -15. ,  -68. ,   -1. ,    1. ],       [  43. ,  -53. ,   -1. ,    0.9],       [  83. ,    1. ,    0. ,    0.7],       [  48. ,   58. ,    1. ,    1.5],       [ -19. ,   82. ,   -4. ,    1.1],       [ -74. ,   33. ,    0. ,    0.5],       [ -71. ,  -34. ,   -3. ,    0.9],       [ -16. ,  -78. ,    4. ,    0.7],       [  44. ,  -59. ,    3. ,    1. ],       [  89. ,   -1. ,    3. ,    1.1],       [  56. ,   73. ,   -4. ,    0.6],       [ -16. ,   88. ,   -1. ,    0.6],       [ -81. ,   35. ,   -4. ,    1.2],       [ -79. ,  -43. ,    2. ,    0.6],       [ -17. ,  -88. ,   -3. ,    1. ],       [  55. ,  -75. ,   -4. ,    1.2],       [ 102. ,   -5. ,    4. ,    0.8],       [  66. ,   81. ,   -1. ,    0.6],       [ -19. ,  101. ,   -5. ,    1. ],       [ -89. ,   41. ,    2. ,    1.5],       [ -88. ,  -47. ,   -1. ,    0.8],       [ -23. , -103. ,   -2. ,    0.8],       [  61. ,  -75. ,    3. ,    0.7],       [  46. ,   -3. ,   10. ,    1.1],       [  33. ,   37. ,   11. ,    1.2],       [ -13. ,   52. ,   10. ,    0.7],       [ -47. ,   20. ,    4. ,    1.5],       [ -49. ,  -21. ,   10. ,    1.3],       [ -17. ,  -48. ,   11. ,    0.5],       [  27. ,  -38. ,    4. ,    0.8],       [  56. ,    1. ,    6. ,    0.8],       [  34. ,   45. ,    5. ,    1.3],       [ -13. ,   54. ,    7. ,    1. ],       [ -50. ,   29. ,    9. ,    0.6],       [ -53. ,  -22. ,   10. ,    0.6],       [ -13. ,  -54. ,   12. ,    0.7],       [  36. ,  -44. ,   11. ,    0.5],       [  68. ,   -3. ,    9. ,    0.5],       [  41. ,   57. ,   11. ,    1.4],       [ -14. ,   72. ,   10. ,    1.3],       [ -61. ,   33. ,    5. ,    1.3],       [ -65. ,  -26. ,    7. ,    0.9],       [ -20. ,  -73. ,   10. ,    1.4],       [  44. ,  -57. ,    6. ,    0.6],       [  80. ,    3. ,    8. ,    1.1],       [  53. ,   59. ,    4. ,    1.3],       [ -14. ,   73. ,    6. ,    1. ],       [ -75. ,   39. ,    6. ,    0.6],       [ -70. ,  -30. ,    8. ,    1.3],       [ -14. ,  -78. ,    9. ,    0.8],       [  52. ,  -59. ,   11. ,    0.9],       [  88. ,    3. ,    5. ,    0.9],       [  60. ,   73. ,    8. ,    1.3],       [ -22. ,   83. ,    6. ,    1.5],       [ -80. ,   34. ,   12. ,    0.7],       [ -77. ,  -41. ,   11. ,    1.4],       [ -20. ,  -87. ,    6. ,    1.1],       [  57. ,  -75. ,    6. ,    1.3],       [  98. ,   -5. ,    7. ,    1. ],       [  64. ,   81. ,   12. ,    0.7],       [ -24. ,   94. ,    6. ,    0.5],       [ -93. ,   42. ,    7. ,    0.6],       [ -90. ,  -47. ,   11. ,    1.3],       [ -22. ,  -97. ,    7. ,    1. ],       [  64. ,  -81. ,    5. ,    0.7],       [  53. ,   -2. ,   20. ,    1.2],       [  28. ,   42. ,   12. ,    0.7],       [ -15. ,   52. ,   16. ,    1.1],       [ -43. ,   24. ,   13. ,    0.6],       [ -42. ,  -21. ,   17. ,    0.7],       [  -8. ,  -54. ,   17. ,    1.3],       [  30. ,  -38. ,   11. ,    1. ],       [  58. ,   -2. ,   15. ,    1.3],       [  38. ,   47. ,   13. ,    1. ],       [ -18. ,   60. ,   20. ,    1. ],       [ -58. ,   27. ,   16. ,    0.6],       [ -55. ,  -26. ,   13. ,    1.4],       [ -12. ,  -58. ,   20. ,    1.2],       [  41. ,  -49. ,   15. ,    1. ],       [  68. ,    2. ,   11. ,    1.3],       [  39. ,   51. ,   12. ,    0.5],       [ -19. ,   65. ,   15. ,    1.4],       [ -69. ,   32. ,   16. ,    0.6],       [ -63. ,  -31. ,   18. ,    1.1],       [ -20. ,  -67. ,   12. ,    1.1],       [  42. ,  -55. ,   13. ,    1.2],       [  78. ,   -4. ,   18. ,    1. ],       [  52. ,   61. ,   12. ,    0.7],       [ -14. ,   82. ,   17. ,    1. ],       [ -75. ,   31. ,   19. ,    1.1],       [ -75. ,  -37. ,   17. ,    1.4],       [ -21. ,  -80. ,   13. ,    1.5],       [  52. ,  -59. ,   20. ,    0.6],       [  89. ,    3. ,   13. ,    0.7],       [  55. ,   70. ,   11. ,    1.3],       [ -23. ,   85. ,   13. ,    0.9],       [ -80. ,   39. ,   13. ,    1.3],       [ -84. ,  -39. ,   13. ,    1.3],       [ -20. ,  -91. ,   19. ,    1.4],       [  58. ,  -71. ,   15. ,    0.8],       [  97. ,   -2. ,   17. ,    1. ],       [  65. ,   77. ,   14. ,    0.9],       [ -21. ,  100. ,   18. ,    1.2],       [ -88. ,   41. ,   17. ,    0.7],       [ -87. ,  -42. ,   20. ,    1.3],       [ -24. ,  -96. ,   17. ,    1.3],       [  62. ,  -78. ,   18. ,    1.2],       [  54. ,   -4. ,   24. ,    0.5],       [  34. ,   36. ,   23. ,    1.3],       [ -16. ,   47. ,   21. ,    1.3],       [ -47. ,   23. ,   27. ,    1.2],       [ -43. ,  -26. ,   23. ,    0.6],       [ -10. ,  -53. ,   20. ,    0.5],       [  26. ,  -41. ,   25. ,    0.7],       [  57. ,   -3. ,   27. ,    0.8],       [  38. ,   48. ,   20. ,    0.8],       [ -10. ,   60. ,   28. ,    1.2],       [ -51. ,   27. ,   27. ,    0.8],       [ -55. ,  -25. ,   24. ,    1. ],       [ -16. ,  -62. ,   25. ,    0.9],       [  37. ,  -48. ,   20. ,    0.7],       [  68. ,   -2. ,   25. ,    1.3],       [  46. ,   55. ,   24. ,    1.2],       [ -19. ,   70. ,   22. ,    1.4],       [ -68. ,   31. ,   28. ,    1.1],       [ -62. ,  -36. ,   24. ,    0.7],       [ -12. ,  -65. ,   22. ,    1. ],       [  42. ,  -59. ,   19. ,    1.3],       [  83. ,   -3. ,   25. ,    0.6],       [  50. ,   65. ,   27. ,    0.7],       [ -19. ,   81. ,   21. ,    0.8],       [ -68. ,   37. ,   20. ,    1. ],       [ -74. ,  -38. ,   28. ,    0.8],       [ -21. ,  -81. ,   25. ,    1.4],       [  54. ,  -60. ,   28. ,    1.4],       [  91. ,   -3. ,   28. ,    1.5],       [  59. ,   70. ,   22. ,    1.4],       [ -23. ,   84. ,   28. ,    0.5],       [ -83. ,   39. ,   20. ,    1.2],       [ -79. ,  -44. ,   19. ,    1.4],       [ -19. ,  -87. ,   27. ,    0.6],       [  60. ,  -72. ,   28. ,    1. ],       [ 104. ,    3. ,   21. ,    1.4],       [  63. ,   76. ,   24. ,    1.4],       [ -25. ,   96. ,   28. ,    0.6],       [ -89. ,   44. ,   27. ,    1.3],       [ -94. ,  -40. ,   26. ,    0.9],       [ -18. ,  -98. ,   24. ,    1.1],       [  63. ,  -76. ,   25. ,    1.1],       [  49. ,   -4. ,   29. ,    0.8],       [  26. ,   43. ,   34. ,    1. ],       [ -11. ,   45. ,   33. ,    1.4],       [ -50. ,   25. ,   28. ,    1. ],       [ -44. ,  -24. ,   36. ,    1.2],       [ -13. ,  -44. ,   31. ,    1. ],       [  28. ,  -40. ,   35. ,    0.8],       [  62. ,   -5. ,   35. ,    1. ],       [  35. ,   49. ,   28. ,    1.3],       [ -18. ,   62. ,   31. ,    1. ],       [ -51. ,   29. ,   33. ,    0.9],       [ -53. ,  -24. ,   27. ,    1.1],       [ -11. ,  -55. ,   33. ,    0.5],       [  38. ,  -51. ,   35. ,    1.3],       [  69. ,   -1. ,   33. ,    0.7],       [  45. ,   52. ,   32. ,    1.1],       [ -19. ,   68. ,   33. ,    1. ],       [ -61. ,   32. ,   34. ,    1.2],       [ -65. ,  -32. ,   30. ,    0.9],       [ -17. ,  -64. ,   28. ,    1.2],       [  40. ,  -55. ,   34. ,    1.2],       [  81. ,    0. ,   27. ,    0.5],       [  48. ,   59. ,   35. ,    0.5],       [ -23. ,   73. ,   30. ,    1. ],       [ -76. ,   31. ,   31. ,    1.5],       [ -72. ,  -40. ,   29. ,    1.5],       [ -16. ,  -74. ,   32. ,    1. ],       [  46. ,  -64. ,   32. ,    1.1],       [  90. ,   -5. ,   35. ,    1.2],       [  54. ,   66. ,   29. ,    0.7],       [ -19. ,   88. ,   35. ,    0.8],       [ -79. ,   40. ,   27. ,    1.2],       [ -85. ,  -35. ,   33. ,    1.4],       [ -25. ,  -92. ,   29. ,    1.4],       [  53. ,  -66. ,   34. ,    1.1],       [ 104. ,   -2. ,   30. ,    0.8],       [  65. ,   78. ,   31. ,    0.7],       [ -27. ,   92. ,   28. ,    0.6],       [ -93. ,   43. ,   36. ,    0.5],       [ -94. ,  -42. ,   36. ,    1.3],       [ -24. ,  -94. ,   33. ,    1.4],       [  63. ,  -77. ,   27. ,    0.6],       [  45. ,    2. ,   38. ,    1.4],       [  35. ,   36. ,   37. ,    1. ],       [  -8. ,   53. ,   42. ,    1.3],       [ -46. ,   22. ,   41. ,    1.3],       [ -45. ,  -20. ,   41. ,    1. ],       [  -8. ,  -47. ,   42. ,    1.2],       [  29. ,  -36. ,   43. ,    1.5],       [  57. ,   -5. ,   35. ,    0.6],       [  36. ,   48. ,   44. ,    0.9],       [ -11. ,   60. ,   35. ,    1.5],       [ -54. ,   22. ,   39. ,    1.4],       [ -56. ,  -26. ,   44. ,    1.3],       [ -11. ,  -56. ,   41. ,    0.8],       [  36. ,  -46. ,   35. ,    1.5],       [  69. ,    4. ,   40. ,    0.8],       [  47. ,   56. ,   44. ,    0.5],       [ -21. ,   64. ,   39. ,    0.6],       [ -68. ,   26. ,   35. ,    0.7],       [ -61. ,  -31. ,   36. ,    1.2],       [ -14. ,  -67. ,   39. ,    1.1],       [  46. ,  -51. ,   38. ,    1.4],       [  80. ,   -4. ,   35. ,    1.2],       [  51. ,   67. ,   42. ,    1.4],       [ -16. ,   78. ,   35. ,    1.3],       [ -72. ,   31. ,   36. ,    0.9],       [ -69. ,  -34. ,   41. ,    1.4],       [ -20. ,  -76. ,   43. ,    1.4],       [  48. ,  -60. ,   41. ,    0.7],       [  92. ,   -5. ,   42. ,    0.8],       [  57. ,   69. ,   40. ,    1. ],       [ -23. ,   89. ,   39. ,    1.2],       [ -77. ,   37. ,   38. ,    1.2],       [ -78. ,  -35. ,   43. ,    1.1],       [ -23. ,  -91. ,   39. ,    0.6],       [  58. ,  -73. ,   41. ,    1.4],       [ 103. ,    1. ,   43. ,    1. ],       [  57. ,   74. ,   42. ,    0.6],       [ -23. ,   96. ,   39. ,    0.5],       [ -87. ,   45. ,   42. ,    0.6],       [ -93. ,  -46. ,   38. ,    1.1],       [ -25. ,  -95. ,   42. ,    1. ],       [  62. ,  -75. ,   43. ,    1.3]])
        basis0 = BSplineBasis(4, np.array([-1. ,  0. ,  0. ,  0. ,  0.7,  2.2,  3.1,  4. ,  5. ,  5. ,  5. ,
        5.7]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.8,  2.4,  2.8,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  1.9,  3. ,  3.9,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.mirror([0, 0, 2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p3_rational_C1_periodic(self):
        controlpoints = np.array([[  97. ,    4. ,    4. ,    1.3],
       [  61. ,   75. ,    4. ,    0.7],
       [ -24. ,  100. ,    1. ,    1.1],
       [ -87. ,   41. ,    4. ,    0.9],
       [ -89. ,  -47. ,    3. ,    1.2],
       [ -22. ,  -99. ,   -4. ,    1.5],
       [  58. ,  -82. ,    0. ,    1.5]])
        basis0 = BSplineBasis(3, np.array([-2.1, -1.1,  0. ,  0.9,  2. ,  3.2,  4.1,  4.9,  5.9,  7. ,  7.9,
        9. ]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 8.5,  8.3,  9.4])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 8.500000
        pt2[...,1] -= 8.300000
        pt2[...,2] -= 9.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p3_rational_C1_periodic(self):
        controlpoints = np.array([[  95. ,    2. ,   -3. ,    1. ],
       [  73. ,   66. ,    1. ,    0.9],
       [  -4. ,   98. ,   -3. ,    1.1],
       [ -74. ,   66. ,   -1. ,    1.5],
       [ -96. ,    0. ,   -3. ,    1.4],
       [ -75. ,  -74. ,   -3. ,    1. ],
       [  -1. , -104. ,    2. ,    1.5],
       [  66. ,  -72. ,   -2. ,    0.9]])
        basis0 = BSplineBasis(3, np.array([-2. , -1.1,  0. ,  1. ,  1.9,  2.9,  4.4,  4.7,  6. ,  6.9,  8. ,
        9. ,  9.9]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([  4.1,   5.2,  11. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.100000
        pt2[...,1] /= 5.200000
        pt2[...,2] /= 11.000000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p3_rational_C1_periodic(self):
        controlpoints = np.array([[ 96. ,   4. ,   4. ,   0.6],
       [ 63. ,  79. ,   4. ,   1.1],
       [-25. ,  98. ,   4. ,   0.7],
       [-88. ,  41. ,   4. ,   1.4],
       [-95. , -46. ,   2. ,   0.8],
       [-24. , -97. ,   0. ,   0.8],
       [ 67. , -79. ,  -5. ,   0.6]])
        basis0 = BSplineBasis(3, np.array([-2. , -0.8,  0. ,  0.9,  2.2,  3. ,  3.9,  5. ,  6.2,  7. ,  7.9,
        9.2]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.mirror([0, 2, 0])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,1] = -pt2[...,1]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p44_rational_C1_periodic(self):
        controlpoints = np.array([[  57. ,    0. ,   -2. ,    0.7],       [  48. ,   34. ,    4. ,    0.5],       [  12. ,   56. ,   -5. ,    1.4],       [ -35. ,   49. ,   -5. ,    1.1],       [ -58. ,   23. ,    3. ,    1.4],       [ -54. ,  -20. ,   -4. ,    1.2],       [ -31. ,  -54. ,    0. ,    1.2],       [  13. ,  -58. ,   -3. ,    0.8],       [  40. ,  -41. ,    3. ,    1.1],       [  72. ,   -2. ,   -4. ,    1.5],       [  54. ,   43. ,   -1. ,    0.8],       [  14. ,   69. ,   -3. ,    1.2],       [ -37. ,   63. ,    1. ,    0.9],       [ -68. ,   20. ,    1. ,    1.5],       [ -66. ,  -29. ,   -5. ,    0.9],       [ -38. ,  -61. ,    0. ,    1.5],       [  10. ,  -72. ,    2. ,    0.8],       [  51. ,  -50. ,   -4. ,    1.1],       [  76. ,   -2. ,   -5. ,    1.5],       [  60. ,   56. ,   -5. ,    1.3],       [  11. ,   81. ,   -5. ,    1.4],       [ -45. ,   68. ,    3. ,    0.8],       [ -77. ,   28. ,   -1. ,    0.8],       [ -77. ,  -31. ,   -3. ,    1.4],       [ -38. ,  -71. ,    1. ,    0.8],       [  11. ,  -82. ,    4. ,    1. ],       [  62. ,  -52. ,    2. ,    0.7],       [  92. ,    0. ,    2. ,    1.2],       [  72. ,   58. ,    4. ,    1.5],       [  20. ,   84. ,    3. ,    0.6],       [ -46. ,   77. ,   -4. ,    0.9],       [ -85. ,   27. ,    3. ,    1.5],       [ -81. ,  -33. ,    4. ,    0.9],       [ -44. ,  -75. ,   -1. ,    1.1],       [  16. ,  -89. ,    0. ,    1.1],       [  70. ,  -54. ,   -1. ,    1.3],       [ 104. ,    1. ,    4. ,    0.6],       [  79. ,   64. ,    1. ,    0.8],       [  19. ,   95. ,    0. ,    1.4],       [ -50. ,   82. ,    1. ,    0.7],       [ -96. ,   38. ,    3. ,    1.1],       [ -97. ,  -37. ,    2. ,    0.9],       [ -53. ,  -91. ,    1. ,    0.8],       [  21. ,  -96. ,   -5. ,    1.5],       [  73. ,  -67. ,    1. ,    1.2]])
        basis0 = BSplineBasis(4, np.array([ -2.2,  -1.4,   0. ,   0. ,   0.7,   2.4,   3.3,   4.1,   5.1,
         5.8,   6.6,   8. ,   8. ,   8.7,  10.4]),1)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.mirror([0, 0, 3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p434_rational_C1_periodic(self):
        controlpoints = np.array([[  47. ,   -2. ,    3. ,    1.1],       [  42. ,   35. ,   -4. ,    0.7],       [   9. ,   53. ,    0. ,    0.9],       [ -25. ,   40. ,   -2. ,    1. ],       [ -44. ,   14. ,   -3. ,    1.3],       [ -49. ,  -13. ,   -3. ,    0.7],       [ -24. ,  -40. ,    2. ,    1.3],       [   5. ,  -51. ,   -3. ,    0.7],       [  33. ,  -32. ,    2. ,    0.9],       [  69. ,   -3. ,    2. ,    0.7],       [  55. ,   42. ,   -2. ,    1.2],       [   8. ,   61. ,    4. ,    0.7],       [ -36. ,   59. ,    2. ,    0.9],       [ -62. ,   25. ,   -3. ,    1.3],       [ -61. ,  -18. ,   -3. ,    0.9],       [ -32. ,  -62. ,   -1. ,    1.3],       [   6. ,  -69. ,   -4. ,    0.9],       [  49. ,  -48. ,   -5. ,    0.8],       [  82. ,   -1. ,   -1. ,    0.5],       [  60. ,   53. ,    3. ,    1.4],       [  10. ,   81. ,    0. ,    1.1],       [ -41. ,   72. ,    4. ,    1.4],       [ -77. ,   28. ,    1. ,    1.4],       [ -75. ,  -25. ,   -1. ,    1.4],       [ -45. ,  -71. ,   -3. ,    1. ],       [  17. ,  -80. ,    2. ,    0.6],       [  64. ,  -56. ,    4. ,    0.8],       [  95. ,   -1. ,   -3. ,    0.7],       [  71. ,   63. ,   -3. ,    0.6],       [  20. ,  102. ,   -5. ,    0.6],       [ -52. ,   90. ,   -2. ,    1. ],       [ -94. ,   35. ,   -2. ,    1.4],       [ -99. ,  -34. ,    0. ,    0.9],       [ -48. ,  -89. ,    3. ,    1.1],       [  20. , -101. ,    2. ,    0.6],       [  77. ,  -60. ,    2. ,    1.5],       [  48. ,   -1. ,    6. ,    0.5],       [  39. ,   31. ,    8. ,    1.4],       [  12. ,   47. ,    7. ,    1.2],       [ -29. ,   39. ,    5. ,    0.7],       [ -52. ,   16. ,    4. ,    1.2],       [ -45. ,  -15. ,    5. ,    0.7],       [ -30. ,  -45. ,   10. ,    0.6],       [   8. ,  -47. ,    7. ,    0.8],       [  41. ,  -33. ,    7. ,    1.2],       [  68. ,    1. ,    8. ,    1.2],       [  53. ,   46. ,    5. ,    1. ],       [   8. ,   66. ,    6. ,    1. ],       [ -37. ,   61. ,   11. ,    0.7],       [ -60. ,   24. ,    3. ,    1.3],       [ -66. ,  -24. ,    7. ,    0.9],       [ -31. ,  -57. ,    3. ,    1.5],       [  12. ,  -67. ,   11. ,    1.3],       [  46. ,  -38. ,    9. ,    1.1],       [  85. ,    0. ,   10. ,    1.4],       [  67. ,   56. ,    4. ,    1.3],       [  12. ,   82. ,    5. ,    1.4],       [ -41. ,   73. ,    9. ,    1.1],       [ -84. ,   32. ,    4. ,    0.8],       [ -75. ,  -28. ,    8. ,    0.7],       [ -40. ,  -72. ,    7. ,    0.6],       [  14. ,  -87. ,    7. ,    1.3],       [  63. ,  -57. ,   10. ,    1.2],       [  98. ,   -3. ,    9. ,    1.4],       [  76. ,   59. ,    3. ,    0.8],       [  15. ,  101. ,    8. ,    1.5],       [ -48. ,   83. ,   10. ,    0.5],       [ -97. ,   34. ,    3. ,    0.7],       [ -93. ,  -35. ,    8. ,    1.2],       [ -54. ,  -90. ,   10. ,    0.8],       [  13. , -101. ,    4. ,    0.7],       [  75. ,  -65. ,    7. ,    1.1],       [  48. ,   -2. ,   12. ,    1.3],       [  34. ,   31. ,   13. ,    1.3],       [   7. ,   54. ,   19. ,    0.6],       [ -23. ,   40. ,   18. ,    0.6],       [ -46. ,   14. ,   16. ,    1.2],       [ -51. ,  -20. ,   11. ,    1.2],       [ -27. ,  -44. ,   19. ,    0.8],       [   5. ,  -47. ,   17. ,    0.9],       [  40. ,  -30. ,   16. ,    1.4],       [  66. ,   -1. ,   14. ,    1.5],       [  54. ,   40. ,   16. ,    0.9],       [   7. ,   61. ,   18. ,    1.1],       [ -32. ,   60. ,   15. ,    0.7],       [ -63. ,   26. ,   17. ,    0.9],       [ -62. ,  -20. ,   16. ,    1.3],       [ -34. ,  -62. ,   12. ,    1.3],       [  10. ,  -62. ,   13. ,    1.1],       [  49. ,  -47. ,   17. ,    1.1],       [  88. ,    3. ,   17. ,    1.3],       [  67. ,   53. ,   18. ,    0.9],       [  19. ,   78. ,   13. ,    0.8],       [ -46. ,   73. ,   13. ,    0.5],       [ -76. ,   30. ,   17. ,    1.1],       [ -83. ,  -27. ,   11. ,    0.6],       [ -38. ,  -71. ,   16. ,    0.7],       [  16. ,  -82. ,   18. ,    1. ],       [  58. ,  -56. ,   18. ,    1.1],       [  95. ,   -3. ,   20. ,    1. ],       [  74. ,   62. ,   20. ,    1.4],       [  18. ,   97. ,   18. ,    1. ],       [ -54. ,   86. ,   12. ,    1.3],       [ -93. ,   30. ,   20. ,    0.9],       [ -97. ,  -38. ,   19. ,    1.5],       [ -52. ,  -85. ,   20. ,    1. ],       [  12. , -100. ,   13. ,    1.4],       [  75. ,  -64. ,   19. ,    0.7],       [  52. ,    4. ,   26. ,    0.6],       [  40. ,   35. ,   24. ,    0.8],       [   4. ,   51. ,   24. ,    0.7],       [ -25. ,   43. ,   28. ,    1.1],       [ -48. ,   17. ,   27. ,    1.2],       [ -48. ,  -18. ,   20. ,    1.1],       [ -21. ,  -46. ,   27. ,    1.4],       [  11. ,  -51. ,   26. ,    1.2],       [  34. ,  -34. ,   23. ,    1.4],       [  70. ,    1. ,   22. ,    1. ],       [  47. ,   39. ,   25. ,    1.1],       [   7. ,   68. ,   25. ,    0.8],       [ -36. ,   53. ,   28. ,    1.1],       [ -59. ,   27. ,   25. ,    1.2],       [ -67. ,  -20. ,   22. ,    0.8],       [ -34. ,  -56. ,   20. ,    0.7],       [   8. ,  -69. ,   22. ,    1.4],       [  50. ,  -46. ,   22. ,    0.9],       [  87. ,   -4. ,   19. ,    1.4],       [  58. ,   52. ,   21. ,    0.8],       [   9. ,   81. ,   25. ,    0.8],       [ -46. ,   71. ,   23. ,    1. ],       [ -76. ,   32. ,   20. ,    1.5],       [ -75. ,  -30. ,   26. ,    1. ],       [ -45. ,  -73. ,   23. ,    1. ],       [  19. ,  -82. ,   20. ,    0.7],       [  61. ,  -56. ,   20. ,    1. ],       [  95. ,   -1. ,   24. ,    0.7],       [  78. ,   59. ,   28. ,    1.5],       [  14. ,  101. ,   19. ,    0.6],       [ -54. ,   90. ,   22. ,    1.5],       [ -98. ,   30. ,   23. ,    0.6],       [ -91. ,  -39. ,   27. ,    1.3],       [ -53. ,  -86. ,   28. ,    1.2],       [  15. , -104. ,   19. ,    1.5],       [  76. ,  -66. ,   26. ,    0.6],       [  52. ,    4. ,   34. ,    1.3],       [  36. ,   33. ,   33. ,    1.4],       [   4. ,   46. ,   32. ,    1. ],       [ -28. ,   42. ,   30. ,    0.9],       [ -48. ,   13. ,   31. ,    0.7],       [ -50. ,  -19. ,   30. ,    0.7],       [ -28. ,  -44. ,   32. ,    0.6],       [   8. ,  -46. ,   35. ,    0.7],       [  42. ,  -37. ,   29. ,    0.7],       [  65. ,    1. ,   27. ,    1.1],       [  49. ,   41. ,   31. ,    1.4],       [  14. ,   63. ,   28. ,    0.5],       [ -31. ,   57. ,   28. ,    1. ],       [ -60. ,   19. ,   28. ,    1.2],       [ -61. ,  -25. ,   33. ,    1. ],       [ -34. ,  -54. ,   33. ,    1.5],       [  13. ,  -62. ,   35. ,    0.9],       [  51. ,  -48. ,   29. ,    0.6],       [  79. ,   -1. ,   33. ,    0.5],       [  66. ,   57. ,   31. ,    1.2],       [  18. ,   82. ,   31. ,    1.3],       [ -41. ,   75. ,   34. ,    1.2],       [ -79. ,   27. ,   28. ,    0.6],       [ -83. ,  -26. ,   36. ,    1.1],       [ -45. ,  -72. ,   27. ,    1. ],       [  12. ,  -88. ,   28. ,    1.1],       [  63. ,  -54. ,   34. ,    1.3],       [  97. ,   -3. ,   31. ,    0.7],       [  77. ,   63. ,   35. ,    0.6],       [  15. ,   97. ,   28. ,    1.5],       [ -55. ,   83. ,   27. ,    0.7],       [ -96. ,   36. ,   35. ,    1.2],       [ -90. ,  -35. ,   28. ,    1.4],       [ -50. ,  -83. ,   32. ,    1. ],       [  17. , -102. ,   31. ,    0.7],       [  81. ,  -67. ,   30. ,    1.1],       [  47. ,    1. ,   44. ,    1.1],       [  36. ,   29. ,   40. ,    1.2],       [   8. ,   46. ,   35. ,    0.5],       [ -21. ,   44. ,   35. ,    1. ],       [ -52. ,   17. ,   43. ,    0.8],       [ -46. ,  -20. ,   42. ,    0.7],       [ -25. ,  -47. ,   42. ,    0.7],       [  10. ,  -50. ,   44. ,    0.6],       [  34. ,  -34. ,   35. ,    1.1],       [  64. ,   -3. ,   42. ,    0.7],       [  47. ,   47. ,   43. ,    0.7],       [  10. ,   62. ,   36. ,    1.1],       [ -31. ,   59. ,   38. ,    1.4],       [ -59. ,   19. ,   36. ,    1.5],       [ -60. ,  -24. ,   39. ,    1.1],       [ -36. ,  -62. ,   44. ,    1.2],       [  10. ,  -71. ,   41. ,    1.2],       [  53. ,  -40. ,   39. ,    1. ],       [  81. ,   -3. ,   42. ,    0.8],       [  67. ,   53. ,   36. ,    1.5],       [  12. ,   80. ,   38. ,    1.1],       [ -43. ,   71. ,   42. ,    0.5],       [ -81. ,   31. ,   37. ,    0.8],       [ -76. ,  -25. ,   38. ,    1. ],       [ -45. ,  -72. ,   43. ,    0.9],       [  16. ,  -85. ,   43. ,    0.8],       [  62. ,  -55. ,   42. ,    0.5],       [  95. ,   -5. ,   42. ,    1.4],       [  81. ,   64. ,   41. ,    1.4],       [  18. ,   98. ,   40. ,    0.9],       [ -53. ,   86. ,   38. ,    0.8],       [ -92. ,   34. ,   36. ,    1.4],       [ -96. ,  -36. ,   43. ,    1.4],       [ -51. ,  -84. ,   35. ,    1.4],       [  17. , -102. ,   38. ,    1.4],       [  73. ,  -62. ,   41. ,    0.9]])
        basis0 = BSplineBasis(4, np.array([ -1.8,  -0.8,   0. ,   0. ,   0.8,   2.2,   3.2,   4.2,   5.3,
         6.2,   7.2,   8. ,   8. ,   8.8,  10.2]),1)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.7,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 1.7,  2.4,  7.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 1.700000
        pt2[...,1] -= 2.400000
        pt2[...,2] -= 7.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p443_rational_C1_periodic(self):
        controlpoints = np.array([[  53. ,   -3. ,    4. ,    0.8],       [  21. ,   41. ,    1. ,    0.9],       [ -30. ,   43. ,    3. ,    0.8],       [ -51. ,    4. ,   -4. ,    1.3],       [ -26. ,  -43. ,   -5. ,    0.7],       [  28. ,  -42. ,   -2. ,    1.3],       [  58. ,   -1. ,   -2. ,    1.4],       [  32. ,   53. ,    0. ,    0.6],       [ -29. ,   54. ,   -5. ,    1. ],       [ -58. ,   -3. ,   -5. ,    0.6],       [ -30. ,  -50. ,    4. ,    1.1],       [  30. ,  -54. ,   -5. ,    0.9],       [  77. ,    2. ,   -4. ,    0.7],       [  39. ,   69. ,   -4. ,    1.1],       [ -34. ,   64. ,    3. ,    0.7],       [ -72. ,    2. ,    4. ,    1.1],       [ -38. ,  -62. ,   -2. ,    1.5],       [  36. ,  -67. ,    1. ,    1.2],       [  82. ,   -5. ,    2. ,    1. ],       [  41. ,   77. ,   -3. ,    0.7],       [ -39. ,   77. ,    1. ,    0.9],       [ -86. ,   -4. ,    4. ,    1.4],       [ -41. ,  -74. ,    2. ,    0.9],       [  39. ,  -73. ,    0. ,    0.6],       [  99. ,   -5. ,   -3. ,    1. ],       [  49. ,   83. ,   -1. ,    1.4],       [ -55. ,   90. ,   -2. ,    0.8],       [-100. ,   -1. ,    2. ,    0.8],       [ -55. ,  -90. ,    4. ,    1.1],       [  45. ,  -84. ,    0. ,    0.5],       [  54. ,   -2. ,    8. ,    1.5],       [  26. ,   41. ,    8. ,    0.9],       [ -23. ,   44. ,    2. ,    1. ],       [ -46. ,   -3. ,    7. ,    1.1],       [ -28. ,  -42. ,    7. ,    0.6],       [  26. ,  -46. ,    1. ,    0.9],       [  65. ,    0. ,    0. ,    0.5],       [  34. ,   57. ,    4. ,    1.4],       [ -34. ,   53. ,    6. ,    0.7],       [ -58. ,   -4. ,    2. ,    0.5],       [ -29. ,  -55. ,    9. ,    0.6],       [  33. ,  -51. ,    4. ,    0.7],       [  71. ,   -1. ,   10. ,    0.5],       [  36. ,   65. ,    5. ,    0.9],       [ -40. ,   63. ,    4. ,    0.8],       [ -74. ,   -2. ,    6. ,    1.1],       [ -38. ,  -63. ,    2. ,    0.6],       [  35. ,  -65. ,    3. ,    0.9],       [  90. ,   -2. ,    4. ,    1. ],       [  42. ,   75. ,    2. ,    1. ],       [ -42. ,   75. ,    7. ,    0.7],       [ -87. ,   -4. ,    1. ,    1.3],       [ -42. ,  -78. ,    8. ,    1.4],       [  42. ,  -79. ,    6. ,    0.6],       [  99. ,    0. ,    3. ,    1.4],       [  46. ,   87. ,    1. ,    0.8],       [ -54. ,   82. ,    5. ,    0.9],       [ -97. ,    3. ,    5. ,    1.4],       [ -52. ,  -89. ,   10. ,    1.3],       [  54. ,  -85. ,    3. ,    0.6],       [  50. ,    0. ,   11. ,    1. ],       [  29. ,   43. ,    6. ,    1.2],       [ -22. ,   42. ,    7. ,    0.8],       [ -53. ,   -2. ,   14. ,    1. ],       [ -29. ,  -44. ,    8. ,    1.3],       [  20. ,  -41. ,   14. ,    1.2],       [  64. ,   -2. ,   12. ,    1.1],       [  31. ,   52. ,   10. ,    1.1],       [ -30. ,   55. ,   13. ,    1.3],       [ -66. ,    2. ,   14. ,    1.2],       [ -31. ,  -55. ,    8. ,    1.4],       [  34. ,  -59. ,    7. ,    1.2],       [  73. ,   -2. ,    8. ,    1.2],       [  41. ,   66. ,    8. ,    0.7],       [ -42. ,   61. ,   11. ,    0.8],       [ -79. ,    1. ,   12. ,    1.2],       [ -36. ,  -62. ,    8. ,    1.4],       [  37. ,  -68. ,    6. ,    1.3],       [  89. ,   -3. ,   11. ,    0.8],       [  40. ,   75. ,   14. ,    1.4],       [ -46. ,   77. ,   15. ,    1. ],       [ -84. ,    1. ,   15. ,    0.9],       [ -41. ,  -80. ,   11. ,    1.4],       [  41. ,  -72. ,   10. ,    1.1],       [ 104. ,   -3. ,   13. ,    0.8],       [  50. ,   85. ,   15. ,    0.7],       [ -48. ,   89. ,   11. ,    1.2],       [ -98. ,    4. ,   12. ,    1. ],       [ -55. ,  -85. ,   11. ,    1.4],       [  53. ,  -87. ,   15. ,    1. ],       [  53. ,   -2. ,   14. ,    1.3],       [  25. ,   41. ,   17. ,    1.1],       [ -28. ,   47. ,   13. ,    0.7],       [ -46. ,    4. ,   20. ,    0.9],       [ -29. ,  -45. ,   21. ,    0.9],       [  24. ,  -44. ,   20. ,    1.3],       [  65. ,   -2. ,   20. ,    1.1],       [  32. ,   54. ,   17. ,    0.8],       [ -35. ,   52. ,   19. ,    0.7],       [ -59. ,   -2. ,   19. ,    1.5],       [ -35. ,  -50. ,   15. ,    1.1],       [  29. ,  -58. ,   19. ,    1.4],       [  75. ,    3. ,   21. ,    1.4],       [  39. ,   64. ,   21. ,    1.4],       [ -40. ,   67. ,   12. ,    0.7],       [ -72. ,    1. ,   21. ,    1.4],       [ -40. ,  -64. ,   18. ,    1.1],       [  39. ,  -67. ,   12. ,    0.6],       [  88. ,   -3. ,   18. ,    1.2],       [  44. ,   79. ,   21. ,    1.3],       [ -48. ,   71. ,   16. ,    0.7],       [ -87. ,    0. ,   14. ,    1.3],       [ -47. ,  -79. ,   14. ,    1.1],       [  47. ,  -72. ,   18. ,    0.7],       [ 103. ,   -3. ,   17. ,    1.2],       [  46. ,   91. ,   20. ,    1.5],       [ -51. ,   81. ,   20. ,    1.1],       [-104. ,    4. ,   16. ,    0.8],       [ -50. ,  -90. ,   12. ,    0.6],       [  48. ,  -87. ,   20. ,    0.6],       [  50. ,   -4. ,   26. ,    0.9],       [  26. ,   45. ,   24. ,    1. ],       [ -26. ,   39. ,   20. ,    0.8],       [ -52. ,   -2. ,   24. ,    1.2],       [ -29. ,  -47. ,   23. ,    0.7],       [  29. ,  -44. ,   26. ,    1. ],       [  66. ,   -3. ,   21. ,    0.5],       [  33. ,   50. ,   25. ,    1.4],       [ -27. ,   58. ,   18. ,    0.9],       [ -60. ,   -3. ,   23. ,    1.1],       [ -34. ,  -59. ,   23. ,    1.5],       [  30. ,  -50. ,   20. ,    1.3],       [  71. ,   -3. ,   21. ,    1.4],       [  35. ,   60. ,   23. ,    1.4],       [ -43. ,   61. ,   20. ,    0.9],       [ -73. ,   -3. ,   23. ,    1.3],       [ -42. ,  -63. ,   22. ,    1.4],       [  34. ,  -69. ,   23. ,    1.2],       [  92. ,    3. ,   27. ,    1.4],       [  40. ,   77. ,   23. ,    1.4],       [ -45. ,   73. ,   22. ,    1.4],       [ -92. ,   -4. ,   18. ,    1.3],       [ -39. ,  -72. ,   23. ,    1.2],       [  44. ,  -73. ,   20. ,    1.1],       [ 102. ,    3. ,   19. ,    1.2],       [  53. ,   88. ,   24. ,    0.6],       [ -54. ,   89. ,   19. ,    0.9],       [-102. ,    1. ,   24. ,    0.5],       [ -46. ,  -83. ,   18. ,    0.7],       [  50. ,  -89. ,   20. ,    1.5],       [  50. ,    1. ,   30. ,    1.5],       [  23. ,   40. ,   29. ,    1.2],       [ -25. ,   44. ,   32. ,    0.7],       [ -48. ,    2. ,   27. ,    1.5],       [ -30. ,  -39. ,   31. ,    1. ],       [  20. ,  -42. ,   30. ,    1.4],       [  58. ,    2. ,   24. ,    0.8],       [  35. ,   50. ,   24. ,    0.8],       [ -28. ,   52. ,   30. ,    0.9],       [ -58. ,   -5. ,   30. ,    1.4],       [ -37. ,  -51. ,   26. ,    1. ],       [  26. ,  -51. ,   30. ,    1.2],       [  75. ,    4. ,   23. ,    1.4],       [  33. ,   62. ,   26. ,    1.2],       [ -43. ,   64. ,   26. ,    1.5],       [ -80. ,    1. ,   32. ,    1. ],       [ -38. ,  -66. ,   32. ,    1.2],       [  36. ,  -65. ,   32. ,    0.8],       [  86. ,   -1. ,   31. ,    0.9],       [  43. ,   78. ,   29. ,    0.7],       [ -41. ,   80. ,   30. ,    0.8],       [ -90. ,   -3. ,   31. ,    0.5],       [ -47. ,  -77. ,   33. ,    1.1],       [  43. ,  -76. ,   32. ,    0.9],       [  98. ,    3. ,   30. ,    0.7],       [  54. ,   83. ,   31. ,    1.3],       [ -52. ,   87. ,   25. ,    0.7],       [ -96. ,   -4. ,   23. ,    1.1],       [ -52. ,  -89. ,   31. ,    1.3],       [  49. ,  -92. ,   28. ,    1.1],       [  48. ,   -2. ,   38. ,    0.6],       [  20. ,   45. ,   33. ,    1.4],       [ -30. ,   45. ,   38. ,    1.1],       [ -47. ,   -2. ,   31. ,    1.4],       [ -30. ,  -45. ,   30. ,    0.6],       [  20. ,  -44. ,   37. ,    1. ],       [  57. ,   -2. ,   34. ,    1. ],       [  30. ,   53. ,   29. ,    0.6],       [ -36. ,   56. ,   30. ,    1.3],       [ -58. ,   -4. ,   39. ,    0.5],       [ -29. ,  -55. ,   34. ,    0.7],       [  34. ,  -57. ,   37. ,    0.7],       [  78. ,    3. ,   34. ,    0.8],       [  36. ,   69. ,   39. ,    0.9],       [ -42. ,   64. ,   29. ,    0.7],       [ -78. ,   -2. ,   30. ,    1.1],       [ -38. ,  -69. ,   33. ,    0.6],       [  37. ,  -69. ,   34. ,    1.4],       [  84. ,    2. ,   34. ,    0.7],       [  42. ,   80. ,   32. ,    0.7],       [ -40. ,   77. ,   35. ,    1. ],       [ -91. ,    3. ,   32. ,    0.7],       [ -44. ,  -80. ,   33. ,    1.3],       [  43. ,  -78. ,   38. ,    0.7],       [ 104. ,   -4. ,   37. ,    0.9],       [  45. ,   83. ,   30. ,    0.9],       [ -47. ,   83. ,   35. ,    1. ],       [-100. ,    1. ,   37. ,    1.4],       [ -48. ,  -90. ,   35. ,    0.6],       [  47. ,  -90. ,   31. ,    0.9],       [  54. ,   -4. ,   37. ,    1.3],       [  29. ,   47. ,   37. ,    0.7],       [ -21. ,   44. ,   42. ,    1.2],       [ -54. ,    3. ,   38. ,    1.3],       [ -22. ,  -46. ,   42. ,    0.6],       [  24. ,  -41. ,   42. ,    1.3],       [  64. ,    4. ,   40. ,    0.6],       [  28. ,   52. ,   41. ,    1.3],       [ -34. ,   54. ,   35. ,    1.4],       [ -63. ,    3. ,   37. ,    0.9],       [ -27. ,  -52. ,   37. ,    0.5],       [  33. ,  -54. ,   36. ,    0.7],       [  70. ,   -3. ,   41. ,    1.3],       [  37. ,   64. ,   43. ,    1. ],       [ -36. ,   60. ,   44. ,    1.1],       [ -79. ,   -2. ,   39. ,    1.2],       [ -33. ,  -63. ,   44. ,    1. ],       [  42. ,  -62. ,   41. ,    1.3],       [  84. ,    3. ,   35. ,    1.4],       [  47. ,   76. ,   35. ,    1.1],       [ -43. ,   76. ,   44. ,    1.2],       [ -83. ,   -5. ,   43. ,    0.5],       [ -47. ,  -80. ,   41. ,    0.8],       [  42. ,  -72. ,   36. ,    0.9],       [  96. ,    0. ,   38. ,    1.1],       [  49. ,   86. ,   40. ,    1.1],       [ -46. ,   85. ,   38. ,    0.6],       [ -99. ,   -2. ,   39. ,    1.3],       [ -52. ,  -89. ,   42. ,    1.5],       [  47. ,  -86. ,   39. ,    0.9]])
        basis0 = BSplineBasis(4, np.array([-2.2, -0.8,  0. ,  0. ,  1.3,  1.7,  2.8,  4.2,  5. ,  5. ,  6.3,
        6.7]),1)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  2. ,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.7,  2.2,  3. ,  4.4,  4.8,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.mirror([0, 0, 2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p3(self):
        controlpoints = np.array([[ -3.,  -1.,  -2.],
       [ 12.,   2.,  -1.],
       [ 29.,   4.,   3.],
       [ 47.,   3.,  -5.],
       [ 61.,  -1.,   3.],
       [ 75.,   4.,  -3.],
       [ 81.,  -2.,   3.],
       [ 95.,   0.,  -2.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  1.7,  3.2,  3.8,  5.4,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 3.6,  4.3,  6.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 3.600000
        pt2[...,1] -= 4.300000
        pt2[...,2] -= 6.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p2(self):
        controlpoints = np.array([[  2.,  -2.,  -2.],
       [ 51.,  -3.,  -4.],
       [ 99.,  -5.,  -2.]])
        basis0 = BSplineBasis(2, np.array([ 0.,  0.,  1.,  2.,  2.]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 5.8,  7. ,  6.5])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 5.800000
        pt2[...,1] /= 7.000000
        pt2[...,2] /= 6.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p3(self):
        controlpoints = np.array([[   4.,   -1.,    1.],
       [  12.,   -2.,    0.],
       [  38.,   -2.,    1.],
       [  54.,   -2.,   -2.],
       [  67.,    4.,    2.],
       [  87.,    4.,    2.],
       [ 100.,   -4.,   -1.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  2.3,  2.6,  4.1,  5. ,  5. ,  5. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.mirror([2, 0, 0])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p43(self):
        controlpoints = np.array([[   4.,    0.,    2.],       [  18.,   -3.,   -4.],       [  41.,    4.,   -5.],       [  55.,    2.,    3.],       [  84.,   -4.,    2.],       [  98.,   -5.,    3.],       [   0.,   18.,    4.],       [  24.,   18.,    2.],       [  42.,   17.,    2.],       [  55.,   17.,    3.],       [  76.,   23.,   -5.],       [  97.,   22.,   -5.],       [   3.,   37.,    1.],       [  15.,   35.,   -5.],       [  43.,   41.,    4.],       [  57.,   43.,    2.],       [  75.,   37.,    4.],       [  96.,   43.,    3.],       [   0.,   62.,    1.],       [  15.,   56.,    1.],       [  44.,   61.,   -3.],       [  58.,   55.,    2.],       [  76.,   62.,    2.],       [  95.,   56.,   -2.],       [  -1.,   84.,    0.],       [  21.,   75.,   -4.],       [  41.,   81.,    2.],       [  60.,   82.,   -2.],       [  79.,   79.,    3.],       [ 101.,   76.,   -1.],       [  -3.,   95.,    1.],       [  24.,   96.,    4.],       [  36.,   96.,   -4.],       [  64.,  100.,    2.],       [  81.,  100.,   -1.],       [ 104.,   99.,   -2.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  2.1,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.4,  2. ,  3.4,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 5.1,  3.7,  6.1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 5.100000
        pt2[...,1] -= 3.700000
        pt2[...,2] -= 6.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p42(self):
        controlpoints = np.array([[   3.,    4.,    1.],
       [  18.,    4.,   -2.],
       [  38.,   -4.,    3.],
       [  60.,   -1.,    0.],
       [  77.,   -5.,    1.],
       [ 100.,    0.,   -3.],
       [   1.,   28.,    0.],
       [  23.,   27.,    4.],
       [  38.,   26.,    4.],
       [  61.,   26.,    2.],
       [  81.,   28.,   -2.],
       [  96.,   25.,   -5.],
       [  -2.,   46.,    4.],
       [  19.,   51.,    1.],
       [  38.,   54.,    3.],
       [  59.,   46.,   -3.],
       [  82.,   51.,    1.],
       [ 100.,   49.,   -2.],
       [  -3.,   72.,    0.],
       [  24.,   76.,   -4.],
       [  35.,   70.,   -3.],
       [  63.,   74.,   -4.],
       [  80.,   78.,   -1.],
       [ 104.,   74.,    1.],
       [  -4.,  103.,   -2.],
       [  23.,   95.,    2.],
       [  43.,   95.,    1.],
       [  63.,   97.,   -5.],
       [  80.,  103.,    1.],
       [ 104.,  103.,    4.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  1.7,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  2.4,  2.9,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.2,  4.3,  7.6])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.200000
        pt2[...,1] /= 4.300000
        pt2[...,2] /= 7.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p22(self):
        controlpoints = np.array([[  -5.,   -5.,    2.],
       [  29.,    4.,    1.],
       [  47.,    2.,    1.],
       [  78.,    2.,   -2.],
       [  95.,    0.,    1.],
       [  -3.,   28.,   -2.],
       [  24.,   20.,   -2.],
       [  45.,   22.,   -3.],
       [  75.,   25.,   -5.],
       [  95.,   23.,   -5.],
       [   4.,   51.,    2.],
       [  29.,   46.,   -4.],
       [  47.,   54.,    3.],
       [  77.,   49.,    1.],
       [  98.,   47.,   -1.],
       [  -2.,   75.,   -3.],
       [  21.,   73.,   -3.],
       [  51.,   75.,    2.],
       [  71.,   73.,   -4.],
       [  97.,   79.,    4.],
       [   2.,  104.,   -5.],
       [  23.,  103.,   -1.],
       [  49.,  101.,    2.],
       [  74.,  102.,   -5.],
       [  97.,  103.,    4.]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.8,  2.2,  3.1,  4. ,  4. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  2. ,  2.8,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.mirror([2, 0, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p334(self):
        controlpoints = np.array([[   1.,    1.,    4.],       [  17.,    2.,    3.],       [  29.,    1.,    4.],       [  37.,   -3.,    3.],       [  52.,    1.,    1.],       [  70.,    1.,    0.],       [  82.,    3.,    4.],       [  96.,    1.,    0.],       [  -5.,   18.,   -3.],       [  10.,   20.,    0.],       [  27.,   21.,   -1.],       [  46.,   17.,   -4.],       [  60.,   18.,    2.],       [  74.,   22.,   -5.],       [  88.,   18.,   -4.],       [ 103.,   16.,    1.],       [   3.,   40.,    0.],       [  17.,   44.,   -5.],       [  24.,   38.,   -2.],       [  46.,   43.,   -2.],       [  61.,   38.,    3.],       [  68.,   43.,    1.],       [  84.,   39.,    2.],       [ 104.,   35.,    4.],       [  -5.,   63.,   -1.],       [  17.,   59.,    2.],       [  27.,   55.,   -4.],       [  45.,   58.,    3.],       [  52.,   62.,   -2.],       [  68.,   62.,   -5.],       [  84.,   64.,    2.],       [ 101.,   55.,    0.],       [  -1.,   78.,   -3.],       [  16.,   83.,   -1.],       [  33.,   75.,    3.],       [  44.,   81.,   -5.],       [  52.,   80.,    0.],       [  71.,   78.,    2.],       [  84.,   76.,   -5.],       [  96.,   83.,   -4.],       [  -5.,  101.,   -1.],       [  12.,   96.,   -3.],       [  33.,   98.,    4.],       [  47.,   97.,   -5.],       [  54.,   97.,    3.],       [  74.,   99.,    2.],       [  80.,   96.,   -3.],       [ 104.,   96.,    3.],       [  -5.,    4.,   14.],       [  17.,    1.,   12.],       [  26.,   -5.,   16.],       [  47.,   -1.,   17.],       [  52.,    4.,   13.],       [  70.,   -4.,   12.],       [  84.,    3.,   13.],       [ 102.,    3.,   10.],       [  -1.,   16.,   16.],       [  18.,   20.,   13.],       [  26.,   24.,   14.],       [  37.,   21.,   12.],       [  57.,   17.,   19.],       [  69.,   24.,   16.],       [  87.,   16.,   15.],       [ 102.,   23.,   14.],       [  -3.,   39.,   15.],       [  18.,   40.,   18.],       [  26.,   39.,   12.],       [  38.,   35.,   14.],       [  60.,   42.,   14.],       [  73.,   39.,   16.],       [  87.,   44.,   10.],       [  98.,   39.,   14.],       [   1.,   59.,   12.],       [  14.,   57.,   17.],       [  32.,   62.,   17.],       [  42.,   55.,   16.],       [  53.,   57.,   18.],       [  68.,   57.,   13.],       [  88.,   55.,   10.],       [ 102.,   59.,   16.],       [   2.,   84.,   12.],       [  18.,   77.,   17.],       [  27.,   84.,   14.],       [  46.,   81.,   13.],       [  53.,   82.,   17.],       [  67.,   81.,   17.],       [  82.,   80.,   14.],       [  99.,   78.,   11.],       [   4.,  100.,   15.],       [  18.,   95.,   18.],       [  32.,   99.,   19.],       [  47.,  100.,   10.],       [  57.,   98.,   14.],       [  68.,  101.,   11.],       [  88.,  103.,   18.],       [  97.,   96.,   11.],       [   0.,    0.,   32.],       [  10.,    3.,   31.],       [  23.,    0.,   25.],       [  44.,   -5.,   29.],       [  55.,    4.,   26.],       [  70.,   -4.,   29.],       [  89.,   -1.,   26.],       [ 100.,   -4.,   33.],       [   4.,   17.,   31.],       [  11.,   24.,   26.],       [  25.,   22.,   23.],       [  40.,   18.,   26.],       [  61.,   24.,   31.],       [  74.,   15.,   30.],       [  86.,   22.,   27.],       [  98.,   15.,   24.],       [   2.,   39.,   26.],       [  17.,   42.,   33.],       [  30.,   37.,   25.],       [  44.,   35.,   31.],       [  52.,   39.,   24.],       [  67.,   39.,   33.],       [  81.,   38.,   24.],       [  95.,   36.,   24.],       [  -1.,   62.,   30.],       [  13.,   63.,   26.],       [  27.,   60.,   31.],       [  46.,   57.,   26.],       [  56.,   62.,   26.],       [  72.,   59.,   32.],       [  88.,   55.,   25.],       [ 103.,   62.,   24.],       [  -3.,   84.,   29.],       [  14.,   82.,   27.],       [  25.,   84.,   31.],       [  43.,   77.,   26.],       [  53.,   75.,   29.],       [  67.,   82.,   23.],       [  88.,   80.,   27.],       [  96.,   81.,   31.],       [   2.,   96.,   25.],       [  17.,  101.,   27.],       [  25.,  101.,   24.],       [  46.,  104.,   25.],       [  61.,  103.,   29.],       [  73.,   98.,   24.],       [  84.,   98.,   23.],       [  95.,  102.,   27.],       [   0.,   -2.,   38.],       [  10.,    4.,   42.],       [  24.,   -4.,   45.],       [  44.,   -1.,   42.],       [  54.,    1.,   40.],       [  66.,    2.,   43.],       [  85.,    0.,   42.],       [ 103.,    1.,   45.],       [   3.,   21.,   47.],       [  15.,   20.,   39.],       [  29.,   17.,   38.],       [  44.,   18.,   45.],       [  52.,   21.,   47.],       [  72.,   16.,   47.],       [  89.,   21.,   46.],       [  95.,   20.,   39.],       [   4.,   41.,   43.],       [   9.,   42.,   38.],       [  33.,   44.,   39.],       [  39.,   42.,   41.],       [  53.,   41.,   41.],       [  71.,   43.,   47.],       [  90.,   44.,   44.],       [  95.,   38.,   37.],       [  -2.,   57.,   41.],       [  16.,   58.,   46.],       [  25.,   55.,   42.],       [  42.,   64.,   43.],       [  52.,   62.,   41.],       [  74.,   63.,   45.],       [  80.,   59.,   45.],       [ 100.,   56.,   39.],       [   2.,   84.,   46.],       [  18.,   81.,   40.],       [  25.,   77.,   45.],       [  45.,   78.,   43.],       [  58.,   84.,   45.],       [  67.,   80.,   43.],       [  84.,   84.,   41.],       [ 104.,   82.,   46.],       [   1.,  101.,   44.],       [  17.,   97.,   44.],       [  33.,  101.,   45.],       [  38.,   96.,   39.],       [  60.,   95.,   42.],       [  66.,   96.,   39.],       [  88.,   96.,   39.],       [ 104.,  102.,   40.],       [   4.,   -5.,   54.],       [  14.,   -2.,   52.],       [  28.,   -2.,   53.],       [  47.,   -2.,   57.],       [  57.,    4.,   53.],       [  68.,   -4.,   60.],       [  83.,   -5.,   57.],       [  99.,    4.,   56.],       [  -5.,   21.,   58.],       [  16.,   24.,   59.],       [  33.,   15.,   55.],       [  47.,   23.,   56.],       [  54.,   15.,   54.],       [  68.,   23.,   52.],       [  82.,   17.,   61.],       [  95.,   24.,   54.],       [  -4.,   41.,   53.],       [  13.,   43.,   52.],       [  29.,   37.,   54.],       [  42.,   44.,   54.],       [  58.,   42.,   54.],       [  72.,   40.,   55.],       [  82.,   42.,   58.],       [  97.,   43.,   54.],       [   3.,   62.,   54.],       [  14.,   57.,   55.],       [  32.,   61.,   53.],       [  41.,   63.,   53.],       [  61.,   55.,   52.],       [  69.,   63.,   53.],       [  86.,   64.,   52.],       [ 103.,   59.,   53.],       [  -3.,   76.,   60.],       [  12.,   77.,   56.],       [  26.,   82.,   61.],       [  40.,   76.,   59.],       [  58.,   84.,   56.],       [  69.,   79.,   53.],       [  82.,   75.,   57.],       [ 102.,   84.,   56.],       [   3.,  104.,   57.],       [  15.,   96.,   53.],       [  30.,   97.,   53.],       [  46.,  103.,   56.],       [  53.,  102.,   61.],       [  75.,   96.,   56.],       [  82.,   98.,   55.],       [ 104.,  101.,   53.],       [   1.,   -3.,   71.],       [  10.,   -2.,   69.],       [  24.,   -3.,   75.],       [  46.,    4.,   74.],       [  57.,    0.,   71.],       [  71.,    4.,   70.],       [  85.,    1.,   67.],       [ 101.,    1.,   72.],       [   3.,   17.,   68.],       [  15.,   15.,   69.],       [  30.,   24.,   74.],       [  45.,   22.,   71.],       [  61.,   18.,   72.],       [  70.,   22.,   70.],       [  86.,   24.,   70.],       [  98.,   24.,   69.],       [   1.,   42.,   74.],       [  16.,   40.,   71.],       [  30.,   41.,   70.],       [  46.,   36.,   70.],       [  52.,   42.,   71.],       [  75.,   41.,   68.],       [  87.,   38.,   66.],       [ 100.,   44.,   67.],       [  -1.,   61.,   68.],       [  18.,   56.,   73.],       [  31.,   55.,   75.],       [  41.,   57.,   73.],       [  57.,   59.,   71.],       [  73.,   59.,   71.],       [  89.,   58.,   66.],       [  96.,   56.,   69.],       [  -4.,   81.,   73.],       [  18.,   79.,   74.],       [  30.,   81.,   74.],       [  43.,   78.,   71.],       [  53.,   84.,   74.],       [  69.,   83.,   75.],       [  86.,   76.,   69.],       [ 101.,   82.,   76.],       [   4.,  100.,   73.],       [  10.,  101.,   71.],       [  23.,   99.,   67.],       [  42.,  102.,   74.],       [  53.,  102.,   70.],       [  75.,  104.,   73.],       [  87.,  100.,   75.],       [  97.,  103.,   71.],       [   3.,    3.,   84.],       [  16.,   -4.,   81.],       [  29.,   -5.,   86.],       [  43.,    0.,   90.],       [  55.,   -4.,   88.],       [  73.,    1.,   85.],       [  89.,    2.,   82.],       [  98.,   -5.,   83.],       [   4.,   15.,   81.],       [  18.,   21.,   89.],       [  27.,   21.,   84.],       [  43.,   15.,   87.],       [  54.,   24.,   85.],       [  75.,   19.,   83.],       [  90.,   21.,   89.],       [  99.,   16.,   83.],       [   0.,   37.,   88.],       [   9.,   37.,   80.],       [  25.,   38.,   83.],       [  42.,   35.,   88.],       [  57.,   38.,   87.],       [  70.,   40.,   81.],       [  87.,   39.,   81.],       [ 100.,   41.,   86.],       [   2.,   62.,   85.],       [  17.,   59.,   86.],       [  32.,   55.,   81.],       [  38.,   58.,   82.],       [  58.,   64.,   84.],       [  75.,   64.,   81.],       [  90.,   59.,   88.],       [  98.,   63.,   85.],       [   2.,   76.,   89.],       [  18.,   79.,   86.],       [  28.,   75.,   85.],       [  41.,   78.,   82.],       [  55.,   76.,   80.],       [  68.,   81.,   82.],       [  88.,   76.,   86.],       [  99.,   75.,   80.],       [  -2.,  102.,   83.],       [  11.,   96.,   86.],       [  28.,  102.,   82.],       [  43.,   96.,   83.],       [  57.,   95.,   83.],       [  75.,   97.,   89.],       [  84.,   95.,   82.],       [ 100.,   97.,   82.],       [   2.,    2.,  104.],       [   9.,   -3.,   95.],       [  28.,    4.,  101.],       [  39.,    3.,  101.],       [  61.,    2.,   95.],       [  74.,    2.,   97.],       [  88.,    2.,   98.],       [ 102.,    4.,   99.],       [  -4.,   24.,  101.],       [  14.,   24.,   99.],       [  32.,   16.,   99.],       [  47.,   16.,  104.],       [  56.,   15.,  103.],       [  69.,   24.,  101.],       [  84.,   17.,  104.],       [  97.,   18.,  100.],       [   1.,   41.,   95.],       [  16.,   42.,  102.],       [  27.,   38.,  100.],       [  45.,   39.,   95.],       [  61.,   36.,   98.],       [  72.,   37.,   97.],       [  81.,   38.,  104.],       [  98.,   36.,   98.],       [  -4.,   57.,   97.],       [  15.,   56.,  101.],       [  30.,   58.,   99.],       [  39.,   55.,   98.],       [  54.,   60.,   99.],       [  71.,   61.,   95.],       [  86.,   59.,   97.],       [ 102.,   61.,   98.],       [   2.,   78.,  102.],       [  13.,   77.,   97.],       [  26.,   77.,   97.],       [  41.,   80.,   95.],       [  57.,   82.,  104.],       [  70.,   81.,  100.],       [  89.,   79.,   97.],       [ 104.,   81.,  100.],       [   0.,   99.,   99.],       [  10.,  102.,  103.],       [  25.,  104.,  101.],       [  38.,   95.,  100.],       [  60.,   97.,  102.],       [  76.,   98.,  100.],       [  82.,   96.,   97.],       [ 101.,   95.,   99.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  2.1,  2.9,  3.7,  5.3,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  2.2,  3. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  1.6,  2.8,  4.1,  5. ,  5. ,  5. ,
        5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 7.9,  7.7,  2.5])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 7.900000
        pt2[...,1] -= 7.700000
        pt2[...,2] -= 2.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p232(self):
        controlpoints = np.array([[  -1.,   -4.,   -1.],       [  21.,    3.,   -5.],       [  36.,   -2.,    0.],       [  49.,    4.,   -4.],       [  64.,    0.,   -3.],       [  78.,    3.,   -2.],       [ 100.,    0.,    1.],       [   3.,   18.,   -2.],       [  13.,   19.,   -5.],       [  33.,   13.,   -5.],       [  47.,   14.,    1.],       [  64.,   19.,    2.],       [  80.,   15.,    4.],       [ 101.,   12.,    1.],       [   3.,   35.,   -1.],       [  19.,   36.,    4.],       [  37.,   37.,   -4.],       [  45.,   32.,    0.],       [  71.,   33.,   -4.],       [  79.,   33.,   -4.],       [ 102.,   35.,    3.],       [   1.,   47.,   -1.],       [  19.,   54.,    3.],       [  34.,   49.,    4.],       [  49.,   54.,   -1.],       [  70.,   46.,   -3.],       [  88.,   49.,   -3.],       [ 100.,   48.,    1.],       [   0.,   69.,   -2.],       [  12.,   70.,    2.],       [  37.,   70.,    4.],       [  48.,   62.,   -4.],       [  66.,   66.,   -1.],       [  81.,   68.,    1.],       [ 100.,   69.,   -2.],       [   4.,   87.,    2.],       [  15.,   82.,   -2.],       [  29.,   85.,   -2.],       [  54.,   87.,   -2.],       [  65.,   85.,   -2.],       [  88.,   88.,    1.],       [  96.,   82.,   -5.],       [  -5.,  100.,   -4.],       [  18.,  102.,    0.],       [  34.,  102.,   -2.],       [  54.,  100.,    1.],       [  64.,  103.,    4.],       [  81.,  102.,    0.],       [ 100.,   95.,    2.],       [   4.,   -4.,   34.],       [  14.,    3.,   35.],       [  29.,   -3.,   28.],       [  50.,   -1.,   30.],       [  66.,    1.,   30.],       [  82.,    2.,   34.],       [ 100.,    3.,   29.],       [   4.,   15.,   29.],       [  19.,   13.,   34.],       [  34.,   20.,   34.],       [  50.,   15.,   37.],       [  62.,   18.,   35.],       [  83.,   19.,   30.],       [ 100.,   19.,   38.],       [   1.,   29.,   29.],       [  18.,   33.,   37.],       [  30.,   32.,   28.],       [  52.,   35.,   36.],       [  63.,   33.,   37.],       [  81.,   29.,   34.],       [ 100.,   30.,   34.],       [  -1.,   54.,   31.],       [  18.,   51.,   31.],       [  33.,   45.,   34.],       [  51.,   48.,   31.],       [  67.,   52.,   30.],       [  79.,   45.,   28.],       [  99.,   53.,   36.],       [  -2.,   70.,   36.],       [  16.,   62.,   31.],       [  32.,   68.,   32.],       [  50.,   62.,   29.],       [  61.,   62.,   29.],       [  80.,   62.,   33.],       [ 101.,   62.,   36.],       [  -3.,   83.,   32.],       [  18.,   84.,   37.],       [  29.,   83.,   31.],       [  50.,   83.,   35.],       [  70.,   86.,   31.],       [  88.,   81.,   35.],       [  99.,   84.,   33.],       [   1.,   96.,   33.],       [  21.,   96.,   31.],       [  36.,  104.,   34.],       [  53.,  102.,   37.],       [  68.,  101.,   32.],       [  78.,   96.,   33.],       [  99.,  103.,   29.],       [   4.,    2.,   67.],       [  11.,    3.,   70.],       [  31.,   -3.,   71.],       [  49.,   -4.,   66.],       [  71.,    3.,   64.],       [  79.,    0.,   67.],       [ 101.,    1.,   67.],       [   0.,   15.,   63.],       [  19.,   19.,   70.],       [  31.,   18.,   63.],       [  50.,   16.,   70.],       [  65.,   15.,   67.],       [  84.,   12.,   69.],       [  96.,   15.,   64.],       [  -1.,   31.,   69.],       [  13.,   37.,   70.],       [  29.,   34.,   67.],       [  50.,   33.,   65.],       [  66.,   35.,   67.],       [  85.,   29.,   69.],       [ 104.,   32.,   66.],       [   0.,   50.,   62.],       [  14.,   46.,   63.],       [  34.,   48.,   63.],       [  52.,   47.,   68.],       [  65.,   52.,   66.],       [  80.,   46.,   63.],       [ 103.,   47.,   64.],       [  -4.,   63.,   68.],       [  14.,   66.,   65.],       [  37.,   66.,   62.],       [  54.,   67.,   61.],       [  69.,   64.,   61.],       [  83.,   69.,   70.],       [  96.,   70.,   69.],       [   2.,   82.,   63.],       [  19.,   81.,   64.],       [  33.,   83.,   69.],       [  53.,   80.,   61.],       [  67.,   87.,   69.],       [  78.,   84.,   66.],       [  97.,   83.,   69.],       [   4.,   98.,   67.],       [  12.,   97.,   69.],       [  32.,   95.,   68.],       [  53.,  104.,   62.],       [  68.,  103.,   69.],       [  84.,   99.,   66.],       [  97.,   97.,   68.],       [   0.,    1.,   99.],       [  17.,   -5.,  101.],       [  32.,   -5.,  100.],       [  49.,   -4.,  101.],       [  62.,   -5.,  103.],       [  80.,   -2.,  102.],       [  98.,   -1.,   97.],       [  -2.,   12.,   97.],       [  20.,   17.,  102.],       [  28.,   21.,   97.],       [  49.,   20.,  100.],       [  62.,   19.,  102.],       [  86.,   15.,  100.],       [  98.,   12.,   99.],       [   1.,   37.,   98.],       [  17.,   34.,  103.],       [  29.,   32.,   98.],       [  48.,   31.,   96.],       [  63.,   30.,  103.],       [  80.,   38.,  103.],       [  97.,   29.,   95.],       [  -5.,   54.,   96.],       [  19.,   52.,  101.],       [  38.,   46.,  100.],       [  49.,   52.,   97.],       [  63.,   49.,   96.],       [  79.,   47.,  101.],       [ 102.,   46.,   96.],       [   4.,   62.,  104.],       [  20.,   70.,   96.],       [  31.,   65.,  104.],       [  46.,   71.,  104.],       [  63.,   70.,   96.],       [  81.,   67.,  101.],       [  97.,   62.,  104.],       [  -5.,   86.,  104.],       [  12.,   78.,  104.],       [  34.,   83.,  103.],       [  46.,   86.,   97.],       [  64.,   87.,   99.],       [  85.,   82.,  104.],       [  97.,   85.,  101.],       [   2.,   99.,  104.],       [  17.,   99.,   95.],       [  30.,  103.,  102.],       [  53.,  102.,   98.],       [  64.,  102.,   99.],       [  79.,  100.,  101.],       [ 101.,   97.,   96.]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.6,  1.6,  3.1,  3.8,  5.2,  6. ,  6. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.8,  1.8,  2.9,  3.8,  5. ,  5. ,  5. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1. ,  2.2,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([  2.9,   3.8,  11.7])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 2.900000
        pt2[...,1] /= 3.800000
        pt2[...,2] /= 11.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p242(self):
        controlpoints = np.array([[  -4.,   -4.,    2.],       [  23.,   -1.,   -1.],       [  47.,    0.,    2.],       [  71.,   -5.,   -4.],       [  97.,   -2.,    2.],       [  -4.,   17.,    4.],       [  27.,   17.,   -3.],       [  47.,   12.,   -3.],       [  73.,   18.,    3.],       [  98.,   18.,   -3.],       [  -5.,   33.,    2.],       [  24.,   37.,   -4.],       [  48.,   37.,    2.],       [  79.,   36.,    4.],       [ 104.,   29.,    3.],       [  -1.,   51.,    2.],       [  27.,   45.,   -3.],       [  45.,   54.,    3.],       [  70.,   49.,    1.],       [ 100.,   52.,    2.],       [   1.,   68.,    3.],       [  25.,   70.,    1.],       [  48.,   63.,   -3.],       [  72.,   67.,   -3.],       [ 103.,   64.,   -1.],       [   1.,   79.,    1.],       [  21.,   82.,   -3.],       [  46.,   83.,   -2.],       [  70.,   84.,   -4.],       [ 104.,   81.,   -3.],       [   4.,  100.,   -4.],       [  27.,  100.,   -4.],       [  51.,   95.,   -5.],       [  70.,  100.,    1.],       [  95.,  101.,    4.],       [   2.,   -3.,   36.],       [  26.,    3.,   28.],       [  52.,   -4.,   30.],       [  76.,    2.,   31.],       [  98.,   -5.,   30.],       [  -4.,   21.,   37.],       [  26.,   15.,   32.],       [  54.,   19.,   34.],       [  73.,   14.,   30.],       [  97.,   17.,   28.],       [  -1.,   30.,   30.],       [  24.,   37.,   35.],       [  51.,   32.,   35.],       [  73.,   34.,   32.],       [ 100.,   32.,   32.],       [  -5.,   47.,   35.],       [  23.,   45.,   32.],       [  54.,   46.,   35.],       [  77.,   51.,   37.],       [ 104.,   52.,   28.],       [   2.,   61.,   33.],       [  21.,   65.,   30.],       [  45.,   69.,   37.],       [  79.,   68.,   31.],       [ 101.,   68.,   33.],       [  -5.,   88.,   33.],       [  28.,   81.,   35.],       [  47.,   87.,   31.],       [  70.,   78.,   32.],       [ 102.,   84.,   36.],       [  -3.,   99.,   34.],       [  25.,   98.,   34.],       [  50.,  102.,   36.],       [  72.,   99.,   36.],       [  95.,  100.,   37.],       [   4.,    4.,   64.],       [  27.,   -3.,   68.],       [  51.,   -4.,   67.],       [  70.,   -5.,   65.],       [ 103.,    3.,   68.],       [   3.,   15.,   67.],       [  25.,   20.,   70.],       [  46.,   18.,   68.],       [  78.,   15.,   68.],       [  98.,   14.,   65.],       [   4.,   29.,   70.],       [  29.,   31.,   63.],       [  47.,   34.,   61.],       [  79.,   33.,   68.],       [  98.,   30.,   63.],       [   0.,   52.,   64.],       [  23.,   53.,   63.],       [  47.,   50.,   66.],       [  79.,   47.,   67.],       [ 102.,   45.,   67.],       [  -3.,   67.,   65.],       [  24.,   64.,   68.],       [  47.,   68.,   64.],       [  74.,   63.,   65.],       [ 103.,   70.,   70.],       [   3.,   86.,   69.],       [  25.,   84.,   69.],       [  51.,   88.,   64.],       [  72.,   85.,   64.],       [  97.,   81.,   64.],       [  -4.,   95.,   65.],       [  26.,  101.,   70.],       [  53.,   97.,   63.],       [  77.,   95.,   65.],       [  95.,   98.,   67.],       [   4.,   -3.,   99.],       [  23.,    4.,  101.],       [  49.,   -3.,   99.],       [  73.,    2.,  101.],       [ 102.,   -3.,  101.],       [  -5.,   20.,   98.],       [  27.,   16.,   96.],       [  46.,   12.,   96.],       [  79.,   18.,  100.],       [ 100.,   16.,  100.],       [   1.,   30.,   97.],       [  26.,   29.,   95.],       [  49.,   32.,  101.],       [  73.,   28.,  102.],       [ 104.,   36.,  103.],       [   0.,   54.,   97.],       [  23.,   48.,   97.],       [  45.,   47.,   97.],       [  78.,   52.,   97.],       [ 104.,   47.,   98.],       [   1.,   66.,  102.],       [  23.,   68.,   97.],       [  54.,   66.,   99.],       [  72.,   66.,  101.],       [ 103.,   70.,   97.],       [   4.,   87.,  100.],       [  22.,   80.,  101.],       [  54.,   79.,  101.],       [  75.,   84.,  100.],       [ 100.,   79.,   98.],       [  -1.,  104.,  100.],       [  20.,   96.,   98.],       [  47.,  104.,  104.],       [  73.,  103.,  101.],       [ 102.,   98.,   96.]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  2.2,  2.9,  4. ,  4. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  2.4,  2.9,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  2.1,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.mirror([2, 0, 0])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p2_C0_periodic(self):
        controlpoints = np.array([[  95.,   -4.,    2.],
       [   1.,   96.,   -4.],
       [-101.,    1.,    4.],
       [   4., -102.,    2.]])
        basis0 = BSplineBasis(2, np.array([-0.7,  0. ,  1.4,  1.9,  3.3,  4. ,  5.4]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 6.2,  7.5,  1.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 6.200000
        pt2[...,1] -= 7.500000
        pt2[...,2] -= 1.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p2_C0_periodic(self):
        controlpoints = np.array([[ 103.,   -1.,   -4.],
       [ -53.,   89.,    2.],
       [ -46.,  -85.,    3.]])
        basis0 = BSplineBasis(2, np.array([-0.7,  0. ,  1.3,  2.3,  3. ,  4.3]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([  6.6,  11.7,   8.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 6.600000
        pt2[...,1] /= 11.700000
        pt2[...,2] /= 8.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p3_C0_periodic(self):
        controlpoints = np.array([[ 102.,    3.,    1.],
       [  27.,   96.,    1.],
       [ -83.,   61.,   -4.],
       [ -86.,  -58.,   -1.],
       [  35.,  -92.,   -2.]])
        basis0 = BSplineBasis(3, np.array([-1. ,  0. ,  0. ,  1.3,  2.2,  3. ,  4. ,  4. ,  5.3]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.mirror([0, 0, 2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p43_C0_periodic(self):
        controlpoints = np.array([[ 56.,   2.,  -3.],
       [ 21.,  61.,   1.],
       [-48.,  37.,   0.],
       [-45., -40.,   3.],
       [ 22., -61.,   3.],
       [ 68.,  -3.,   1.],
       [ 18.,  60.,   4.],
       [-59.,  41.,  -5.],
       [-58., -36.,  -4.],
       [ 19., -60.,   1.],
       [ 75.,  -1.,  -5.],
       [ 18.,  71.,  -4.],
       [-66.,  41.,  -5.],
       [-57., -47.,  -2.],
       [ 25., -68.,  -4.],
       [ 81.,  -4.,  -5.],
       [ 21.,  76.,  -5.],
       [-63.,  50.,  -1.],
       [-72., -53.,   3.],
       [ 29., -79.,  -3.],
       [ 92.,   4.,  -2.],
       [ 25.,  91.,   3.],
       [-74.,  54.,  -3.],
       [-75., -52.,   0.],
       [ 27., -90.,  -1.],
       [ 97.,   3.,  -3.],
       [ 30.,  93.,   0.],
       [-78.,  62.,  -2.],
       [-78., -62.,  -1.],
       [ 25., -91.,   3.]])
        basis0 = BSplineBasis(4, np.array([-1. ,  0. ,  0. ,  0. ,  0.7,  2. ,  3. ,  3. ,  3. ,  3.7]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.8,  1.6,  3. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 7.2,  2.7,  2.2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 7.200000
        pt2[...,1] -= 2.700000
        pt2[...,2] -= 2.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p23_C0_periodic(self):
        controlpoints = np.array([[  62.,   -4.,    1.],
       [  14.,   60.,   -5.],
       [ -47.,   38.,    2.],
       [ -47.,  -31.,    4.],
       [  21.,  -53.,    2.],
       [  69.,    3.,   -3.],
       [  19.,   60.,   -1.],
       [ -56.,   38.,    4.],
       [ -51.,  -44.,   -5.],
       [  24.,  -70.,   -5.],
       [  76.,    1.,   -5.],
       [  28.,   74.,    0.],
       [ -62.,   43.,    4.],
       [ -58.,  -41.,   -1.],
       [  20.,  -77.,   -3.],
       [  88.,    4.,   -3.],
       [  27.,   80.,    0.],
       [ -69.,   46.,   -3.],
       [ -65.,  -47.,    0.],
       [  28.,  -83.,   -1.],
       [  94.,   -4.,   -5.],
       [  28.,   90.,   -4.],
       [ -77.,   50.,    0.],
       [ -76.,  -58.,    4.],
       [  29.,  -87.,    1.],
       [ 102.,    2.,   -5.],
       [  31.,   94.,    3.],
       [ -86.,   60.,    3.],
       [ -85.,  -59.,   -4.],
       [  34.,  -94.,   -5.]])
        basis0 = BSplineBasis(2, np.array([-1.3,  0. ,  1.2,  1.7,  3.3,  3.7,  5. ,  6.2]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.7,  1.7,  2.9,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 2.1,  5. ,  7.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 2.100000
        pt2[...,1] /= 5.000000
        pt2[...,2] /= 7.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p44_C0_periodic(self):
        controlpoints = np.array([[  55.,    0.,    2.],       [  35.,   46.,    0.],       [ -18.,   60.,   -4.],       [ -56.,   22.,    2.],       [ -50.,  -23.,    1.],       [ -13.,  -61.,    4.],       [  34.,  -47.,    3.],       [  69.,    4.,   -3.],       [  44.,   46.,   -1.],       [ -20.,   60.,    3.],       [ -61.,   30.,   -1.],       [ -60.,  -29.,    1.],       [ -11.,  -67.,    1.],       [  41.,  -56.,   -5.],       [  74.,    0.,   -2.],       [  48.,   54.,   -5.],       [ -15.,   69.,    1.],       [ -65.,   30.,   -5.],       [ -63.,  -29.,    4.],       [ -18.,  -70.,    2.],       [  45.,  -52.,    1.],       [  72.,    3.,   -2.],       [  43.,   63.,   -4.],       [ -13.,   76.,   -2.],       [ -68.,   38.,    0.],       [ -67.,  -31.,   -5.],       [ -20.,  -72.,    3.],       [  47.,  -63.,   -3.],       [  79.,    2.,    1.],       [  52.,   67.,    0.],       [ -14.,   76.,    4.],       [ -74.,   32.,    4.],       [ -77.,  -40.,   -5.],       [ -22.,  -80.,    1.],       [  51.,  -65.,    4.],       [  86.,   -5.,   -4.],       [  54.,   71.,   -2.],       [ -23.,   85.,    0.],       [ -80.,   42.,    4.],       [ -84.,  -38.,    1.],       [ -24.,  -91.,    0.],       [  59.,  -73.,    2.],       [  93.,    3.,   -3.],       [  58.,   72.,    1.],       [ -21.,   88.,    0.],       [ -81.,   42.,    1.],       [ -82.,  -42.,   -4.],       [ -20.,  -92.,    4.],       [  63.,  -78.,    2.],       [ 104.,    4.,    0.],       [  61.,   73.,    0.],       [ -23.,   98.,   -2.],       [ -91.,   41.,    0.],       [ -94.,  -45.,   -2.],       [ -24., -100.,   -4.],       [  64.,  -74.,    3.]])
        basis0 = BSplineBasis(4, np.array([-0.8,  0. ,  0. ,  0. ,  0.7,  1.9,  3.1,  4.2,  5. ,  5. ,  5. ,
        5.7]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  3.2,  4. ,  5. ,  5. ,  5. ,
        5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.mirror([0, 1, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,1] = -pt2[...,1]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p323_C0_periodic(self):
        controlpoints = np.array([[  47.,   -2.,   -3.],       [  23.,   41.,   -2.],       [ -23.,   45.,   -1.],       [ -52.,    2.,   -4.],       [ -26.,  -41.,    1.],       [  20.,  -40.,   -1.],       [  62.,   -3.,    1.],       [  33.,   51.,   -3.],       [ -30.,   52.,    1.],       [ -65.,    4.,   -5.],       [ -35.,  -57.,    1.],       [  30.,  -49.,    0.],       [  70.,    2.,    1.],       [  39.,   58.,    2.],       [ -38.,   60.,   -4.],       [ -68.,    0.,    0.],       [ -31.,  -63.,   -1.],       [  33.,  -58.,   -3.],       [  84.,   -3.,   -1.],       [  41.,   69.,    2.],       [ -36.,   65.,    0.],       [ -79.,   -3.,   -5.],       [ -37.,  -65.,   -2.],       [  42.,  -72.,   -1.],       [  94.,   -3.,    4.],       [  42.,   75.,   -5.],       [ -45.,   82.,   -5.],       [ -86.,    3.,   -5.],       [ -48.,  -77.,   -5.],       [  47.,  -78.,    3.],       [ 100.,   -1.,    3.],       [  47.,   88.,    2.],       [ -52.,   88.,   -5.],       [-105.,   -5.,   -1.],       [ -47.,  -84.,    0.],       [  47.,  -83.,    1.],       [  50.,   -4.,    5.],       [  27.,   44.,   11.],       [ -29.,   39.,    6.],       [ -55.,    2.,    3.],       [ -22.,  -43.,   11.],       [  28.,  -40.,    6.],       [  56.,   -4.,   10.],       [  25.,   49.,   12.],       [ -34.,   50.,    8.],       [ -61.,    2.,    5.],       [ -26.,  -50.,    5.],       [  31.,  -56.,    5.],       [  69.,    3.,    4.],       [  34.,   61.,    4.],       [ -31.,   56.,   12.],       [ -70.,   -5.,    9.],       [ -40.,  -65.,    6.],       [  37.,  -56.,    6.],       [  80.,    4.,    8.],       [  35.,   72.,   10.],       [ -41.,   71.,   10.],       [ -77.,    0.,   12.],       [ -43.,  -66.,   11.],       [  37.,  -74.,    3.],       [  91.,    1.,   12.],       [  45.,   75.,    8.],       [ -48.,   79.,    9.],       [ -90.,   -2.,   10.],       [ -42.,  -80.,    8.],       [  45.,  -77.,    8.],       [ 101.,   -5.,   11.],       [  52.,   88.,    3.],       [ -49.,   83.,    7.],       [ -98.,    1.,   10.],       [ -50.,  -83.,    4.],       [  54.,  -87.,   10.],       [  54.,    3.,   18.],       [  26.,   47.,   18.],       [ -29.,   44.,   12.],       [ -47.,   -2.,   12.],       [ -29.,  -44.,   16.],       [  26.,  -45.,   20.],       [  59.,   -1.,   17.],       [  33.,   51.,   16.],       [ -33.,   49.,   16.],       [ -65.,    0.,   17.],       [ -26.,  -54.,   20.],       [  26.,  -53.,   16.],       [  73.,    0.,   19.],       [  31.,   63.,   13.],       [ -34.,   58.,   13.],       [ -69.,    1.,   13.],       [ -37.,  -58.,   20.],       [  37.,  -56.,   16.],       [  79.,   -5.,   17.],       [  37.,   64.,   18.],       [ -38.,   70.,   19.],       [ -80.,    0.,   13.],       [ -44.,  -74.,   17.],       [  40.,  -69.,   12.],       [  90.,   -1.,   14.],       [  40.,   78.,   17.],       [ -46.,   76.,   11.],       [ -95.,    0.,   14.],       [ -42.,  -78.,   14.],       [  48.,  -76.,   18.],       [  95.,   -3.,   13.],       [  49.,   83.,   15.],       [ -47.,   91.,   18.],       [-104.,    4.,   18.],       [ -51.,  -84.,   16.],       [  52.,  -88.,   15.],       [  53.,   -1.,   27.],       [  20.,   41.,   26.],       [ -25.,   42.,   20.],       [ -54.,   -3.,   21.],       [ -28.,  -45.,   21.],       [  24.,  -43.,   21.],       [  62.,    2.,   23.],       [  29.,   47.,   25.],       [ -33.,   50.,   22.],       [ -60.,   -3.,   24.],       [ -32.,  -50.,   28.],       [  28.,  -52.,   21.],       [  70.,   -2.,   20.],       [  39.,   55.,   27.],       [ -35.,   60.,   26.],       [ -69.,   -4.,   26.],       [ -39.,  -63.,   27.],       [  38.,  -60.,   28.],       [  78.,   -1.,   25.],       [  43.,   71.,   24.],       [ -40.,   70.,   24.],       [ -85.,   -2.,   25.],       [ -41.,  -70.,   24.],       [  36.,  -65.,   28.],       [  88.,    4.,   25.],       [  49.,   76.,   28.],       [ -46.,   82.,   20.],       [ -87.,    1.,   20.],       [ -49.,  -79.,   28.],       [  49.,  -80.,   20.],       [  95.,    3.,   25.],       [  51.,   86.,   22.],       [ -55.,   88.,   20.],       [-103.,    1.,   27.],       [ -49.,  -91.,   20.],       [  48.,  -92.,   21.],       [  48.,    4.,   30.],       [  23.,   41.,   29.],       [ -21.,   42.,   36.],       [ -53.,    4.,   35.],       [ -28.,  -44.,   32.],       [  20.,  -45.,   36.],       [  64.,   -1.,   35.],       [  34.,   53.,   35.],       [ -29.,   53.,   30.],       [ -59.,   -1.,   35.],       [ -35.,  -57.,   29.],       [  25.,  -56.,   35.],       [  70.,   -5.,   29.],       [  30.,   56.,   28.],       [ -31.,   65.,   34.],       [ -70.,    3.,   32.],       [ -40.,  -62.,   31.],       [  35.,  -62.,   36.],       [  77.,    1.,   28.],       [  35.,   66.,   35.],       [ -44.,   71.,   28.],       [ -76.,    4.,   31.],       [ -38.,  -73.,   33.],       [  38.,  -72.,   36.],       [  85.,    2.,   28.],       [  43.,   78.,   35.],       [ -50.,   76.,   36.],       [ -94.,    0.,   36.],       [ -45.,  -77.,   33.],       [  43.,  -83.,   32.],       [  98.,    3.,   36.],       [  45.,   91.,   29.],       [ -48.,   85.,   30.],       [-103.,   -3.,   31.],       [ -54.,  -84.,   36.],       [  48.,  -92.,   27.],       [  51.,    0.,   36.],       [  25.,   39.,   42.],       [ -22.,   48.,   38.],       [ -47.,    0.,   36.],       [ -22.,  -45.,   36.],       [  25.,  -40.,   35.],       [  58.,   -3.,   44.],       [  25.,   50.,   36.],       [ -30.,   52.,   39.],       [ -65.,    1.,   44.],       [ -28.,  -56.,   40.],       [  27.,  -52.,   42.],       [  73.,   -1.,   40.],       [  32.,   59.,   39.],       [ -38.,   55.,   37.],       [ -69.,    3.,   36.],       [ -36.,  -61.,   37.],       [  37.,  -62.,   37.],       [  78.,    3.,   37.],       [  35.,   64.,   36.],       [ -42.,   67.,   40.],       [ -79.,   -5.,   43.],       [ -44.,  -73.,   35.],       [  39.,  -70.,   37.],       [  89.,   -3.,   36.],       [  40.,   75.,   41.],       [ -41.,   79.,   41.],       [ -94.,   -1.,   44.],       [ -41.,  -77.,   37.],       [  47.,  -77.,   37.],       [ 100.,    3.,   44.],       [  54.,   91.,   43.],       [ -49.,   86.,   35.],       [-102.,   -5.,   39.],       [ -54.,  -83.,   44.],       [  50.,  -89.,   36.]])
        basis0 = BSplineBasis(3, np.array([-0.9,  0. ,  0. ,  0.6,  2.2,  2.8,  4.1,  5. ,  5. ,  5.6]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  1.7,  2.8,  3.9,  5. ,  5. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1. ,  2.4,  3.1,  4. ,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 3.6,  4.1,  9.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 3.600000
        pt2[...,1] -= 4.100000
        pt2[...,2] -= 9.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p322_C0_periodic(self):
        controlpoints = np.array([[  45.,   -4.,   -4.],       [  -3.,   48.,    2.],       [ -52.,   -4.,   -1.],       [  -1.,  -54.,   -1.],       [  61.,    3.,    0.],       [   4.,   58.,    2.],       [ -59.,    0.,    2.],       [  -2.,  -67.,   -2.],       [  77.,    4.,    2.],       [  -2.,   76.,   -4.],       [ -79.,    0.,    0.],       [   2.,  -79.,    0.],       [  86.,   -2.,   -4.],       [  -3.,   86.,    1.],       [ -89.,    4.,   -1.],       [  -2.,  -87.,    4.],       [ 100.,    4.,    0.],       [   3.,  100.,   -5.],       [-103.,    3.,    3.],       [   2.,  -99.,    4.],       [  50.,    4.,   14.],       [  -5.,   54.,   11.],       [ -55.,    1.,   11.],       [  -2.,  -53.,   10.],       [  62.,    4.,   10.],       [   1.,   59.,   14.],       [ -60.,   -1.,   14.],       [  -5.,  -64.,   11.],       [  78.,    0.,   15.],       [   1.,   72.,   12.],       [ -80.,    0.,   17.],       [   4.,  -77.,    9.],       [  84.,    0.,   15.],       [  -4.,   89.,   13.],       [ -90.,    0.,   11.],       [   2.,  -86.,   12.],       [ 102.,    4.,    9.],       [   4.,  100.,   15.],       [ -96.,   -4.,   10.],       [  -3., -100.,    9.],       [  46.,   -1.,   26.],       [  -2.,   52.,   26.],       [ -54.,    1.,   26.],       [   0.,  -49.,   22.],       [  65.,   -5.,   27.],       [   4.,   57.,   23.],       [ -62.,    0.,   24.],       [   1.,  -62.,   21.],       [  77.,    0.,   21.],       [   1.,   70.,   21.],       [ -76.,    1.,   23.],       [  -5.,  -73.,   31.],       [  87.,   -5.,   22.],       [   2.,   92.,   26.],       [ -83.,    0.,   22.],       [  -3.,  -87.,   23.],       [ 101.,    2.,   26.],       [   4.,   95.,   27.],       [-103.,   -4.,   27.],       [   0., -101.,   28.],       [  54.,    0.,   42.],       [   4.,   50.,   40.],       [ -48.,   -5.,   36.],       [   1.,  -51.,   38.],       [  59.,   -2.,   42.],       [   3.,   58.,   42.],       [ -66.,    0.,   44.],       [  -2.,  -66.,   40.],       [  76.,    1.,   39.],       [  -3.,   77.,   44.],       [ -78.,    0.,   40.],       [   4.,  -71.,   37.],       [  91.,   -3.,   39.],       [  -3.,   83.,   44.],       [ -87.,    1.,   41.],       [  -1.,  -90.,   44.],       [ 101.,   -1.,   35.],       [  -4.,  101.,   38.],       [-100.,    4.,   36.],       [  -4.,  -97.,   41.]])
        basis0 = BSplineBasis(3, np.array([-1.3,  0. ,  0. ,  0.6,  1.7,  3. ,  3. ,  3.6]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.4,  1.8,  2.9,  4. ,  4. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  2.4,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([ 2.7,  8.2,  5.2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 2.700000
        pt2[...,1] /= 8.200000
        pt2[...,2] /= 5.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p333_C0_periodic(self):
        controlpoints = np.array([[  45.,   -5.,    4.],       [  15.,   43.,    4.],       [ -40.,   33.,    4.],       [ -42.,  -28.,    3.],       [  20.,  -53.,   -1.],       [  61.,    1.,   -3.],       [  22.,   56.,   -5.],       [ -47.,   29.,    1.],       [ -43.,  -33.,    2.],       [  22.,  -51.,    0.],       [  66.,   -4.,   -1.],       [  18.,   65.,    1.],       [ -57.,   37.,   -4.],       [ -50.,  -41.,   -3.],       [  15.,  -66.,   -5.],       [  74.,    3.,    2.],       [  18.,   64.,    4.],       [ -62.,   37.,   -4.],       [ -57.,  -44.,   -2.],       [  19.,  -69.,    4.],       [  75.,   -1.,   -1.],       [  19.,   78.,   -2.],       [ -64.,   49.,   -4.],       [ -65.,  -44.,    1.],       [  20.,  -78.,    1.],       [  85.,    1.,    1.],       [  26.,   85.,    2.],       [ -74.,   45.,    2.],       [ -72.,  -54.,    3.],       [  27.,  -83.,   -5.],       [  89.,   -2.,    2.],       [  31.,   91.,   -3.],       [ -72.,   51.,    0.],       [ -79.,  -54.,    4.],       [  30.,  -93.,    1.],       [ 101.,   -5.,    3.],       [  27.,   91.,   -3.],       [ -80.,   62.,    1.],       [ -79.,  -62.,    1.],       [  35.,  -95.,   -5.],       [  52.,   -4.,    6.],       [  17.,   49.,    6.],       [ -39.,   28.,    4.],       [ -44.,  -29.,    1.],       [  19.,  -47.,    2.],       [  55.,   -2.,    8.],       [  15.,   53.,    5.],       [ -47.,   38.,    9.],       [ -46.,  -35.,    5.],       [  19.,  -52.,    3.],       [  66.,    3.,    5.],       [  18.,   63.,    6.],       [ -50.,   35.,    5.],       [ -55.,  -41.,    5.],       [  15.,  -64.,    5.],       [  72.,   -4.,    0.],       [  22.,   65.,    3.],       [ -61.,   46.,    6.],       [ -58.,  -43.,    3.],       [  25.,  -66.,    4.],       [  76.,    3.,    4.],       [  22.,   70.,    2.],       [ -61.,   46.,    9.],       [ -68.,  -50.,    2.],       [  24.,  -73.,    8.],       [  84.,   -3.,    7.],       [  26.,   84.,    9.],       [ -65.,   54.,    9.],       [ -69.,  -51.,    2.],       [  31.,  -86.,    6.],       [  88.,    4.,    4.],       [  27.,   89.,    1.],       [ -71.,   56.,    6.],       [ -77.,  -53.,    4.],       [  32.,  -90.,    8.],       [  99.,    2.,    5.],       [  33.,   91.,    9.],       [ -78.,   59.,    8.],       [ -82.,  -58.,    2.],       [  28.,  -96.,    8.],       [  46.,   -4.,   13.],       [  13.,   45.,   15.],       [ -38.,   24.,    9.],       [ -41.,  -29.,    7.],       [  19.,  -43.,   10.],       [  55.,    3.,    9.],       [  18.,   55.,   13.],       [ -46.,   37.,    9.],       [ -45.,  -37.,   12.],       [  15.,  -56.,    8.],       [  60.,   -3.,    8.],       [  18.,   65.,    6.],       [ -53.,   34.,   10.],       [ -53.,  -43.,   11.],       [  19.,  -63.,   13.],       [  71.,   -3.,   10.],       [  19.,   63.,    8.],       [ -60.,   44.,   14.],       [ -56.,  -42.,    6.],       [  22.,  -66.,   10.],       [  74.,   -4.,    8.],       [  25.,   76.,   14.],       [ -69.,   45.,    7.],       [ -63.,  -45.,    9.],       [  23.,  -76.,   14.],       [  86.,   -2.,   10.],       [  24.,   77.,    6.],       [ -67.,   53.,    9.],       [ -69.,  -53.,   11.],       [  25.,  -82.,    9.],       [  96.,    2.,    9.],       [  24.,   86.,    6.],       [ -73.,   56.,   16.],       [ -71.,  -57.,    9.],       [  29.,  -90.,    9.],       [ 101.,   -5.,    7.],       [  34.,   94.,   13.],       [ -83.,   55.,   11.],       [ -85.,  -63.,   15.],       [  33.,  -99.,   13.],       [  50.,   -3.,   16.],       [  12.,   49.,   12.],       [ -45.,   28.,   19.],       [ -39.,  -31.,   14.],       [  18.,  -51.,   12.],       [  61.,    4.,   12.],       [  14.,   54.,   19.],       [ -47.,   33.,   15.],       [ -49.,  -32.,   17.],       [  17.,  -54.,   19.],       [  68.,    0.,   22.],       [  21.,   59.,   15.],       [ -49.,   41.,   18.],       [ -56.,  -35.,   15.],       [  23.,  -62.,   20.],       [  68.,    3.,   16.],       [  18.,   65.,   17.],       [ -62.,   41.,   12.],       [ -61.,  -45.,   21.],       [  21.,  -71.,   15.],       [  81.,   -4.,   20.],       [  28.,   76.,   17.],       [ -59.,   43.,   13.],       [ -61.,  -44.,   12.],       [  25.,  -72.,   14.],       [  83.,    2.,   12.],       [  26.,   77.,   14.],       [ -72.,   48.,   19.],       [ -72.,  -47.,   21.],       [  24.,  -85.,   21.],       [  93.,    4.,   12.],       [  32.,   84.,   20.],       [ -79.,   51.,   13.],       [ -72.,  -59.,   15.],       [  25.,  -87.,   17.],       [ 103.,   -5.,   21.],       [  28.,   95.,   16.],       [ -83.,   57.,   20.],       [ -79.,  -63.,   19.],       [  35., -100.,   15.],       [  46.,   -1.,   22.],       [  12.,   51.,   19.],       [ -40.,   28.,   18.],       [ -42.,  -25.,   19.],       [  16.,  -43.,   26.],       [  57.,    3.,   17.],       [  15.,   56.,   21.],       [ -43.,   37.,   23.],       [ -51.,  -34.,   20.],       [  12.,  -57.,   23.],       [  68.,   -1.,   23.],       [  15.,   59.,   20.],       [ -53.,   35.,   25.],       [ -57.,  -41.,   18.],       [  19.,  -60.,   24.],       [  72.,   -3.,   20.],       [  22.,   66.,   20.],       [ -61.,   45.,   19.],       [ -58.,  -38.,   25.],       [  19.,  -73.,   23.],       [  78.,    1.,   27.],       [  29.,   78.,   25.],       [ -68.,   45.,   20.],       [ -65.,  -46.,   20.],       [  25.,  -74.,   18.],       [  80.,   -4.,   24.],       [  27.,   85.,   25.],       [ -71.,   46.,   26.],       [ -67.,  -52.,   23.],       [  30.,  -83.,   25.],       [  95.,    1.,   23.],       [  32.,   87.,   18.],       [ -73.,   54.,   25.],       [ -79.,  -57.,   19.],       [  24.,  -92.,   20.],       [  99.,    2.,   22.],       [  32.,   93.,   23.],       [ -81.,   53.,   21.],       [ -85.,  -57.,   20.],       [  28.,  -95.,   22.],       [  49.,   -3.,   31.],       [  11.,   49.,   25.],       [ -42.,   29.,   27.],       [ -43.,  -34.,   27.],       [  19.,  -49.,   25.],       [  59.,   -2.,   26.],       [  21.,   53.,   26.],       [ -44.,   30.,   32.],       [ -44.,  -35.,   33.],       [  19.,  -51.,   31.],       [  63.,   -3.,   25.],       [  16.,   64.,   24.],       [ -53.,   36.,   31.],       [ -48.,  -34.,   32.],       [  17.,  -61.,   29.],       [  68.,   -3.,   29.],       [  23.,   71.,   31.],       [ -56.,   38.,   27.],       [ -58.,  -44.,   24.],       [  22.,  -67.,   28.],       [  75.,    1.,   27.],       [  23.,   72.,   33.],       [ -59.,   47.,   30.],       [ -62.,  -51.,   26.],       [  21.,  -79.,   31.],       [  82.,   -2.,   30.],       [  22.,   77.,   28.],       [ -75.,   52.,   26.],       [ -70.,  -50.,   25.],       [  24.,  -82.,   32.],       [  89.,   -2.,   27.],       [  27.,   89.,   33.],       [ -75.,   57.,   30.],       [ -75.,  -59.,   30.],       [  29.,  -91.,   26.],       [  99.,   -2.,   28.],       [  35.,   99.,   33.],       [ -81.,   54.,   24.],       [ -78.,  -55.,   29.],       [  31.,  -98.,   26.],       [  50.,   -1.,   35.],       [  17.,   48.,   32.],       [ -40.,   32.,   34.],       [ -44.,  -35.,   32.],       [  14.,  -46.,   31.],       [  58.,    3.,   32.],       [  17.,   58.,   34.],       [ -49.,   29.,   33.],       [ -43.,  -36.,   35.],       [  13.,  -56.,   38.],       [  61.,    1.,   38.],       [  24.,   58.,   38.],       [ -49.,   37.,   37.],       [ -48.,  -37.,   32.],       [  19.,  -58.,   31.],       [  71.,    3.,   32.],       [  20.,   66.,   38.],       [ -59.,   44.,   36.],       [ -56.,  -47.,   37.],       [  18.,  -65.,   36.],       [  80.,    3.,   35.],       [  24.,   71.,   34.],       [ -63.,   50.,   37.],       [ -68.,  -45.,   35.],       [  27.,  -73.,   36.],       [  89.,    3.,   36.],       [  28.,   83.,   30.],       [ -69.,   48.,   38.],       [ -67.,  -48.,   29.],       [  25.,  -83.,   33.],       [  94.,   -3.,   37.],       [  31.,   84.,   36.],       [ -76.,   55.,   39.],       [ -76.,  -52.,   30.],       [  31.,  -85.,   29.],       [ 103.,   -1.,   38.],       [  29.,   99.,   32.],       [ -81.,   59.,   33.],       [ -79.,  -57.,   37.],       [  27.,  -96.,   35.],       [  51.,   -1.,   40.],       [  19.,   43.,   38.],       [ -38.,   32.,   35.],       [ -39.,  -33.,   37.],       [  10.,  -44.,   41.],       [  57.,    4.,   35.],       [  19.,   51.,   42.],       [ -47.,   33.,   36.],       [ -46.,  -36.,   41.],       [  13.,  -52.,   41.],       [  66.,   -5.,   41.],       [  24.,   56.,   40.],       [ -52.,   37.,   38.],       [ -55.,  -42.,   38.],       [  22.,  -62.,   40.],       [  70.,   -2.,   43.],       [  18.,   66.,   35.],       [ -57.,   41.,   39.],       [ -59.,  -45.,   36.],       [  27.,  -73.,   36.],       [  74.,   -5.,   35.],       [  26.,   79.,   41.],       [ -61.,   43.,   39.],       [ -68.,  -47.,   43.],       [  25.,  -75.,   37.],       [  88.,    2.,   44.],       [  28.,   84.,   39.],       [ -74.,   55.,   36.],       [ -67.,  -48.,   44.],       [  26.,  -81.,   36.],       [  87.,   -4.,   41.],       [  33.,   89.,   42.],       [ -74.,   58.,   40.],       [ -72.,  -59.,   42.],       [  30.,  -90.,   43.],       [ 102.,   -1.,   43.],       [  34.,   97.,   35.],       [ -76.,   59.,   37.],       [ -86.,  -56.,   41.],       [  30., -100.,   36.]])
        basis0 = BSplineBasis(3, np.array([-1.1,  0. ,  0. ,  0.8,  2.3,  2.9,  4. ,  4. ,  4.8]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  1.7,  2.8,  4.3,  4.9,  6. ,  6. ,  6. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  2.3,  2.9,  4.4,  4.9,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.mirror([0, 0, 3])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p4_C1_periodic(self):
        controlpoints = np.array([[ 99.,   1.,   3.],
       [ 67.,  82.,   3.],
       [-20.,  99.,   3.],
       [-94.,  42.,  -1.],
       [-95., -45.,   4.],
       [-26., -93.,  -3.],
       [ 67., -75.,  -4.]])
        basis0 = BSplineBasis(4, np.array([-2.2, -0.7,  0. ,  0. ,  1.1,  2.3,  3.1,  3.8,  5.3,  6. ,  6. ,
        7.1,  8.3]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([  4.7,  11.4,  11.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.700000
        pt2[...,1] /= 11.400000
        pt2[...,2] /= 11.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p42_C1_periodic(self):
        controlpoints = np.array([[ 64.,  -4.,  -3.],       [ 43.,  39.,   2.],       [  2.,  61.,   0.],       [-45.,  38.,   0.],       [-65.,  -2.,  -1.],       [-45., -39.,  -5.],       [  4., -59.,  -3.],       [ 37., -42.,  -4.],       [ 73.,   2.,  -4.],       [ 44.,  49.,   1.],       [  3.,  69.,   1.],       [-52.,  53.,  -3.],       [-68.,   3.,  -4.],       [-52., -50.,  -4.],       [  0., -68.,   0.],       [ 50., -52.,   4.],       [ 81.,   2.,  -3.],       [ 58.,  54.,   3.],       [  2.,  77.,   3.],       [-55.,  58.,  -1.],       [-82.,   0.,   2.],       [-56., -60.,   1.],       [ -5., -78.,  -2.],       [ 54., -53.,  -3.],       [ 87.,  -4.,  -5.],       [ 62.,  64.,  -1.],       [ -5.,  86.,  -5.],       [-68.,  67.,   1.],       [-89.,  -5.,   3.],       [-66., -67.,  -2.],       [ -2., -87.,  -3.],       [ 62., -66.,  -4.],       [ 97.,   2.,  -5.],       [ 68.,  69.,   1.],       [  0.,  95.,   0.],       [-68.,  70.,  -5.],       [-99.,  -1.,  -3.],       [-67., -66.,   4.],       [ -1., -96.,   3.],       [ 70., -72.,  -5.]])
        basis0 = BSplineBasis(4, np.array([-2.3, -1.4,  0. ,  0. ,  0.9,  2.4,  2.7,  3.7,  4.7,  5.6,  7. ,
        7. ,  7.9,  9.4]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1. ,  1.9,  3.1,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 3.3,  5.6,  7.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 3.300000
        pt2[...,1] -= 5.600000
        pt2[...,2] -= 7.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p44_C1_periodic(self):
        controlpoints = np.array([[  64.,    0.,    3.],       [  27.,   54.,   -5.],       [ -28.,   55.,    0.],       [ -59.,   -2.,    2.],       [ -29.,  -55.,   -3.],       [  34.,  -50.,    3.],       [  60.,   -4.,   -5.],       [  29.,   61.,   -3.],       [ -28.,   61.,    0.],       [ -61.,    3.,   -4.],       [ -35.,  -54.,   -4.],       [  30.,  -56.,    1.],       [  74.,   -2.,    3.],       [  32.,   58.,    3.],       [ -31.,   62.,    2.],       [ -66.,   -4.,   -1.],       [ -38.,  -61.,   -1.],       [  34.,  -62.,    0.],       [  75.,   -4.,   -3.],       [  38.,   65.,   -1.],       [ -40.,   66.,    4.],       [ -75.,    1.,   -4.],       [ -34.,  -62.,    0.],       [  40.,  -61.,    3.],       [  80.,    1.,   -5.],       [  40.,   69.,    4.],       [ -36.,   67.,    2.],       [ -83.,   -2.,   -3.],       [ -39.,  -72.,   -5.],       [  35.,  -65.,    0.],       [  88.,    2.,   -2.],       [  43.,   78.,   -1.],       [ -45.,   72.,   -3.],       [ -87.,   -3.,   -5.],       [ -46.,  -79.,   -4.],       [  46.,  -77.,   -5.],       [  91.,    4.,   -1.],       [  49.,   76.,   -3.],       [ -47.,   80.,    3.],       [ -95.,   -4.,    0.],       [ -45.,  -76.,    0.],       [  44.,  -75.,   -4.],       [  97.,    0.,    0.],       [  45.,   82.,   -1.],       [ -47.,   87.,   -2.],       [ -92.,    3.,   -2.],       [ -53.,  -86.,   -3.],       [  50.,  -79.,    4.],       [ 102.,   -2.,    1.],       [  49.,   86.,   -1.],       [ -51.,   83.,    3.],       [ -97.,   -2.,    2.],       [ -53.,  -86.,   -3.],       [  51.,  -83.,   -1.]])
        basis0 = BSplineBasis(4, np.array([-2. , -0.8,  0. ,  0. ,  0.9,  2. ,  3. ,  4.2,  5. ,  5. ,  5.9,
        7. ]),1)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1. ,  1.7,  2.7,  4. ,  4.7,  6. ,  6. ,
        6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.mirror([2, 0, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p344_C1_periodic(self):
        controlpoints = np.array([[  54.,   -3.,   -2.],       [  13.,   44.,   -4.],       [ -38.,   26.,   -2.],       [ -41.,  -25.,    0.],       [  11.,  -44.,    4.],       [  61.,   -3.,    4.],       [  16.,   58.,   -4.],       [ -51.,   32.,    0.],       [ -47.,  -38.,    1.],       [  19.,  -61.,    0.],       [  74.,    0.,    1.],       [  25.,   68.,   -4.],       [ -59.,   39.,   -4.],       [ -54.,  -41.,    3.],       [  24.,  -71.,   -3.],       [  83.,   -3.,   -4.],       [  29.,   77.,   -1.],       [ -62.,   44.,   -5.],       [ -66.,  -52.,    0.],       [  22.,  -76.,    2.],       [  85.,   -4.,   -1.],       [  26.,   89.,    4.],       [ -72.,   52.,    3.],       [ -76.,  -49.,   -3.],       [  30.,  -84.,   -5.],       [  97.,   -2.,    4.],       [  33.,   92.,   -1.],       [ -81.,   57.,   -3.],       [ -83.,  -56.,    0.],       [  27.,  -98.,   -2.],       [  50.,   -1.,    1.],       [  19.,   49.,    5.],       [ -38.,   31.,    8.],       [ -42.,  -34.,    1.],       [  16.,  -52.,    1.],       [  61.,    2.,    8.],       [  19.,   55.,    2.],       [ -47.,   39.,    0.],       [ -50.,  -32.,    9.],       [  17.,  -62.,    8.],       [  70.,   -5.,    7.],       [  22.,   65.,    1.],       [ -60.,   45.,    5.],       [ -59.,  -45.,    2.],       [  24.,  -68.,    6.],       [  77.,    4.,    9.],       [  20.,   72.,    8.],       [ -63.,   44.,    4.],       [ -64.,  -50.,    2.],       [  22.,  -77.,    7.],       [  86.,    0.,    5.],       [  23.,   83.,    4.],       [ -77.,   57.,    2.],       [ -76.,  -57.,    9.],       [  24.,  -87.,    5.],       [  99.,   -2.,    7.],       [  26.,   99.,   10.],       [ -85.,   59.,    1.],       [ -79.,  -60.,    1.],       [  27.,  -93.,    1.],       [  52.,    2.,    6.],       [  11.,   44.,   11.],       [ -45.,   25.,    7.],       [ -46.,  -25.,    7.],       [  11.,  -52.,   11.],       [  61.,    4.,   11.],       [  19.,   54.,   10.],       [ -51.,   35.,   15.],       [ -48.,  -40.,   12.],       [  18.,  -58.,   16.],       [  65.,    1.,   15.],       [  18.,   70.,    7.],       [ -61.,   36.,    6.],       [ -53.,  -39.,   11.],       [  17.,  -67.,   15.],       [  84.,    1.,    8.],       [  23.,   74.,    6.],       [ -67.,   46.,   13.],       [ -62.,  -44.,   16.],       [  20.,  -75.,    7.],       [  86.,   -3.,   15.],       [  23.,   83.,   14.],       [ -74.,   56.,    8.],       [ -76.,  -49.,    6.],       [  23.,  -88.,    8.],       [ 101.,    0.,   10.],       [  35.,   98.,   13.],       [ -83.,   61.,    6.],       [ -80.,  -59.,   15.],       [  33.,  -99.,   11.],       [  50.,    3.,   14.],       [  12.,   50.,   14.],       [ -42.,   27.,   12.],       [ -38.,  -34.,   18.],       [  15.,  -51.,   16.],       [  61.,   -5.,   12.],       [  15.,   54.,   16.],       [ -51.,   30.,   14.],       [ -44.,  -32.,   15.],       [  18.,  -53.,   15.],       [  67.,    4.,   20.],       [  24.,   68.,   14.],       [ -58.,   41.,   16.],       [ -57.,  -44.,   19.],       [  26.,  -68.,   18.],       [  76.,   -4.,   18.],       [  19.,   79.,   18.],       [ -69.,   47.,   15.],       [ -69.,  -49.,   18.],       [  23.,  -76.,   17.],       [  93.,   -1.,   19.],       [  26.,   83.,   19.],       [ -74.,   53.,   19.],       [ -75.,  -50.,   16.],       [  32.,  -86.,   17.],       [ 103.,   -2.,   14.],       [  30.,   94.,   19.],       [ -78.,   53.,   13.],       [ -83.,  -59.,   20.],       [  34.,  -98.,   19.],       [  52.,   -1.,   24.],       [  11.,   49.,   20.],       [ -39.,   30.,   26.],       [ -43.,  -29.,   26.],       [  17.,  -49.,   21.],       [  58.,   -2.,   21.],       [  17.,   57.,   26.],       [ -51.,   38.,   21.],       [ -45.,  -35.,   19.],       [  20.,  -59.,   20.],       [  74.,   -3.,   26.],       [  18.,   69.,   21.],       [ -60.,   37.,   21.],       [ -53.,  -44.,   22.],       [  21.,  -69.,   22.],       [  75.,   -2.,   25.],       [  23.,   74.,   22.],       [ -66.,   48.,   20.],       [ -65.,  -48.,   25.],       [  26.,  -79.,   21.],       [  86.,    3.,   22.],       [  27.,   83.,   18.],       [ -70.,   52.,   26.],       [ -73.,  -56.,   26.],       [  29.,  -88.,   23.],       [ 101.,   -1.,   21.],       [  29.,   93.,   18.],       [ -78.,   61.,   25.],       [ -81.,  -58.,   26.],       [  29.,  -95.,   25.],       [  51.,   -2.,   25.],       [  10.,   43.,   31.],       [ -43.,   33.,   30.],       [ -45.,  -27.,   30.],       [  11.,  -53.,   30.],       [  64.,   -2.,   28.],       [  17.,   52.,   24.],       [ -45.,   33.,   26.],       [ -53.,  -36.,   27.],       [  18.,  -60.,   25.],       [  73.,    4.,   25.],       [  18.,   71.,   26.],       [ -61.,   37.,   32.],       [ -57.,  -42.,   26.],       [  16.,  -62.,   26.],       [  81.,    3.,   25.],       [  20.,   78.,   24.],       [ -63.,   43.,   32.],       [ -70.,  -52.,   33.],       [  20.,  -79.,   31.],       [  94.,    1.,   25.],       [  23.,   85.,   24.],       [ -76.,   54.,   30.],       [ -71.,  -56.,   29.],       [  27.,  -85.,   32.],       [ 104.,    0.,   31.],       [  32.,   94.,   32.],       [ -82.,   59.,   30.],       [ -80.,  -60.,   25.],       [  27.,  -96.,   25.],       [  53.,    2.,   38.],       [  19.,   49.,   38.],       [ -44.,   26.,   35.],       [ -40.,  -26.,   35.],       [  18.,  -45.,   32.],       [  62.,    0.,   35.],       [  15.,   58.,   33.],       [ -46.,   31.,   30.],       [ -44.,  -36.,   33.],       [  18.,  -57.,   38.],       [  71.,    2.,   30.],       [  21.,   67.,   36.],       [ -53.,   41.,   37.],       [ -54.,  -39.,   38.],       [  19.,  -68.,   33.],       [  81.,    2.,   32.],       [  24.,   75.,   38.],       [ -66.,   47.,   35.],       [ -67.,  -50.,   33.],       [  24.,  -72.,   36.],       [  87.,   -1.,   32.],       [  28.,   83.,   38.],       [ -70.,   50.,   32.],       [ -77.,  -56.,   30.],       [  28.,  -83.,   39.],       [ 102.,   -5.,   29.],       [  27.,   93.,   29.],       [ -76.,   62.,   38.],       [ -79.,  -60.,   34.],       [  26.,  -95.,   32.],       [  51.,    1.,   35.],       [  19.,   44.,   42.],       [ -45.,   32.,   36.],       [ -39.,  -34.,   39.],       [  19.,  -51.,   39.],       [  63.,   -2.,   41.],       [  16.,   59.,   44.],       [ -53.,   32.,   36.],       [ -50.,  -31.,   35.],       [  15.,  -55.,   40.],       [  66.,   -2.,   36.],       [  25.,   64.,   36.],       [ -54.,   43.,   36.],       [ -62.,  -45.,   41.],       [  25.,  -63.,   44.],       [  78.,    1.,   43.],       [  24.,   78.,   38.],       [ -64.,   47.,   36.],       [ -67.,  -46.,   35.],       [  25.,  -80.,   41.],       [  86.,    1.,   36.],       [  29.,   81.,   37.],       [ -71.,   57.,   38.],       [ -70.,  -56.,   41.],       [  26.,  -84.,   36.],       [  98.,    1.,   36.],       [  29.,   94.,   40.],       [ -78.,   59.,   44.],       [ -77.,  -60.,   39.],       [  32.,  -98.,   40.]])
        basis0 = BSplineBasis(3, np.array([-2.1, -1.3,  0. ,  1.2,  1.6,  2.9,  3.7,  5. ,  6.2,  6.6]),1)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  2.3,  3. ,  3. ,  3. ,  3. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  2.2,  3. ,  4.1,  5. ,  5. ,  5. ,
        5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 7.3,  6.3,  6.6])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 7.300000
        pt2[...,1] -= 6.300000
        pt2[...,2] -= 6.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p444_C1_periodic(self):
        controlpoints = np.array([[  52.,    3.,   -2.],       [  33.,   34.,    3.],       [   4.,   47.,   -2.],       [ -36.,   30.,   -5.],       [ -49.,   -3.,   -5.],       [ -37.,  -36.,   -5.],       [   3.,  -52.,    2.],       [  37.,  -33.,   -3.],       [  62.,    4.,   -4.],       [  44.,   42.,    0.],       [   4.,   59.,    3.],       [ -45.,   37.,   -5.],       [ -64.,    0.,   -5.],       [ -40.,  -39.,    1.],       [  -5.,  -59.,    3.],       [  38.,  -40.,    0.],       [  65.,   -5.,    3.],       [  42.,   43.,   -1.],       [  -4.,   62.,    4.],       [ -43.,   50.,   -2.],       [ -69.,    4.,   -1.],       [ -46.,  -50.,    1.],       [  -5.,  -68.,   -5.],       [  42.,  -45.,    3.],       [  78.,    1.,   -4.],       [  48.,   51.,   -4.],       [   3.,   75.,    3.],       [ -53.,   52.,    2.],       [ -74.,   -3.,    0.],       [ -52.,  -50.,   -3.],       [   3.,  -79.,    4.],       [  56.,  -55.,    1.],       [  82.,    0.,    1.],       [  61.,   57.,   -3.],       [   1.,   87.,    2.],       [ -56.,   57.,   -5.],       [ -88.,   -3.,   -1.],       [ -64.,  -58.,    2.],       [   4.,  -83.,    4.],       [  55.,  -62.,   -4.],       [  87.,    0.,    4.],       [  60.,   61.,   -1.],       [   3.,   95.,    4.],       [ -62.,   67.,   -4.],       [ -95.,    2.,    1.],       [ -62.,  -70.,    4.],       [  -3.,  -91.,   -1.],       [  69.,  -65.,   -2.],       [ 102.,    3.,    2.],       [  69.,   73.,    4.],       [   4.,  104.,    2.],       [ -75.,   72.,    3.],       [-101.,    1.,   -4.],       [ -67.,  -68.,    1.],       [  -2.,  -99.,   -5.],       [  67.,  -68.,   -2.],       [  51.,   -2.,    3.],       [  32.,   37.,    9.],       [   2.,   53.,   12.],       [ -33.,   40.,    3.],       [ -49.,   -1.,    3.],       [ -37.,  -38.,   11.],       [   2.,  -47.,    6.],       [  33.,  -39.,    4.],       [  56.,    2.,    3.],       [  38.,   44.,    6.],       [  -5.,   54.,    6.],       [ -42.,   45.,    4.],       [ -56.,    2.,    7.],       [ -45.,  -38.,    8.],       [   3.,  -62.,    9.],       [  42.,  -39.,   12.],       [  64.,   -1.,    6.],       [  44.,   42.,    8.],       [   4.,   66.,    8.],       [ -45.,   48.,    5.],       [ -66.,   -5.,    9.],       [ -50.,  -50.,   11.],       [  -5.,  -64.,    7.],       [  42.,  -50.,    6.],       [  76.,    1.,    6.],       [  48.,   48.,    6.],       [   0.,   70.,    8.],       [ -52.,   53.,    7.],       [ -79.,   -3.,    8.],       [ -53.,  -56.,   10.],       [  -5.,  -73.,    3.],       [  52.,  -56.,   12.],       [  85.,   -1.,   12.],       [  55.,   58.,    6.],       [   4.,   83.,    4.],       [ -57.,   54.,   11.],       [ -82.,    1.,    6.],       [ -58.,  -58.,    7.],       [  -4.,  -83.,    6.],       [  61.,  -61.,    8.],       [  91.,   -1.,    3.],       [  66.,   62.,    4.],       [   1.,   92.,    6.],       [ -68.,   66.,   12.],       [ -95.,   -2.,   11.],       [ -67.,  -68.,    4.],       [  -5.,  -89.,    7.],       [  68.,  -67.,    7.],       [  97.,    0.,    3.],       [  66.,   73.,    9.],       [   0.,  103.,    3.],       [ -75.,   70.,    7.],       [-100.,   -2.,    7.],       [ -67.,  -71.,   10.],       [   0.,  -97.,    8.],       [  68.,  -69.,    3.],       [  50.,    0.,   19.],       [  32.,   36.,   15.],       [  -4.,   48.,   18.],       [ -34.,   31.,   17.],       [ -50.,   -3.,   13.],       [ -34.,  -33.,   16.],       [  -3.,  -48.,   19.],       [  39.,  -38.,   15.],       [  59.,    1.,   19.],       [  38.,   38.,   12.],       [  -1.,   58.,   16.],       [ -39.,   44.,   19.],       [ -60.,    1.,   11.],       [ -46.,  -41.,   18.],       [  -2.,  -62.,   14.],       [  38.,  -46.,   15.],       [  68.,    4.,   17.],       [  49.,   42.,   20.],       [  -1.,   67.,   20.],       [ -44.,   47.,   12.],       [ -69.,   -2.,   16.],       [ -44.,  -49.,   14.],       [   4.,  -67.,   16.],       [  45.,  -52.,   16.],       [  79.,   -4.,   19.],       [  53.,   49.,   13.],       [  -5.,   75.,   20.],       [ -56.,   51.,   18.],       [ -74.,   -5.,   13.],       [ -52.,  -55.,   16.],       [  -5.,  -72.,   11.],       [  56.,  -57.,   15.],       [  85.,    3.,   12.],       [  61.,   55.,   13.],       [   4.,   87.,   11.],       [ -64.,   57.,   18.],       [ -81.,    1.,   12.],       [ -57.,  -55.,   18.],       [  -2.,  -86.,   15.],       [  59.,  -57.,   14.],       [  90.,   -3.,   17.],       [  59.,   69.,   19.],       [  -3.,   92.,   12.],       [ -68.,   61.,   19.],       [ -94.,    0.,   13.],       [ -69.,  -63.,   12.],       [   0.,  -91.,   12.],       [  66.,  -62.,   18.],       [  97.,   -3.,   20.],       [  71.,   72.,   16.],       [   1.,   99.,   16.],       [ -67.,   75.,   19.],       [-105.,   -2.,   19.],       [ -70.,  -75.,   13.],       [  -3., -102.,   14.],       [  67.,  -71.,   14.],       [  53.,   -3.,   26.],       [  35.,   35.,   19.],       [   3.,   45.,   27.],       [ -35.,   36.,   21.],       [ -49.,   -1.,   22.],       [ -31.,  -37.,   24.],       [   3.,  -48.,   21.],       [  38.,  -32.,   20.],       [  56.,   -5.,   25.],       [  44.,   42.,   19.],       [   0.,   62.,   19.],       [ -41.,   44.,   23.],       [ -60.,    1.,   21.],       [ -42.,  -46.,   19.],       [   0.,  -55.,   25.],       [  44.,  -44.,   25.],       [  64.,    1.,   23.],       [  43.,   48.,   25.],       [  -2.,   64.,   27.],       [ -43.,   44.,   26.],       [ -70.,    4.,   19.],       [ -48.,  -44.,   19.],       [  -4.,  -63.,   25.],       [  46.,  -51.,   28.],       [  77.,    3.,   26.],       [  53.,   56.,   21.],       [  -4.,   75.,   19.],       [ -52.,   54.,   27.],       [ -77.,   -1.,   24.],       [ -52.,  -54.,   22.],       [  -1.,  -78.,   22.],       [  55.,  -58.,   25.],       [  81.,   -3.,   22.],       [  62.,   58.,   26.],       [   3.,   79.,   24.],       [ -64.,   63.,   22.],       [ -88.,   -2.,   24.],       [ -56.,  -58.,   19.],       [  -1.,  -81.,   23.],       [  59.,  -60.,   21.],       [  93.,   -4.,   24.],       [  61.,   68.,   25.],       [  -1.,   93.,   28.],       [ -70.,   69.,   24.],       [ -95.,   -5.,   22.],       [ -68.,  -61.,   20.],       [   0.,  -88.,   23.],       [  60.,  -61.,   27.],       [  97.,   -1.,   23.],       [  74.,   72.,   28.],       [   4.,   96.,   25.],       [ -69.,   73.,   25.],       [-103.,   -2.,   19.],       [ -74.,  -67.,   25.],       [   4., -104.,   19.],       [  67.,  -75.,   19.],       [  49.,    0.,   32.],       [  39.,   30.,   27.],       [  -2.,   47.,   35.],       [ -38.,   37.,   30.],       [ -47.,   -5.,   35.],       [ -32.,  -36.,   34.],       [  -5.,  -47.,   30.],       [  40.,  -33.,   36.],       [  60.,   -5.,   34.],       [  36.,   39.,   27.],       [  -3.,   60.,   27.],       [ -46.,   42.,   28.],       [ -58.,    1.,   33.],       [ -41.,  -42.,   33.],       [  -1.,  -62.,   27.],       [  38.,  -41.,   28.],       [  67.,   -5.,   33.],       [  45.,   49.,   29.],       [   2.,   68.,   33.],       [ -50.,   50.,   33.],       [ -63.,   -3.,   31.],       [ -44.,  -50.,   28.],       [  -2.,  -70.,   34.],       [  48.,  -50.,   27.],       [  77.,   -5.,   27.],       [  48.,   54.,   35.],       [  -1.,   70.,   27.],       [ -50.,   48.,   30.],       [ -78.,   -1.,   35.],       [ -51.,  -54.,   29.],       [  -2.,  -73.,   33.],       [  50.,  -53.,   31.],       [  78.,   -5.,   32.],       [  62.,   57.,   28.],       [  -3.,   80.,   27.],       [ -57.,   61.,   36.],       [ -88.,    1.,   30.],       [ -55.,  -63.,   30.],       [   0.,  -82.,   28.],       [  62.,  -64.,   27.],       [  87.,    2.,   32.],       [  61.,   65.,   32.],       [   3.,   87.,   32.],       [ -67.,   65.,   29.],       [ -93.,   -2.,   28.],       [ -69.,  -66.,   33.],       [  -3.,  -94.,   32.],       [  69.,  -69.,   28.],       [ 101.,    2.,   31.],       [  66.,   72.,   27.],       [   3.,   97.,   29.],       [ -76.,   66.,   36.],       [ -97.,    2.,   34.],       [ -74.,  -68.,   36.],       [   3., -102.,   35.],       [  67.,  -69.,   36.],       [  54.,    2.,   39.],       [  30.,   35.,   39.],       [   4.,   49.,   42.],       [ -31.,   32.,   36.],       [ -53.,    0.,   36.],       [ -37.,  -37.,   35.],       [  -2.,  -52.,   38.],       [  31.,  -39.,   38.],       [  57.,   -2.,   43.],       [  44.,   37.,   35.],       [  -4.,   63.,   44.],       [ -44.,   45.,   42.],       [ -61.,    4.,   36.],       [ -46.,  -41.,   38.],       [   3.,  -58.,   44.],       [  39.,  -42.,   36.],       [  63.,    2.,   35.],       [  51.,   46.,   40.],       [   2.,   67.,   38.],       [ -49.,   46.,   38.],       [ -70.,   -4.,   43.],       [ -52.,  -48.,   43.],       [  -4.,  -67.,   42.],       [  44.,  -51.,   40.],       [  76.,   -1.,   38.],       [  55.,   54.,   40.],       [  -1.,   79.,   38.],       [ -52.,   48.,   35.],       [ -76.,    3.,   42.],       [ -56.,  -53.,   36.],       [   0.,  -80.,   35.],       [  56.,  -57.,   39.],       [  78.,    4.,   38.],       [  63.,   55.,   38.],       [   0.,   80.,   43.],       [ -60.,   58.,   38.],       [ -86.,   -5.,   38.],       [ -63.,  -62.,   40.],       [   2.,  -84.,   39.],       [  54.,  -56.,   41.],       [  89.,    2.,   39.],       [  69.,   64.,   41.],       [  -3.,   95.,   36.],       [ -67.,   62.,   42.],       [ -91.,   -1.,   43.],       [ -69.,  -68.,   42.],       [  -2.,  -88.,   37.],       [  64.,  -70.,   43.],       [ 100.,   -1.,   44.],       [  68.,   66.,   41.],       [   4.,  102.,   41.],       [ -74.,   67.,   43.],       [-102.,   -1.,   41.],       [ -68.,  -76.,   40.],       [  -3., -103.,   36.],       [  71.,  -73.,   41.]])
        basis0 = BSplineBasis(4, np.array([-2.3, -1. ,  0. ,  0. ,  1. ,  1.7,  2.7,  4. ,  4.7,  6. ,  7. ,
        7. ,  8. ,  8.7]),1)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  1.9,  3.1,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([ 4.1,  6.6,  4. ])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 4.100000
        pt2[...,1] /= 6.600000
        pt2[...,2] /= 4.000000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p7_rational(self):
        controlpoints = np.array([[  4. ,   2. ,   1.1],
       [ 14. ,  -2. ,   1. ],
       [ 26. ,   2. ,   1. ],
       [ 41. ,  -5. ,   0.8],
       [ 49. ,   4. ,   0.5],
       [ 58. ,   1. ,   0.7],
       [ 78. ,  -2. ,   0.7],
       [ 86. ,   0. ,   0.7],
       [ 96. ,   4. ,   1.3]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2.3,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 1.5,  1.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 1.500000
        pt2[...,1] -= 1.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p7_rational(self):
        controlpoints = np.array([[  0. ,  -2. ,   1.2],
       [ 17. ,  -1. ,   0.7],
       [ 22. ,   2. ,   0.7],
       [ 37. ,  -3. ,   0.5],
       [ 54. ,  -1. ,   0.8],
       [ 64. ,   2. ,   1.3],
       [ 77. ,   1. ,   0.8],
       [ 86. ,   2. ,   1.5],
       [ 95. ,   0. ,   0.7]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.7,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 7.5,  8.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 7.500000
        pt2[...,1] /= 8.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p65_rational(self):
        controlpoints = np.array([[   0. ,   -2. ,    0.7],       [  15. ,    2. ,    1. ],       [  25. ,   -3. ,    1. ],       [  31. ,    4. ,    0.5],       [  41. ,    0. ,    1.3],       [  55. ,   -5. ,    1.5],       [  68. ,    1. ,    1.2],       [  80. ,   -4. ,    0.8],       [  90. ,    0. ,    0.9],       [  97. ,   -3. ,    0.7],       [   3. ,   11. ,    1. ],       [  15. ,   11. ,    0.5],       [  19. ,    7. ,    0.8],       [  36. ,   10. ,    1. ],       [  41. ,   14. ,    0.5],       [  51. ,   15. ,    0.6],       [  69. ,    6. ,    1.1],       [  77. ,    9. ,    1.1],       [  85. ,    9. ,    1.4],       [ 100. ,   13. ,    0.6],       [  -3. ,   21. ,    1. ],       [   7. ,   23. ,    1.3],       [  19. ,   25. ,    1.3],       [  31. ,   25. ,    1.2],       [  40. ,   24. ,    1. ],       [  56. ,   26. ,    1.3],       [  67. ,   18. ,    0.6],       [  76. ,   23. ,    1.3],       [  88. ,   19. ,    1.1],       [  95. ,   27. ,    0.9],       [   3. ,   30. ,    1. ],       [  12. ,   30. ,    1.2],       [  23. ,   36. ,    1.1],       [  33. ,   30. ,    0.8],       [  47. ,   32. ,    1.4],       [  55. ,   31. ,    0.8],       [  66. ,   31. ,    0.6],       [  80. ,   28. ,    1.3],       [  93. ,   31. ,    1. ],       [ 104. ,   30. ,    1.1],       [   2. ,   41. ,    1.4],       [   8. ,   48. ,    1.4],       [  23. ,   48. ,    1.2],       [  28. ,   43. ,    0.9],       [  39. ,   46. ,    0.7],       [  56. ,   48. ,    1.3],       [  68. ,   43. ,    1.2],       [  74. ,   43. ,    1.4],       [  85. ,   42. ,    1.4],       [ 104. ,   48. ,    1.4],       [   3. ,   54. ,    1.1],       [   9. ,   54. ,    1.4],       [  23. ,   55. ,    1.4],       [  28. ,   52. ,    0.9],       [  47. ,   53. ,    0.6],       [  59. ,   55. ,    0.8],       [  68. ,   51. ,    0.8],       [  75. ,   51. ,    1.4],       [  88. ,   51. ,    0.6],       [ 104. ,   58. ,    1.4],       [  -2. ,   63. ,    0.8],       [   6. ,   67. ,    0.7],       [  25. ,   67. ,    1.1],       [  37. ,   61. ,    1.2],       [  47. ,   62. ,    0.9],       [  53. ,   64. ,    1.5],       [  69. ,   63. ,    0.5],       [  73. ,   62. ,    1.1],       [  87. ,   65. ,    1.1],       [  99. ,   66. ,    1.1],       [   1. ,   82. ,    1.1],       [   8. ,   81. ,    0.9],       [  20. ,   79. ,    1. ],       [  31. ,   73. ,    0.8],       [  47. ,   81. ,    1.3],       [  56. ,   77. ,    0.8],       [  63. ,   81. ,    1.3],       [  82. ,   79. ,    1. ],       [  87. ,   73. ,    1.3],       [  98. ,   77. ,    1.4],       [   3. ,   88. ,    1.1],       [   6. ,   92. ,    0.8],       [  17. ,   84. ,    1.1],       [  31. ,   85. ,    0.5],       [  49. ,   90. ,    1.3],       [  56. ,   93. ,    1. ],       [  71. ,   92. ,    0.5],       [  77. ,   84. ,    1.4],       [  88. ,   84. ,    0.6],       [  95. ,   84. ,    1.4],       [   2. ,   95. ,    1.1],       [  15. ,  104. ,    1.2],       [  22. ,   95. ,    0.7],       [  29. ,  100. ,    0.8],       [  47. ,   99. ,    0.9],       [  57. ,  103. ,    1.4],       [  63. ,   95. ,    1.3],       [  78. ,  100. ,    1.4],       [  89. ,   99. ,    1.2],       [  97. ,  103. ,    1.5]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.8,  3.3,  3.7,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.3,  2.9,  4.2,  4.7,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 9.6,  2.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 9.600000
        pt2[...,1] -= 2.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p75_rational(self):
        controlpoints = np.array([[  -3. ,    4. ,    0.6],       [   9. ,    0. ,    0.6],       [  28. ,   -4. ,    1.3],       [  37. ,    1. ,    0.9],       [  54. ,   -3. ,    1.5],       [  59. ,    3. ,    0.5],       [  70. ,    2. ,    0.6],       [  89. ,    4. ,    1.4],       [  97. ,    2. ,    0.6],       [  -1. ,    8. ,    1.2],       [  15. ,   10. ,    1.2],       [  21. ,   14. ,    0.6],       [  37. ,    9. ,    0.9],       [  49. ,   12. ,    1.4],       [  59. ,   15. ,    0.9],       [  74. ,   11. ,    0.7],       [  89. ,    8. ,    1.5],       [ 103. ,   13. ,    0.7],       [   3. ,   24. ,    1.5],       [  11. ,   19. ,    0.9],       [  21. ,   22. ,    1.3],       [  39. ,   24. ,    1.2],       [  46. ,   19. ,    0.8],       [  63. ,   23. ,    1. ],       [  72. ,   23. ,    1.2],       [  86. ,   25. ,    0.8],       [ 102. ,   17. ,    1.5],       [  -2. ,   29. ,    0.7],       [  10. ,   31. ,    0.8],       [  26. ,   38. ,    0.9],       [  32. ,   37. ,    0.7],       [  49. ,   33. ,    1.2],       [  58. ,   36. ,    1. ],       [  73. ,   30. ,    1.4],       [  91. ,   37. ,    0.9],       [  95. ,   29. ,    1.5],       [  -3. ,   41. ,    1.1],       [  17. ,   42. ,    0.7],       [  27. ,   44. ,    1.1],       [  33. ,   47. ,    1.2],       [  47. ,   39. ,    1.5],       [  57. ,   48. ,    0.6],       [  70. ,   39. ,    1.3],       [  91. ,   42. ,    0.7],       [  98. ,   46. ,    1.2],       [   0. ,   52. ,    1. ],       [   8. ,   60. ,    0.6],       [  23. ,   52. ,    0.6],       [  38. ,   51. ,    0.9],       [  50. ,   60. ,    0.6],       [  64. ,   52. ,    1.3],       [  76. ,   57. ,    1.4],       [  89. ,   58. ,    0.5],       [  98. ,   53. ,    1.3],       [   3. ,   66. ,    0.8],       [   8. ,   67. ,    0.6],       [  21. ,   66. ,    1.2],       [  41. ,   68. ,    1.1],       [  50. ,   68. ,    0.7],       [  64. ,   62. ,    1.2],       [  77. ,   68. ,    1.4],       [  90. ,   71. ,    0.8],       [ 103. ,   69. ,    1. ],       [   2. ,   74. ,    0.8],       [  12. ,   79. ,    1. ],       [  26. ,   75. ,    1. ],       [  39. ,   76. ,    0.6],       [  48. ,   74. ,    1.2],       [  59. ,   75. ,    0.8],       [  70. ,   75. ,    0.9],       [  89. ,   75. ,    1.4],       [ 101. ,   82. ,    1.2],       [   2. ,   92. ,    0.5],       [  16. ,   93. ,    1.1],       [  24. ,   86. ,    0.6],       [  41. ,   90. ,    0.6],       [  49. ,   85. ,    0.6],       [  65. ,   91. ,    0.8],       [  76. ,   89. ,    1.3],       [  82. ,   91. ,    1.2],       [  97. ,   85. ,    1.4],       [  -4. ,   99. ,    0.9],       [  13. ,  100. ,    1.4],       [  29. ,   96. ,    1.3],       [  35. ,  102. ,    0.9],       [  49. ,  102. ,    1.3],       [  62. ,   97. ,    1.1],       [  77. ,  101. ,    0.9],       [  83. ,  100. ,    1. ],       [ 101. ,  100. ,    0.9]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.2,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.2,  2.7,  4.2,  4.7,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 2.7,  5.2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 2.700000
        pt2[...,1] /= 5.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p6_rational_C0_periodic(self):
        controlpoints = np.array([[ 104. ,    4. ,    0.8],
       [  88. ,   54. ,    0.9],
       [  40. ,   86. ,    0.9],
       [ -18. ,   94. ,    1.1],
       [ -65. ,   75. ,    1. ],
       [ -96. ,   25. ,    1.4],
       [ -92. ,  -32. ,    1. ],
       [ -64. ,  -78. ,    0.9],
       [ -19. , -102. ,    1. ],
       [  41. ,  -91. ,    0.7],
       [  80. ,  -55. ,    0.6]])
        basis0 = BSplineBasis(6, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2.7,  4.4,  5.3,
        5.7,  7. ,  7. ,  7. ,  7. ,  7. ,  8.1]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 5.4,  4. ,  8.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 5.400000
        pt2[...,1] -= 4.000000
        pt2[...,2] -= 8.700000
        allZero           = pt2
        allZero[...,:-1] -= pt
        self.assertAlmostEqual(np.linalg.norm(allZero), 0.0)

    def test_scale_curve_2D_p5_rational_C0_periodic(self):
        controlpoints = np.array([[  98. ,    0. ,    1. ],
       [  77. ,   56. ,    1.5],
       [  29. ,  100. ,    1.2],
       [ -30. ,   97. ,    0.7],
       [ -81. ,   56. ,    0.7],
       [-100. ,   -1. ,    1.2],
       [ -83. ,  -64. ,    0.7],
       [ -30. ,  -93. ,    0.7],
       [  27. , -100. ,    0.8],
       [  84. ,  -61. ,    0.6]])
        basis0 = BSplineBasis(5, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.1,  3. ,  4.1,  4.9,  6. ,
        7. ,  7. ,  7. ,  7. ,  8.3]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 5.4,  2.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 5.400000
        pt2[...,1] /= 2.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p57_rational_C0_periodic(self):
        controlpoints = np.array([[  59. ,    4. ,    1.4],       [  41. ,   42. ,    1.5],       [   8. ,   58. ,    0.7],       [ -32. ,   47. ,    1.4],       [ -57. ,   20. ,    1.4],       [ -61. ,  -24. ,    1.3],       [ -31. ,  -51. ,    0.7],       [   8. ,  -59. ,    1.1],       [  49. ,  -38. ,    1.5],       [  67. ,   -3. ,    0.6],       [  53. ,   41. ,    0.8],       [  13. ,   66. ,    1.1],       [ -30. ,   58. ,    1.1],       [ -61. ,   21. ,    1. ],       [ -61. ,  -24. ,    1. ],       [ -35. ,  -58. ,    0.8],       [  10. ,  -64. ,    0.7],       [  48. ,  -43. ,    1. ],       [  69. ,   -5. ,    0.5],       [  56. ,   47. ,    1.2],       [  16. ,   71. ,    0.7],       [ -39. ,   56. ,    1.2],       [ -66. ,   22. ,    0.5],       [ -62. ,  -22. ,    1.3],       [ -33. ,  -60. ,    1.1],       [  11. ,  -64. ,    0.5],       [  52. ,  -47. ,    1.5],       [  77. ,    3. ,    0.8],       [  53. ,   50. ,    0.9],       [  11. ,   72. ,    1.3],       [ -35. ,   62. ,    0.9],       [ -68. ,   27. ,    1. ],       [ -67. ,  -30. ,    1.1],       [ -42. ,  -63. ,    0.9],       [  11. ,  -74. ,    1.1],       [  60. ,  -47. ,    1.5],       [  75. ,    0. ,    0.6],       [  60. ,   49. ,    0.8],       [  10. ,   76. ,    0.9],       [ -39. ,   64. ,    0.8],       [ -69. ,   27. ,    0.6],       [ -74. ,  -32. ,    0.9],       [ -40. ,  -72. ,    1.2],       [  15. ,  -75. ,    1.2],       [  54. ,  -47. ,    1.4],       [  80. ,    0. ,    0.6],       [  67. ,   56. ,    1. ],       [  15. ,   79. ,    1.3],       [ -46. ,   67. ,    1.2],       [ -76. ,   27. ,    0.7],       [ -80. ,  -26. ,    1.1],       [ -39. ,  -73. ,    1.1],       [  16. ,  -85. ,    0.5],       [  62. ,  -53. ,    1.3],       [  86. ,   -2. ,    0.5],       [  69. ,   59. ,    1.4],       [  15. ,   89. ,    0.9],       [ -46. ,   77. ,    1.4],       [ -79. ,   32. ,    0.7],       [ -86. ,  -30. ,    1.1],       [ -39. ,  -75. ,    0.6],       [  18. ,  -83. ,    0.7],       [  70. ,  -59. ,    1.4],       [  93. ,    2. ,    1.2],       [  73. ,   58. ,    0.6],       [  11. ,   89. ,    0.6],       [ -48. ,   79. ,    1.3],       [ -86. ,   30. ,    1.5],       [ -89. ,  -27. ,    1.5],       [ -43. ,  -81. ,    1.3],       [  15. ,  -89. ,    0.9],       [  70. ,  -60. ,    0.7],       [  90. ,   -3. ,    1.1],       [  72. ,   66. ,    1. ],       [  11. ,   89. ,    0.6],       [ -52. ,   86. ,    1.1],       [ -86. ,   30. ,    1.2],       [ -85. ,  -30. ,    0.9],       [ -48. ,  -86. ,    0.7],       [  20. ,  -99. ,    0.8],       [  78. ,  -57. ,    1.4],       [  96. ,   -1. ,    0.8],       [  76. ,   63. ,    0.5],       [  19. ,  102. ,    1.1],       [ -47. ,   88. ,    1.1],       [ -94. ,   37. ,    1. ],       [ -92. ,  -40. ,    0.5],       [ -53. ,  -82. ,    1. ],       [  16. , -102. ,    0.9],       [  72. ,  -64. ,    1.2]])
        basis0 = BSplineBasis(5, np.array([-0.8,  0. ,  0. ,  0. ,  0. ,  1.4,  1.8,  3. ,  4.2,  5.2,  6. ,
        6. ,  6. ,  6. ,  7.4]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.1,  3. ,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 5.7,  7. ,  9.1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 5.700000
        pt2[...,1] -= 7.000000
        pt2[...,2] -= 9.100000
        allZero           = pt2
        allZero[...,:-1] -= pt
        self.assertAlmostEqual(np.linalg.norm(allZero), 0.0)

    def test_scale_surface_2D_p76_rational_C0_periodic(self):
        controlpoints = np.array([[  64. ,   -5. ,    1.2],       [  49. ,   37. ,    1.4],       [  23. ,   50. ,    1.1],       [ -11. ,   59. ,    1.3],       [ -43. ,   44. ,    1. ],       [ -59. ,   19. ,    0.6],       [ -62. ,  -20. ,    1.4],       [ -43. ,  -47. ,    1.3],       [  -7. ,  -64. ,    1.2],       [  29. ,  -54. ,    1.5],       [  47. ,  -33. ,    1.3],       [  66. ,    4. ,    0.8],       [  59. ,   32. ,    0.6],       [  26. ,   58. ,    0.9],       [  -9. ,   62. ,    1.3],       [ -45. ,   48. ,    0.9],       [ -59. ,   16. ,    1. ],       [ -63. ,  -18. ,    0.5],       [ -42. ,  -47. ,    1.5],       [ -14. ,  -66. ,    0.8],       [  24. ,  -63. ,    0.8],       [  51. ,  -39. ,    1.3],       [  66. ,   -4. ,    1.5],       [  60. ,   35. ,    0.9],       [  27. ,   63. ,    0.9],       [  -8. ,   67. ,    1.3],       [ -50. ,   55. ,    0.7],       [ -72. ,   18. ,    0.5],       [ -71. ,  -19. ,    1.4],       [ -43. ,  -53. ,    1.4],       [  -8. ,  -70. ,    1. ],       [  32. ,  -68. ,    0.7],       [  56. ,  -39. ,    1.1],       [  70. ,    0. ,    1. ],       [  61. ,   41. ,    0.8],       [  35. ,   66. ,    1. ],       [ -10. ,   74. ,    0.6],       [ -53. ,   59. ,    1.4],       [ -74. ,   22. ,    0.7],       [ -76. ,  -24. ,    1. ],       [ -51. ,  -55. ,    1.4],       [  -7. ,  -74. ,    1.2],       [  26. ,  -70. ,    1.2],       [  61. ,  -39. ,    1.3],       [  81. ,   -5. ,    0.6],       [  69. ,   47. ,    1.4],       [  33. ,   74. ,    1.2],       [  -8. ,   78. ,    0.8],       [ -58. ,   60. ,    0.5],       [ -72. ,   17. ,    1.3],       [ -77. ,  -23. ,    0.6],       [ -52. ,  -61. ,    0.6],       [ -13. ,  -81. ,    0.5],       [  36. ,  -70. ,    1.5],       [  67. ,  -47. ,    0.7],       [  89. ,    3. ,    0.9],       [  68. ,   43. ,    1.4],       [  31. ,   74. ,    0.6],       [ -15. ,   83. ,    1.2],       [ -52. ,   63. ,    1.1],       [ -78. ,   20. ,    0.9],       [ -80. ,  -26. ,    0.7],       [ -60. ,  -69. ,    1.1],       [ -10. ,  -83. ,    0.9],       [  31. ,  -78. ,    1.4],       [  71. ,  -42. ,    1.2],       [  94. ,    4. ,    0.8],       [  78. ,   44. ,    1.4],       [  39. ,   81. ,    0.7],       [ -14. ,   85. ,    1.1],       [ -64. ,   67. ,    1.4],       [ -85. ,   25. ,    1.3],       [ -83. ,  -28. ,    0.5],       [ -59. ,  -73. ,    1.2],       [ -15. ,  -93. ,    1.5],       [  41. ,  -81. ,    1.1],       [  76. ,  -45. ,    0.6],       [  93. ,    2. ,    1.4],       [  84. ,   49. ,    0.9],       [  39. ,   86. ,    1.1],       [ -14. ,   95. ,    1.4],       [ -64. ,   69. ,    1.3],       [ -96. ,   23. ,    1.1],       [ -97. ,  -32. ,    1.4],       [ -64. ,  -68. ,    1. ],       [ -16. ,  -95. ,    0.7],       [  38. ,  -88. ,    1.1],       [  79. ,  -51. ,    0.9],       [ 102. ,    0. ,    1.4],       [  87. ,   53. ,    1. ],       [  44. ,   87. ,    1. ],       [ -12. ,   98. ,    0.8],       [ -63. ,   80. ,    1.4],       [ -98. ,   27. ,    1.5],       [ -96. ,  -29. ,    0.6],       [ -62. ,  -81. ,    0.5],       [ -14. , -100. ,    0.7],       [  42. ,  -87. ,    0.7],       [  82. ,  -57. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([-0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.8,  3.3,  3.7,
        5.1,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6.9]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.9,  3.1,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.1,  4.1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.100000
        pt2[...,1] /= 4.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p5_rational_C1_periodic(self):
        controlpoints = np.array([[  98. ,   -1. ,    1.3],
       [  79. ,   65. ,    0.8],
       [  16. ,   97. ,    0.6],
       [ -53. ,   82. ,    0.9],
       [ -93. ,   36. ,    1. ],
       [ -92. ,  -38. ,    1.2],
       [ -55. ,  -91. ,    0.9],
       [  19. , -100. ,    0.8],
       [  80. ,  -63. ,    0.7]])
        basis0 = BSplineBasis(5, np.array([-1.9, -1. ,  0. ,  0. ,  0. ,  1.3,  2.3,  2.9,  4.3,  5.1,  6. ,
        7. ,  7. ,  7. ,  8.3,  9.3]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 0.4,  7. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 0.400000
        pt2[...,1] -= 7.000000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p5_rational_C1_periodic(self):
        controlpoints = np.array([[  96. ,    0. ,    1.4],
       [  60. ,   73. ,    1.2],
       [ -25. ,  101. ,    1. ],
       [ -91. ,   40. ,    0.8],
       [ -95. ,  -47. ,    0.7],
       [ -20. ,  -97. ,    0.7],
       [  65. ,  -75. ,    1. ]])
        basis0 = BSplineBasis(5, np.array([-2.1, -1. ,  0. ,  0. ,  0. ,  0.7,  2.4,  2.9,  4. ,  5. ,  5. ,
        5. ,  5.7,  7.4]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 4.6,  7.4])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.600000
        pt2[...,1] /= 7.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p76_rational_C1_periodic(self):
        controlpoints = np.array([[  61. ,   -1. ,    1. ],       [  54. ,   33. ,    1.2],       [  22. ,   50. ,    1.4],       [  -7. ,   56. ,    0.9],       [ -43. ,   41. ,    1.4],       [ -60. ,   17. ,    0.7],       [ -56. ,  -19. ,    1.3],       [ -36. ,  -47. ,    1.4],       [  -9. ,  -63. ,    1.3],       [  21. ,  -52. ,    1. ],       [  54. ,  -37. ,    1.4],       [  65. ,    0. ,    0.6],       [  55. ,   37. ,    1. ],       [  29. ,   61. ,    1.3],       [ -11. ,   59. ,    1.1],       [ -48. ,   50. ,    1.4],       [ -61. ,   13. ,    1.1],       [ -64. ,  -19. ,    0.8],       [ -38. ,  -50. ,    1. ],       [ -14. ,  -59. ,    0.6],       [  22. ,  -59. ,    0.7],       [  52. ,  -36. ,    0.7],       [  71. ,    0. ,    0.8],       [  59. ,   42. ,    0.8],       [  33. ,   62. ,    0.6],       [  -9. ,   68. ,    1.2],       [ -51. ,   51. ,    1. ],       [ -69. ,   19. ,    0.7],       [ -70. ,  -24. ,    1.3],       [ -45. ,  -55. ,    1. ],       [ -10. ,  -67. ,    0.8],       [  26. ,  -68. ,    1.2],       [  54. ,  -39. ,    1.4],       [  77. ,    3. ,    1. ],       [  63. ,   36. ,    0.8],       [  32. ,   63. ,    1.4],       [ -12. ,   76. ,    1. ],       [ -51. ,   56. ,    1.3],       [ -73. ,   20. ,    0.7],       [ -70. ,  -23. ,    1.2],       [ -52. ,  -52. ,    1.4],       [ -12. ,  -70. ,    0.8],       [  34. ,  -71. ,    0.9],       [  60. ,  -41. ,    0.9],       [  74. ,   -2. ,    1.3],       [  65. ,   41. ,    1. ],       [  32. ,   73. ,    0.9],       [ -16. ,   76. ,    0.5],       [ -54. ,   54. ,    1.2],       [ -70. ,   18. ,    0.7],       [ -75. ,  -20. ,    0.8],       [ -49. ,  -55. ,    1. ],       [ -12. ,  -76. ,    0.7],       [  27. ,  -67. ,    0.9],       [  69. ,  -42. ,    1. ],       [  78. ,   -3. ,    1. ],       [  67. ,   44. ,    1.5],       [  37. ,   74. ,    1. ],       [ -11. ,   83. ,    0.9],       [ -58. ,   63. ,    1.1],       [ -80. ,   26. ,    0.5],       [ -83. ,  -24. ,    1.3],       [ -55. ,  -64. ,    1.2],       [ -13. ,  -82. ,    1.3],       [  32. ,  -79. ,    0.6],       [  68. ,  -40. ,    1.2],       [  81. ,   -3. ,    0.8],       [  73. ,   45. ,    1.4],       [  33. ,   82. ,    1.4],       [ -14. ,   87. ,    1. ],       [ -59. ,   63. ,    0.8],       [ -81. ,   25. ,    1.2],       [ -84. ,  -20. ,    0.6],       [ -59. ,  -63. ,    0.8],       [ -15. ,  -88. ,    0.8],       [  33. ,  -79. ,    1. ],       [  75. ,  -51. ,    1. ],       [  95. ,    3. ,    0.9],       [  72. ,   53. ,    0.7],       [  36. ,   83. ,    1.1],       [ -11. ,   89. ,    0.9],       [ -61. ,   72. ,    0.9],       [ -91. ,   29. ,    1.3],       [ -83. ,  -24. ,    0.6],       [ -63. ,  -68. ,    1.3],       [ -14. ,  -89. ,    1. ],       [  35. ,  -87. ,    1.5],       [  73. ,  -46. ,    0.5],       [  92. ,    3. ,    0.9],       [  81. ,   55. ,    0.7],       [  44. ,   88. ,    1.1],       [ -16. ,   94. ,    1.5],       [ -58. ,   72. ,    0.6],       [ -88. ,   24. ,    1.1],       [ -87. ,  -24. ,    1.3],       [ -59. ,  -72. ,    0.5],       [ -19. ,  -99. ,    1.3],       [  35. ,  -88. ,    0.6],       [  75. ,  -55. ,    1. ],       [ 104. ,   -2. ,    1.4],       [  85. ,   49. ,    0.6],       [  36. ,   91. ,    0.8],       [ -13. ,   96. ,    0.7],       [ -61. ,   71. ,    1.4],       [-101. ,   25. ,    1.1],       [ -98. ,  -27. ,    0.6],       [ -65. ,  -73. ,    0.9],       [ -13. , -103. ,    0.9],       [  40. ,  -92. ,    1.5],       [  83. ,  -59. ,    0.9]])
        basis0 = BSplineBasis(7, np.array([-1.9, -0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.2,  3. ,  3.7,
        5.1,  6.1,  7. ,  7. ,  7. ,  7. ,  7. ,  7.8,  9.2]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.8,  3. ,  4.2,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 6.8,  7.5,  0.1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 6.800000
        pt2[...,1] -= 7.500000
        pt2[...,2] -= 0.100000
        allZero           = pt2
        allZero[...,:-1] -= pt
        self.assertAlmostEqual(np.linalg.norm(allZero), 0.0)

    def test_scale_surface_2D_p76_rational_C1_periodic(self):
        controlpoints = np.array([[ 59. ,   4. ,   0.6],       [ 46. ,  37. ,   1.4],       [ 10. ,  56. ,   1. ],       [-31. ,  51. ,   0.8],       [-54. ,  17. ,   1. ],       [-55. , -22. ,   1.4],       [-28. , -54. ,   1.4],       [ 15. , -62. ,   1.1],       [ 45. , -36. ,   1.2],       [ 66. ,  -5. ,   0.8],       [ 55. ,  41. ,   1. ],       [  8. ,  61. ,   1.3],       [-36. ,  53. ,   0.7],       [-59. ,  24. ,   0.7],       [-62. , -26. ,   0.8],       [-29. , -54. ,   1.2],       [ 11. , -64. ,   0.7],       [ 54. , -47. ,   1. ],       [ 71. ,  -1. ,   0.6],       [ 54. ,  45. ,   1. ],       [ 12. ,  67. ,   1.1],       [-36. ,  58. ,   1.3],       [-64. ,  22. ,   1.2],       [-72. , -26. ,   0.8],       [-35. , -59. ,   1.1],       [ 10. , -71. ,   1.1],       [ 54. , -44. ,   0.9],       [ 79. ,  -5. ,   1.5],       [ 58. ,  51. ,   0.6],       [  9. ,  75. ,   1.1],       [-38. ,  64. ,   0.8],       [-70. ,  27. ,   0.7],       [-75. , -29. ,   1.4],       [-44. , -70. ,   0.8],       [  8. , -76. ,   0.9],       [ 61. , -51. ,   1.2],       [ 78. ,   0. ,   0.9],       [ 62. ,  49. ,   0.5],       [ 18. ,  76. ,   0.7],       [-37. ,  67. ,   1.4],       [-80. ,  25. ,   0.7],       [-78. , -26. ,   0.5],       [-45. , -72. ,   1. ],       [  9. , -86. ,   0.9],       [ 64. , -55. ,   1.4],       [ 83. ,  -3. ,   0.9],       [ 63. ,  56. ,   0.7],       [ 14. ,  83. ,   1.2],       [-44. ,  75. ,   1.3],       [-79. ,  31. ,   0.9],       [-83. , -29. ,   1.5],       [-46. , -78. ,   1.4],       [ 16. , -87. ,   0.7],       [ 69. , -60. ,   0.8],       [ 96. ,   2. ,   0.9],       [ 76. ,  56. ,   1.4],       [ 11. ,  88. ,   1. ],       [-46. ,  77. ,   1. ],       [-93. ,  31. ,   1. ],       [-92. , -28. ,   0.9],       [-47. , -79. ,   1.3],       [ 12. , -93. ,   1.3],       [ 73. , -58. ,   1. ],       [ 96. ,   2. ,   0.7],       [ 72. ,  68. ,   0.7],       [ 16. ,  95. ,   1.1],       [-49. ,  86. ,   1.4],       [-99. ,  34. ,   1.2],       [-97. , -39. ,   0.7],       [-55. , -91. ,   0.8],       [ 15. , -96. ,   0.6],       [ 74. , -62. ,   1.2]])
        basis0 = BSplineBasis(7, np.array([-2.3, -0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.2,  2.7,  4.1,
        5. ,  5. ,  5. ,  5. ,  5. ,  5.7,  7.2]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.9,  3. ,  3. ,  3. ,
        3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 8.3,  7.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 8.300000
        pt2[...,1] /= 7.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p6(self):
        controlpoints = np.array([[  4.,  -2.],
       [  7.,   1.],
       [ 24.,  -5.],
       [ 37.,   1.],
       [ 46.,   2.],
       [ 55.,   3.],
       [ 68.,  -5.],
       [ 75.,   2.],
       [ 89.,   1.],
       [ 95.,   3.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.7,  3. ,  3.7,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 2.1,  0.4,  4.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 2.100000
        pt2[...,1] -= 0.400000
        pt2[...,2] -= 4.900000
        allZero           = pt2
        allZero[...,:-1] -= pt
        self.assertAlmostEqual(np.linalg.norm(allZero), 0.0)

    def test_scale_curve_2D_p7(self):
        controlpoints = np.array([[   2.,   -2.],
       [  14.,    4.],
       [  17.,    2.],
       [  22.,   -3.],
       [  40.,   -3.],
       [  44.,    3.],
       [  57.,   -1.],
       [  66.,   -3.],
       [  71.,    1.],
       [  79.,    4.],
       [  94.,    0.],
       [ 102.,   -1.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.1,  2.9,  4.2,
        5. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 4.6,  4.1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.600000
        pt2[...,1] /= 4.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p66(self):
        controlpoints = np.array([[  -2.,    0.],       [  14.,   -2.],       [  26.,    4.],       [  28.,    2.],       [  40.,   -5.],       [  54.,    1.],       [  67.,   -2.],       [  78.,   -4.],       [  91.,   -2.],       [ 101.,    2.],       [   1.,   18.],       [  15.,   13.],       [  19.,   10.],       [  30.,   12.],       [  39.,   17.],       [  54.,    9.],       [  71.,    9.],       [  73.,   14.],       [  87.,   18.],       [  96.,   10.],       [   0.,   24.],       [  14.,   26.],       [  21.,   24.],       [  36.,   26.],       [  48.,   25.],       [  56.,   30.],       [  62.,   32.],       [  79.,   30.],       [  85.,   25.],       [  98.,   27.],       [   1.,   41.],       [   9.,   45.],       [  24.,   38.],       [  28.,   41.],       [  47.,   39.],       [  57.,   40.],       [  68.,   39.],       [  74.,   43.],       [  88.,   45.],       [  98.,   39.],       [  -1.,   60.],       [   8.,   57.],       [  19.,   58.],       [  35.,   59.],       [  40.,   55.],       [  57.,   56.],       [  64.,   55.],       [  75.,   55.],       [  89.,   58.],       [ 103.,   55.],       [   0.,   72.],       [  13.,   75.],       [  21.,   72.],       [  31.,   74.],       [  48.,   70.],       [  50.,   69.],       [  68.,   76.],       [  78.,   66.],       [  93.,   74.],       [ 102.,   66.],       [  -2.,   85.],       [  15.,   83.],       [  23.,   88.],       [  33.,   84.],       [  39.,   87.],       [  55.,   86.],       [  63.,   86.],       [  73.,   85.],       [  88.,   89.],       [  98.,   89.],       [   3.,   96.],       [  14.,   98.],       [  26.,   97.],       [  33.,   95.],       [  46.,  101.],       [  59.,   98.],       [  70.,   97.],       [  73.,  103.],       [  85.,  104.],       [  95.,   99.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.8,  2.7,  3.7,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.6,  3. ,  3. ,  3. ,
        3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 3. ,  9.7])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 3.000000
        pt2[...,1] -= 9.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p77(self):
        controlpoints = np.array([[   3.,    2.],       [  10.,    1.],       [  19.,    3.],       [  26.,    3.],       [  39.,    4.],       [  50.,   -4.],       [  56.,   -4.],       [  63.,   -5.],       [  68.,   -3.],       [  82.,   -3.],       [  93.,   -1.],       [ 102.,   -3.],       [   4.,    8.],       [  10.,   15.],       [  19.,   10.],       [  26.,    7.],       [  37.,   13.],       [  45.,    9.],       [  55.,   14.],       [  64.,   11.],       [  72.,   11.],       [  80.,   10.],       [  86.,    9.],       [ 103.,   15.],       [  -4.,   29.],       [  12.,   29.],       [  19.,   20.],       [  25.,   26.],       [  34.,   26.],       [  45.,   21.],       [  50.,   25.],       [  60.,   28.],       [  73.,   28.],       [  85.,   22.],       [  87.,   22.],       [  99.,   22.],       [  -3.,   41.],       [  10.,   38.],       [  15.,   36.],       [  23.,   40.],       [  33.,   33.],       [  49.,   42.],       [  57.,   36.],       [  62.,   41.],       [  73.,   39.],       [  77.,   41.],       [  85.,   34.],       [  96.,   42.],       [  -5.,   46.],       [  11.,   54.],       [  18.,   50.],       [  23.,   47.],       [  34.,   47.],       [  43.,   47.],       [  53.,   46.],       [  68.,   47.],       [  70.,   53.],       [  83.,   54.],       [  87.,   53.],       [  96.,   52.],       [  -1.,   64.],       [  12.,   66.],       [  16.,   63.],       [  22.,   66.],       [  33.,   58.],       [  43.,   58.],       [  54.,   62.],       [  58.,   65.],       [  72.,   59.],       [  77.,   60.],       [  92.,   63.],       [  99.,   60.],       [   1.,   74.],       [  13.,   79.],       [  21.,   74.],       [  23.,   79.],       [  31.,   73.],       [  45.,   77.],       [  57.,   77.],       [  68.,   70.],       [  77.,   77.],       [  78.,   79.],       [  89.,   70.],       [  98.,   75.],       [  -1.,   85.],       [   5.,   82.],       [  20.,   83.],       [  23.,   83.],       [  36.,   90.],       [  41.,   88.],       [  52.,   90.],       [  59.,   89.],       [  75.,   91.],       [  82.,   83.],       [  88.,   82.],       [  97.,   85.],       [   1.,   98.],       [   6.,  102.],       [  19.,  100.],       [  22.,  100.],       [  40.,  101.],       [  41.,   99.],       [  58.,   96.],       [  59.,   96.],       [  72.,  102.],       [  85.,   96.],       [  88.,   97.],       [  97.,  104.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.9,  3.1,  3.8,
        4.8,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.2,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 11.7,   5.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 11.700000
        pt2[...,1] /= 5.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p7_C0_periodic(self):
        controlpoints = np.array([[ 104.,    0.],
       [  81.,   66.],
       [  12.,   98.],
       [ -49.,   85.],
       [ -98.,   36.],
       [ -96.,  -32.],
       [ -52.,  -91.],
       [  16., -103.],
       [  77.,  -70.]])
        basis0 = BSplineBasis(7, np.array([-1.2,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2.8,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4.9]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 6. ,  5.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 6.000000
        pt2[...,1] -= 5.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p6_C0_periodic(self):
        controlpoints = np.array([[  95.,    4.],
       [  82.,   62.],
       [  34.,   92.],
       [ -27.,   90.],
       [ -81.,   55.],
       [-105.,   -3.],
       [ -79.,  -56.],
       [ -29., -101.],
       [  33.,  -91.],
       [  84.,  -58.]])
        basis0 = BSplineBasis(6, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.8,  2.7,  4.2,  4.9,
        6. ,  6. ,  6. ,  6. ,  6. ,  6.8]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 2.7,  2.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 2.700000
        pt2[...,1] /= 2.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p56_C0_periodic(self):
        controlpoints = np.array([[  61.,   -2.],       [  44.,   35.],       [  12.,   56.],       [ -33.,   52.],       [ -59.,   21.],       [ -56.,  -20.],       [ -31.,  -52.],       [  14.,  -55.],       [  47.,  -41.],       [  63.,    4.],       [  52.,   47.],       [  14.,   61.],       [ -33.,   54.],       [ -68.,   23.],       [ -67.,  -21.],       [ -29.,  -56.],       [   8.,  -68.],       [  50.,  -47.],       [  70.,   -5.],       [  54.,   50.],       [  10.,   72.],       [ -32.,   59.],       [ -65.,   25.],       [ -72.,  -23.],       [ -33.,  -65.],       [  10.,  -68.],       [  52.,  -48.],       [  81.,    1.],       [  57.,   53.],       [  16.,   75.],       [ -43.,   65.],       [ -78.,   27.],       [ -79.,  -25.],       [ -40.,  -67.],       [  14.,  -82.],       [  57.,  -47.],       [  88.,   -3.],       [  64.,   59.],       [  18.,   86.],       [ -42.,   77.],       [ -82.,   28.],       [ -84.,  -32.],       [ -42.,  -76.],       [  14.,  -85.],       [  64.,  -56.],       [  96.,    0.],       [  72.,   62.],       [  12.,   89.],       [ -48.,   78.],       [ -86.,   27.],       [ -92.,  -36.],       [ -46.,  -83.],       [  16.,  -96.],       [  72.,  -63.],       [  98.,    2.],       [  79.,   59.],       [  17.,  101.],       [ -53.,   88.],       [ -90.,   33.],       [ -99.,  -33.],       [ -53.,  -88.],       [  18.,  -94.],       [  75.,  -63.]])
        basis0 = BSplineBasis(5, np.array([-1.4,  0. ,  0. ,  0. ,  0. ,  1. ,  2. ,  3. ,  4.2,  4.6,  6. ,
        6. ,  6. ,  6. ,  7. ]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 6.3,  6.2,  9.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 6.300000
        pt2[...,1] -= 6.200000
        pt2[...,2] -= 9.400000
        allZero           = pt2
        allZero[...,:-1] -= pt
        self.assertAlmostEqual(np.linalg.norm(allZero), 0.0)

    def test_scale_surface_2D_p67_C0_periodic(self):
        controlpoints = np.array([[  61.,    4.],       [  37.,   39.],       [   3.,   56.],       [ -43.,   43.],       [ -58.,    1.],       [ -41.,  -43.],       [  -1.,  -63.],       [  44.,  -47.],       [  66.,    1.],       [  44.,   49.],       [   0.,   63.],       [ -46.,   40.],       [ -62.,   -4.],       [ -42.,  -45.],       [   1.,  -69.],       [  48.,  -48.],       [  66.,    3.],       [  49.,   52.],       [  -3.,   70.],       [ -51.,   45.],       [ -72.,    2.],       [ -49.,  -46.],       [   0.,  -66.],       [  50.,  -52.],       [  76.,    2.],       [  55.,   51.],       [  -2.,   75.],       [ -48.,   53.],       [ -76.,    3.],       [ -48.,  -50.],       [   4.,  -71.],       [  55.,  -52.],       [  79.,   -5.],       [  51.,   56.],       [  -4.,   80.],       [ -53.,   52.],       [ -75.,    0.],       [ -59.,  -52.],       [   2.,  -72.],       [  50.,  -59.],       [  77.,    1.],       [  59.,   55.],       [  -5.,   78.],       [ -60.,   53.],       [ -82.,   -3.],       [ -59.,  -60.],       [   3.,  -80.],       [  54.,  -59.],       [  88.,   -2.],       [  55.,   61.],       [  -2.,   87.],       [ -64.,   57.],       [ -81.,   -3.],       [ -60.,  -61.],       [  -3.,  -88.],       [  57.,  -57.],       [  85.,   -3.],       [  62.,   60.],       [   3.,   86.],       [ -58.,   58.],       [ -92.,    4.],       [ -66.,  -63.],       [  -4.,  -92.],       [  65.,  -68.],       [  89.,    4.],       [  62.,   63.],       [  -3.,   88.],       [ -63.,   66.],       [ -89.,    4.],       [ -65.,  -69.],       [  -2.,  -90.],       [  63.,  -68.],       [  95.,    3.],       [  68.,   68.],       [  -4.,   99.],       [ -65.,   70.],       [ -95.,   -2.],       [ -70.,  -71.],       [   2., -101.],       [  69.,  -72.],       [ 103.,    4.],       [  72.,   70.],       [   0.,  101.],       [ -75.,   73.],       [ -97.,    1.],       [ -76.,  -70.],       [  -1.,  -97.],       [  69.,  -75.]])
        basis0 = BSplineBasis(6, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.1,  3. ,  4. ,  4. ,
        4. ,  4. ,  4. ,  4.7]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  3. ,  4.4,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([  4.4,  11.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.400000
        pt2[...,1] /= 11.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_2D_p5_C1_periodic(self):
        controlpoints = np.array([[ 103.,   -5.],
       [  78.,   60.],
       [  19.,   96.],
       [ -51.,   84.],
       [ -97.,   36.],
       [ -99.,  -39.],
       [ -46.,  -84.],
       [  16.,  -95.],
       [  73.,  -62.]])
        basis0 = BSplineBasis(5, np.array([-1.7, -0.9,  0. ,  0. ,  0. ,  0.8,  2.1,  3.2,  4.4,  5.3,  6.1,
        7. ,  7. ,  7. ,  7.8,  9.1]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 5. ,  0.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 5.000000
        pt2[...,1] -= 0.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_2D_p5_C1_periodic(self):
        controlpoints = np.array([[ 99.,  -5.],
       [ 58.,  80.],
       [-22.,  97.],
       [-86.,  43.],
       [-91., -39.],
       [-18., -93.],
       [ 65., -83.]])
        basis0 = BSplineBasis(5, np.array([-2. , -1. ,  0. ,  0. ,  0. ,  0.6,  2.4,  3. ,  4. ,  5. ,  5. ,
        5. ,  5.6,  7.4]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 10.2,   5.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 10.200000
        pt2[...,1] /= 5.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_2D_p76_C1_periodic(self):
        controlpoints = np.array([[  64.,   -4.],       [  42.,   39.],       [  13.,   57.],       [ -28.,   47.],       [ -59.,   24.],       [ -59.,  -23.],       [ -32.,  -57.],       [   6.,  -60.],       [  49.,  -37.],       [  69.,   -2.],       [  51.,   44.],       [   9.,   59.],       [ -29.,   53.],       [ -58.,   23.],       [ -61.,  -19.],       [ -28.,  -59.],       [  16.,  -60.],       [  50.,  -39.],       [  67.,    1.],       [  52.,   44.],       [  13.,   65.],       [ -32.,   64.],       [ -63.,   27.],       [ -64.,  -20.],       [ -31.,  -59.],       [  11.,  -72.],       [  57.,  -48.],       [  69.,   -5.],       [  58.,   51.],       [  16.,   75.],       [ -38.,   66.],       [ -66.,   29.],       [ -73.,  -23.],       [ -42.,  -63.],       [  12.,  -77.],       [  57.,  -44.],       [  75.,   -4.],       [  56.,   47.],       [  10.,   79.],       [ -38.,   63.],       [ -73.,   28.],       [ -69.,  -27.],       [ -43.,  -69.],       [  18.,  -77.],       [  60.,  -50.],       [  86.,   -3.],       [  60.,   57.],       [  11.,   80.],       [ -41.,   67.],       [ -73.,   29.],       [ -82.,  -24.],       [ -43.,  -76.],       [  14.,  -83.],       [  59.,  -57.],       [  85.,   -2.],       [  63.,   60.],       [  12.,   82.],       [ -41.,   76.],       [ -84.,   34.],       [ -84.,  -30.],       [ -40.,  -76.],       [  15.,  -83.],       [  62.,  -56.],       [  93.,    3.],       [  68.,   55.],       [  18.,   92.],       [ -50.,   79.],       [ -86.,   33.],       [ -87.,  -36.],       [ -49.,  -77.],       [  11.,  -90.],       [  67.,  -64.],       [  91.,    2.],       [  77.,   60.],       [  14.,   99.],       [ -47.,   80.],       [ -88.,   33.],       [ -90.,  -33.],       [ -51.,  -78.],       [  18.,  -90.],       [  70.,  -66.],       [  96.,    2.],       [  77.,   60.],       [  20.,  102.],       [ -47.,   87.],       [ -96.,   32.],       [ -91.,  -31.],       [ -52.,  -90.],       [  21.,  -96.],       [  78.,  -64.]])
        basis0 = BSplineBasis(7, np.array([-2. , -1.1,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.6,  3. ,  3.9,
        5. ,  5. ,  5. ,  5. ,  5. ,  5.8,  6.6]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2. ,  3. ,  4.2,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 0.6,  0.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 0.600000
        pt2[...,1] -= 0.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_2D_p55_C1_periodic(self):
        controlpoints = np.array([[  63.,    2.],       [  26.,   49.],       [ -32.,   53.],       [ -56.,   -3.],       [ -31.,  -52.],       [  28.,  -48.],       [  68.,   -2.],       [  32.,   57.],       [ -35.,   50.],       [ -67.,    0.],       [ -32.,  -59.],       [  31.,  -60.],       [  70.,    1.],       [  39.,   56.],       [ -34.,   56.],       [ -71.,   -3.],       [ -39.,  -58.],       [  31.,  -61.],       [  73.,   -3.],       [  41.,   67.],       [ -41.,   62.],       [ -71.,    4.],       [ -32.,  -60.],       [  35.,  -60.],       [  72.,   -1.],       [  40.,   63.],       [ -37.,   65.],       [ -79.,    0.],       [ -40.,  -70.],       [  39.,  -71.],       [  82.,    4.],       [  45.,   68.],       [ -41.,   73.],       [ -85.,    2.],       [ -43.,  -72.],       [  43.,  -68.],       [  90.,    1.],       [  41.,   78.],       [ -43.,   75.],       [ -82.,   -5.],       [ -41.,  -71.],       [  42.,  -78.],       [  92.,    4.],       [  42.,   76.],       [ -50.,   82.],       [ -93.,    0.],       [ -49.,  -80.],       [  49.,  -76.],       [  92.,   -5.],       [  46.,   85.],       [ -50.,   77.],       [ -91.,   -2.],       [ -45.,  -83.],       [  45.,  -82.],       [  99.,    3.],       [  53.,   83.],       [ -51.,   91.],       [-102.,   -3.],       [ -49.,  -86.],       [  51.,  -82.]])
        basis0 = BSplineBasis(5, np.array([-2. , -1. ,  0. ,  0. ,  0. ,  0.9,  2. ,  3. ,  4. ,  4. ,  4. ,
        4.9,  6. ]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.8,  2.9,  4. ,  5.3,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 2.9,  4.5])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 2.900000
        pt2[...,1] /= 4.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p5_rational(self):
        controlpoints = np.array([[   0. ,    1. ,    3. ,    1.4],
       [  23. ,   -4. ,   -2. ,    0.9],
       [  41. ,   -3. ,   -1. ,    1.2],
       [  60. ,   -4. ,    1. ,    1.1],
       [  81. ,    4. ,    4. ,    0.6],
       [ 100. ,   -1. ,   -2. ,    1.1]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ,  2. ,  2. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 5.9,  6.5,  9.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 5.900000
        pt2[...,1] -= 6.500000
        pt2[...,2] -= 9.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p5_rational(self):
        controlpoints = np.array([[  3. ,  -3. ,  -1. ,   1.5],
       [ 13. ,  -5. ,  -4. ,   1.4],
       [ 27. ,  -4. ,  -1. ,   0.8],
       [ 44. ,  -3. ,   1. ,   1.2],
       [ 61. ,   2. ,  -1. ,   0.7],
       [ 71. ,   4. ,   2. ,   0.6],
       [ 87. ,  -1. ,   2. ,   0.9],
       [ 96. ,  -5. ,  -3. ,   0.7]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.7,  3. ,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 8.4,  2.2,  5.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 8.400000
        pt2[...,1] /= 2.200000
        pt2[...,2] /= 5.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p6_rational(self):
        controlpoints = np.array([[  -3. ,    1. ,    3. ,    0.6],
       [  15. ,    4. ,   -1. ,    1.4],
       [  22. ,    4. ,    3. ,    1.2],
       [  36. ,    4. ,   -2. ,    0.9],
       [  40. ,   -1. ,    3. ,    1.2],
       [  54. ,   -2. ,   -1. ,    0.9],
       [  61. ,   -5. ,    4. ,    1.5],
       [  75. ,   -1. ,   -1. ,    0.6],
       [  93. ,    4. ,    2. ,    0.5],
       [ 104. ,    0. ,   -4. ,    1.4]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  2.6,  4.3,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.mirror([0, 0, 3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p76_rational(self):
        controlpoints = np.array([[  -4. ,    3. ,   -1. ,    1.4],       [  17. ,    2. ,    4. ,    0.6],       [  27. ,   -3. ,   -5. ,    0.7],       [  41. ,   -4. ,    2. ,    0.5],       [  49. ,    0. ,   -1. ,    0.7],       [  59. ,   -1. ,    3. ,    1.1],       [  70. ,    2. ,   -3. ,    0.6],       [  86. ,    2. ,    3. ,    1.4],       [ 102. ,   -3. ,    0. ,    0.6],       [   2. ,   11. ,   -1. ,    0.9],       [  11. ,   16. ,    0. ,    1.3],       [  29. ,   15. ,    2. ,    0.8],       [  40. ,   15. ,   -1. ,    1. ],       [  53. ,   19. ,   -4. ,    1.2],       [  62. ,   13. ,    4. ,    0.5],       [  70. ,   18. ,   -2. ,    0.6],       [  82. ,   15. ,   -5. ,    0.8],       [ 100. ,   10. ,    3. ,    1.2],       [   3. ,   32. ,   -4. ,    1.1],       [  13. ,   26. ,    0. ,    1.1],       [  24. ,   32. ,    1. ,    1.4],       [  34. ,   32. ,   -5. ,    0.9],       [  54. ,   25. ,    0. ,    0.9],       [  65. ,   32. ,   -2. ,    1.2],       [  74. ,   24. ,   -4. ,    0.6],       [  90. ,   32. ,    0. ,    0.7],       [  95. ,   29. ,   -5. ,    0.6],       [   0. ,   39. ,    0. ,    1.3],       [  14. ,   46. ,   -3. ,    1.2],       [  23. ,   46. ,    4. ,    0.9],       [  40. ,   41. ,    0. ,    1.5],       [  46. ,   44. ,   -1. ,    1. ],       [  67. ,   43. ,    1. ,    1.2],       [  74. ,   42. ,    0. ,    0.8],       [  83. ,   47. ,    4. ,    0.8],       [  98. ,   46. ,   -3. ,    0.9],       [  -2. ,   57. ,   -2. ,    1.1],       [  16. ,   60. ,   -3. ,    0.7],       [  25. ,   53. ,    2. ,    1.5],       [  41. ,   52. ,   -5. ,    0.6],       [  54. ,   60. ,    0. ,    0.6],       [  59. ,   54. ,    4. ,    1.3],       [  77. ,   55. ,   -5. ,    1. ],       [  91. ,   60. ,    1. ,    0.5],       [ 100. ,   55. ,   -3. ,    0.5],       [   2. ,   67. ,   -3. ,    1.4],       [  16. ,   74. ,    1. ,    1. ],       [  21. ,   69. ,   -4. ,    0.9],       [  37. ,   74. ,    2. ,    1.2],       [  52. ,   67. ,   -5. ,    1. ],       [  66. ,   72. ,   -5. ,    1.2],       [  78. ,   73. ,   -5. ,    0.9],       [  86. ,   67. ,   -1. ,    1.1],       [  97. ,   73. ,   -3. ,    0.9],       [   1. ,   86. ,    0. ,    0.8],       [  10. ,   85. ,   -3. ,    1. ],       [  22. ,   88. ,    4. ,    1.3],       [  41. ,   83. ,    0. ,    1.1],       [  52. ,   88. ,    2. ,    0.9],       [  58. ,   89. ,    0. ,    1.3],       [  73. ,   89. ,    0. ,    1.3],       [  82. ,   89. ,   -5. ,    1. ],       [ 103. ,   81. ,    3. ,    1. ],       [  -3. ,  103. ,    1. ,    0.6],       [  12. ,  100. ,   -4. ,    0.5],       [  26. ,   99. ,    3. ,    1.1],       [  41. ,  103. ,    2. ,    1.1],       [  50. ,  102. ,   -5. ,    1. ],       [  62. ,   97. ,   -5. ,    0.9],       [  78. ,  103. ,   -4. ,    1. ],       [  89. ,  103. ,   -4. ,    0.8],       [  99. ,   97. ,   -3. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.3,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.3,  3. ,  3. ,  3. ,
        3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 9.8,  0. ,  3.2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 9.800000
        pt2[...,1] -= 0.000000
        pt2[...,2] -= 3.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p76_rational(self):
        controlpoints = np.array([[  -4. ,   -4. ,    1. ,    0.9],       [  11. ,    0. ,   -2. ,    0.6],       [  15. ,   -5. ,   -1. ,    1.4],       [  33. ,    4. ,    0. ,    0.8],       [  40. ,   -2. ,   -3. ,    0.7],       [  54. ,    1. ,    3. ,    1.1],       [  64. ,    0. ,   -5. ,    1.2],       [  66. ,    0. ,    0. ,    1.5],       [  80. ,   -3. ,    1. ,    1. ],       [  93. ,   -2. ,    3. ,    0.8],       [  96. ,    3. ,    3. ,    1.4],       [   2. ,    7. ,   -4. ,    0.8],       [  13. ,    8. ,   -5. ,    0.9],       [  22. ,   12. ,    2. ,    1. ],       [  32. ,    9. ,   -2. ,    0.6],       [  38. ,    6. ,    3. ,    1.1],       [  49. ,   11. ,   -3. ,    0.7],       [  55. ,    5. ,    4. ,    1.2],       [  71. ,    9. ,    0. ,    1.3],       [  84. ,   13. ,   -3. ,    1.1],       [  93. ,    7. ,   -3. ,    1.1],       [  97. ,   10. ,    3. ,    1. ],       [   4. ,   21. ,   -5. ,    1.4],       [   6. ,   24. ,    3. ,    0.5],       [  22. ,   20. ,    4. ,    0.6],       [  29. ,   22. ,   -2. ,    1.1],       [  38. ,   20. ,    4. ,    0.9],       [  54. ,   15. ,    3. ,    0.6],       [  57. ,   16. ,    1. ,    1.1],       [  65. ,   20. ,    1. ,    1.3],       [  77. ,   17. ,    3. ,    1.3],       [  85. ,   20. ,   -2. ,    1.1],       [ 102. ,   16. ,   -4. ,    1.5],       [  -2. ,   29. ,    3. ,    0.8],       [   8. ,   33. ,    3. ,    0.6],       [  16. ,   34. ,   -5. ,    0.8],       [  32. ,   32. ,   -5. ,    0.8],       [  39. ,   32. ,    4. ,    0.9],       [  49. ,   32. ,   -3. ,    1.2],       [  61. ,   32. ,   -1. ,    1.2],       [  67. ,   25. ,    1. ,    1.2],       [  81. ,   32. ,   -5. ,    0.6],       [  93. ,   32. ,   -2. ,    0.5],       [  98. ,   29. ,   -3. ,    0.8],       [   3. ,   40. ,    3. ,    1.2],       [   8. ,   36. ,    1. ,    0.7],       [  16. ,   42. ,   -5. ,    0.9],       [  28. ,   40. ,   -5. ,    1.2],       [  42. ,   42. ,    3. ,    0.8],       [  51. ,   40. ,    3. ,    0.7],       [  57. ,   36. ,    4. ,    1.4],       [  72. ,   43. ,    4. ,    1.5],       [  82. ,   42. ,    1. ,    0.7],       [  92. ,   39. ,   -4. ,    0.8],       [ 104. ,   35. ,   -5. ,    0.5],       [  -2. ,   51. ,   -2. ,    0.8],       [  13. ,   53. ,   -5. ,    0.8],       [  24. ,   46. ,    3. ,    1.1],       [  32. ,   48. ,    1. ,    1. ],       [  37. ,   52. ,    4. ,    0.7],       [  51. ,   54. ,    3. ,    0.7],       [  61. ,   51. ,   -3. ,    1. ],       [  74. ,   47. ,    4. ,    1.2],       [  75. ,   45. ,   -2. ,    1.1],       [  90. ,   54. ,    3. ,    1. ],       [ 101. ,   47. ,    4. ,    1.3],       [   1. ,   62. ,   -2. ,    0.6],       [  14. ,   57. ,   -5. ,    1.1],       [  24. ,   55. ,   -1. ,    1. ],       [  29. ,   55. ,   -3. ,    1.2],       [  38. ,   55. ,   -1. ,    0.6],       [  47. ,   55. ,   -1. ,    1.1],       [  58. ,   55. ,    2. ,    0.7],       [  72. ,   56. ,    3. ,    1.1],       [  76. ,   64. ,   -1. ,    0.6],       [  92. ,   55. ,    0. ,    1.4],       [ 101. ,   62. ,   -2. ,    1.2],       [   2. ,   70. ,   -5. ,    0.7],       [   6. ,   71. ,    0. ,    0.8],       [  18. ,   72. ,    4. ,    1.3],       [  30. ,   65. ,   -2. ,    0.7],       [  41. ,   67. ,   -4. ,    1.1],       [  47. ,   73. ,   -3. ,    1. ],       [  63. ,   66. ,   -3. ,    1.4],       [  69. ,   68. ,    0. ,    1. ],       [  78. ,   67. ,    4. ,    0.8],       [  85. ,   70. ,    4. ,    1.4],       [ 102. ,   70. ,    1. ,    1.1],       [  -1. ,   75. ,   -5. ,    1.3],       [   7. ,   81. ,    2. ,    1.3],       [  19. ,   84. ,    2. ,    1.1],       [  27. ,   80. ,    1. ,    1.3],       [  39. ,   82. ,    4. ,    1.2],       [  54. ,   84. ,   -2. ,    0.9],       [  60. ,   76. ,   -4. ,    1.4],       [  67. ,   79. ,   -4. ,    1.4],       [  83. ,   81. ,   -5. ,    1. ],       [  90. ,   79. ,   -4. ,    1. ],       [  98. ,   79. ,    3. ,    0.9],       [   0. ,   89. ,   -5. ,    0.8],       [   5. ,   85. ,   -4. ,    1. ],       [  23. ,   90. ,    0. ,    0.6],       [  33. ,   87. ,   -5. ,    0.9],       [  36. ,   87. ,    2. ,    1.5],       [  51. ,   85. ,   -3. ,    0.8],       [  56. ,   90. ,    2. ,    0.7],       [  70. ,   90. ,    0. ,    1.1],       [  79. ,   93. ,   -5. ,    0.7],       [  88. ,   88. ,   -3. ,    0.6],       [  97. ,   85. ,   -1. ,    1.4],       [  -5. ,  101. ,    4. ,    1.5],       [  13. ,  100. ,    3. ,    0.6],       [  17. ,  103. ,   -3. ,    1.3],       [  34. ,   95. ,    0. ,    1.3],       [  40. ,   99. ,    3. ,    0.7],       [  49. ,  104. ,    0. ,    1.2],       [  58. ,  103. ,    2. ,    1.1],       [  74. ,   95. ,   -5. ,    0.6],       [  77. ,   95. ,   -2. ,    0.5],       [  90. ,  103. ,    0. ,    0.6],       [  97. ,   95. ,    3. ,    1.3]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.6,  2.7,  3.9,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  2.9,  4.3,  5.2,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 6.7,  4.9,  5.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 6.700000
        pt2[...,1] /= 4.900000
        pt2[...,2] /= 5.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p76_rational(self):
        controlpoints = np.array([[  -2. ,   -1. ,    0. ,    0.6],       [   6. ,   -1. ,    2. ,    0.9],       [  27. ,   -3. ,    2. ,    0.8],       [  34. ,   -4. ,    0. ,    0.9],       [  43. ,    4. ,   -4. ,    1.1],       [  53. ,    1. ,   -2. ,    0.8],       [  65. ,    3. ,   -1. ,    1. ],       [  79. ,   -1. ,    0. ,    0.5],       [  89. ,    4. ,   -5. ,    1. ],       [ 102. ,   -2. ,   -4. ,    0.7],       [  -4. ,   15. ,   -4. ,    0.8],       [   9. ,   12. ,   -3. ,    1.3],       [  18. ,   13. ,    3. ,    1.4],       [  33. ,   12. ,    0. ,    1.4],       [  44. ,    9. ,    3. ,    1.2],       [  55. ,   10. ,   -4. ,    1.2],       [  71. ,   12. ,    2. ,    0.6],       [  82. ,    9. ,    3. ,    1.2],       [  86. ,   15. ,    3. ,    1.1],       [ 104. ,   12. ,    0. ,    1.1],       [  -3. ,   27. ,   -4. ,    1.1],       [   6. ,   21. ,   -5. ,    0.6],       [  22. ,   24. ,    0. ,    1.4],       [  34. ,   25. ,    4. ,    0.9],       [  43. ,   22. ,    4. ,    1.3],       [  58. ,   26. ,    1. ,    0.9],       [  68. ,   24. ,   -3. ,    0.6],       [  80. ,   25. ,   -3. ,    0.7],       [  90. ,   28. ,    3. ,    1.2],       [  97. ,   28. ,    0. ,    0.6],       [  -5. ,   37. ,   -5. ,    1.4],       [   7. ,   36. ,   -5. ,    1.1],       [  22. ,   34. ,   -2. ,    1. ],       [  34. ,   41. ,   -4. ,    1.4],       [  47. ,   32. ,   -1. ,    1. ],       [  58. ,   33. ,   -4. ,    1.2],       [  67. ,   38. ,   -4. ,    0.7],       [  74. ,   40. ,    3. ,    1.4],       [  86. ,   34. ,   -1. ,    1.1],       [  99. ,   42. ,   -5. ,    0.7],       [  -1. ,   52. ,    2. ,    0.8],       [  13. ,   47. ,    0. ,    1.2],       [  20. ,   47. ,   -2. ,    0.8],       [  29. ,   50. ,   -4. ,    0.7],       [  42. ,   50. ,    3. ,    1.3],       [  56. ,   50. ,    2. ,    0.5],       [  68. ,   46. ,    4. ,    1. ],       [  81. ,   47. ,    1. ,    0.5],       [  90. ,   51. ,   -5. ,    1.3],       [  95. ,   45. ,    1. ,    0.6],       [  -1. ,   65. ,    1. ,    0.8],       [   9. ,   62. ,   -2. ,    0.6],       [  26. ,   60. ,   -3. ,    1.1],       [  28. ,   66. ,    3. ,    0.6],       [  42. ,   62. ,    3. ,    1.3],       [  52. ,   57. ,    1. ,    1.1],       [  63. ,   67. ,   -3. ,    1.1],       [  80. ,   65. ,   -3. ,    0.9],       [  86. ,   63. ,    1. ,    0.8],       [  95. ,   63. ,   -4. ,    1.5],       [  -4. ,   70. ,    1. ,    1.4],       [   9. ,   74. ,   -1. ,    1.2],       [  25. ,   70. ,    0. ,    1.4],       [  31. ,   79. ,    3. ,    0.9],       [  49. ,   79. ,    0. ,    1.3],       [  51. ,   71. ,    0. ,    1.5],       [  66. ,   70. ,    4. ,    0.7],       [  74. ,   79. ,   -1. ,    1.5],       [  93. ,   77. ,    3. ,    1.4],       [  96. ,   70. ,   -4. ,    1.1],       [   3. ,   84. ,   -4. ,    1.3],       [   7. ,   84. ,    2. ,    0.9],       [  22. ,   82. ,    4. ,    1.4],       [  36. ,   90. ,   -3. ,    1.1],       [  41. ,   86. ,   -5. ,    0.7],       [  59. ,   91. ,    1. ,    0.6],       [  70. ,   83. ,   -4. ,    0.9],       [  75. ,   89. ,   -3. ,    0.6],       [  85. ,   85. ,    1. ,    0.7],       [ 101. ,   83. ,    4. ,    0.6],       [  -3. ,   97. ,   -3. ,    1. ],       [  11. ,  101. ,   -4. ,    0.7],       [  24. ,  101. ,    4. ,    0.5],       [  29. ,  102. ,    3. ,    0.8],       [  41. ,   97. ,   -2. ,    1.3],       [  57. ,   99. ,    1. ,    0.6],       [  71. ,   95. ,    4. ,    0.7],       [  82. ,  100. ,   -4. ,    0.9],       [  93. ,  103. ,    0. ,    0.7],       [ 101. ,   99. ,    4. ,    0.9]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  2.9,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.7,  3.3,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.mirror([0, 0, 2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p676_rational(self):
        controlpoints = np.array([[   2. ,   -1. ,   -4. ,    0.9],       [  11. ,   -4. ,   -1. ,    1.5],       [  28. ,    0. ,   -5. ,    0.9],       [  39. ,   -2. ,   -1. ,    1.4],       [  54. ,   -5. ,    3. ,    0.9],       [  59. ,   -1. ,    3. ,    0.6],       [  78. ,    3. ,   -1. ,    0.7],       [  89. ,   -2. ,    0. ,    1.2],       [ 104. ,    0. ,    4. ,    0.9],       [   1. ,   16. ,    0. ,    1.1],       [  11. ,   13. ,    2. ,    1.1],       [  26. ,    9. ,   -2. ,    1. ],       [  40. ,    8. ,   -2. ,    1.1],       [  46. ,   16. ,   -1. ,    0.9],       [  66. ,   11. ,    1. ,    1. ],       [  73. ,   12. ,   -1. ,    1.1],       [  87. ,   10. ,   -4. ,    0.7],       [ 102. ,   13. ,    1. ,    1.3],       [  -2. ,   23. ,   -5. ,    1.3],       [  14. ,   22. ,   -3. ,    1.4],       [  24. ,   21. ,    3. ,    1.3],       [  39. ,   26. ,    1. ,    1.3],       [  45. ,   28. ,   -4. ,    1.3],       [  63. ,   27. ,   -1. ,    1.2],       [  71. ,   27. ,   -2. ,    0.7],       [  91. ,   26. ,    4. ,    1.5],       [ 100. ,   21. ,    0. ,    0.7],       [   0. ,   37. ,   -1. ,    0.9],       [  11. ,   38. ,   -5. ,    1.2],       [  21. ,   39. ,    4. ,    1.4],       [  39. ,   37. ,    1. ,    0.7],       [  53. ,   35. ,   -2. ,    0.9],       [  65. ,   38. ,   -4. ,    1.1],       [  73. ,   41. ,    1. ,    0.7],       [  90. ,   40. ,    1. ,    0.7],       [  96. ,   37. ,   -3. ,    1. ],       [  -3. ,   45. ,   -4. ,    1.4],       [  10. ,   45. ,   -3. ,    1.4],       [  24. ,   49. ,   -2. ,    0.6],       [  35. ,   45. ,   -3. ,    1.4],       [  46. ,   54. ,   -3. ,    1.2],       [  61. ,   53. ,   -1. ,    1. ],       [  73. ,   46. ,   -1. ,    1. ],       [  88. ,   48. ,   -4. ,    0.6],       [  95. ,   51. ,    3. ,    1.4],       [  -4. ,   65. ,   -5. ,    0.8],       [  15. ,   61. ,    2. ,    1. ],       [  26. ,   61. ,   -5. ,    0.9],       [  39. ,   62. ,    3. ,    1.3],       [  46. ,   63. ,   -2. ,    0.9],       [  60. ,   65. ,   -4. ,    1.2],       [  73. ,   61. ,    3. ,    0.9],       [  83. ,   63. ,    2. ,    1. ],       [ 102. ,   60. ,    1. ,    0.9],       [  -3. ,   70. ,   -3. ,    0.9],       [   9. ,   78. ,    3. ,    1.5],       [  28. ,   75. ,   -4. ,    0.6],       [  34. ,   73. ,    4. ,    0.6],       [  45. ,   74. ,    2. ,    1.1],       [  65. ,   73. ,    2. ,    0.5],       [  71. ,   71. ,    2. ,    1.2],       [  90. ,   70. ,    2. ,    0.6],       [ 101. ,   78. ,   -5. ,    0.9],       [  -4. ,   83. ,   -4. ,    1.4],       [  16. ,   86. ,    0. ,    1.1],       [  24. ,   92. ,    3. ,    0.7],       [  37. ,   87. ,   -5. ,    1.2],       [  45. ,   92. ,    0. ,    1.2],       [  59. ,   92. ,    3. ,    1.4],       [  79. ,   90. ,   -3. ,    1. ],       [  89. ,   86. ,   -2. ,    0.7],       [  98. ,   83. ,    0. ,    0.8],       [  -5. ,  101. ,    1. ,    1.3],       [  10. ,  104. ,    4. ,    1.2],       [  23. ,  104. ,   -4. ,    1.4],       [  36. ,   98. ,    0. ,    0.9],       [  54. ,   98. ,   -3. ,    0.8],       [  58. ,   96. ,    0. ,    1. ],       [  74. ,  104. ,    1. ,    0.6],       [  87. ,   99. ,   -4. ,    1.4],       [ 102. ,  104. ,    4. ,    0.5],       [   1. ,    3. ,    6. ,    0.6],       [  17. ,   -5. ,    7. ,    1. ],       [  23. ,    0. ,    5. ,    0.6],       [  41. ,    3. ,    9. ,    1.4],       [  49. ,    1. ,    6. ,    1.2],       [  59. ,    2. ,    9. ,    1. ],       [  73. ,   -1. ,    9. ,    1.2],       [  89. ,    2. ,   10. ,    0.9],       [  99. ,   -1. ,   10. ,    1.1],       [  -3. ,    8. ,   10. ,    1.3],       [  17. ,    8. ,    5. ,    0.7],       [  25. ,   13. ,    6. ,    0.6],       [  36. ,   10. ,   14. ,    1.4],       [  45. ,   17. ,    6. ,    1.5],       [  66. ,    8. ,   13. ,    0.7],       [  73. ,    8. ,    8. ,    0.9],       [  90. ,   12. ,    6. ,    1.4],       [  95. ,   12. ,   11. ,    1.5],       [   3. ,   26. ,   13. ,    1.5],       [  15. ,   26. ,   11. ,    0.8],       [  23. ,   27. ,   14. ,    1.3],       [  41. ,   20. ,    6. ,    1.4],       [  54. ,   27. ,    9. ,    1.2],       [  63. ,   26. ,   13. ,    1.4],       [  76. ,   26. ,   14. ,    0.7],       [  83. ,   25. ,   11. ,    1.2],       [  95. ,   20. ,   13. ,    0.8],       [  -3. ,   39. ,    5. ,    1.5],       [  12. ,   41. ,   14. ,    0.6],       [  22. ,   35. ,    9. ,    0.9],       [  33. ,   33. ,   11. ,    0.9],       [  49. ,   38. ,   11. ,    1.3],       [  63. ,   37. ,    6. ,    0.9],       [  71. ,   37. ,   12. ,    1.2],       [  89. ,   32. ,   13. ,    0.9],       [ 104. ,   34. ,   13. ,    1.4],       [  -3. ,   48. ,    7. ,    1.3],       [   7. ,   46. ,    6. ,    1.4],       [  24. ,   48. ,    9. ,    0.7],       [  37. ,   50. ,    6. ,    1.4],       [  51. ,   49. ,   11. ,    0.5],       [  62. ,   48. ,   13. ,    1.4],       [  78. ,   45. ,   10. ,    0.5],       [  92. ,   47. ,    5. ,    0.6],       [ 103. ,   46. ,   10. ,    1.3],       [  -1. ,   61. ,   12. ,    0.6],       [  14. ,   65. ,    5. ,    0.6],       [  20. ,   65. ,    5. ,    0.9],       [  41. ,   61. ,    9. ,    1.3],       [  53. ,   62. ,   11. ,    0.8],       [  61. ,   64. ,   10. ,    0.8],       [  72. ,   59. ,   10. ,    0.7],       [  88. ,   62. ,    6. ,    1.1],       [ 101. ,   59. ,   14. ,    1.3],       [  -3. ,   71. ,    6. ,    1.5],       [  15. ,   72. ,    7. ,    1.5],       [  26. ,   74. ,   11. ,    0.8],       [  38. ,   77. ,   11. ,    1.2],       [  54. ,   74. ,   12. ,    0.7],       [  57. ,   78. ,    5. ,    0.8],       [  70. ,   71. ,   10. ,    0.7],       [  88. ,   79. ,    9. ,    1.3],       [  95. ,   74. ,   14. ,    1.3],       [  -1. ,   91. ,   12. ,    1.1],       [  10. ,   91. ,    9. ,    0.8],       [  23. ,   91. ,   11. ,    0.7],       [  37. ,   88. ,    5. ,    0.8],       [  51. ,   90. ,    6. ,    0.9],       [  58. ,   86. ,    8. ,    0.8],       [  76. ,   89. ,   13. ,    1. ],       [  89. ,   85. ,    6. ,    1.1],       [  96. ,   87. ,   12. ,    0.8],       [   0. ,   97. ,    8. ,    0.6],       [  14. ,  104. ,    9. ,    1. ],       [  21. ,   97. ,    9. ,    0.6],       [  33. ,   98. ,   11. ,    0.8],       [  49. ,   97. ,    7. ,    1.1],       [  65. ,   99. ,   12. ,    1.1],       [  72. ,   95. ,   11. ,    0.8],       [  85. ,   97. ,   11. ,    0.8],       [ 101. ,   98. ,    8. ,    0.6],       [   2. ,   -2. ,   21. ,    1.3],       [  14. ,    1. ,   15. ,    0.9],       [  20. ,    2. ,   19. ,    1.4],       [  38. ,   -1. ,   24. ,    1.5],       [  46. ,   -5. ,   21. ,    0.9],       [  64. ,   -2. ,   15. ,    1.3],       [  71. ,   -1. ,   18. ,    1.4],       [  89. ,    3. ,   20. ,    1.3],       [  96. ,   -1. ,   23. ,    1.2],       [   3. ,   16. ,   18. ,    1.5],       [   9. ,   12. ,   18. ,    1.3],       [  22. ,   15. ,   19. ,    1.1],       [  32. ,   15. ,   17. ,    1.4],       [  51. ,   14. ,   15. ,    0.9],       [  64. ,    8. ,   18. ,    0.9],       [  73. ,    7. ,   22. ,    0.5],       [  84. ,    8. ,   21. ,    1.4],       [  96. ,   15. ,   20. ,    1. ],       [   2. ,   27. ,   19. ,    1.2],       [  16. ,   20. ,   16. ,    0.9],       [  25. ,   28. ,   21. ,    1.2],       [  40. ,   22. ,   17. ,    0.6],       [  47. ,   27. ,   22. ,    0.5],       [  63. ,   28. ,   23. ,    1. ],       [  77. ,   20. ,   17. ,    1.1],       [  89. ,   20. ,   23. ,    1. ],       [  98. ,   29. ,   19. ,    1.3],       [   2. ,   37. ,   22. ,    0.5],       [  13. ,   40. ,   16. ,    0.7],       [  23. ,   38. ,   15. ,    1.5],       [  33. ,   34. ,   21. ,    1.4],       [  47. ,   38. ,   19. ,    1.2],       [  67. ,   42. ,   19. ,    0.9],       [  78. ,   33. ,   22. ,    0.8],       [  84. ,   40. ,   18. ,    1.4],       [  97. ,   38. ,   20. ,    0.9],       [  -3. ,   53. ,   24. ,    0.6],       [  15. ,   50. ,   20. ,    1.2],       [  21. ,   52. ,   17. ,    0.9],       [  34. ,   49. ,   20. ,    1.1],       [  46. ,   52. ,   16. ,    1.1],       [  59. ,   47. ,   22. ,    1.2],       [  73. ,   53. ,   20. ,    0.7],       [  92. ,   53. ,   15. ,    1.4],       [  99. ,   50. ,   20. ,    1.1],       [   3. ,   57. ,   15. ,    1.1],       [  11. ,   61. ,   17. ,    0.6],       [  20. ,   62. ,   19. ,    1.1],       [  33. ,   63. ,   20. ,    1.2],       [  49. ,   59. ,   15. ,    0.9],       [  65. ,   57. ,   15. ,    0.9],       [  74. ,   65. ,   15. ,    1.3],       [  86. ,   67. ,   23. ,    0.5],       [  97. ,   60. ,   20. ,    0.9],       [   1. ,   79. ,   19. ,    1.3],       [  16. ,   76. ,   23. ,    1.1],       [  28. ,   70. ,   22. ,    1. ],       [  40. ,   71. ,   20. ,    0.5],       [  50. ,   79. ,   23. ,    1.5],       [  60. ,   79. ,   22. ,    1.2],       [  74. ,   75. ,   15. ,    0.8],       [  89. ,   73. ,   15. ,    1.3],       [ 104. ,   79. ,   16. ,    0.8],       [   2. ,   83. ,   15. ,    0.8],       [   9. ,   91. ,   21. ,    0.9],       [  27. ,   91. ,   24. ,    1.3],       [  40. ,   83. ,   21. ,    1.1],       [  45. ,   88. ,   22. ,    1.4],       [  65. ,   83. ,   20. ,    1.4],       [  78. ,   87. ,   17. ,    1. ],       [  82. ,   84. ,   20. ,    1. ],       [ 100. ,   90. ,   21. ,    1.2],       [  -1. ,   98. ,   15. ,    0.9],       [  10. ,  100. ,   17. ,    1.5],       [  25. ,  104. ,   24. ,    0.8],       [  38. ,  104. ,   15. ,    1. ],       [  53. ,  100. ,   24. ,    1.4],       [  62. ,   99. ,   21. ,    1.4],       [  71. ,  103. ,   23. ,    1.3],       [  83. ,  104. ,   15. ,    1.1],       [  97. ,  103. ,   24. ,    0.6],       [  -1. ,   -5. ,   32. ,    0.7],       [   7. ,   -5. ,   34. ,    1.1],       [  26. ,    2. ,   34. ,    0.8],       [  34. ,    1. ,   32. ,    0.8],       [  45. ,   -3. ,   30. ,    1.4],       [  65. ,   -5. ,   25. ,    0.5],       [  75. ,   -2. ,   33. ,    1.3],       [  88. ,   -1. ,   26. ,    0.7],       [ 100. ,    0. ,   33. ,    0.9],       [  -3. ,   17. ,   30. ,    1.5],       [   9. ,   17. ,   31. ,    1.3],       [  24. ,   10. ,   31. ,    0.8],       [  42. ,   10. ,   30. ,    1.1],       [  53. ,   15. ,   26. ,    0.8],       [  58. ,   16. ,   28. ,    1. ],       [  73. ,   17. ,   30. ,    1.2],       [  82. ,   17. ,   29. ,    0.9],       [ 103. ,   16. ,   33. ,    0.9],       [  -4. ,   28. ,   25. ,    1.1],       [  16. ,   29. ,   34. ,    1.2],       [  26. ,   23. ,   25. ,    0.8],       [  39. ,   27. ,   33. ,    1.2],       [  49. ,   20. ,   27. ,    0.9],       [  64. ,   25. ,   25. ,    1.1],       [  75. ,   29. ,   33. ,    1. ],       [  85. ,   25. ,   29. ,    0.5],       [  99. ,   28. ,   25. ,    1.5],       [  -5. ,   35. ,   31. ,    1.4],       [   9. ,   35. ,   29. ,    0.6],       [  27. ,   34. ,   32. ,    0.5],       [  40. ,   41. ,   25. ,    0.9],       [  47. ,   34. ,   31. ,    0.7],       [  60. ,   34. ,   25. ,    0.7],       [  78. ,   32. ,   25. ,    0.8],       [  83. ,   35. ,   29. ,    0.8],       [ 103. ,   36. ,   29. ,    1.1],       [   3. ,   53. ,   33. ,    0.7],       [  11. ,   45. ,   34. ,    0.9],       [  20. ,   50. ,   29. ,    1.1],       [  40. ,   52. ,   28. ,    1.1],       [  45. ,   47. ,   25. ,    0.5],       [  60. ,   52. ,   34. ,    0.6],       [  76. ,   45. ,   34. ,    1.1],       [  82. ,   46. ,   31. ,    1. ],       [  99. ,   47. ,   28. ,    0.6],       [   4. ,   63. ,   27. ,    1.2],       [  14. ,   58. ,   29. ,    0.6],       [  20. ,   59. ,   25. ,    1.2],       [  35. ,   60. ,   31. ,    1.4],       [  51. ,   67. ,   25. ,    0.9],       [  65. ,   67. ,   27. ,    1.1],       [  78. ,   60. ,   28. ,    0.6],       [  86. ,   58. ,   32. ,    0.9],       [ 102. ,   60. ,   32. ,    1.2],       [  -3. ,   76. ,   32. ,    1.2],       [  15. ,   71. ,   33. ,    0.7],       [  21. ,   79. ,   30. ,    0.6],       [  40. ,   73. ,   33. ,    1.1],       [  46. ,   74. ,   29. ,    0.7],       [  64. ,   77. ,   25. ,    1. ],       [  79. ,   77. ,   26. ,    1.4],       [  90. ,   78. ,   26. ,    1.2],       [  99. ,   73. ,   26. ,    0.5],       [   4. ,   88. ,   25. ,    0.6],       [  14. ,   83. ,   29. ,    0.7],       [  25. ,   84. ,   28. ,    1.5],       [  38. ,   87. ,   31. ,    0.6],       [  46. ,   83. ,   25. ,    1. ],       [  59. ,   90. ,   33. ,    1.2],       [  77. ,   90. ,   32. ,    1.2],       [  89. ,   87. ,   28. ,    1.2],       [ 103. ,   86. ,   29. ,    1.5],       [  -5. ,   96. ,   31. ,    1.1],       [  15. ,  103. ,   28. ,    0.9],       [  27. ,   96. ,   32. ,    1. ],       [  34. ,   99. ,   30. ,    1. ],       [  54. ,  100. ,   26. ,    1.4],       [  61. ,  103. ,   33. ,    1.3],       [  78. ,   95. ,   34. ,    0.8],       [  89. ,  102. ,   25. ,    1.1],       [ 103. ,   98. ,   28. ,    1. ],       [  -2. ,   -2. ,   40. ,    0.8],       [   8. ,    1. ,   35. ,    1.2],       [  24. ,    2. ,   44. ,    0.9],       [  37. ,   -2. ,   40. ,    1.1],       [  45. ,    2. ,   43. ,    1.1],       [  60. ,   -3. ,   43. ,    0.6],       [  72. ,    1. ,   37. ,    1.4],       [  84. ,    3. ,   35. ,    1.4],       [ 104. ,    3. ,   37. ,    1.4],       [  -1. ,   15. ,   36. ,    1.2],       [   7. ,    8. ,   42. ,    0.9],       [  21. ,   10. ,   36. ,    0.9],       [  36. ,    9. ,   36. ,    1.1],       [  46. ,   17. ,   35. ,    0.9],       [  61. ,   13. ,   35. ,    1.4],       [  71. ,    8. ,   36. ,    1.5],       [  87. ,   15. ,   37. ,    0.6],       [  97. ,   16. ,   37. ,    1.3],       [  -1. ,   20. ,   41. ,    0.9],       [  13. ,   22. ,   39. ,    0.8],       [  27. ,   25. ,   43. ,    1.2],       [  37. ,   29. ,   43. ,    1.4],       [  52. ,   24. ,   42. ,    1.4],       [  60. ,   27. ,   36. ,    1. ],       [  75. ,   21. ,   41. ,    1.3],       [  87. ,   25. ,   36. ,    0.9],       [ 100. ,   21. ,   35. ,    1.3],       [  -2. ,   38. ,   39. ,    1.4],       [  10. ,   38. ,   37. ,    0.9],       [  21. ,   38. ,   39. ,    1. ],       [  40. ,   35. ,   36. ,    0.7],       [  46. ,   37. ,   44. ,    1.4],       [  58. ,   37. ,   42. ,    1.4],       [  79. ,   38. ,   36. ,    0.7],       [  91. ,   36. ,   43. ,    0.8],       [ 103. ,   36. ,   37. ,    0.5],       [  -1. ,   48. ,   35. ,    0.7],       [  10. ,   53. ,   36. ,    1.1],       [  27. ,   49. ,   41. ,    0.9],       [  34. ,   52. ,   35. ,    1.4],       [  46. ,   51. ,   39. ,    1.3],       [  64. ,   50. ,   44. ,    1.1],       [  77. ,   48. ,   41. ,    0.7],       [  86. ,   51. ,   43. ,    1. ],       [  98. ,   45. ,   38. ,    1.4],       [  -4. ,   65. ,   42. ,    0.8],       [   8. ,   60. ,   39. ,    1.2],       [  20. ,   63. ,   35. ,    0.5],       [  37. ,   67. ,   35. ,    1. ],       [  54. ,   66. ,   39. ,    1.1],       [  62. ,   67. ,   41. ,    0.7],       [  70. ,   61. ,   37. ,    1.3],       [  91. ,   58. ,   36. ,    1.4],       [  96. ,   61. ,   38. ,    0.9],       [  -1. ,   79. ,   35. ,    1.2],       [  13. ,   73. ,   40. ,    1.2],       [  21. ,   73. ,   38. ,    1.3],       [  38. ,   74. ,   38. ,    0.9],       [  48. ,   74. ,   36. ,    1. ],       [  62. ,   78. ,   35. ,    1.5],       [  70. ,   79. ,   35. ,    1.3],       [  82. ,   76. ,   40. ,    1.5],       [  95. ,   73. ,   42. ,    1. ],       [   2. ,   83. ,   38. ,    1.4],       [  10. ,   92. ,   41. ,    0.6],       [  21. ,   84. ,   40. ,    0.8],       [  34. ,   84. ,   40. ,    1.5],       [  46. ,   88. ,   41. ,    1.4],       [  66. ,   90. ,   35. ,    0.7],       [  79. ,   88. ,   36. ,    1. ],       [  87. ,   84. ,   36. ,    1.2],       [  96. ,   84. ,   35. ,    0.9],       [   0. ,   95. ,   42. ,    1.5],       [  16. ,  103. ,   36. ,    0.9],       [  28. ,  101. ,   38. ,    1.4],       [  39. ,  101. ,   41. ,    1.4],       [  48. ,  102. ,   42. ,    1.3],       [  67. ,  103. ,   42. ,    0.9],       [  72. ,  102. ,   35. ,    0.6],       [  83. ,   96. ,   39. ,    0.9],       [ 100. ,  101. ,   39. ,    1.1],       [  -1. ,    1. ,   50. ,    0.6],       [  16. ,   -1. ,   50. ,    0.9],       [  28. ,    2. ,   47. ,    1.5],       [  34. ,    1. ,   48. ,    1.3],       [  53. ,    1. ,   50. ,    1.4],       [  57. ,   -4. ,   51. ,    1.2],       [  77. ,    3. ,   48. ,    0.7],       [  87. ,   -1. ,   47. ,    0.9],       [  96. ,   -4. ,   51. ,    0.9],       [   4. ,   13. ,   45. ,    0.6],       [  13. ,    8. ,   51. ,    1.4],       [  25. ,   13. ,   53. ,    0.8],       [  39. ,   15. ,   48. ,    1.5],       [  51. ,   16. ,   50. ,    0.9],       [  63. ,   14. ,   52. ,    1. ],       [  78. ,    8. ,   50. ,    0.8],       [  85. ,   17. ,   52. ,    0.5],       [ 104. ,   13. ,   52. ,    1.1],       [  -5. ,   21. ,   49. ,    1. ],       [  10. ,   25. ,   52. ,    1.2],       [  22. ,   27. ,   51. ,    1.1],       [  38. ,   24. ,   47. ,    0.7],       [  54. ,   20. ,   54. ,    0.8],       [  59. ,   28. ,   50. ,    0.5],       [  73. ,   29. ,   47. ,    1.2],       [  88. ,   25. ,   54. ,    1.1],       [ 101. ,   29. ,   53. ,    0.7],       [   0. ,   38. ,   46. ,    0.8],       [  14. ,   32. ,   54. ,    1.1],       [  20. ,   33. ,   50. ,    0.7],       [  38. ,   34. ,   46. ,    1.4],       [  47. ,   41. ,   47. ,    0.9],       [  58. ,   41. ,   47. ,    1.4],       [  75. ,   39. ,   45. ,    1.3],       [  92. ,   34. ,   46. ,    0.8],       [ 104. ,   34. ,   52. ,    0.7],       [  -1. ,   49. ,   54. ,    0.9],       [  15. ,   49. ,   49. ,    1.5],       [  29. ,   51. ,   52. ,    0.8],       [  38. ,   53. ,   45. ,    1. ],       [  48. ,   47. ,   52. ,    1.3],       [  64. ,   51. ,   49. ,    0.7],       [  79. ,   54. ,   50. ,    1.5],       [  90. ,   47. ,   50. ,    1.4],       [ 102. ,   52. ,   50. ,    0.8],       [  -2. ,   64. ,   53. ,    1.4],       [  17. ,   65. ,   46. ,    0.8],       [  28. ,   61. ,   46. ,    1.4],       [  40. ,   62. ,   51. ,    1.4],       [  48. ,   60. ,   45. ,    0.6],       [  58. ,   61. ,   51. ,    1.5],       [  75. ,   60. ,   49. ,    1. ],       [  82. ,   62. ,   48. ,    1. ],       [ 100. ,   59. ,   49. ,    1.2],       [  -5. ,   72. ,   49. ,    0.5],       [  11. ,   75. ,   46. ,    0.5],       [  25. ,   77. ,   51. ,    1.2],       [  32. ,   74. ,   45. ,    1.2],       [  53. ,   79. ,   50. ,    0.6],       [  67. ,   79. ,   52. ,    1.3],       [  75. ,   70. ,   49. ,    0.6],       [  83. ,   75. ,   45. ,    1.1],       [  97. ,   73. ,   46. ,    1.3],       [  -2. ,   87. ,   54. ,    0.6],       [   9. ,   82. ,   45. ,    1.2],       [  21. ,   87. ,   54. ,    1.5],       [  35. ,   83. ,   50. ,    0.6],       [  53. ,   83. ,   45. ,    0.5],       [  59. ,   91. ,   45. ,    1.5],       [  79. ,   86. ,   46. ,    0.6],       [  82. ,   86. ,   53. ,    0.5],       [ 100. ,   89. ,   49. ,    1.1],       [   1. ,   97. ,   52. ,    1.2],       [   8. ,  102. ,   54. ,    0.5],       [  22. ,  100. ,   47. ,    0.9],       [  40. ,  101. ,   46. ,    1.4],       [  50. ,   95. ,   45. ,    1.1],       [  57. ,  102. ,   46. ,    0.7],       [  74. ,   97. ,   51. ,    0.8],       [  86. ,  100. ,   48. ,    1.2],       [ 101. ,   99. ,   47. ,    1.3],       [  -3. ,   -4. ,   62. ,    0.8],       [  11. ,    4. ,   59. ,    1. ],       [  25. ,   -3. ,   55. ,    0.7],       [  37. ,    4. ,   59. ,    1.4],       [  50. ,   -2. ,   61. ,    1.3],       [  62. ,   -5. ,   58. ,    1.5],       [  71. ,   -1. ,   64. ,    1.2],       [  83. ,    3. ,   61. ,    1.4],       [ 104. ,   -2. ,   63. ,    1. ],       [  -4. ,    9. ,   63. ,    0.7],       [   9. ,   15. ,   64. ,    1.3],       [  27. ,   16. ,   64. ,    1.3],       [  39. ,   14. ,   57. ,    1.3],       [  53. ,   13. ,   64. ,    1.4],       [  60. ,   13. ,   62. ,    0.7],       [  75. ,   15. ,   63. ,    1. ],       [  86. ,   12. ,   62. ,    1.4],       [ 104. ,   14. ,   57. ,    1. ],       [   0. ,   22. ,   60. ,    0.6],       [  12. ,   28. ,   62. ,    1.5],       [  26. ,   22. ,   58. ,    1.5],       [  39. ,   29. ,   57. ,    1.2],       [  49. ,   22. ,   59. ,    1.4],       [  65. ,   21. ,   57. ,    0.7],       [  74. ,   28. ,   56. ,    0.6],       [  87. ,   23. ,   63. ,    1. ],       [ 104. ,   25. ,   58. ,    0.9],       [  -3. ,   36. ,   57. ,    0.7],       [  13. ,   34. ,   64. ,    0.7],       [  29. ,   32. ,   55. ,    0.8],       [  35. ,   32. ,   59. ,    1.4],       [  45. ,   32. ,   55. ,    0.6],       [  61. ,   39. ,   63. ,    1.1],       [  77. ,   37. ,   63. ,    0.6],       [  86. ,   42. ,   60. ,    1.2],       [  96. ,   34. ,   55. ,    1.2],       [  -4. ,   45. ,   58. ,    1.2],       [   7. ,   45. ,   55. ,    1.2],       [  26. ,   47. ,   60. ,    1.2],       [  34. ,   48. ,   62. ,    1.5],       [  48. ,   47. ,   59. ,    1.3],       [  58. ,   50. ,   61. ,    0.6],       [  78. ,   52. ,   60. ,    0.8],       [  84. ,   47. ,   61. ,    1. ],       [ 104. ,   53. ,   56. ,    0.7],       [  -1. ,   59. ,   63. ,    1.3],       [  14. ,   66. ,   55. ,    1.3],       [  28. ,   65. ,   64. ,    1. ],       [  38. ,   66. ,   55. ,    1.2],       [  51. ,   65. ,   57. ,    1.2],       [  62. ,   67. ,   56. ,    1.4],       [  76. ,   65. ,   56. ,    1.3],       [  86. ,   63. ,   62. ,    1.1],       [ 101. ,   58. ,   61. ,    1.4],       [  -2. ,   76. ,   62. ,    0.6],       [  16. ,   77. ,   57. ,    1.2],       [  20. ,   76. ,   62. ,    1.3],       [  33. ,   71. ,   56. ,    1. ],       [  45. ,   78. ,   62. ,    1.3],       [  65. ,   74. ,   63. ,    0.6],       [  70. ,   77. ,   64. ,    1.1],       [  90. ,   78. ,   62. ,    1. ],       [  98. ,   78. ,   56. ,    0.9],       [   4. ,   89. ,   55. ,    1.5],       [  15. ,   89. ,   56. ,    0.6],       [  25. ,   85. ,   56. ,    1.2],       [  35. ,   87. ,   60. ,    1.2],       [  54. ,   85. ,   63. ,    1.5],       [  65. ,   87. ,   64. ,    1.5],       [  74. ,   87. ,   58. ,    1. ],       [  87. ,   91. ,   61. ,    1.1],       [  99. ,   83. ,   63. ,    0.7],       [   1. ,  104. ,   60. ,    1.3],       [  11. ,  101. ,   56. ,    1. ],       [  25. ,  104. ,   64. ,    1.5],       [  35. ,  101. ,   64. ,    1.2],       [  47. ,  101. ,   58. ,    0.7],       [  62. ,   96. ,   63. ,    1.2],       [  78. ,  102. ,   60. ,    0.8],       [  91. ,   98. ,   61. ,    0.7],       [  99. ,  101. ,   60. ,    0.9],       [   1. ,   -5. ,   73. ,    1.1],       [  11. ,   -5. ,   66. ,    0.8],       [  26. ,   -1. ,   68. ,    0.6],       [  35. ,   -1. ,   70. ,    1.5],       [  54. ,   -5. ,   69. ,    1.4],       [  63. ,    2. ,   70. ,    0.9],       [  74. ,   -5. ,   74. ,    0.7],       [  88. ,    1. ,   70. ,    1.1],       [ 102. ,    0. ,   66. ,    0.6],       [   0. ,    9. ,   74. ,    1.1],       [  10. ,   16. ,   67. ,    0.9],       [  28. ,   11. ,   70. ,    0.7],       [  32. ,    8. ,   71. ,    1. ],       [  47. ,    8. ,   65. ,    1.4],       [  60. ,   14. ,   67. ,    1.3],       [  78. ,   10. ,   66. ,    1.1],       [  90. ,   15. ,   65. ,    1.1],       [  95. ,   11. ,   68. ,    0.6],       [  -5. ,   29. ,   69. ,    0.7],       [  12. ,   21. ,   72. ,    1.2],       [  25. ,   28. ,   69. ,    1.4],       [  37. ,   28. ,   66. ,    1.4],       [  46. ,   25. ,   74. ,    1.3],       [  65. ,   21. ,   72. ,    1.1],       [  71. ,   27. ,   70. ,    1.4],       [  90. ,   22. ,   68. ,    1.3],       [ 104. ,   28. ,   69. ,    0.5],       [  -5. ,   39. ,   74. ,    1.3],       [  10. ,   42. ,   71. ,    1.1],       [  28. ,   33. ,   70. ,    1.4],       [  35. ,   40. ,   74. ,    0.6],       [  53. ,   41. ,   68. ,    0.6],       [  61. ,   34. ,   73. ,    0.5],       [  74. ,   36. ,   74. ,    0.6],       [  88. ,   32. ,   69. ,    0.6],       [  97. ,   35. ,   69. ,    1.4],       [  -3. ,   51. ,   68. ,    1.2],       [   8. ,   51. ,   69. ,    0.6],       [  21. ,   53. ,   66. ,    1.2],       [  36. ,   52. ,   70. ,    1.3],       [  47. ,   54. ,   66. ,    0.8],       [  57. ,   48. ,   74. ,    0.9],       [  70. ,   47. ,   70. ,    0.9],       [  85. ,   50. ,   71. ,    1. ],       [ 100. ,   52. ,   66. ,    1.4],       [  -4. ,   59. ,   68. ,    0.6],       [   9. ,   60. ,   66. ,    0.7],       [  24. ,   58. ,   69. ,    0.7],       [  36. ,   67. ,   69. ,    1. ],       [  51. ,   63. ,   66. ,    1.2],       [  64. ,   63. ,   72. ,    1.1],       [  70. ,   63. ,   70. ,    1.1],       [  91. ,   63. ,   69. ,    1. ],       [ 103. ,   66. ,   70. ,    0.6],       [  -4. ,   71. ,   73. ,    1.2],       [  17. ,   78. ,   72. ,    1.1],       [  24. ,   74. ,   72. ,    0.9],       [  33. ,   76. ,   74. ,    1.4],       [  50. ,   79. ,   70. ,    1.2],       [  60. ,   71. ,   72. ,    1.4],       [  78. ,   74. ,   70. ,    1.1],       [  86. ,   75. ,   72. ,    1.3],       [  98. ,   75. ,   69. ,    1.1],       [  -3. ,   91. ,   73. ,    1.3],       [  16. ,   90. ,   69. ,    1. ],       [  28. ,   85. ,   73. ,    1.2],       [  35. ,   92. ,   65. ,    1. ],       [  45. ,   89. ,   66. ,    0.5],       [  59. ,   88. ,   71. ,    0.5],       [  79. ,   85. ,   73. ,    1.2],       [  84. ,   86. ,   72. ,    1.3],       [ 101. ,   89. ,   65. ,    1. ],       [  -1. ,   99. ,   74. ,    1.2],       [  16. ,  100. ,   65. ,    1.5],       [  20. ,  102. ,   68. ,    0.6],       [  38. ,  102. ,   69. ,    1.3],       [  53. ,   96. ,   74. ,    1.3],       [  67. ,  101. ,   66. ,    0.9],       [  74. ,   95. ,   72. ,    1.1],       [  89. ,  102. ,   72. ,    0.6],       [  98. ,  104. ,   70. ,    1.2],       [   1. ,    2. ,   75. ,    0.7],       [  15. ,   -5. ,   80. ,    1.1],       [  25. ,    1. ,   76. ,    1.1],       [  36. ,   -2. ,   79. ,    1. ],       [  46. ,   -3. ,   82. ,    1.4],       [  57. ,   -4. ,   75. ,    0.7],       [  79. ,    1. ,   77. ,    0.9],       [  83. ,    0. ,   81. ,    0.9],       [  96. ,   -2. ,   79. ,    1.2],       [   4. ,   16. ,   79. ,    1. ],       [  14. ,   10. ,   80. ,    0.6],       [  27. ,    8. ,   78. ,    1.2],       [  40. ,   11. ,   80. ,    0.5],       [  49. ,    9. ,   81. ,    1.2],       [  57. ,    8. ,   82. ,    1.4],       [  75. ,   14. ,   82. ,    1.4],       [  86. ,   15. ,   84. ,    0.6],       [  97. ,   16. ,   75. ,    1.1],       [  -2. ,   22. ,   82. ,    0.8],       [  11. ,   20. ,   77. ,    0.7],       [  20. ,   26. ,   83. ,    0.9],       [  34. ,   22. ,   75. ,    1.5],       [  53. ,   20. ,   76. ,    0.6],       [  61. ,   25. ,   82. ,    1. ],       [  77. ,   28. ,   83. ,    0.9],       [  85. ,   29. ,   78. ,    1.1],       [ 101. ,   27. ,   84. ,    1.2],       [  -3. ,   38. ,   82. ,    1.2],       [  11. ,   38. ,   83. ,    0.5],       [  23. ,   36. ,   82. ,    0.7],       [  37. ,   33. ,   81. ,    1.2],       [  51. ,   39. ,   83. ,    1.2],       [  60. ,   36. ,   80. ,    1. ],       [  72. ,   36. ,   80. ,    0.9],       [  84. ,   36. ,   76. ,    0.6],       [  97. ,   35. ,   84. ,    1.4],       [   3. ,   52. ,   80. ,    1.4],       [  13. ,   47. ,   81. ,    0.9],       [  27. ,   54. ,   75. ,    1. ],       [  41. ,   51. ,   82. ,    1.4],       [  50. ,   47. ,   75. ,    0.5],       [  60. ,   50. ,   75. ,    1. ],       [  77. ,   45. ,   76. ,    1. ],       [  86. ,   48. ,   79. ,    1.2],       [ 103. ,   50. ,   75. ,    0.6],       [  -1. ,   58. ,   81. ,    1.4],       [  15. ,   61. ,   82. ,    1.2],       [  26. ,   61. ,   75. ,    0.5],       [  37. ,   62. ,   76. ,    1.1],       [  49. ,   63. ,   82. ,    0.5],       [  65. ,   66. ,   79. ,    1.3],       [  73. ,   66. ,   76. ,    0.9],       [  82. ,   58. ,   78. ,    0.8],       [ 101. ,   58. ,   79. ,    1.3],       [  -4. ,   75. ,   78. ,    0.6],       [   9. ,   73. ,   82. ,    1.1],       [  29. ,   77. ,   83. ,    0.9],       [  32. ,   77. ,   84. ,    0.9],       [  51. ,   78. ,   83. ,    1.3],       [  65. ,   78. ,   84. ,    0.6],       [  79. ,   77. ,   76. ,    1.2],       [  84. ,   76. ,   84. ,    1.5],       [ 101. ,   79. ,   79. ,    1.1],       [  -2. ,   86. ,   84. ,    0.7],       [  16. ,   90. ,   80. ,    0.7],       [  20. ,   89. ,   83. ,    1.3],       [  33. ,   92. ,   75. ,    0.9],       [  49. ,   86. ,   78. ,    0.6],       [  65. ,   84. ,   78. ,    0.8],       [  73. ,   83. ,   82. ,    0.9],       [  88. ,   88. ,   75. ,    1.2],       [ 100. ,   88. ,   75. ,    1. ],       [  -3. ,   99. ,   75. ,    1.1],       [   8. ,  101. ,   84. ,    1.5],       [  26. ,  103. ,   79. ,    1.3],       [  36. ,  102. ,   80. ,    0.9],       [  52. ,  102. ,   78. ,    0.6],       [  60. ,   98. ,   81. ,    1.4],       [  77. ,  100. ,   77. ,    1.3],       [  90. ,  102. ,   77. ,    0.6],       [ 100. ,   97. ,   76. ,    1.2],       [  -4. ,    3. ,   90. ,    1.4],       [  17. ,   -5. ,   91. ,    1.2],       [  23. ,    2. ,   93. ,    1. ],       [  37. ,    4. ,   86. ,    1.1],       [  52. ,   -1. ,   89. ,    1.1],       [  64. ,    2. ,   85. ,    1.5],       [  74. ,   -5. ,   86. ,    0.6],       [  90. ,   -4. ,   86. ,    0.9],       [ 100. ,   -5. ,   86. ,    1. ],       [  -1. ,   11. ,   86. ,    1.4],       [  10. ,   17. ,   87. ,    0.9],       [  25. ,   10. ,   87. ,    0.7],       [  33. ,   15. ,   94. ,    1.1],       [  50. ,   10. ,   85. ,    1. ],       [  59. ,   17. ,   87. ,    0.8],       [  74. ,    9. ,   94. ,    1.1],       [  89. ,   15. ,   88. ,    0.8],       [  99. ,   15. ,   86. ,    0.9],       [  -2. ,   22. ,   94. ,    1.1],       [  12. ,   29. ,   89. ,    0.9],       [  21. ,   29. ,   85. ,    1.4],       [  36. ,   22. ,   94. ,    1.3],       [  50. ,   28. ,   86. ,    0.6],       [  65. ,   26. ,   92. ,    1.3],       [  71. ,   21. ,   93. ,    1. ],       [  90. ,   28. ,   85. ,    0.7],       [ 101. ,   20. ,   93. ,    0.6],       [   4. ,   37. ,   94. ,    1.2],       [  13. ,   33. ,   93. ,    1.1],       [  29. ,   32. ,   92. ,    0.8],       [  40. ,   37. ,   86. ,    1.2],       [  51. ,   37. ,   94. ,    1.4],       [  59. ,   40. ,   94. ,    0.5],       [  73. ,   42. ,   94. ,    0.7],       [  90. ,   41. ,   91. ,    1.4],       [ 103. ,   37. ,   93. ,    1.3],       [   3. ,   53. ,   91. ,    0.8],       [   7. ,   45. ,   86. ,    1.5],       [  20. ,   54. ,   87. ,    0.8],       [  39. ,   46. ,   93. ,    1. ],       [  50. ,   52. ,   93. ,    0.7],       [  58. ,   52. ,   87. ,    1.3],       [  78. ,   54. ,   86. ,    1.1],       [  84. ,   46. ,   87. ,    0.5],       [  97. ,   54. ,   88. ,    1.1],       [  -2. ,   66. ,   85. ,    1.5],       [   9. ,   59. ,   94. ,    1.5],       [  22. ,   61. ,   87. ,    1.2],       [  40. ,   60. ,   88. ,    0.8],       [  45. ,   65. ,   90. ,    1.4],       [  64. ,   63. ,   87. ,    1.5],       [  77. ,   64. ,   90. ,    0.7],       [  82. ,   65. ,   91. ,    1.5],       [  96. ,   65. ,   85. ,    0.7],       [  -4. ,   78. ,   94. ,    0.8],       [  14. ,   79. ,   92. ,    1. ],       [  29. ,   78. ,   91. ,    1.4],       [  35. ,   72. ,   85. ,    0.6],       [  45. ,   78. ,   90. ,    1.3],       [  63. ,   76. ,   91. ,    0.5],       [  71. ,   77. ,   87. ,    1.2],       [  84. ,   77. ,   89. ,    1. ],       [ 104. ,   76. ,   93. ,    0.7],       [   2. ,   82. ,   86. ,    0.8],       [  11. ,   85. ,   93. ,    1.1],       [  24. ,   89. ,   85. ,    1. ],       [  35. ,   86. ,   87. ,    0.7],       [  46. ,   86. ,   91. ,    1.4],       [  66. ,   83. ,   87. ,    1.1],       [  74. ,   89. ,   91. ,    1. ],       [  89. ,   88. ,   87. ,    0.7],       [  96. ,   84. ,   92. ,    1.3],       [  -3. ,  100. ,   90. ,    0.9],       [  11. ,   96. ,   90. ,    0.7],       [  25. ,  103. ,   89. ,    1. ],       [  35. ,   95. ,   86. ,    1.3],       [  49. ,  103. ,   88. ,    0.5],       [  61. ,   99. ,   90. ,    1. ],       [  79. ,   95. ,   91. ,    1.4],       [  92. ,  103. ,   92. ,    1. ],       [  99. ,  101. ,   85. ,    1.3],       [   0. ,   -1. ,  104. ,    0.5],       [  15. ,    0. ,   99. ,    0.6],       [  20. ,   -1. ,  104. ,    1.2],       [  40. ,   -3. ,  104. ,    1.5],       [  48. ,    4. ,  104. ,    0.7],       [  57. ,   -1. ,   95. ,    0.7],       [  77. ,    0. ,   97. ,    0.9],       [  91. ,   -1. ,  102. ,    0.6],       [ 102. ,   -2. ,   97. ,    1.3],       [  -1. ,   15. ,  101. ,    0.9],       [  16. ,   13. ,   99. ,    1. ],       [  21. ,   14. ,   99. ,    0.6],       [  35. ,   11. ,   98. ,    1.3],       [  52. ,   17. ,   96. ,    0.7],       [  64. ,   13. ,  104. ,    1.5],       [  70. ,    9. ,   97. ,    0.8],       [  83. ,    9. ,   95. ,    0.9],       [ 104. ,    7. ,   99. ,    1.5],       [   0. ,   27. ,   96. ,    1.3],       [  16. ,   24. ,   95. ,    1.2],       [  27. ,   27. ,  100. ,    1.1],       [  34. ,   20. ,  104. ,    0.6],       [  50. ,   29. ,   96. ,    0.8],       [  59. ,   23. ,   97. ,    1. ],       [  79. ,   23. ,   95. ,    0.7],       [  84. ,   28. ,  102. ,    0.9],       [ 103. ,   29. ,  100. ,    1.1],       [  -2. ,   37. ,  100. ,    0.7],       [  10. ,   37. ,  104. ,    1.1],       [  23. ,   38. ,  101. ,    0.6],       [  37. ,   34. ,  100. ,    0.8],       [  49. ,   41. ,   98. ,    1.1],       [  63. ,   40. ,   99. ,    0.7],       [  75. ,   34. ,  102. ,    0.7],       [  87. ,   40. ,   96. ,    0.5],       [  95. ,   33. ,  101. ,    0.8],       [  -3. ,   50. ,  101. ,    1.3],       [  10. ,   51. ,  104. ,    1.1],       [  26. ,   48. ,  102. ,    1.2],       [  36. ,   52. ,  103. ,    0.8],       [  50. ,   49. ,  103. ,    1.4],       [  61. ,   53. ,  104. ,    0.6],       [  79. ,   49. ,  102. ,    1.1],       [  88. ,   52. ,  100. ,    0.8],       [ 103. ,   51. ,   97. ,    0.7],       [   2. ,   57. ,   95. ,    1.2],       [  13. ,   59. ,  104. ,    1.5],       [  24. ,   59. ,  104. ,    1.3],       [  41. ,   58. ,   99. ,    1.5],       [  46. ,   63. ,   96. ,    0.6],       [  62. ,   59. ,   95. ,    0.6],       [  77. ,   59. ,  102. ,    0.8],       [  85. ,   62. ,  103. ,    0.9],       [ 100. ,   67. ,  100. ,    1.4],       [  -2. ,   79. ,   97. ,    1.4],       [  14. ,   73. ,  102. ,    1.4],       [  20. ,   74. ,  101. ,    1.5],       [  41. ,   76. ,   97. ,    0.8],       [  54. ,   77. ,  103. ,    1.1],       [  64. ,   79. ,   97. ,    1.1],       [  78. ,   74. ,  102. ,    0.6],       [  91. ,   73. ,   95. ,    0.8],       [ 103. ,   75. ,   99. ,    1.3],       [   4. ,   90. ,   95. ,    0.9],       [  15. ,   84. ,  100. ,    1. ],       [  22. ,   88. ,   97. ,    0.8],       [  37. ,   86. ,  104. ,    0.7],       [  46. ,   86. ,   97. ,    1. ],       [  58. ,   89. ,   96. ,    0.6],       [  72. ,   82. ,  102. ,    1.3],       [  90. ,   88. ,  101. ,    1.1],       [ 100. ,   87. ,   96. ,    0.9],       [   4. ,   97. ,  100. ,    0.8],       [  11. ,   99. ,   98. ,    0.6],       [  29. ,  100. ,   95. ,    0.7],       [  33. ,  104. ,   95. ,    0.7],       [  48. ,   96. ,  104. ,    1.3],       [  60. ,   97. ,   97. ,    1. ],       [  70. ,  103. ,   95. ,    0.6],       [  88. ,   98. ,  103. ,    1.2],       [ 103. ,  100. ,   99. ,    0.9]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  1.8,  3.1,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.3,  2.6,  4.2,  5.3,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 3.4,  1.3,  5.2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 3.400000
        pt2[...,1] -= 1.300000
        pt2[...,2] -= 5.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p577_rational(self):
        controlpoints = np.array([[  -1. ,    3. ,   -1. ,    1.3],       [  21. ,   -3. ,   -1. ,    0.9],       [  41. ,    4. ,   -2. ,    0.8],       [  60. ,    2. ,   -1. ,    1.3],       [  79. ,    4. ,    0. ,    0.9],       [ 103. ,    4. ,    1. ,    0.5],       [  -5. ,    9. ,    4. ,    1.4],       [  17. ,   16. ,   -4. ,    0.9],       [  38. ,   13. ,   -3. ,    1.1],       [  63. ,   16. ,   -2. ,    0.6],       [  76. ,   11. ,    1. ,    0.7],       [ 104. ,   16. ,    4. ,    1.2],       [  -3. ,   29. ,   -3. ,    1. ],       [  20. ,   31. ,   -3. ,    0.9],       [  44. ,   28. ,   -3. ,    1.5],       [  64. ,   31. ,   -5. ,    0.5],       [  75. ,   33. ,   -5. ,    0.6],       [ 100. ,   31. ,    2. ,    1.4],       [   0. ,   43. ,   -3. ,    1.4],       [  20. ,   42. ,   -1. ,    0.5],       [  37. ,   47. ,    0. ,    0.9],       [  56. ,   46. ,   -2. ,    1.2],       [  84. ,   42. ,   -3. ,    0.6],       [ 103. ,   42. ,   -1. ,    1. ],       [   4. ,   61. ,    1. ,    1.4],       [  15. ,   59. ,   -1. ,    1.2],       [  39. ,   57. ,    1. ,    0.6],       [  60. ,   54. ,   -4. ,    1. ],       [  78. ,   60. ,   -5. ,    1.4],       [ 100. ,   61. ,   -5. ,    1.1],       [   3. ,   68. ,    4. ,    0.7],       [  16. ,   75. ,    3. ,    0.9],       [  37. ,   68. ,    1. ,    0.6],       [  56. ,   70. ,    0. ,    0.7],       [  77. ,   67. ,    4. ,    1.5],       [  99. ,   67. ,    2. ,    1.5],       [   3. ,   86. ,    4. ,    0.6],       [  17. ,   90. ,   -4. ,    1. ],       [  39. ,   86. ,    3. ,    0.8],       [  55. ,   87. ,    1. ,    0.7],       [  81. ,   88. ,    2. ,    0.7],       [  95. ,   85. ,    3. ,    1.3],       [  -5. ,  101. ,    0. ,    1.2],       [  17. ,   98. ,    4. ,    0.9],       [  40. ,   98. ,   -1. ,    0.5],       [  55. ,   98. ,   -3. ,    0.6],       [  77. ,   97. ,    0. ,    0.7],       [  95. ,  100. ,    1. ,    0.6],       [  -4. ,   -3. ,    7. ,    1.1],       [  20. ,    3. ,   15. ,    1.4],       [  35. ,    0. ,   13. ,    1.3],       [  56. ,   -3. ,    7. ,    0.9],       [  76. ,   -2. ,   15. ,    0.9],       [  99. ,   -1. ,    7. ,    1.3],       [  -3. ,   12. ,    6. ,    0.6],       [  15. ,   12. ,    7. ,    1.1],       [  44. ,   15. ,    8. ,    0.5],       [  64. ,   12. ,    9. ,    0.8],       [  77. ,   13. ,    9. ,    0.9],       [  95. ,   13. ,   11. ,    0.5],       [  -4. ,   24. ,    8. ,    0.8],       [  24. ,   27. ,   10. ,    1.5],       [  40. ,   32. ,   11. ,    0.5],       [  59. ,   27. ,    6. ,    1.1],       [  84. ,   30. ,    8. ,    1.2],       [  97. ,   25. ,   13. ,    1. ],       [   1. ,   43. ,    7. ,    0.8],       [  22. ,   38. ,    9. ,    1.2],       [  41. ,   46. ,   15. ,    1.2],       [  64. ,   42. ,   10. ,    1.5],       [  76. ,   39. ,    8. ,    0.7],       [  95. ,   40. ,    8. ,    1.3],       [  -2. ,   54. ,   13. ,    0.9],       [  21. ,   52. ,   15. ,    0.6],       [  35. ,   59. ,   15. ,    1. ],       [  59. ,   60. ,   16. ,    0.9],       [  84. ,   59. ,   14. ,    1.5],       [ 100. ,   55. ,   12. ,    0.5],       [   3. ,   73. ,   12. ,    1.3],       [  23. ,   70. ,   13. ,    0.8],       [  36. ,   72. ,    8. ,    1.1],       [  56. ,   71. ,    7. ,    0.7],       [  81. ,   68. ,    9. ,    1.1],       [ 100. ,   69. ,   12. ,    1.1],       [   1. ,   84. ,   13. ,    1.3],       [  20. ,   80. ,    9. ,    0.9],       [  38. ,   90. ,    8. ,    0.7],       [  63. ,   90. ,    9. ,    1. ],       [  81. ,   84. ,   13. ,    0.8],       [  95. ,   88. ,   13. ,    1. ],       [   1. ,   96. ,   14. ,    1.5],       [  19. ,  104. ,   11. ,    1. ],       [  42. ,  104. ,    6. ,    0.6],       [  59. ,   95. ,    9. ,    1.4],       [  80. ,  101. ,    7. ,    1.2],       [ 103. ,  102. ,   14. ,    1.2],       [   4. ,    3. ,   20. ,    0.5],       [  23. ,   -3. ,   20. ,    1.4],       [  44. ,   -1. ,   20. ,    0.5],       [  55. ,   -4. ,   17. ,    0.6],       [  76. ,    0. ,   24. ,    0.8],       [  96. ,   -2. ,   24. ,    0.8],       [  -3. ,   14. ,   23. ,    0.5],       [  22. ,   15. ,   20. ,    1.3],       [  41. ,   10. ,   22. ,    1.1],       [  63. ,   19. ,   23. ,    0.5],       [  75. ,   10. ,   25. ,    1. ],       [  99. ,   17. ,   21. ,    0.9],       [   2. ,   23. ,   24. ,    1. ],       [  22. ,   32. ,   26. ,    1.4],       [  38. ,   31. ,   24. ,    0.7],       [  59. ,   29. ,   22. ,    0.7],       [  80. ,   27. ,   26. ,    1.3],       [ 104. ,   26. ,   18. ,    0.8],       [  -4. ,   41. ,   26. ,    1.4],       [  18. ,   42. ,   25. ,    0.8],       [  37. ,   39. ,   17. ,    1.3],       [  62. ,   40. ,   22. ,    0.9],       [  82. ,   41. ,   23. ,    1. ],       [  95. ,   47. ,   23. ,    0.8],       [  -4. ,   54. ,   17. ,    0.8],       [  18. ,   55. ,   19. ,    1. ],       [  42. ,   52. ,   20. ,    1.2],       [  60. ,   59. ,   24. ,    1.2],       [  77. ,   54. ,   17. ,    1.5],       [ 100. ,   52. ,   23. ,    0.8],       [   3. ,   72. ,   20. ,    1.4],       [  24. ,   74. ,   26. ,    0.8],       [  41. ,   71. ,   25. ,    0.7],       [  64. ,   68. ,   24. ,    1.2],       [  78. ,   71. ,   23. ,    1. ],       [ 101. ,   68. ,   24. ,    1.1],       [   3. ,   86. ,   25. ,    1.2],       [  19. ,   86. ,   26. ,    1.2],       [  43. ,   90. ,   20. ,    1.1],       [  59. ,   86. ,   20. ,    0.9],       [  76. ,   84. ,   22. ,    1.2],       [ 101. ,   88. ,   22. ,    0.8],       [   1. ,   99. ,   22. ,    1.1],       [  21. ,   99. ,   25. ,    1.2],       [  35. ,   95. ,   26. ,    1.5],       [  57. ,  103. ,   18. ,    1.2],       [  80. ,   98. ,   20. ,    1.1],       [ 101. ,  100. ,   21. ,    1.5],       [  -4. ,   -2. ,   29. ,    0.6],       [  21. ,   -4. ,   37. ,    1.2],       [  37. ,   -4. ,   36. ,    0.8],       [  64. ,    4. ,   33. ,    0.5],       [  81. ,   -1. ,   32. ,    1. ],       [  99. ,   -1. ,   32. ,    0.8],       [   4. ,   17. ,   28. ,    1.1],       [  24. ,    9. ,   35. ,    0.5],       [  41. ,   18. ,   28. ,    1.3],       [  64. ,   18. ,   33. ,    0.8],       [  76. ,   12. ,   28. ,    0.8],       [  98. ,   18. ,   28. ,    1. ],       [  -4. ,   31. ,   34. ,    0.5],       [  24. ,   31. ,   36. ,    0.6],       [  35. ,   30. ,   36. ,    0.8],       [  55. ,   33. ,   34. ,    1.1],       [  83. ,   31. ,   30. ,    0.5],       [ 103. ,   32. ,   36. ,    0.7],       [  -4. ,   47. ,   34. ,    0.7],       [  15. ,   42. ,   33. ,    0.6],       [  44. ,   41. ,   36. ,    0.8],       [  57. ,   45. ,   37. ,    1.3],       [  76. ,   38. ,   32. ,    0.8],       [ 102. ,   46. ,   36. ,    1.4],       [  -2. ,   59. ,   30. ,    0.6],       [  15. ,   53. ,   28. ,    1.1],       [  41. ,   60. ,   31. ,    1. ],       [  59. ,   55. ,   31. ,    0.9],       [  76. ,   61. ,   29. ,    1.1],       [  98. ,   53. ,   34. ,    1.1],       [  -4. ,   67. ,   37. ,    1.2],       [  23. ,   67. ,   30. ,    0.7],       [  42. ,   73. ,   35. ,    1.4],       [  55. ,   70. ,   37. ,    1.1],       [  78. ,   71. ,   34. ,    1. ],       [ 101. ,   75. ,   30. ,    1. ],       [  -1. ,   81. ,   34. ,    1.2],       [  16. ,   82. ,   34. ,    0.9],       [  36. ,   82. ,   34. ,    1.4],       [  56. ,   85. ,   29. ,    1.5],       [  79. ,   85. ,   35. ,    0.8],       [  99. ,   81. ,   29. ,    0.5],       [  -5. ,   98. ,   30. ,    1.1],       [  20. ,   97. ,   32. ,    1.5],       [  38. ,   96. ,   30. ,    0.9],       [  60. ,   95. ,   34. ,    1.2],       [  83. ,  104. ,   32. ,    1. ],       [  96. ,  104. ,   31. ,    1.2],       [  -2. ,    1. ,   44. ,    1.3],       [  24. ,    4. ,   41. ,    0.9],       [  40. ,    0. ,   45. ,    0.6],       [  62. ,    4. ,   42. ,    0.8],       [  78. ,   -4. ,   49. ,    1.3],       [ 100. ,    1. ,   49. ,    1.3],       [  -1. ,   18. ,   45. ,    0.6],       [  16. ,   11. ,   39. ,    1.1],       [  44. ,   14. ,   44. ,    1.2],       [  64. ,   14. ,   40. ,    1. ],       [  79. ,   11. ,   46. ,    1.2],       [ 102. ,   14. ,   44. ,    1. ],       [   3. ,   30. ,   49. ,    0.8],       [  19. ,   28. ,   45. ,    0.8],       [  36. ,   25. ,   49. ,    1. ],       [  57. ,   29. ,   45. ,    1.3],       [  84. ,   29. ,   43. ,    0.5],       [  98. ,   26. ,   44. ,    0.7],       [   4. ,   47. ,   41. ,    1. ],       [  17. ,   40. ,   45. ,    1. ],       [  40. ,   44. ,   44. ,    1.3],       [  57. ,   38. ,   41. ,    1.3],       [  80. ,   44. ,   45. ,    0.8],       [ 104. ,   41. ,   45. ,    0.8],       [   2. ,   54. ,   47. ,    0.8],       [  21. ,   57. ,   40. ,    0.6],       [  39. ,   61. ,   43. ,    0.8],       [  61. ,   54. ,   42. ,    0.6],       [  83. ,   52. ,   41. ,    1.3],       [ 103. ,   55. ,   47. ,    0.8],       [  -2. ,   74. ,   47. ,    1. ],       [  17. ,   68. ,   42. ,    0.7],       [  35. ,   74. ,   46. ,    1.2],       [  58. ,   69. ,   43. ,    1.1],       [  78. ,   72. ,   41. ,    1.5],       [ 101. ,   67. ,   40. ,    1.1],       [   3. ,   87. ,   49. ,    1.3],       [  19. ,   85. ,   48. ,    1.2],       [  35. ,   84. ,   42. ,    0.8],       [  60. ,   82. ,   45. ,    1.4],       [  76. ,   84. ,   47. ,    0.8],       [  97. ,   89. ,   48. ,    1.1],       [  -3. ,   99. ,   43. ,    0.5],       [  22. ,  102. ,   47. ,    1.4],       [  44. ,  100. ,   41. ,    0.7],       [  58. ,  101. ,   47. ,    1.3],       [  78. ,   99. ,   41. ,    1.1],       [ 100. ,   99. ,   45. ,    0.6],       [  -5. ,    1. ,   55. ,    0.5],       [  19. ,   -4. ,   56. ,    0.7],       [  44. ,   -5. ,   53. ,    1.3],       [  61. ,   -3. ,   53. ,    0.8],       [  81. ,    0. ,   51. ,    1.4],       [ 102. ,    4. ,   57. ,    0.6],       [   0. ,   10. ,   56. ,    1.3],       [  21. ,   13. ,   59. ,    1. ],       [  35. ,   17. ,   53. ,    0.7],       [  62. ,   17. ,   60. ,    0.6],       [  81. ,   12. ,   54. ,    1.4],       [  95. ,    9. ,   57. ,    0.8],       [  -2. ,   32. ,   54. ,    0.9],       [  18. ,   26. ,   52. ,    1.1],       [  42. ,   32. ,   54. ,    1.4],       [  55. ,   29. ,   52. ,    0.6],       [  77. ,   31. ,   58. ,    0.8],       [ 104. ,   33. ,   54. ,    1. ],       [  -5. ,   39. ,   53. ,    0.7],       [  22. ,   44. ,   55. ,    1.2],       [  35. ,   38. ,   54. ,    0.6],       [  58. ,   40. ,   55. ,    1.4],       [  75. ,   43. ,   53. ,    1.4],       [  95. ,   44. ,   57. ,    1. ],       [   2. ,   53. ,   58. ,    1.2],       [  15. ,   54. ,   57. ,    0.8],       [  43. ,   60. ,   58. ,    0.6],       [  63. ,   60. ,   53. ,    1.1],       [  77. ,   53. ,   53. ,    1. ],       [  96. ,   60. ,   59. ,    1. ],       [   0. ,   75. ,   55. ,    1.2],       [  22. ,   68. ,   51. ,    0.7],       [  44. ,   73. ,   52. ,    1. ],       [  61. ,   73. ,   56. ,    0.6],       [  77. ,   72. ,   58. ,    0.6],       [  96. ,   73. ,   51. ,    1.2],       [  -2. ,   83. ,   59. ,    1.3],       [  16. ,   86. ,   58. ,    0.8],       [  39. ,   88. ,   53. ,    0.5],       [  55. ,   89. ,   51. ,    1.4],       [  82. ,   89. ,   54. ,    1.4],       [  95. ,   85. ,   58. ,    0.6],       [  -2. ,   97. ,   53. ,    1.4],       [  20. ,   99. ,   51. ,    0.6],       [  39. ,  103. ,   56. ,    1.2],       [  63. ,  100. ,   51. ,    0.8],       [  76. ,  104. ,   58. ,    1. ],       [  95. ,  103. ,   52. ,    1. ],       [   0. ,   -5. ,   66. ,    0.5],       [  20. ,    3. ,   66. ,    0.8],       [  40. ,   -3. ,   62. ,    0.8],       [  58. ,   -2. ,   68. ,    0.6],       [  83. ,   -4. ,   65. ,    1.1],       [ 103. ,    3. ,   70. ,    0.6],       [  -2. ,   14. ,   65. ,    0.5],       [  15. ,   14. ,   68. ,    1.1],       [  36. ,   11. ,   69. ,    1.1],       [  61. ,   11. ,   68. ,    1.5],       [  80. ,   14. ,   65. ,    1.3],       [ 102. ,   10. ,   71. ,    0.6],       [   2. ,   28. ,   68. ,    0.6],       [  20. ,   31. ,   66. ,    1.5],       [  43. ,   25. ,   65. ,    0.9],       [  61. ,   32. ,   64. ,    0.6],       [  80. ,   31. ,   71. ,    1.2],       [ 101. ,   28. ,   70. ,    1.3],       [   3. ,   39. ,   65. ,    1.4],       [  15. ,   40. ,   71. ,    0.7],       [  42. ,   47. ,   64. ,    1.1],       [  57. ,   41. ,   63. ,    0.9],       [  82. ,   42. ,   70. ,    0.7],       [ 101. ,   43. ,   65. ,    1.3],       [   3. ,   56. ,   63. ,    0.8],       [  19. ,   56. ,   68. ,    0.9],       [  39. ,   58. ,   68. ,    1.4],       [  58. ,   54. ,   64. ,    1. ],       [  84. ,   57. ,   63. ,    0.7],       [  95. ,   52. ,   66. ,    1.4],       [   1. ,   69. ,   61. ,    0.6],       [  16. ,   74. ,   62. ,    1.2],       [  44. ,   74. ,   64. ,    0.9],       [  58. ,   66. ,   70. ,    0.6],       [  76. ,   72. ,   68. ,    0.6],       [ 100. ,   68. ,   62. ,    0.9],       [   0. ,   85. ,   63. ,    0.9],       [  16. ,   89. ,   65. ,    1.3],       [  44. ,   82. ,   66. ,    0.5],       [  63. ,   85. ,   68. ,    0.9],       [  78. ,   82. ,   61. ,    0.6],       [ 102. ,   82. ,   66. ,    0.5],       [   3. ,  103. ,   67. ,    0.8],       [  17. ,   97. ,   69. ,    1.5],       [  40. ,   98. ,   64. ,    1.1],       [  55. ,   96. ,   61. ,    1.2],       [  76. ,   97. ,   68. ,    1.3],       [ 102. ,  102. ,   64. ,    1.4],       [   0. ,    4. ,   79. ,    0.9],       [  19. ,   -5. ,   78. ,    0.9],       [  39. ,   -2. ,   82. ,    1.1],       [  63. ,    3. ,   78. ,    1.1],       [  82. ,   -2. ,   78. ,    0.9],       [  96. ,   -1. ,   82. ,    0.5],       [  -3. ,   11. ,   82. ,    1.1],       [  22. ,   13. ,   73. ,    1. ],       [  40. ,   18. ,   72. ,    0.9],       [  58. ,   12. ,   75. ,    1. ],       [  81. ,   14. ,   75. ,    1.4],       [  99. ,   10. ,   75. ,    0.5],       [   3. ,   29. ,   79. ,    1.1],       [  18. ,   24. ,   77. ,    1.5],       [  44. ,   28. ,   75. ,    0.8],       [  61. ,   30. ,   76. ,    1.2],       [  83. ,   25. ,   72. ,    1.5],       [  95. ,   26. ,   80. ,    1.3],       [   3. ,   39. ,   80. ,    1. ],       [  16. ,   46. ,   81. ,    0.7],       [  42. ,   41. ,   79. ,    0.8],       [  55. ,   39. ,   81. ,    1.3],       [  80. ,   45. ,   76. ,    0.5],       [  96. ,   43. ,   77. ,    1.2],       [  -3. ,   56. ,   79. ,    0.9],       [  18. ,   57. ,   79. ,    0.6],       [  36. ,   58. ,   80. ,    1.1],       [  55. ,   60. ,   76. ,    0.6],       [  78. ,   54. ,   79. ,    1. ],       [ 104. ,   59. ,   81. ,    1.4],       [   1. ,   72. ,   80. ,    0.7],       [  21. ,   68. ,   74. ,    0.5],       [  38. ,   75. ,   78. ,    0.9],       [  64. ,   71. ,   77. ,    0.9],       [  78. ,   66. ,   78. ,    1.4],       [ 104. ,   66. ,   74. ,    1.2],       [   3. ,   80. ,   82. ,    0.8],       [  22. ,   89. ,   76. ,    1.4],       [  37. ,   84. ,   74. ,    1.3],       [  59. ,   86. ,   79. ,    0.6],       [  76. ,   81. ,   80. ,    1.1],       [  98. ,   88. ,   73. ,    0.6],       [   1. ,  101. ,   74. ,    0.9],       [  21. ,   98. ,   80. ,    0.6],       [  42. ,   99. ,   72. ,    1.5],       [  55. ,   99. ,   80. ,    0.6],       [  79. ,   95. ,   79. ,    1. ],       [  97. ,  101. ,   73. ,    1. ],       [   2. ,    1. ,   88. ,    1.4],       [  17. ,    1. ,   87. ,    1.5],       [  36. ,    0. ,   86. ,    0.5],       [  62. ,    2. ,   84. ,    1. ],       [  83. ,   -4. ,   91. ,    1.2],       [  98. ,    3. ,   83. ,    1.2],       [  -1. ,   11. ,   87. ,    1.5],       [  24. ,   13. ,   85. ,    1. ],       [  37. ,   12. ,   91. ,    1.4],       [  59. ,   17. ,   85. ,    1. ],       [  77. ,   14. ,   87. ,    1.2],       [ 100. ,   18. ,   91. ,    0.5],       [  -1. ,   28. ,   89. ,    0.7],       [  24. ,   31. ,   85. ,    0.6],       [  44. ,   29. ,   93. ,    0.6],       [  56. ,   31. ,   93. ,    1.3],       [  76. ,   30. ,   86. ,    0.8],       [ 104. ,   29. ,   84. ,    0.6],       [   3. ,   47. ,   85. ,    1.3],       [  22. ,   47. ,   83. ,    1.2],       [  42. ,   40. ,   90. ,    1.4],       [  63. ,   42. ,   84. ,    1.1],       [  84. ,   45. ,   93. ,    1.4],       [ 103. ,   44. ,   86. ,    1.4],       [  -4. ,   60. ,   85. ,    1.2],       [  24. ,   61. ,   89. ,    1.4],       [  37. ,   57. ,   91. ,    1.2],       [  58. ,   56. ,   84. ,    0.6],       [  78. ,   60. ,   89. ,    1.3],       [  98. ,   56. ,   92. ,    0.5],       [  -3. ,   75. ,   85. ,    1. ],       [  19. ,   75. ,   87. ,    1.4],       [  43. ,   73. ,   85. ,    0.6],       [  64. ,   69. ,   90. ,    1. ],       [  76. ,   73. ,   87. ,    1.1],       [ 104. ,   74. ,   86. ,    1.2],       [  -2. ,   81. ,   86. ,    1. ],       [  16. ,   82. ,   93. ,    0.6],       [  36. ,   81. ,   85. ,    0.9],       [  63. ,   84. ,   92. ,    1.3],       [  80. ,   88. ,   89. ,    0.5],       [ 102. ,   82. ,   85. ,    0.6],       [   0. ,  103. ,   87. ,    0.9],       [  18. ,   98. ,   84. ,    0.9],       [  44. ,  104. ,   87. ,    0.6],       [  61. ,  101. ,   91. ,    0.5],       [  79. ,   97. ,   88. ,    1. ],       [ 100. ,   95. ,   90. ,    1.4],       [   3. ,   -3. ,   97. ,    0.5],       [  22. ,   -4. ,  104. ,    0.5],       [  35. ,   -3. ,  104. ,    0.5],       [  56. ,    4. ,   96. ,    0.7],       [  77. ,    4. ,  100. ,    1. ],       [ 101. ,   -2. ,  103. ,    0.5],       [   2. ,   19. ,   95. ,    1.4],       [  20. ,   18. ,   97. ,    1. ],       [  38. ,   18. ,  104. ,    0.8],       [  59. ,   17. ,  104. ,    1.4],       [  77. ,   18. ,   99. ,    1.2],       [ 104. ,   17. ,  102. ,    0.8],       [   4. ,   27. ,   96. ,    1.5],       [  18. ,   24. ,   98. ,    1.3],       [  43. ,   30. ,   97. ,    0.5],       [  59. ,   27. ,  101. ,    0.6],       [  78. ,   24. ,   95. ,    0.5],       [ 101. ,   23. ,   95. ,    1.1],       [   4. ,   44. ,   96. ,    1.5],       [  15. ,   47. ,  103. ,    1.1],       [  41. ,   42. ,   99. ,    1.3],       [  60. ,   46. ,   95. ,    1.1],       [  83. ,   41. ,  103. ,    0.7],       [ 104. ,   40. ,   97. ,    1.1],       [   3. ,   55. ,   95. ,    0.5],       [  23. ,   57. ,   99. ,    1.4],       [  38. ,   54. ,   97. ,    1.2],       [  60. ,   59. ,  104. ,    1.4],       [  77. ,   55. ,   98. ,    1.4],       [ 102. ,   53. ,   96. ,    0.9],       [  -2. ,   74. ,  100. ,    1.4],       [  21. ,   69. ,   98. ,    1.5],       [  42. ,   71. ,  102. ,    1.4],       [  61. ,   69. ,   97. ,    0.8],       [  78. ,   73. ,  103. ,    1.3],       [ 102. ,   69. ,  101. ,    1.5],       [   2. ,   87. ,   96. ,    0.9],       [  20. ,   87. ,  101. ,    0.5],       [  39. ,   89. ,  104. ,    0.8],       [  62. ,   88. ,  103. ,    0.7],       [  76. ,   89. ,  102. ,    1.2],       [ 103. ,   85. ,   97. ,    1.5],       [   0. ,   98. ,   98. ,    1.5],       [  21. ,   96. ,   98. ,    1.3],       [  41. ,   95. ,   97. ,    1.1],       [  56. ,   96. ,   97. ,    1. ],       [  84. ,  102. ,   99. ,    0.9],       [  97. ,  103. ,  103. ,    1.1]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2. ,  2. ,  2. ,  2. ,  2. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.3,  3.1,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 7.8,  3.5,  4.3])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 7.800000
        pt2[...,1] /= 3.500000
        pt2[...,2] /= 4.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p577_rational(self):
        controlpoints = np.array([[   4. ,    1. ,    0. ,    1.3],       [   8. ,    0. ,   -1. ,    0.6],       [  23. ,   -2. ,   -4. ,    1. ],       [  35. ,   -1. ,    0. ,    1.3],       [  50. ,   -3. ,   -4. ,    0.6],       [  57. ,   -5. ,    2. ,    1. ],       [  73. ,   -4. ,   -1. ,    1.3],       [  85. ,   -4. ,   -5. ,    0.9],       [ 103. ,    2. ,    3. ,    0.7],       [   4. ,   11. ,    4. ,    1.2],       [   8. ,   14. ,   -4. ,    1.2],       [  27. ,   12. ,    3. ,    1. ],       [  39. ,    9. ,    3. ,    0.8],       [  47. ,    7. ,    3. ,    1.5],       [  64. ,   14. ,   -4. ,    0.5],       [  71. ,   15. ,   -2. ,    1.3],       [  88. ,   15. ,    3. ,    1.2],       [ 102. ,   13. ,    0. ,    0.6],       [   0. ,   17. ,   -2. ,    0.9],       [  10. ,   22. ,   -4. ,    0.5],       [  25. ,   27. ,   -3. ,    1.1],       [  40. ,   23. ,    4. ,    1.5],       [  49. ,   22. ,   -1. ,    0.7],       [  59. ,   21. ,   -3. ,    0.8],       [  71. ,   18. ,    3. ,    0.6],       [  90. ,   21. ,   -3. ,    0.8],       [ 103. ,   21. ,    4. ,    1.1],       [   4. ,   33. ,    4. ,    1.1],       [  16. ,   33. ,   -4. ,    0.8],       [  20. ,   31. ,   -4. ,    1.1],       [  39. ,   31. ,    2. ,    1.4],       [  48. ,   34. ,   -1. ,    0.6],       [  66. ,   34. ,    2. ,    0.5],       [  75. ,   34. ,   -1. ,    1.4],       [  89. ,   32. ,   -4. ,    1.4],       [ 100. ,   34. ,   -5. ,    1.1],       [   4. ,   46. ,   -2. ,    1.2],       [  15. ,   43. ,   -2. ,    1.5],       [  26. ,   44. ,    2. ,    1.5],       [  40. ,   41. ,    3. ,    1.4],       [  52. ,   40. ,    2. ,    1.4],       [  65. ,   46. ,    1. ,    1.1],       [  72. ,   39. ,    0. ,    1.3],       [  84. ,   45. ,   -4. ,    1.1],       [ 101. ,   40. ,    2. ,    1.2],       [   1. ,   53. ,    1. ,    1.2],       [  10. ,   57. ,    4. ,    0.6],       [  23. ,   55. ,   -3. ,    1.4],       [  36. ,   54. ,   -5. ,    0.5],       [  46. ,   53. ,    2. ,    0.7],       [  62. ,   52. ,    1. ,    1.4],       [  72. ,   53. ,   -1. ,    1. ],       [  88. ,   55. ,    1. ,    0.5],       [  99. ,   51. ,    3. ,    0.5],       [   4. ,   61. ,   -2. ,    1. ],       [   9. ,   70. ,    2. ,    0.9],       [  28. ,   68. ,   -1. ,    1.1],       [  40. ,   66. ,   -1. ,    0.8],       [  48. ,   66. ,    4. ,    0.8],       [  60. ,   64. ,   -2. ,    0.9],       [  75. ,   67. ,   -4. ,    0.9],       [  90. ,   64. ,   -3. ,    0.7],       [ 101. ,   65. ,   -5. ,    1.1],       [  -5. ,   74. ,   -1. ,    1.1],       [   8. ,   79. ,    0. ,    0.9],       [  22. ,   73. ,    1. ,    1.4],       [  38. ,   79. ,    4. ,    0.5],       [  45. ,   75. ,   -3. ,    0.9],       [  65. ,   77. ,    4. ,    1. ],       [  73. ,   73. ,   -3. ,    0.9],       [  84. ,   77. ,    2. ,    1.4],       [ 104. ,   73. ,   -1. ,    1.1],       [  -1. ,   87. ,    1. ,    1.1],       [  13. ,   90. ,   -5. ,    1.1],       [  26. ,   88. ,    1. ,    1.4],       [  37. ,   84. ,    3. ,    0.6],       [  48. ,   92. ,   -1. ,    0.7],       [  62. ,   93. ,    0. ,    0.5],       [  70. ,   90. ,    2. ,    0.9],       [  91. ,   85. ,    1. ,    0.9],       [ 104. ,   86. ,   -4. ,    0.6],       [  -3. ,  100. ,    1. ,    0.9],       [  14. ,   97. ,   -1. ,    0.8],       [  29. ,  101. ,   -4. ,    1.2],       [  34. ,   95. ,   -4. ,    1.2],       [  47. ,  100. ,    0. ,    1.5],       [  57. ,   97. ,   -2. ,    0.9],       [  73. ,  100. ,    3. ,    0.5],       [  86. ,   97. ,   -4. ,    1. ],       [ 101. ,  104. ,    4. ,    0.5],       [  -1. ,    2. ,    7. ,    1. ],       [  10. ,    0. ,   13. ,    1. ],       [  26. ,   -1. ,   10. ,    0.6],       [  40. ,   -4. ,   12. ,    0.8],       [  50. ,   -4. ,   11. ,    0.7],       [  58. ,   -3. ,    5. ,    0.5],       [  79. ,    3. ,    4. ,    0.8],       [  92. ,    0. ,    5. ,    0.6],       [ 100. ,    1. ,    7. ,    1.4],       [  -1. ,   11. ,    8. ,    0.5],       [   8. ,   13. ,   11. ,    1.4],       [  22. ,   14. ,   12. ,    0.9],       [  38. ,    9. ,    4. ,    1.3],       [  45. ,    9. ,    8. ,    0.7],       [  59. ,   10. ,    7. ,    1.3],       [  77. ,   11. ,    5. ,    1.1],       [  88. ,   14. ,    5. ,    1.1],       [ 101. ,    9. ,    4. ,    1.3],       [   2. ,   20. ,    7. ,    0.9],       [  12. ,   27. ,   11. ,    0.9],       [  25. ,   24. ,    4. ,    1.3],       [  33. ,   26. ,    7. ,    1.4],       [  51. ,   23. ,    6. ,    1.1],       [  63. ,   25. ,   10. ,    1.2],       [  71. ,   26. ,    7. ,    1.3],       [  90. ,   23. ,    9. ,    1.4],       [  97. ,   21. ,   11. ,    1.4],       [   0. ,   36. ,   10. ,    1.3],       [  12. ,   37. ,   10. ,    0.7],       [  24. ,   33. ,    4. ,    0.6],       [  32. ,   31. ,    6. ,    0.8],       [  51. ,   31. ,    6. ,    0.8],       [  59. ,   31. ,    8. ,    1.2],       [  77. ,   35. ,    8. ,    1.1],       [  91. ,   29. ,    7. ,    1.3],       [  99. ,   32. ,   12. ,    1.2],       [  -3. ,   40. ,   10. ,    1.2],       [  14. ,   48. ,    9. ,    0.9],       [  26. ,   48. ,    4. ,    0.5],       [  39. ,   47. ,   12. ,    0.6],       [  52. ,   48. ,    9. ,    0.7],       [  61. ,   48. ,    8. ,    0.6],       [  76. ,   43. ,    4. ,    0.5],       [  88. ,   42. ,    7. ,    0.8],       [ 103. ,   46. ,   13. ,    0.9],       [   1. ,   55. ,    7. ,    0.8],       [  13. ,   52. ,    5. ,    1.3],       [  27. ,   52. ,    8. ,    1.2],       [  40. ,   59. ,    5. ,    0.5],       [  47. ,   52. ,    6. ,    0.8],       [  58. ,   56. ,    6. ,    0.8],       [  75. ,   60. ,    5. ,    1.2],       [  88. ,   55. ,   12. ,    1.5],       [  98. ,   53. ,    9. ,    0.9],       [   2. ,   65. ,    8. ,    1.3],       [  15. ,   61. ,   10. ,    0.6],       [  20. ,   65. ,    4. ,    1.1],       [  41. ,   64. ,   10. ,    0.7],       [  51. ,   62. ,    6. ,    0.7],       [  66. ,   69. ,    8. ,    0.9],       [  72. ,   67. ,    9. ,    1.3],       [  88. ,   66. ,    5. ,    1.5],       [  95. ,   63. ,    6. ,    0.7],       [   1. ,   79. ,    9. ,    0.6],       [  16. ,   75. ,    7. ,    0.6],       [  24. ,   73. ,    6. ,    1.1],       [  33. ,   81. ,    5. ,    0.6],       [  53. ,   82. ,    6. ,    0.7],       [  58. ,   79. ,    9. ,    1.3],       [  72. ,   78. ,    6. ,    1.5],       [  86. ,   72. ,    7. ,    0.9],       [  99. ,   80. ,   12. ,    1.2],       [  -4. ,   84. ,    7. ,    0.6],       [  12. ,   92. ,    7. ,    1.4],       [  29. ,   86. ,    4. ,    1.1],       [  33. ,   86. ,    4. ,    0.7],       [  46. ,   91. ,    4. ,    0.8],       [  62. ,   92. ,    9. ,    0.6],       [  78. ,   84. ,   11. ,    1.2],       [  89. ,   86. ,    7. ,    1. ],       [ 100. ,   89. ,    9. ,    0.9],       [  -2. ,  101. ,    9. ,    1.3],       [   7. ,  101. ,   10. ,    1.2],       [  21. ,   98. ,    9. ,    1.3],       [  32. ,  100. ,    5. ,    1.4],       [  48. ,   97. ,   13. ,    0.6],       [  60. ,  104. ,   11. ,    1.4],       [  70. ,   96. ,   12. ,    1.4],       [  86. ,  101. ,   12. ,    1.1],       [ 100. ,   95. ,    4. ,    1. ],       [   0. ,   -4. ,   18. ,    1.2],       [  10. ,    1. ,   19. ,    1.2],       [  24. ,   -1. ,   16. ,    1. ],       [  37. ,   -1. ,   21. ,    0.7],       [  54. ,   -3. ,   17. ,    0.6],       [  59. ,   -1. ,   14. ,    1.2],       [  72. ,   -3. ,   14. ,    0.6],       [  88. ,    1. ,   22. ,    1.1],       [ 104. ,    4. ,   22. ,    1.4],       [  -4. ,   10. ,   20. ,    0.8],       [   8. ,   13. ,   18. ,    0.6],       [  21. ,   10. ,   21. ,    0.8],       [  34. ,   13. ,   22. ,    0.8],       [  45. ,   13. ,   13. ,    0.7],       [  57. ,   14. ,   20. ,    0.7],       [  77. ,   15. ,   20. ,    1.3],       [  88. ,   12. ,   15. ,    1.1],       [ 103. ,   14. ,   22. ,    1.2],       [  -1. ,   18. ,   22. ,    1.4],       [  13. ,   18. ,   16. ,    1.4],       [  26. ,   26. ,   17. ,    1.1],       [  33. ,   21. ,   20. ,    0.6],       [  45. ,   17. ,   21. ,    1.2],       [  61. ,   26. ,   22. ,    1.2],       [  74. ,   24. ,   19. ,    0.5],       [  91. ,   22. ,   20. ,    0.6],       [  95. ,   24. ,   15. ,    1.1],       [  -2. ,   29. ,   19. ,    1.3],       [  14. ,   34. ,   20. ,    1.4],       [  23. ,   32. ,   14. ,    0.8],       [  40. ,   38. ,   17. ,    0.5],       [  52. ,   34. ,   20. ,    1.1],       [  64. ,   36. ,   18. ,    0.7],       [  77. ,   38. ,   16. ,    1. ],       [  84. ,   37. ,   16. ,    0.9],       [  96. ,   32. ,   19. ,    0.9],       [  -3. ,   46. ,   13. ,    0.8],       [  10. ,   44. ,   17. ,    0.8],       [  29. ,   43. ,   16. ,    0.8],       [  42. ,   44. ,   19. ,    0.7],       [  53. ,   43. ,   14. ,    1.3],       [  61. ,   43. ,   14. ,    0.7],       [  77. ,   43. ,   22. ,    1.4],       [  89. ,   49. ,   16. ,    1.4],       [ 104. ,   45. ,   17. ,    0.9],       [  -5. ,   57. ,   14. ,    1. ],       [  10. ,   51. ,   16. ,    0.7],       [  21. ,   50. ,   15. ,    1. ],       [  39. ,   55. ,   15. ,    1.2],       [  53. ,   59. ,   18. ,    0.8],       [  63. ,   53. ,   23. ,    1.1],       [  77. ,   59. ,   15. ,    1.1],       [  86. ,   52. ,   15. ,    0.6],       [ 101. ,   57. ,   16. ,    1.3],       [   4. ,   64. ,   16. ,    1.3],       [  15. ,   65. ,   18. ,    0.8],       [  25. ,   64. ,   19. ,    1.3],       [  40. ,   66. ,   16. ,    0.7],       [  50. ,   71. ,   15. ,    0.5],       [  62. ,   70. ,   21. ,    1.4],       [  79. ,   66. ,   15. ,    0.9],       [  91. ,   62. ,   17. ,    0.6],       [ 101. ,   71. ,   18. ,    1.1],       [   1. ,   76. ,   20. ,    1.2],       [   8. ,   76. ,   22. ,    1.2],       [  22. ,   82. ,   22. ,    1. ],       [  38. ,   78. ,   13. ,    1. ],       [  45. ,   75. ,   16. ,    0.7],       [  59. ,   77. ,   18. ,    0.9],       [  71. ,   75. ,   20. ,    1. ],       [  83. ,   75. ,   21. ,    1.3],       [  98. ,   79. ,   20. ,    1.3],       [   1. ,   88. ,   20. ,    1.4],       [   8. ,   91. ,   21. ,    0.7],       [  23. ,   85. ,   19. ,    1.2],       [  40. ,   84. ,   20. ,    1.2],       [  46. ,   92. ,   20. ,    1. ],       [  59. ,   84. ,   17. ,    0.7],       [  78. ,   85. ,   20. ,    1.2],       [  88. ,   93. ,   22. ,    1.4],       [  98. ,   85. ,   20. ,    0.6],       [  -4. ,   96. ,   13. ,    1.5],       [  12. ,  103. ,   22. ,    1. ],       [  27. ,   99. ,   19. ,    1.5],       [  33. ,  101. ,   21. ,    1. ],       [  50. ,  104. ,   15. ,    0.9],       [  59. ,   97. ,   17. ,    0.6],       [  74. ,   95. ,   22. ,    1.2],       [  89. ,  102. ,   20. ,    1.3],       [  95. ,  103. ,   19. ,    1.3],       [  -3. ,    1. ,   25. ,    1.3],       [  10. ,    2. ,   24. ,    1. ],       [  25. ,    4. ,   23. ,    1.5],       [  38. ,    0. ,   31. ,    0.7],       [  49. ,    2. ,   30. ,    0.6],       [  60. ,   -2. ,   29. ,    0.8],       [  79. ,    3. ,   25. ,    1.4],       [  92. ,    1. ,   27. ,    0.8],       [ 101. ,    0. ,   29. ,    0.8],       [  -3. ,    9. ,   29. ,    1.4],       [  12. ,   11. ,   23. ,    0.9],       [  22. ,    8. ,   28. ,    0.7],       [  34. ,   11. ,   23. ,    1.3],       [  45. ,   15. ,   23. ,    1.3],       [  58. ,    8. ,   27. ,    1.5],       [  71. ,    9. ,   28. ,    0.7],       [  87. ,   13. ,   25. ,    0.6],       [ 104. ,    9. ,   31. ,    1. ],       [   0. ,   26. ,   25. ,    0.6],       [  14. ,   25. ,   22. ,    0.8],       [  29. ,   27. ,   30. ,    1.1],       [  39. ,   17. ,   24. ,    1.2],       [  54. ,   25. ,   30. ,    1.5],       [  67. ,   25. ,   22. ,    0.7],       [  73. ,   25. ,   25. ,    1.4],       [  87. ,   25. ,   25. ,    1.4],       [ 102. ,   20. ,   24. ,    0.6],       [   2. ,   37. ,   23. ,    1.3],       [   9. ,   37. ,   23. ,    1. ],       [  28. ,   37. ,   22. ,    1.2],       [  40. ,   30. ,   26. ,    1.1],       [  45. ,   28. ,   29. ,    0.6],       [  57. ,   32. ,   26. ,    0.7],       [  78. ,   31. ,   25. ,    1. ],       [  87. ,   34. ,   26. ,    1.1],       [ 102. ,   36. ,   28. ,    1.3],       [  -1. ,   46. ,   23. ,    1. ],       [   8. ,   41. ,   23. ,    1.3],       [  21. ,   45. ,   26. ,    0.7],       [  38. ,   45. ,   27. ,    0.6],       [  48. ,   48. ,   30. ,    0.9],       [  63. ,   42. ,   24. ,    0.8],       [  70. ,   41. ,   30. ,    0.8],       [  89. ,   39. ,   25. ,    1.1],       [  96. ,   47. ,   28. ,    0.7],       [  -1. ,   54. ,   30. ,    0.9],       [   9. ,   56. ,   24. ,    1.5],       [  20. ,   52. ,   32. ,    0.8],       [  38. ,   51. ,   23. ,    0.9],       [  54. ,   55. ,   27. ,    1.1],       [  62. ,   51. ,   30. ,    0.9],       [  78. ,   56. ,   30. ,    1.4],       [  89. ,   51. ,   31. ,    0.8],       [ 100. ,   57. ,   25. ,    0.6],       [   2. ,   61. ,   26. ,    1.1],       [  10. ,   67. ,   23. ,    0.9],       [  23. ,   71. ,   23. ,    1.5],       [  37. ,   64. ,   31. ,    0.5],       [  47. ,   62. ,   22. ,    1. ],       [  62. ,   71. ,   24. ,    1.2],       [  71. ,   71. ,   22. ,    1.2],       [  88. ,   61. ,   30. ,    0.9],       [ 103. ,   66. ,   22. ,    0.7],       [  -5. ,   76. ,   31. ,    1.1],       [  14. ,   79. ,   25. ,    0.8],       [  24. ,   74. ,   31. ,    0.8],       [  32. ,   79. ,   27. ,    1.3],       [  51. ,   72. ,   30. ,    0.8],       [  67. ,   74. ,   26. ,    1.4],       [  79. ,   74. ,   23. ,    1. ],       [  86. ,   81. ,   24. ,    1.4],       [ 100. ,   82. ,   28. ,    1.1],       [   2. ,   92. ,   25. ,    0.9],       [  11. ,   89. ,   30. ,    0.6],       [  21. ,   86. ,   23. ,    1.5],       [  34. ,   91. ,   31. ,    1.5],       [  54. ,   92. ,   29. ,    1.1],       [  61. ,   89. ,   26. ,    1. ],       [  72. ,   89. ,   24. ,    1.2],       [  89. ,   91. ,   23. ,    1.2],       [ 103. ,   90. ,   23. ,    0.6],       [  -1. ,   99. ,   25. ,    1. ],       [  13. ,  103. ,   26. ,    1.1],       [  29. ,  100. ,   29. ,    0.9],       [  36. ,  104. ,   22. ,    1.1],       [  47. ,   97. ,   25. ,    1.5],       [  63. ,   95. ,   30. ,    0.9],       [  70. ,   98. ,   27. ,    0.7],       [  86. ,  102. ,   29. ,    0.8],       [  97. ,  100. ,   25. ,    1.5],       [  -2. ,    3. ,   32. ,    1.3],       [  15. ,    3. ,   35. ,    1.1],       [  28. ,   -5. ,   36. ,    0.5],       [  37. ,   -1. ,   36. ,    0.8],       [  45. ,    3. ,   33. ,    1.3],       [  66. ,   -2. ,   36. ,    1. ],       [  74. ,   -3. ,   37. ,    1.1],       [  84. ,   -2. ,   33. ,    1.4],       [  99. ,    3. ,   34. ,    1.3],       [  -2. ,    6. ,   37. ,    0.6],       [  11. ,   15. ,   41. ,    1. ],       [  25. ,   11. ,   36. ,    1.1],       [  41. ,    9. ,   39. ,    1. ],       [  50. ,   13. ,   32. ,    1.4],       [  59. ,    8. ,   36. ,    1. ],       [  74. ,   12. ,   31. ,    0.5],       [  90. ,    7. ,   34. ,    1.4],       [ 101. ,   13. ,   33. ,    1.2],       [  -5. ,   25. ,   34. ,    1.3],       [  10. ,   26. ,   35. ,    1.4],       [  28. ,   25. ,   32. ,    1.2],       [  41. ,   22. ,   41. ,    0.8],       [  53. ,   26. ,   40. ,    1. ],       [  59. ,   20. ,   39. ,    1.1],       [  77. ,   23. ,   37. ,    0.9],       [  87. ,   24. ,   31. ,    0.6],       [ 104. ,   23. ,   34. ,    1.2],       [   1. ,   29. ,   39. ,    0.6],       [  15. ,   30. ,   41. ,    1. ],       [  27. ,   31. ,   39. ,    1.2],       [  41. ,   34. ,   40. ,    0.7],       [  53. ,   34. ,   34. ,    1. ],       [  58. ,   28. ,   36. ,    1.3],       [  71. ,   35. ,   35. ,    1. ],       [  85. ,   32. ,   34. ,    0.7],       [ 102. ,   32. ,   33. ,    1. ],       [   0. ,   41. ,   34. ,    0.6],       [  11. ,   43. ,   35. ,    0.8],       [  22. ,   42. ,   38. ,    1. ],       [  35. ,   43. ,   32. ,    0.6],       [  53. ,   43. ,   36. ,    0.8],       [  65. ,   45. ,   31. ,    0.9],       [  75. ,   41. ,   37. ,    1.1],       [  83. ,   44. ,   37. ,    1.5],       [ 102. ,   44. ,   33. ,    1.4],       [   1. ,   55. ,   38. ,    0.8],       [  12. ,   51. ,   32. ,    0.9],       [  20. ,   55. ,   35. ,    1.1],       [  39. ,   57. ,   38. ,    1.1],       [  52. ,   56. ,   35. ,    0.6],       [  63. ,   51. ,   38. ,    0.8],       [  76. ,   51. ,   35. ,    1.4],       [  85. ,   56. ,   37. ,    0.9],       [  98. ,   59. ,   37. ,    0.8],       [   4. ,   67. ,   31. ,    1.4],       [  15. ,   70. ,   41. ,    0.6],       [  28. ,   67. ,   38. ,    0.7],       [  36. ,   70. ,   32. ,    1.4],       [  47. ,   67. ,   35. ,    1.1],       [  65. ,   68. ,   41. ,    1. ],       [  77. ,   68. ,   36. ,    1.4],       [  90. ,   70. ,   32. ,    1.3],       [ 100. ,   70. ,   36. ,    0.5],       [  -4. ,   81. ,   32. ,    0.9],       [  14. ,   79. ,   39. ,    1.5],       [  26. ,   79. ,   33. ,    0.9],       [  34. ,   73. ,   40. ,    0.6],       [  47. ,   75. ,   37. ,    0.6],       [  60. ,   81. ,   40. ,    1.2],       [  74. ,   80. ,   37. ,    1.5],       [  88. ,   78. ,   31. ,    1.4],       [  97. ,   82. ,   40. ,    0.8],       [  -5. ,   92. ,   32. ,    1.2],       [  15. ,   88. ,   34. ,    0.8],       [  21. ,   89. ,   31. ,    1.2],       [  42. ,   93. ,   40. ,    0.7],       [  49. ,   90. ,   37. ,    1.3],       [  62. ,   85. ,   38. ,    1.1],       [  71. ,   84. ,   33. ,    0.7],       [  83. ,   90. ,   32. ,    1.1],       [ 100. ,   87. ,   33. ,    0.8],       [  -1. ,  100. ,   35. ,    1.5],       [  11. ,  104. ,   32. ,    0.7],       [  23. ,   95. ,   40. ,    1.3],       [  33. ,  103. ,   36. ,    0.7],       [  45. ,   95. ,   35. ,    0.6],       [  58. ,   97. ,   39. ,    0.8],       [  79. ,  104. ,   35. ,    1.1],       [  83. ,  104. ,   38. ,    0.9],       [  97. ,  100. ,   37. ,    0.6],       [   2. ,   -2. ,   47. ,    1.3],       [  16. ,   -3. ,   46. ,    1.4],       [  23. ,    4. ,   49. ,    0.9],       [  42. ,   -5. ,   48. ,    0.7],       [  48. ,   -2. ,   45. ,    1.5],       [  59. ,    2. ,   48. ,    1.5],       [  75. ,    1. ,   47. ,    0.7],       [  84. ,    1. ,   42. ,    0.7],       [ 103. ,   -3. ,   43. ,    0.6],       [   0. ,    8. ,   48. ,    1. ],       [   8. ,    8. ,   48. ,    1.1],       [  22. ,    9. ,   46. ,    0.6],       [  36. ,   10. ,   40. ,    0.6],       [  46. ,    6. ,   50. ,    0.8],       [  60. ,   12. ,   47. ,    1.5],       [  78. ,    7. ,   46. ,    0.7],       [  90. ,   12. ,   46. ,    0.7],       [  95. ,   14. ,   48. ,    0.6],       [  -5. ,   20. ,   40. ,    1. ],       [   8. ,   20. ,   43. ,    1.4],       [  28. ,   22. ,   42. ,    0.7],       [  38. ,   19. ,   46. ,    0.9],       [  47. ,   27. ,   46. ,    0.6],       [  59. ,   22. ,   45. ,    0.9],       [  79. ,   22. ,   43. ,    0.8],       [  85. ,   26. ,   41. ,    0.7],       [  99. ,   22. ,   44. ,    1.2],       [   3. ,   33. ,   44. ,    0.5],       [  11. ,   33. ,   40. ,    0.7],       [  24. ,   28. ,   45. ,    0.8],       [  37. ,   30. ,   48. ,    1.4],       [  47. ,   34. ,   48. ,    0.7],       [  59. ,   36. ,   48. ,    0.8],       [  76. ,   30. ,   42. ,    1.2],       [  87. ,   37. ,   43. ,    0.7],       [ 104. ,   37. ,   47. ,    0.8],       [  -5. ,   42. ,   44. ,    1.4],       [  13. ,   42. ,   44. ,    0.9],       [  29. ,   45. ,   44. ,    0.5],       [  41. ,   44. ,   41. ,    0.8],       [  46. ,   44. ,   43. ,    0.6],       [  63. ,   41. ,   45. ,    0.7],       [  70. ,   40. ,   41. ,    0.6],       [  88. ,   40. ,   46. ,    1.1],       [ 102. ,   42. ,   40. ,    1.4],       [  -2. ,   59. ,   49. ,    1.4],       [   8. ,   52. ,   45. ,    1.4],       [  29. ,   57. ,   44. ,    0.7],       [  34. ,   56. ,   47. ,    0.5],       [  50. ,   52. ,   46. ,    1.5],       [  61. ,   54. ,   41. ,    1.4],       [  77. ,   51. ,   47. ,    0.7],       [  84. ,   56. ,   42. ,    1.1],       [ 102. ,   56. ,   50. ,    1.1],       [  -3. ,   69. ,   43. ,    1.4],       [   8. ,   63. ,   49. ,    0.8],       [  25. ,   71. ,   49. ,    0.8],       [  34. ,   70. ,   48. ,    0.9],       [  54. ,   69. ,   44. ,    1.5],       [  65. ,   67. ,   41. ,    1.2],       [  73. ,   62. ,   42. ,    1.1],       [  86. ,   61. ,   40. ,    1.1],       [  98. ,   63. ,   42. ,    1.1],       [   3. ,   81. ,   43. ,    1.3],       [  14. ,   76. ,   41. ,    1.3],       [  21. ,   82. ,   42. ,    0.7],       [  41. ,   75. ,   43. ,    0.8],       [  46. ,   74. ,   47. ,    0.6],       [  62. ,   73. ,   40. ,    1.4],       [  74. ,   79. ,   43. ,    1.2],       [  90. ,   80. ,   42. ,    0.6],       [  95. ,   77. ,   50. ,    1. ],       [   4. ,   89. ,   42. ,    0.7],       [  10. ,   89. ,   49. ,    1.2],       [  25. ,   92. ,   46. ,    1. ],       [  37. ,   91. ,   45. ,    0.6],       [  54. ,   85. ,   49. ,    1.3],       [  62. ,   88. ,   50. ,    0.6],       [  78. ,   86. ,   42. ,    0.5],       [  85. ,   86. ,   40. ,    1.1],       [ 100. ,   90. ,   44. ,    1. ],       [  -3. ,  101. ,   48. ,    0.6],       [   9. ,  101. ,   46. ,    1.3],       [  20. ,   95. ,   43. ,    0.9],       [  37. ,   98. ,   50. ,    1.4],       [  54. ,   97. ,   49. ,    1. ],       [  60. ,  104. ,   49. ,    1.5],       [  74. ,  100. ,   48. ,    1.2],       [  87. ,   96. ,   42. ,    0.8],       [ 104. ,  103. ,   46. ,    1.2],       [  -5. ,   -3. ,   56. ,    0.9],       [   9. ,    4. ,   58. ,    1.2],       [  22. ,   -5. ,   52. ,    1.4],       [  34. ,   -3. ,   55. ,    1.1],       [  53. ,   -4. ,   52. ,    1.1],       [  60. ,   -4. ,   55. ,    0.7],       [  78. ,   -2. ,   50. ,    1.1],       [  89. ,    0. ,   57. ,    0.6],       [  97. ,    1. ,   54. ,    0.6],       [   4. ,   14. ,   51. ,    1.1],       [  10. ,   15. ,   54. ,    1.3],       [  24. ,   13. ,   52. ,    0.7],       [  42. ,   10. ,   53. ,    1.4],       [  45. ,   15. ,   58. ,    0.6],       [  62. ,    9. ,   58. ,    1.3],       [  74. ,   15. ,   55. ,    1.4],       [  92. ,   13. ,   52. ,    1.4],       [  99. ,    9. ,   54. ,    0.8],       [  -1. ,   25. ,   57. ,    1.4],       [   7. ,   20. ,   52. ,    1. ],       [  27. ,   22. ,   58. ,    1.1],       [  36. ,   27. ,   53. ,    0.5],       [  51. ,   25. ,   58. ,    0.9],       [  59. ,   18. ,   54. ,    1.4],       [  72. ,   25. ,   54. ,    0.7],       [  83. ,   23. ,   53. ,    1.4],       [  97. ,   19. ,   53. ,    0.7],       [   4. ,   37. ,   55. ,    1.3],       [  16. ,   36. ,   52. ,    1. ],       [  23. ,   37. ,   50. ,    1. ],       [  33. ,   37. ,   55. ,    1.2],       [  48. ,   35. ,   56. ,    0.8],       [  63. ,   29. ,   50. ,    0.6],       [  79. ,   30. ,   54. ,    1.2],       [  90. ,   30. ,   49. ,    0.9],       [  97. ,   36. ,   53. ,    1.4],       [   3. ,   45. ,   54. ,    1.2],       [  17. ,   47. ,   50. ,    1.4],       [  23. ,   45. ,   50. ,    0.7],       [  41. ,   48. ,   56. ,    1.2],       [  53. ,   42. ,   52. ,    0.7],       [  58. ,   42. ,   54. ,    1.1],       [  74. ,   41. ,   57. ,    0.8],       [  91. ,   40. ,   51. ,    0.6],       [  97. ,   47. ,   54. ,    1.1],       [   1. ,   59. ,   51. ,    0.5],       [  10. ,   55. ,   58. ,    1.4],       [  21. ,   57. ,   49. ,    1.2],       [  38. ,   54. ,   56. ,    1.4],       [  49. ,   56. ,   55. ,    1. ],       [  59. ,   53. ,   51. ,    1.4],       [  78. ,   52. ,   59. ,    1.3],       [  90. ,   59. ,   53. ,    0.5],       [  97. ,   57. ,   50. ,    1.1],       [   0. ,   70. ,   52. ,    1.3],       [  15. ,   66. ,   51. ,    1.4],       [  26. ,   70. ,   49. ,    0.6],       [  37. ,   64. ,   52. ,    0.6],       [  47. ,   69. ,   54. ,    1.1],       [  60. ,   65. ,   49. ,    1.4],       [  76. ,   66. ,   59. ,    1.2],       [  86. ,   68. ,   58. ,    0.5],       [ 101. ,   63. ,   58. ,    0.6],       [   2. ,   75. ,   52. ,    0.9],       [  11. ,   73. ,   53. ,    0.6],       [  22. ,   80. ,   52. ,    0.6],       [  40. ,   78. ,   52. ,    1.3],       [  52. ,   77. ,   51. ,    0.6],       [  65. ,   77. ,   54. ,    1. ],       [  73. ,   79. ,   58. ,    1.2],       [  88. ,   73. ,   50. ,    0.7],       [ 102. ,   80. ,   57. ,    1.5],       [   4. ,   85. ,   58. ,    0.6],       [  10. ,   88. ,   57. ,    1.4],       [  24. ,   90. ,   58. ,    1.2],       [  39. ,   86. ,   55. ,    1.1],       [  50. ,   88. ,   51. ,    1.2],       [  61. ,   91. ,   58. ,    1.5],       [  70. ,   89. ,   50. ,    0.8],       [  86. ,   88. ,   57. ,    1.4],       [ 100. ,   87. ,   54. ,    0.9],       [   3. ,   98. ,   59. ,    0.9],       [  16. ,   96. ,   53. ,    1.4],       [  29. ,   98. ,   55. ,    1. ],       [  34. ,  100. ,   54. ,    1.4],       [  54. ,   97. ,   52. ,    1. ],       [  67. ,   96. ,   52. ,    1. ],       [  74. ,   99. ,   52. ,    1.2],       [  88. ,   99. ,   58. ,    1. ],       [  97. ,   98. ,   50. ,    1.5],       [  -2. ,   -1. ,   64. ,    1. ],       [  16. ,   -1. ,   66. ,    0.9],       [  20. ,    1. ,   63. ,    1. ],       [  37. ,    1. ,   64. ,    0.9],       [  50. ,    4. ,   65. ,    1.5],       [  62. ,   -2. ,   61. ,    0.8],       [  72. ,    3. ,   58. ,    1.1],       [  84. ,   -5. ,   59. ,    1.4],       [  97. ,   -5. ,   58. ,    0.7],       [  -4. ,    6. ,   63. ,    1.2],       [  14. ,   11. ,   68. ,    0.9],       [  22. ,   12. ,   63. ,    1.5],       [  35. ,   10. ,   68. ,    1. ],       [  45. ,   15. ,   62. ,    0.7],       [  60. ,   14. ,   66. ,    0.5],       [  75. ,   12. ,   61. ,    0.8],       [  84. ,   11. ,   61. ,    1.1],       [ 104. ,   15. ,   65. ,    0.8],       [   3. ,   19. ,   66. ,    0.6],       [   9. ,   25. ,   64. ,    1.5],       [  28. ,   22. ,   61. ,    0.9],       [  33. ,   23. ,   65. ,    0.6],       [  46. ,   22. ,   60. ,    1.2],       [  66. ,   24. ,   66. ,    1. ],       [  76. ,   24. ,   67. ,    1.3],       [  83. ,   22. ,   67. ,    0.5],       [ 103. ,   18. ,   59. ,    0.7],       [  -5. ,   30. ,   65. ,    0.6],       [  12. ,   29. ,   61. ,    0.5],       [  27. ,   32. ,   61. ,    1.3],       [  38. ,   30. ,   60. ,    1.2],       [  49. ,   36. ,   63. ,    1.2],       [  63. ,   34. ,   63. ,    1. ],       [  73. ,   35. ,   64. ,    0.9],       [  86. ,   34. ,   62. ,    0.7],       [  96. ,   37. ,   61. ,    1.2],       [   0. ,   41. ,   63. ,    0.9],       [  13. ,   48. ,   65. ,    0.8],       [  28. ,   47. ,   62. ,    1. ],       [  37. ,   45. ,   63. ,    0.9],       [  53. ,   42. ,   67. ,    1. ],       [  61. ,   39. ,   65. ,    0.9],       [  71. ,   45. ,   64. ,    1.3],       [  88. ,   40. ,   65. ,    1.4],       [ 104. ,   42. ,   64. ,    1.4],       [  -5. ,   54. ,   60. ,    0.9],       [  10. ,   58. ,   61. ,    0.8],       [  25. ,   52. ,   61. ,    0.9],       [  40. ,   57. ,   67. ,    1.2],       [  50. ,   58. ,   61. ,    0.8],       [  61. ,   55. ,   59. ,    0.7],       [  70. ,   53. ,   63. ,    1. ],       [  88. ,   53. ,   65. ,    0.7],       [  95. ,   54. ,   65. ,    1.3],       [  -1. ,   64. ,   62. ,    1.1],       [  10. ,   70. ,   67. ,    0.9],       [  28. ,   64. ,   66. ,    0.6],       [  39. ,   70. ,   66. ,    0.6],       [  52. ,   70. ,   65. ,    1.2],       [  58. ,   62. ,   63. ,    1.3],       [  74. ,   66. ,   68. ,    1.2],       [  83. ,   65. ,   61. ,    0.7],       [  96. ,   67. ,   67. ,    0.6],       [   3. ,   79. ,   63. ,    1.3],       [  14. ,   76. ,   59. ,    1.2],       [  26. ,   77. ,   65. ,    0.6],       [  41. ,   76. ,   67. ,    0.8],       [  51. ,   79. ,   64. ,    0.6],       [  60. ,   80. ,   60. ,    1.3],       [  79. ,   74. ,   63. ,    1.3],       [  88. ,   80. ,   65. ,    1.4],       [  95. ,   76. ,   60. ,    1.3],       [  -5. ,   89. ,   61. ,    0.9],       [  10. ,   85. ,   64. ,    1.1],       [  21. ,   87. ,   64. ,    0.9],       [  39. ,   84. ,   66. ,    1.2],       [  48. ,   86. ,   63. ,    0.5],       [  57. ,   91. ,   60. ,    0.7],       [  73. ,   93. ,   66. ,    0.8],       [  84. ,   89. ,   65. ,    1.4],       [ 102. ,   92. ,   63. ,    1. ],       [  -1. ,   98. ,   64. ,    1.4],       [  13. ,  102. ,   59. ,    0.5],       [  23. ,  101. ,   64. ,    1.4],       [  40. ,   96. ,   61. ,    1.2],       [  45. ,   95. ,   60. ,    0.9],       [  66. ,   99. ,   64. ,    1.3],       [  70. ,   97. ,   64. ,    0.7],       [  83. ,   99. ,   63. ,    0.8],       [  98. ,   99. ,   63. ,    1.2],       [  -3. ,    4. ,   69. ,    0.8],       [  11. ,    0. ,   68. ,    1.4],       [  27. ,   -2. ,   73. ,    1.3],       [  33. ,   -5. ,   68. ,    0.8],       [  48. ,    2. ,   69. ,    1.3],       [  61. ,   -2. ,   69. ,    1. ],       [  78. ,   -1. ,   70. ,    1.2],       [  84. ,   -5. ,   73. ,    1.3],       [ 102. ,    2. ,   74. ,    1.2],       [   0. ,   14. ,   69. ,    1.5],       [  14. ,    9. ,   75. ,    1.1],       [  21. ,   14. ,   72. ,    0.8],       [  33. ,    8. ,   73. ,    1.5],       [  46. ,    8. ,   77. ,    1.1],       [  66. ,   10. ,   71. ,    1.1],       [  72. ,    8. ,   72. ,    0.7],       [  84. ,   14. ,   74. ,    1. ],       [ 102. ,   15. ,   69. ,    1.1],       [   1. ,   23. ,   69. ,    0.8],       [   7. ,   18. ,   67. ,    1.1],       [  22. ,   25. ,   73. ,    1.1],       [  38. ,   22. ,   75. ,    1.5],       [  50. ,   22. ,   73. ,    0.9],       [  63. ,   22. ,   76. ,    1.3],       [  76. ,   26. ,   74. ,    1. ],       [  83. ,   18. ,   74. ,    1.5],       [ 101. ,   23. ,   70. ,    0.9],       [  -4. ,   37. ,   72. ,    0.7],       [  15. ,   38. ,   73. ,    0.9],       [  29. ,   36. ,   76. ,    1.1],       [  35. ,   32. ,   76. ,    1.1],       [  45. ,   32. ,   71. ,    1. ],       [  66. ,   36. ,   73. ,    0.6],       [  72. ,   32. ,   72. ,    0.8],       [  83. ,   35. ,   68. ,    0.8],       [  98. ,   30. ,   70. ,    1. ],       [   4. ,   42. ,   72. ,    1. ],       [  12. ,   39. ,   70. ,    1.2],       [  27. ,   48. ,   76. ,    1.2],       [  33. ,   49. ,   72. ,    1. ],       [  47. ,   44. ,   74. ,    1.5],       [  64. ,   40. ,   68. ,    0.9],       [  73. ,   47. ,   70. ,    1.3],       [  86. ,   47. ,   72. ,    0.6],       [  95. ,   43. ,   67. ,    0.9],       [  -3. ,   54. ,   71. ,    0.6],       [  13. ,   51. ,   75. ,    0.5],       [  25. ,   52. ,   67. ,    1.2],       [  41. ,   50. ,   69. ,    0.6],       [  45. ,   58. ,   68. ,    1.2],       [  64. ,   59. ,   73. ,    1.1],       [  72. ,   56. ,   71. ,    1.2],       [  92. ,   59. ,   76. ,    1. ],       [ 104. ,   51. ,   69. ,    0.5],       [  -2. ,   61. ,   75. ,    1.4],       [   9. ,   65. ,   76. ,    0.7],       [  29. ,   65. ,   72. ,    1. ],       [  40. ,   63. ,   72. ,    1.3],       [  50. ,   68. ,   72. ,    1.3],       [  61. ,   62. ,   72. ,    0.8],       [  70. ,   65. ,   73. ,    1.1],       [  87. ,   69. ,   69. ,    0.8],       [ 102. ,   64. ,   69. ,    1.1],       [   1. ,   76. ,   73. ,    0.5],       [  16. ,   79. ,   77. ,    0.9],       [  23. ,   79. ,   77. ,    1.4],       [  37. ,   78. ,   71. ,    1.3],       [  54. ,   77. ,   76. ,    1.3],       [  66. ,   76. ,   68. ,    1.1],       [  76. ,   77. ,   74. ,    1.1],       [  91. ,   78. ,   68. ,    1.4],       [  98. ,   76. ,   74. ,    1.3],       [  -4. ,   86. ,   73. ,    1.1],       [  11. ,   93. ,   73. ,    1.2],       [  23. ,   87. ,   68. ,    1.3],       [  36. ,   92. ,   77. ,    1.1],       [  51. ,   91. ,   73. ,    1.5],       [  64. ,   93. ,   70. ,    1.4],       [  73. ,   90. ,   70. ,    0.5],       [  85. ,   93. ,   75. ,    0.6],       [  97. ,   87. ,   71. ,    0.5],       [  -5. ,   98. ,   71. ,    1.4],       [  11. ,   99. ,   73. ,    1.1],       [  28. ,   98. ,   70. ,    0.9],       [  35. ,  102. ,   76. ,    0.7],       [  47. ,   98. ,   70. ,    0.7],       [  65. ,   96. ,   74. ,    0.7],       [  76. ,  100. ,   68. ,    1. ],       [  84. ,  101. ,   74. ,    1. ],       [  95. ,  100. ,   71. ,    1. ],       [  -3. ,    0. ,   84. ,    0.8],       [  16. ,    2. ,   82. ,    1.1],       [  27. ,    0. ,   80. ,    1.5],       [  33. ,    0. ,   81. ,    1.4],       [  47. ,    3. ,   86. ,    0.9],       [  65. ,   -4. ,   82. ,    1.2],       [  77. ,   -3. ,   80. ,    0.6],       [  90. ,   -1. ,   79. ,    1.1],       [  95. ,    4. ,   79. ,    1.5],       [   1. ,   10. ,   86. ,    1.2],       [  10. ,   10. ,   86. ,    1.3],       [  24. ,   11. ,   84. ,    1.2],       [  33. ,   10. ,   84. ,    1.4],       [  46. ,   16. ,   77. ,    1.1],       [  66. ,   11. ,   79. ,    0.7],       [  77. ,   14. ,   86. ,    1.2],       [  83. ,    6. ,   82. ,    0.9],       [  98. ,   10. ,   83. ,    1.1],       [  -3. ,   21. ,   80. ,    1.4],       [  12. ,   20. ,   80. ,    0.9],       [  21. ,   22. ,   79. ,    0.9],       [  42. ,   18. ,   79. ,    0.9],       [  54. ,   25. ,   84. ,    0.8],       [  62. ,   24. ,   79. ,    1.5],       [  70. ,   20. ,   81. ,    1. ],       [  83. ,   20. ,   79. ,    0.7],       [  99. ,   20. ,   78. ,    1. ],       [  -5. ,   34. ,   77. ,    1.3],       [  11. ,   32. ,   77. ,    1. ],       [  22. ,   35. ,   84. ,    1.2],       [  35. ,   34. ,   86. ,    1.5],       [  49. ,   35. ,   85. ,    1. ],       [  67. ,   37. ,   83. ,    0.6],       [  70. ,   36. ,   86. ,    0.7],       [  90. ,   30. ,   78. ,    0.7],       [ 104. ,   37. ,   86. ,    1.5],       [  -4. ,   44. ,   83. ,    0.8],       [  12. ,   48. ,   86. ,    1.1],       [  25. ,   41. ,   76. ,    1.2],       [  39. ,   47. ,   78. ,    1.4],       [  54. ,   39. ,   83. ,    1.1],       [  63. ,   42. ,   79. ,    1.2],       [  73. ,   43. ,   86. ,    0.6],       [  92. ,   40. ,   79. ,    0.7],       [ 100. ,   45. ,   84. ,    1.2],       [  -2. ,   56. ,   83. ,    0.9],       [  16. ,   56. ,   82. ,    1.2],       [  23. ,   58. ,   83. ,    0.6],       [  35. ,   51. ,   82. ,    0.8],       [  46. ,   54. ,   84. ,    0.7],       [  67. ,   55. ,   84. ,    0.8],       [  74. ,   54. ,   84. ,    1.2],       [  84. ,   51. ,   79. ,    1.2],       [  99. ,   58. ,   85. ,    0.9],       [  -5. ,   69. ,   79. ,    0.9],       [  14. ,   61. ,   82. ,    1.5],       [  27. ,   67. ,   77. ,    0.5],       [  38. ,   69. ,   86. ,    1.5],       [  50. ,   65. ,   77. ,    1. ],       [  60. ,   66. ,   86. ,    1.5],       [  70. ,   63. ,   82. ,    0.5],       [  90. ,   67. ,   83. ,    0.6],       [ 100. ,   64. ,   80. ,    1. ],       [   2. ,   77. ,   82. ,    1.1],       [   9. ,   74. ,   79. ,    1. ],       [  20. ,   82. ,   77. ,    0.8],       [  35. ,   78. ,   83. ,    0.7],       [  45. ,   76. ,   78. ,    0.9],       [  57. ,   76. ,   77. ,    1. ],       [  73. ,   77. ,   85. ,    1.4],       [  89. ,   78. ,   84. ,    0.9],       [ 102. ,   75. ,   83. ,    1.4],       [   4. ,   90. ,   80. ,    0.8],       [  10. ,   85. ,   81. ,    1.5],       [  23. ,   90. ,   85. ,    0.8],       [  33. ,   86. ,   77. ,    1.4],       [  49. ,   84. ,   84. ,    0.6],       [  64. ,   84. ,   81. ,    0.9],       [  73. ,   92. ,   79. ,    0.6],       [  88. ,   91. ,   81. ,    1.3],       [ 102. ,   89. ,   79. ,    0.9],       [  -3. ,  100. ,   81. ,    1.5],       [  12. ,   99. ,   80. ,    1.2],       [  23. ,   95. ,   84. ,    0.5],       [  33. ,   98. ,   77. ,    1.2],       [  45. ,   97. ,   85. ,    1.1],       [  63. ,  102. ,   79. ,    1.5],       [  74. ,   95. ,   80. ,    1.2],       [  83. ,   99. ,   78. ,    1.3],       [ 104. ,  100. ,   79. ,    1. ],       [  -5. ,   -4. ,   94. ,    1.3],       [  11. ,   -3. ,   94. ,    1.3],       [  21. ,   -2. ,   95. ,    1.4],       [  37. ,   -4. ,   92. ,    1.3],       [  52. ,   -1. ,   93. ,    1. ],       [  62. ,   -4. ,   93. ,    1.3],       [  74. ,   -4. ,   86. ,    1.4],       [  82. ,    4. ,   85. ,    0.9],       [ 104. ,   -2. ,   89. ,    0.8],       [   0. ,   15. ,   87. ,    1.4],       [  16. ,    6. ,   91. ,    1.4],       [  22. ,    7. ,   89. ,    0.6],       [  35. ,    8. ,   87. ,    1.3],       [  45. ,    6. ,   95. ,    1.1],       [  62. ,   15. ,   95. ,    0.9],       [  74. ,   13. ,   86. ,    0.8],       [  91. ,    8. ,   93. ,    0.8],       [  97. ,   11. ,   92. ,    1.4],       [  -2. ,   24. ,   91. ,    1.1],       [  16. ,   17. ,   92. ,    0.9],       [  23. ,   22. ,   90. ,    1.1],       [  41. ,   22. ,   86. ,    0.7],       [  50. ,   19. ,   88. ,    0.7],       [  61. ,   25. ,   89. ,    1.3],       [  79. ,   19. ,   88. ,    1.3],       [  90. ,   18. ,   95. ,    0.6],       [  96. ,   23. ,   94. ,    1. ],       [  -1. ,   37. ,   93. ,    1. ],       [  13. ,   30. ,   86. ,    0.8],       [  23. ,   29. ,   90. ,    0.5],       [  32. ,   34. ,   91. ,    1.2],       [  46. ,   32. ,   86. ,    1.4],       [  61. ,   32. ,   90. ,    0.7],       [  74. ,   37. ,   86. ,    1.1],       [  87. ,   32. ,   88. ,    1.5],       [  98. ,   35. ,   94. ,    1.1],       [   3. ,   48. ,   92. ,    0.6],       [   9. ,   44. ,   89. ,    1. ],       [  25. ,   46. ,   85. ,    1.3],       [  41. ,   45. ,   91. ,    1. ],       [  52. ,   42. ,   88. ,    1. ],       [  58. ,   41. ,   85. ,    1.5],       [  76. ,   39. ,   95. ,    0.7],       [  90. ,   44. ,   92. ,    0.7],       [  96. ,   49. ,   89. ,    1. ],       [  -1. ,   54. ,   88. ,    0.7],       [  15. ,   57. ,   95. ,    1.3],       [  28. ,   54. ,   90. ,    1.5],       [  40. ,   53. ,   95. ,    1.2],       [  48. ,   56. ,   89. ,    1. ],       [  60. ,   56. ,   88. ,    0.6],       [  73. ,   51. ,   88. ,    1.5],       [  89. ,   51. ,   87. ,    1.2],       [  95. ,   52. ,   89. ,    1.4],       [   4. ,   62. ,   95. ,    0.6],       [  13. ,   63. ,   92. ,    1.1],       [  20. ,   69. ,   91. ,    0.9],       [  38. ,   67. ,   86. ,    1.4],       [  50. ,   64. ,   95. ,    0.6],       [  63. ,   68. ,   91. ,    1.4],       [  78. ,   66. ,   92. ,    0.5],       [  91. ,   65. ,   87. ,    1. ],       [ 100. ,   70. ,   88. ,    1.4],       [   0. ,   79. ,   88. ,    1.4],       [   8. ,   77. ,   91. ,    1.2],       [  29. ,   74. ,   91. ,    1. ],       [  39. ,   81. ,   88. ,    1. ],       [  48. ,   75. ,   91. ,    1.3],       [  65. ,   77. ,   93. ,    0.8],       [  74. ,   74. ,   87. ,    1. ],       [  92. ,   81. ,   87. ,    1.1],       [  96. ,   73. ,   90. ,    0.8],       [   0. ,   93. ,   93. ,    0.9],       [  12. ,   88. ,   92. ,    1.3],       [  29. ,   87. ,   90. ,    1.2],       [  34. ,   93. ,   91. ,    0.8],       [  47. ,   90. ,   92. ,    0.8],       [  59. ,   93. ,   91. ,    1.5],       [  70. ,   89. ,   92. ,    0.7],       [  91. ,   93. ,   90. ,    1.3],       [  98. ,   87. ,   87. ,    0.8],       [  -4. ,   96. ,   95. ,    1. ],       [   9. ,  104. ,   86. ,    1.1],       [  27. ,  103. ,   86. ,    1.4],       [  39. ,  104. ,   89. ,    1.3],       [  46. ,  100. ,   95. ,    0.5],       [  59. ,  104. ,   88. ,    0.8],       [  75. ,  101. ,   94. ,    1.5],       [  82. ,   97. ,   95. ,    1.1],       [  98. ,  100. ,   93. ,    1.1],       [   1. ,    0. ,  104. ,    1. ],       [  10. ,   -5. ,   95. ,    1. ],       [  23. ,   -3. ,  102. ,    1.1],       [  40. ,   -1. ,   97. ,    1.1],       [  46. ,    2. ,   98. ,    0.6],       [  66. ,    2. ,  103. ,    0.9],       [  75. ,    3. ,  103. ,    1. ],       [  91. ,    2. ,  102. ,    0.9],       [ 104. ,   -2. ,  103. ,    1.1],       [   1. ,   10. ,   99. ,    0.8],       [  12. ,    9. ,   99. ,    0.8],       [  24. ,    9. ,   95. ,    0.7],       [  37. ,   14. ,  103. ,    0.7],       [  51. ,    6. ,  104. ,    1.1],       [  67. ,    7. ,   99. ,    0.7],       [  72. ,   15. ,   98. ,    0.9],       [  85. ,   11. ,  101. ,    0.9],       [  99. ,   11. ,   97. ,    1.3],       [   0. ,   18. ,  103. ,    1.2],       [   9. ,   26. ,   97. ,    1.4],       [  20. ,   22. ,  100. ,    1.1],       [  35. ,   17. ,   97. ,    0.7],       [  50. ,   24. ,   98. ,    1. ],       [  64. ,   20. ,   95. ,    1.1],       [  74. ,   23. ,  101. ,    0.9],       [  84. ,   19. ,   97. ,    1.2],       [  97. ,   18. ,   99. ,    0.8],       [  -4. ,   30. ,   96. ,    0.5],       [  16. ,   30. ,   95. ,    1.2],       [  24. ,   34. ,  104. ,    1. ],       [  35. ,   38. ,  100. ,    0.7],       [  52. ,   36. ,   95. ,    0.6],       [  59. ,   31. ,   99. ,    1.2],       [  74. ,   34. ,   99. ,    1.1],       [  92. ,   37. ,   95. ,    1.3],       [  96. ,   34. ,   97. ,    1.4],       [   1. ,   48. ,   98. ,    0.6],       [   9. ,   48. ,   96. ,    1.4],       [  22. ,   45. ,   99. ,    0.9],       [  38. ,   39. ,   95. ,    1.4],       [  47. ,   40. ,   96. ,    1.4],       [  67. ,   46. ,  104. ,    0.6],       [  75. ,   42. ,   96. ,    0.8],       [  85. ,   47. ,   98. ,    0.7],       [  99. ,   46. ,  100. ,    1. ],       [  -5. ,   58. ,   95. ,    0.9],       [   8. ,   54. ,  102. ,    1.4],       [  23. ,   58. ,   95. ,    1.3],       [  36. ,   56. ,  101. ,    1.1],       [  54. ,   52. ,  100. ,    0.8],       [  64. ,   54. ,  100. ,    1. ],       [  71. ,   57. ,   99. ,    1.3],       [  88. ,   51. ,   97. ,    1.4],       [  96. ,   54. ,  104. ,    0.8],       [  -5. ,   68. ,   98. ,    1.2],       [  12. ,   68. ,   99. ,    1.2],       [  24. ,   66. ,   95. ,    1. ],       [  39. ,   61. ,  101. ,    1.5],       [  46. ,   66. ,   97. ,    0.7],       [  61. ,   63. ,  100. ,    1.4],       [  73. ,   70. ,   95. ,    0.6],       [  85. ,   67. ,  102. ,    0.6],       [ 103. ,   68. ,  102. ,    0.7],       [   2. ,   81. ,   96. ,    1.4],       [  14. ,   82. ,  103. ,    0.8],       [  23. ,   74. ,  102. ,    1.5],       [  41. ,   80. ,   97. ,    0.8],       [  46. ,   77. ,   99. ,    0.9],       [  64. ,   82. ,  102. ,    0.8],       [  75. ,   76. ,  104. ,    1.4],       [  86. ,   81. ,  100. ,    0.6],       [ 102. ,   74. ,  101. ,    1. ],       [  -5. ,   90. ,   97. ,    0.7],       [  11. ,   88. ,  100. ,    1.1],       [  29. ,   87. ,   96. ,    1.3],       [  38. ,   85. ,  101. ,    0.5],       [  49. ,   91. ,   99. ,    1.3],       [  66. ,   87. ,  101. ,    1.3],       [  77. ,   91. ,   95. ,    0.7],       [  87. ,   89. ,  103. ,    0.8],       [  96. ,   92. ,  101. ,    0.6],       [  -5. ,  101. ,   95. ,    1. ],       [   8. ,  100. ,   97. ,    0.8],       [  23. ,   99. ,   95. ,    1. ],       [  41. ,  103. ,   95. ,    0.7],       [  45. ,  103. ,  103. ,    1.3],       [  60. ,  101. ,  100. ,    1.2],       [  79. ,   99. ,   98. ,    1. ],       [  83. ,   95. ,  100. ,    0.9],       [ 100. ,   98. ,   96. ,    0.6]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.3,  2.7,  4.3,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.9,  3.1,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.9,  3.3,  4.2,
        5.2,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.mirror([3, 0, 0])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p5_rational_C0_periodic(self):
        controlpoints = np.array([[ 102. ,    4. ,   -4. ,    0.5],
       [  69. ,   73. ,    4. ,    0.8],
       [  -4. ,   99. ,   -5. ,    0.7],
       [ -74. ,   67. ,    4. ,    1.1],
       [ -99. ,    0. ,   -5. ,    1.3],
       [ -73. ,  -71. ,   -1. ,    1.2],
       [   0. , -102. ,    1. ,    1.2],
       [  67. ,  -70. ,   -4. ,    0.8]])
        basis0 = BSplineBasis(5, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  2.8,  3.9,  5. ,  5. ,
        5. ,  5. ,  6. ]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 0.7,  1. ,  8. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 0.700000
        pt2[...,1] -= 1.000000
        pt2[...,2] -= 8.000000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p6_rational_C0_periodic(self):
        controlpoints = np.array([[ 100. ,    3. ,   -4. ,    1.4],
       [  88. ,   53. ,    4. ,    0.6],
       [  44. ,   88. ,    0. ,    1.2],
       [ -11. ,   99. ,    4. ,    1.1],
       [ -70. ,   75. ,   -1. ,    1.1],
       [ -92. ,   24. ,    4. ,    1. ],
       [ -93. ,  -30. ,    2. ,    1.5],
       [ -68. ,  -79. ,    0. ,    0.5],
       [ -17. ,  -99. ,   -2. ,    1.3],
       [  37. ,  -95. ,   -3. ,    1.4],
       [  81. ,  -55. ,    2. ,    1.3]])
        basis0 = BSplineBasis(6, np.array([-0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.7,  2.7,  4.4,  5.3,
        6.1,  7. ,  7. ,  7. ,  7. ,  7. ,  7.7]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 4. ,  7.5,  7.5])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.000000
        pt2[...,1] /= 7.500000
        pt2[...,2] /= 7.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p7_rational_C0_periodic(self):
        controlpoints = np.array([[ 104. ,   -3. ,    3. ,    1.2],
       [  70. ,   75. ,   -1. ,    0.7],
       [  -2. ,   95. ,    1. ,    0.6],
       [ -70. ,   67. ,    0. ,    0.9],
       [-104. ,   -2. ,   -1. ,    0.7],
       [ -70. ,  -71. ,   -1. ,    1.3],
       [  -2. ,  -97. ,    3. ,    1.5],
       [  70. ,  -68. ,    3. ,    1.3]])
        basis0 = BSplineBasis(7, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.3,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  4.1]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.mirror([0, 0, 2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p66_rational_C0_periodic(self):
        controlpoints = np.array([[  59. ,   -4. ,    2. ,    1. ],       [  39. ,   41. ,   -5. ,    0.6],       [   3. ,   61. ,    4. ,    0.7],       [ -47. ,   38. ,   -4. ,    0.7],       [ -64. ,   -4. ,   -1. ,    0.9],       [ -38. ,  -43. ,   -4. ,    0.9],       [  -5. ,  -64. ,    3. ,    0.8],       [  38. ,  -44. ,   -3. ,    0.5],       [  62. ,   -4. ,   -2. ,    0.7],       [  44. ,   48. ,    0. ,    1.3],       [  -2. ,   68. ,    2. ,    1.2],       [ -50. ,   48. ,   -1. ,    1.4],       [ -63. ,   -5. ,   -2. ,    1. ],       [ -48. ,  -47. ,    2. ,    1.3],       [  -5. ,  -66. ,    2. ,    1.1],       [  44. ,  -47. ,    0. ,    1.3],       [  70. ,   -5. ,    3. ,    0.8],       [  52. ,   50. ,    1. ,    0.7],       [  -3. ,   66. ,    4. ,    1.2],       [ -54. ,   52. ,    4. ,    0.9],       [ -76. ,    3. ,    1. ,    1.1],       [ -48. ,  -51. ,    4. ,    0.8],       [  -2. ,  -69. ,   -2. ,    0.6],       [  54. ,  -50. ,   -3. ,    1. ],       [  75. ,    1. ,   -2. ,    1.5],       [  55. ,   56. ,    0. ,    1. ],       [   4. ,   76. ,   -1. ,    1.2],       [ -54. ,   59. ,   -4. ,    1.4],       [ -82. ,    4. ,    4. ,    1.3],       [ -53. ,  -58. ,    2. ,    1.2],       [  -3. ,  -82. ,   -1. ,    1.5],       [  54. ,  -53. ,   -1. ,    0.7],       [  79. ,    4. ,    1. ,    1.3],       [  54. ,   57. ,    4. ,    0.9],       [  -4. ,   79. ,   -4. ,    1.5],       [ -59. ,   58. ,   -4. ,    1.2],       [ -88. ,    3. ,   -1. ,    1. ],       [ -57. ,  -60. ,    4. ,    0.9],       [  -1. ,  -79. ,    3. ,    1. ],       [  54. ,  -58. ,   -4. ,    1.1],       [  88. ,   -4. ,    1. ,    1.1],       [  58. ,   60. ,   -1. ,    0.6],       [   1. ,   92. ,   -3. ,    0.6],       [ -58. ,   60. ,    0. ,    1.4],       [ -88. ,    2. ,    4. ,    0.9],       [ -62. ,  -66. ,   -5. ,    0.7],       [   3. ,  -88. ,    4. ,    1.2],       [  62. ,  -66. ,    2. ,    0.6],       [  94. ,    3. ,    4. ,    1.1],       [  65. ,   69. ,   -4. ,    0.7],       [  -2. ,   91. ,    3. ,    1.2],       [ -72. ,   65. ,   -4. ,    0.7],       [ -93. ,   -2. ,   -2. ,    1.3],       [ -65. ,  -70. ,    4. ,    1.3],       [   3. ,  -91. ,    3. ,    0.8],       [  70. ,  -70. ,    2. ,    1.3],       [  98. ,   -2. ,   -2. ,    1.2],       [  72. ,   73. ,   -5. ,    0.9],       [  -2. ,   96. ,   -3. ,    1.1],       [ -75. ,   66. ,    0. ,    0.6],       [ -98. ,    2. ,    4. ,    0.8],       [ -71. ,  -73. ,   -1. ,    0.9],       [   2. , -104. ,   -4. ,    0.6],       [  74. ,  -70. ,    1. ,    1. ]])
        basis0 = BSplineBasis(6, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.3,  2.7,  4. ,  4. ,
        4. ,  4. ,  4. ,  5. ]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  3. ,  3. ,  3. ,
        3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 7.9,  8.4,  2.5])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 7.900000
        pt2[...,1] -= 8.400000
        pt2[...,2] -= 2.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p75_rational_C0_periodic(self):
        controlpoints = np.array([[  59. ,    1. ,    3. ,    1.1],       [  45. ,   40. ,    0. ,    1.1],       [  20. ,   55. ,   -5. ,    0.6],       [ -21. ,   54. ,    1. ,    0.7],       [ -53. ,   39. ,   -5. ,    0.7],       [ -61. ,   -3. ,    1. ,    0.8],       [ -54. ,  -36. ,   -1. ,    0.9],       [ -21. ,  -56. ,   -2. ,    1. ],       [  19. ,  -59. ,    4. ,    0.9],       [  47. ,  -35. ,   -3. ,    0.9],       [  68. ,   -2. ,   -3. ,    1. ],       [  49. ,   39. ,    0. ,    1.3],       [  19. ,   62. ,    2. ,    1.1],       [ -20. ,   58. ,   -5. ,    1. ],       [ -52. ,   37. ,    4. ,    1.1],       [ -69. ,    0. ,    4. ,    1.3],       [ -52. ,  -35. ,    2. ,    0.7],       [ -19. ,  -61. ,   -2. ,    1.3],       [  15. ,  -61. ,    0. ,    1.1],       [  49. ,  -43. ,   -1. ,    1.2],       [  66. ,    1. ,   -4. ,    0.8],       [  58. ,   36. ,   -1. ,    0.8],       [  16. ,   62. ,    3. ,    1. ],       [ -25. ,   67. ,   -1. ,    0.8],       [ -58. ,   35. ,   -5. ,    1.3],       [ -66. ,   -2. ,   -3. ,    1. ],       [ -57. ,  -41. ,    3. ,    1.1],       [ -19. ,  -70. ,    3. ,    1.3],       [  16. ,  -64. ,    3. ,    1.4],       [  60. ,  -38. ,   -4. ,    1.5],       [  77. ,   -1. ,   -3. ,    0.7],       [  55. ,   44. ,    2. ,    0.9],       [  25. ,   72. ,    2. ,    0.8],       [ -25. ,   66. ,   -5. ,    1.2],       [ -64. ,   39. ,    3. ,    0.7],       [ -76. ,   -1. ,   -5. ,    0.8],       [ -58. ,  -41. ,    1. ,    1. ],       [ -20. ,  -71. ,   -4. ,    0.5],       [  27. ,  -74. ,   -2. ,    0.5],       [  61. ,  -49. ,    0. ,    1.4],       [  81. ,    4. ,    0. ,    0.7],       [  63. ,   50. ,    0. ,    0.7],       [  28. ,   69. ,    2. ,    1.3],       [ -26. ,   78. ,   -4. ,    0.8],       [ -67. ,   47. ,   -2. ,    0.8],       [ -82. ,   -2. ,    4. ,    0.7],       [ -65. ,  -49. ,    2. ,    0.7],       [ -26. ,  -79. ,   -4. ,    1.4],       [  20. ,  -78. ,   -1. ,    0.6],       [  66. ,  -45. ,   -2. ,    0.8],       [  80. ,   -3. ,   -1. ,    0.7],       [  69. ,   45. ,    0. ,    0.6],       [  26. ,   78. ,   -4. ,    1. ],       [ -24. ,   78. ,   -2. ,    1.3],       [ -64. ,   50. ,   -4. ,    0.8],       [ -78. ,    1. ,    3. ,    0.7],       [ -63. ,  -48. ,   -5. ,    1.3],       [ -30. ,  -75. ,   -5. ,    0.7],       [  27. ,  -75. ,    1. ,    0.6],       [  66. ,  -45. ,    2. ,    0.7],       [  85. ,    1. ,    4. ,    1.5],       [  69. ,   51. ,    4. ,    0.6],       [  30. ,   84. ,   -2. ,    0.6],       [ -32. ,   79. ,    0. ,    1.2],       [ -67. ,   51. ,   -2. ,    0.7],       [ -87. ,    2. ,    1. ,    0.5],       [ -72. ,  -54. ,    0. ,    1. ],       [ -25. ,  -82. ,   -5. ,    0.9],       [  31. ,  -79. ,   -2. ,    1. ],       [  69. ,  -53. ,   -2. ,    0.7],       [  94. ,    4. ,   -4. ,    0.6],       [  77. ,   50. ,    0. ,    1.1],       [  24. ,   82. ,   -2. ,    1. ],       [ -28. ,   85. ,   -1. ,    1.5],       [ -77. ,   56. ,   -5. ,    0.7],       [ -96. ,   -1. ,   -2. ,    0.7],       [ -70. ,  -51. ,   -3. ,    1.1],       [ -32. ,  -86. ,    4. ,    1.5],       [  32. ,  -83. ,    1. ,    1.3],       [  72. ,  -50. ,   -3. ,    1.2],       [  97. ,    4. ,   -5. ,    0.9],       [  75. ,   51. ,    1. ,    0.9],       [  24. ,   86. ,    3. ,    0.9],       [ -26. ,   85. ,   -4. ,    1.2],       [ -82. ,   52. ,    3. ,    1.2],       [ -95. ,    1. ,   -2. ,    0.8],       [ -73. ,  -58. ,   -1. ,    0.8],       [ -33. ,  -96. ,    2. ,    1.5],       [  31. ,  -95. ,    4. ,    0.9],       [  77. ,  -53. ,   -2. ,    1.1],       [ 100. ,   -3. ,   -1. ,    0.7],       [  76. ,   62. ,    4. ,    0.7],       [  30. ,   90. ,    3. ,    0.7],       [ -32. ,   94. ,   -5. ,    0.6],       [ -82. ,   61. ,   -4. ,    0.8],       [-103. ,   -1. ,    1. ,    0.6],       [ -86. ,  -64. ,    3. ,    0.6],       [ -34. ,  -95. ,   -2. ,    0.5],       [  27. ,  -97. ,   -1. ,    1.3],       [  84. ,  -57. ,    0. ,    0.9]])
        basis0 = BSplineBasis(7, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  2.9,  4.3,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5.7]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.3,  3.3,  4. ,  5. ,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.9,  2.5,  7.5])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.900000
        pt2[...,1] /= 2.500000
        pt2[...,2] /= 7.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p76_rational_C0_periodic(self):
        controlpoints = np.array([[  58. ,   -2. ,    0. ,    1.3],       [  52. ,   29. ,   -3. ,    1.4],       [  25. ,   55. ,    3. ,    0.5],       [ -11. ,   60. ,   -5. ,    0.7],       [ -43. ,   47. ,    2. ,    1.1],       [ -56. ,   14. ,   -2. ,    0.9],       [ -57. ,  -22. ,   -3. ,    0.7],       [ -42. ,  -44. ,   -1. ,    0.6],       [  -7. ,  -58. ,    2. ,    1.2],       [  20. ,  -51. ,    0. ,    0.6],       [  53. ,  -36. ,   -4. ,    0.5],       [  62. ,    3. ,   -3. ,    1.3],       [  57. ,   35. ,   -4. ,    1.5],       [  30. ,   61. ,    3. ,    1.5],       [  -6. ,   65. ,    1. ,    1.5],       [ -41. ,   52. ,    3. ,    0.6],       [ -62. ,   21. ,    4. ,    0.9],       [ -69. ,  -21. ,   -5. ,    0.7],       [ -41. ,  -48. ,    4. ,    1.2],       [ -13. ,  -62. ,   -4. ,    1.1],       [  30. ,  -57. ,   -5. ,    1. ],       [  56. ,  -40. ,    3. ,    0.7],       [  70. ,    0. ,   -5. ,    0.5],       [  64. ,   42. ,    1. ,    1.3],       [  26. ,   70. ,   -5. ,    0.8],       [ -14. ,   75. ,    3. ,    0.6],       [ -49. ,   59. ,    2. ,    1.2],       [ -71. ,   19. ,   -5. ,    1.2],       [ -75. ,  -21. ,    4. ,    0.5],       [ -47. ,  -55. ,    1. ,    1.1],       [ -15. ,  -71. ,    0. ,    1.1],       [  31. ,  -69. ,    1. ,    1.3],       [  60. ,  -36. ,   -2. ,    0.9],       [  82. ,    0. ,    2. ,    1.2],       [  71. ,   41. ,    3. ,    1.5],       [  30. ,   76. ,   -2. ,    1.1],       [ -15. ,   74. ,    0. ,    1.1],       [ -49. ,   58. ,   -5. ,    0.5],       [ -75. ,   25. ,   -4. ,    0.8],       [ -79. ,  -20. ,   -1. ,    0.8],       [ -54. ,  -65. ,   -2. ,    0.6],       [  -7. ,  -82. ,    2. ,    1.3],       [  36. ,  -77. ,    0. ,    0.9],       [  62. ,  -47. ,    0. ,    1. ],       [  83. ,   -3. ,   -4. ,    1.3],       [  68. ,   50. ,    1. ,    0.9],       [  37. ,   74. ,    1. ,    1.5],       [ -17. ,   81. ,   -1. ,    1. ],       [ -55. ,   65. ,   -4. ,    0.7],       [ -88. ,   19. ,    0. ,    1.1],       [ -88. ,  -28. ,    3. ,    0.6],       [ -58. ,  -69. ,   -4. ,    0.6],       [  -9. ,  -90. ,    3. ,    1. ],       [  38. ,  -82. ,    3. ,    0.7],       [  74. ,  -43. ,    3. ,    0.9],       [  97. ,    0. ,   -1. ,    1.2],       [  74. ,   48. ,    0. ,    1. ],       [  42. ,   84. ,    2. ,    0.8],       [ -15. ,   88. ,   -3. ,    0.5],       [ -57. ,   66. ,    0. ,    0.8],       [ -91. ,   30. ,   -3. ,    1.5],       [ -94. ,  -22. ,   -4. ,    0.6],       [ -62. ,  -70. ,   -3. ,    0.6],       [ -13. ,  -89. ,   -1. ,    1.3],       [  43. ,  -82. ,    1. ,    1.2],       [  74. ,  -46. ,   -1. ,    1.1],       [ 101. ,   -2. ,   -2. ,    0.6],       [  80. ,   57. ,   -2. ,    0.6],       [  39. ,   92. ,    1. ,    0.8],       [ -11. ,   95. ,   -2. ,    0.5],       [ -66. ,   77. ,   -5. ,    1. ],       [ -94. ,   26. ,    4. ,    1.5],       [ -92. ,  -24. ,   -1. ,    0.8],       [ -63. ,  -76. ,   -3. ,    1.3],       [ -14. ,  -97. ,    3. ,    1.4],       [  46. ,  -95. ,   -3. ,    0.7],       [  82. ,  -51. ,   -2. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.2,  3.3,  4.1,
        4.7,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  7. ]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.mirror([0, 2, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,1] = -pt2[...,1]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p777_rational_C0_periodic(self):
        controlpoints = np.array([[  46. ,   -3. ,   -4. ,    0.6],       [  45. ,   27. ,    0. ,    1.5],       [  24. ,   49. ,   -4. ,    1.1],       [  -7. ,   45. ,   -2. ,    1.2],       [ -34. ,   37. ,   -1. ,    1.4],       [ -45. ,   13. ,   -5. ,    1.2],       [ -45. ,  -10. ,    1. ,    0.9],       [ -31. ,  -39. ,   -3. ,    1.1],       [  -7. ,  -50. ,    0. ,    0.8],       [  18. ,  -51. ,   -3. ,    1. ],       [  46. ,  -23. ,    3. ,    0.6],       [  54. ,    4. ,   -4. ,    0.5],       [  48. ,   32. ,    4. ,    1.1],       [  24. ,   49. ,    3. ,    0.9],       [ -12. ,   58. ,   -2. ,    0.6],       [ -42. ,   40. ,    2. ,    1.4],       [ -53. ,   17. ,   -2. ,    1.4],       [ -54. ,  -17. ,    4. ,    0.6],       [ -42. ,  -43. ,    2. ,    0.8],       [  -4. ,  -61. ,   -5. ,    0.9],       [  20. ,  -55. ,   -4. ,    1.2],       [  46. ,  -36. ,    2. ,    1.4],       [  66. ,    4. ,   -2. ,    1.1],       [  49. ,   33. ,   -2. ,    0.9],       [  22. ,   59. ,    0. ,    0.8],       [  -6. ,   60. ,    2. ,    1.2],       [ -46. ,   48. ,   -1. ,    1.2],       [ -62. ,   13. ,   -4. ,    0.8],       [ -62. ,  -20. ,   -4. ,    1.3],       [ -44. ,  -47. ,   -4. ,    0.7],       [  -9. ,  -69. ,   -5. ,    1. ],       [  30. ,  -58. ,    4. ,    1.1],       [  55. ,  -34. ,    3. ,    1.5],       [  67. ,   -5. ,   -1. ,    1.4],       [  61. ,   39. ,    1. ,    1. ],       [  31. ,   64. ,    2. ,    1.1],       [  -7. ,   75. ,   -4. ,    1.5],       [ -49. ,   55. ,    3. ,    1.2],       [ -71. ,   17. ,    2. ,    0.6],       [ -73. ,  -19. ,   -5. ,    1.1],       [ -50. ,  -51. ,   -4. ,    1.3],       [ -10. ,  -66. ,    2. ,    0.6],       [  27. ,  -63. ,   -4. ,    0.6],       [  62. ,  -38. ,   -2. ,    1.1],       [  74. ,   -3. ,    4. ,    1.3],       [  71. ,   46. ,    0. ,    1.1],       [  35. ,   71. ,    2. ,    1.5],       [  -8. ,   78. ,    1. ,    1. ],       [ -47. ,   61. ,    3. ,    0.9],       [ -78. ,   23. ,    1. ,    0.6],       [ -79. ,  -22. ,   -1. ,    0.9],       [ -55. ,  -64. ,    0. ,    0.7],       [ -16. ,  -83. ,   -1. ,    0.7],       [  28. ,  -69. ,   -3. ,    1.5],       [  64. ,  -38. ,    1. ,    0.7],       [  84. ,    0. ,   -5. ,    1.3],       [  73. ,   42. ,   -1. ,    0.9],       [  40. ,   76. ,    3. ,    1.1],       [ -16. ,   85. ,    0. ,    1.5],       [ -56. ,   63. ,   -5. ,    1. ],       [ -79. ,   28. ,    3. ,    1.5],       [ -87. ,  -29. ,   -5. ,    1.2],       [ -55. ,  -63. ,    4. ,    0.7],       [  -9. ,  -81. ,    1. ,    1. ],       [  30. ,  -80. ,   -5. ,    1.3],       [  67. ,  -43. ,    1. ,    1. ],       [  95. ,    0. ,    2. ,    1.4],       [  79. ,   54. ,   -5. ,    1.3],       [  43. ,   89. ,    1. ,    1.5],       [  -9. ,   87. ,   -1. ,    1. ],       [ -58. ,   68. ,   -4. ,    1.5],       [ -94. ,   26. ,    4. ,    1.3],       [ -87. ,  -26. ,   -2. ,    0.7],       [ -58. ,  -68. ,   -1. ,    0.8],       [ -18. ,  -89. ,    3. ,    0.7],       [  39. ,  -85. ,    3. ,    0.8],       [  74. ,  -46. ,    3. ,    1. ],       [  96. ,    3. ,    3. ,    1. ],       [  88. ,   53. ,    0. ,    0.9],       [  39. ,   93. ,    1. ,    1.2],       [ -19. ,  100. ,   -2. ,    1. ],       [ -62. ,   74. ,   -3. ,    0.7],       [-101. ,   28. ,    4. ,    1.2],       [ -96. ,  -25. ,   -1. ,    0.8],       [ -61. ,  -72. ,   -1. ,    1.1],       [ -16. ,  -97. ,   -4. ,    1. ],       [  40. ,  -93. ,   -5. ,    0.5],       [  80. ,  -53. ,    3. ,    1.2],       [  48. ,   -1. ,    3. ,    1.5],       [  42. ,   25. ,    0. ,    1.3],       [  19. ,   40. ,    6. ,    1.5],       [  -7. ,   47. ,    0. ,    0.7],       [ -38. ,   36. ,    7. ,    1.3],       [ -51. ,   14. ,    5. ,    0.5],       [ -46. ,  -10. ,    5. ,    1.1],       [ -36. ,  -42. ,    7. ,    1. ],       [  -8. ,  -47. ,    6. ,    0.9],       [  18. ,  -41. ,   -2. ,    0.8],       [  44. ,  -24. ,    5. ,    0.7],       [  56. ,    3. ,    7. ,    0.7],       [  44. ,   32. ,    5. ,    1.1],       [  21. ,   47. ,    6. ,    0.9],       [ -12. ,   52. ,   -1. ,    1.4],       [ -34. ,   47. ,    2. ,    0.5],       [ -55. ,   20. ,   -1. ,    0.5],       [ -52. ,  -21. ,    4. ,    1.4],       [ -42. ,  -45. ,    2. ,    0.6],       [ -10. ,  -58. ,    5. ,    1.1],       [  27. ,  -57. ,    8. ,    1.1],       [  44. ,  -31. ,   -2. ,    1. ],       [  65. ,    3. ,    7. ,    1.4],       [  56. ,   31. ,    7. ,    1.2],       [  27. ,   56. ,    6. ,    1.5],       [ -13. ,   60. ,    0. ,    1.4],       [ -40. ,   47. ,    4. ,    0.8],       [ -62. ,   21. ,    7. ,    1.5],       [ -59. ,  -16. ,    7. ,    0.5],       [ -40. ,  -46. ,   -2. ,    0.6],       [  -6. ,  -69. ,    3. ,    1.4],       [  25. ,  -55. ,    2. ,    1.1],       [  55. ,  -38. ,   -1. ,    1.3],       [  71. ,    1. ,    2. ,    0.9],       [  65. ,   39. ,    8. ,    0.7],       [  27. ,   60. ,   -2. ,    1.1],       [  -9. ,   68. ,    4. ,    0.9],       [ -45. ,   53. ,    4. ,    1.1],       [ -70. ,   25. ,    6. ,    1.1],       [ -68. ,  -21. ,    4. ,    0.8],       [ -48. ,  -57. ,   -1. ,    1. ],       [ -15. ,  -69. ,    8. ,    0.9],       [  25. ,  -68. ,    7. ,    1.4],       [  58. ,  -39. ,    5. ,    0.6],       [  77. ,   -3. ,    4. ,    1. ],       [  61. ,   42. ,    7. ,    0.8],       [  32. ,   72. ,    8. ,    0.8],       [ -16. ,   78. ,    3. ,    0.8],       [ -55. ,   58. ,    7. ,    0.8],       [ -78. ,   18. ,    2. ,    0.6],       [ -80. ,  -18. ,    8. ,    1.1],       [ -52. ,  -59. ,   -2. ,    1.3],       [  -8. ,  -77. ,    0. ,    0.5],       [  37. ,  -70. ,    6. ,    1. ],       [  67. ,  -42. ,    6. ,    0.9],       [  82. ,   -1. ,    0. ,    1.3],       [  75. ,   50. ,   -1. ,    1.3],       [  31. ,   79. ,    8. ,    0.6],       [ -15. ,   87. ,    7. ,    0.6],       [ -57. ,   64. ,    6. ,    1.2],       [ -78. ,   27. ,   -1. ,    1.5],       [ -87. ,  -24. ,    7. ,    0.9],       [ -55. ,  -64. ,    7. ,    0.7],       [ -12. ,  -90. ,    7. ,    1.3],       [  35. ,  -79. ,    7. ,    0.7],       [  73. ,  -44. ,    6. ,    1.2],       [  89. ,   -2. ,   -2. ,    1.3],       [  76. ,   49. ,    1. ,    0.6],       [  36. ,   88. ,    5. ,    0.5],       [ -13. ,   89. ,    6. ,    0.6],       [ -59. ,   66. ,    8. ,    1.1],       [ -89. ,   28. ,    2. ,    0.9],       [ -88. ,  -22. ,    7. ,    1. ],       [ -58. ,  -66. ,    3. ,    0.7],       [ -18. ,  -93. ,    2. ,    0.6],       [  37. ,  -88. ,    2. ,    1.3],       [  78. ,  -50. ,    0. ,    0.7],       [  98. ,   -4. ,   -1. ,    0.9],       [  88. ,   49. ,    1. ,    0.7],       [  37. ,   86. ,    3. ,    0.7],       [ -15. ,  102. ,    4. ,    1.1],       [ -68. ,   70. ,   -2. ,    1.3],       [ -97. ,   30. ,    2. ,    1.3],       [ -96. ,  -32. ,   -1. ,    0.8],       [ -68. ,  -79. ,    6. ,    1.4],       [ -13. ,  -97. ,    2. ,    0.9],       [  37. ,  -93. ,   -1. ,    0.8],       [  87. ,  -54. ,   -1. ,    0.8],       [  49. ,    0. ,    7. ,    1.4],       [  46. ,   31. ,   10. ,    0.6],       [  17. ,   49. ,    7. ,    1.3],       [  -5. ,   45. ,    8. ,    1.5],       [ -37. ,   38. ,   11. ,    0.7],       [ -48. ,   13. ,    3. ,    1.2],       [ -47. ,  -11. ,   10. ,    0.7],       [ -38. ,  -36. ,    5. ,    0.8],       [ -11. ,  -48. ,    2. ,    0.9],       [  19. ,  -42. ,    3. ,    0.5],       [  46. ,  -25. ,    8. ,    1.3],       [  58. ,    0. ,   12. ,    1.1],       [  50. ,   31. ,    2. ,    0.7],       [  24. ,   48. ,    2. ,    0.8],       [ -10. ,   60. ,   11. ,    1.4],       [ -37. ,   42. ,    4. ,    1.3],       [ -55. ,   11. ,   10. ,    0.6],       [ -53. ,  -14. ,    2. ,    1.3],       [ -40. ,  -42. ,    9. ,    0.9],       [  -6. ,  -53. ,    8. ,    0.6],       [  22. ,  -53. ,   12. ,    1.5],       [  48. ,  -35. ,    5. ,    1.4],       [  63. ,    3. ,    9. ,    1.3],       [  54. ,   37. ,    3. ,    1.3],       [  22. ,   57. ,    8. ,    1.5],       [ -12. ,   64. ,    9. ,    1. ],       [ -39. ,   48. ,   11. ,    1.4],       [ -67. ,   20. ,    5. ,    0.6],       [ -64. ,  -19. ,   11. ,    0.5],       [ -38. ,  -51. ,    7. ,    0.8],       [ -14. ,  -62. ,    3. ,    1.3],       [  25. ,  -61. ,    4. ,    0.6],       [  53. ,  -39. ,   11. ,    0.8],       [  69. ,    2. ,    2. ,    1.1],       [  56. ,   41. ,    4. ,    0.6],       [  30. ,   63. ,   10. ,    1.3],       [ -10. ,   74. ,    4. ,    1.1],       [ -44. ,   51. ,    8. ,    0.8],       [ -65. ,   22. ,    7. ,    1. ],       [ -69. ,  -16. ,    5. ,    1.2],       [ -45. ,  -54. ,    6. ,    1. ],       [ -13. ,  -70. ,    4. ,    0.5],       [  31. ,  -62. ,    4. ,    1.3],       [  61. ,  -36. ,    6. ,    0.9],       [  78. ,   -5. ,    7. ,    0.5],       [  67. ,   39. ,    8. ,    0.9],       [  28. ,   74. ,    3. ,    0.7],       [ -12. ,   77. ,    7. ,    1.5],       [ -55. ,   55. ,   10. ,    0.7],       [ -74. ,   24. ,    8. ,    1.1],       [ -77. ,  -24. ,    8. ,    0.8],       [ -52. ,  -60. ,   10. ,    1.3],       [ -10. ,  -73. ,    4. ,    1. ],       [  27. ,  -72. ,    6. ,    0.9],       [  70. ,  -46. ,   11. ,    0.5],       [  87. ,   -5. ,    9. ,    0.9],       [  71. ,   41. ,    5. ,    1. ],       [  36. ,   82. ,   12. ,    1.2],       [  -8. ,   86. ,    2. ,    0.9],       [ -60. ,   62. ,    9. ,    0.6],       [ -78. ,   21. ,    6. ,    0.8],       [ -84. ,  -28. ,   10. ,    1.3],       [ -59. ,  -62. ,    3. ,    1.2],       [ -18. ,  -80. ,   10. ,    1.5],       [  38. ,  -78. ,   10. ,    1. ],       [  76. ,  -48. ,    7. ,    0.8],       [  88. ,    1. ,    7. ,    1. ],       [  75. ,   55. ,    4. ,    1. ],       [  43. ,   82. ,    3. ,    1.1],       [ -18. ,   92. ,   10. ,    0.5],       [ -61. ,   72. ,    4. ,    0.9],       [ -86. ,   30. ,    5. ,    1.5],       [ -90. ,  -26. ,    5. ,    1.4],       [ -65. ,  -69. ,   11. ,    0.7],       [  -9. ,  -94. ,    9. ,    1.4],       [  40. ,  -89. ,    7. ,    0.9],       [  81. ,  -48. ,    7. ,    1.4],       [ 101. ,   -1. ,    3. ,    0.5],       [  79. ,   58. ,    7. ,    1.5],       [  46. ,   89. ,    8. ,    1.3],       [ -17. ,   97. ,    6. ,    0.5],       [ -67. ,   73. ,    8. ,    1.1],       [ -93. ,   28. ,    2. ,    1.5],       [ -93. ,  -25. ,    2. ,    1.1],       [ -66. ,  -73. ,    4. ,    0.8],       [ -18. ,  -96. ,    9. ,    0.7],       [  43. ,  -96. ,    2. ,    1.4],       [  86. ,  -58. ,    9. ,    0.5],       [  47. ,   -5. ,    9. ,    1.2],       [  40. ,   29. ,    9. ,    1.1],       [  16. ,   43. ,    6. ,    1.3],       [  -8. ,   51. ,   11. ,    0.9],       [ -38. ,   35. ,    6. ,    0.6],       [ -51. ,   17. ,   14. ,    1.1],       [ -51. ,  -16. ,    6. ,    0.8],       [ -32. ,  -37. ,    7. ,    1.2],       [  -3. ,  -54. ,   12. ,    1. ],       [  22. ,  -41. ,   14. ,    0.7],       [  46. ,  -30. ,   11. ,    1.1],       [  52. ,   -1. ,    6. ,    0.8],       [  50. ,   26. ,    7. ,    1.4],       [  19. ,   56. ,   11. ,    0.8],       [  -4. ,   57. ,    6. ,    1.1],       [ -37. ,   44. ,    8. ,    0.9],       [ -52. ,   12. ,   12. ,    0.8],       [ -55. ,  -18. ,   11. ,    1.2],       [ -39. ,  -46. ,    7. ,    0.8],       [ -13. ,  -61. ,   12. ,    1.4],       [  26. ,  -56. ,   12. ,    0.7],       [  43. ,  -27. ,    6. ,    1.2],       [  65. ,    2. ,    6. ,    0.9],       [  57. ,   33. ,   11. ,    0.5],       [  23. ,   54. ,    7. ,    1.4],       [ -13. ,   64. ,    9. ,    0.6],       [ -39. ,   52. ,   10. ,    0.7],       [ -64. ,   22. ,   15. ,    1. ],       [ -66. ,  -19. ,   10. ,    0.6],       [ -38. ,  -48. ,    9. ,    1.1],       [ -13. ,  -67. ,   12. ,    1.3],       [  31. ,  -63. ,    5. ,    0.8],       [  49. ,  -38. ,    9. ,    1.1],       [  73. ,    4. ,    9. ,    0.9],       [  61. ,   35. ,    7. ,    0.9],       [  31. ,   62. ,   12. ,    1.4],       [  -9. ,   73. ,   10. ,    1.2],       [ -49. ,   50. ,   15. ,    0.7],       [ -64. ,   16. ,   10. ,    1.1],       [ -66. ,  -16. ,   12. ,    0.8],       [ -51. ,  -50. ,   14. ,    1.3],       [  -7. ,  -69. ,   10. ,    1.2],       [  33. ,  -61. ,    5. ,    1.2],       [  64. ,  -41. ,    6. ,    1.1],       [  83. ,   -1. ,    9. ,    0.8],       [  69. ,   45. ,   11. ,    0.5],       [  28. ,   69. ,   12. ,    1.3],       [ -15. ,   78. ,   15. ,    0.7],       [ -53. ,   59. ,    7. ,    0.7],       [ -76. ,   24. ,    6. ,    1.4],       [ -76. ,  -24. ,    7. ,    1.4],       [ -49. ,  -58. ,    9. ,    1.3],       [ -14. ,  -76. ,    9. ,    1.1],       [  35. ,  -73. ,   14. ,    1.4],       [  62. ,  -40. ,    6. ,    1.1],       [  82. ,   -2. ,   14. ,    1.2],       [  67. ,   46. ,   15. ,    1.5],       [  38. ,   80. ,    6. ,    0.8],       [ -11. ,   82. ,    8. ,    1.4],       [ -52. ,   67. ,    7. ,    1.3],       [ -80. ,   25. ,   14. ,    0.7],       [ -82. ,  -27. ,    7. ,    1.1],       [ -56. ,  -62. ,    6. ,    1.2],       [  -8. ,  -84. ,    9. ,    0.8],       [  31. ,  -77. ,   14. ,    1.3],       [  67. ,  -48. ,   13. ,    1.1],       [  95. ,    3. ,   12. ,    1. ],       [  76. ,   51. ,   14. ,    0.7],       [  42. ,   86. ,   10. ,    1.3],       [ -13. ,   94. ,   11. ,    0.9],       [ -59. ,   73. ,   14. ,    0.6],       [ -94. ,   22. ,   12. ,    0.9],       [ -89. ,  -31. ,   15. ,    1.1],       [ -57. ,  -69. ,    7. ,    1.5],       [ -16. ,  -97. ,   15. ,    0.9],       [  33. ,  -87. ,   13. ,    0.6],       [  77. ,  -47. ,    7. ,    0.9],       [ 102. ,    2. ,    9. ,    0.8],       [  87. ,   49. ,   12. ,    0.7],       [  40. ,   87. ,    6. ,    1. ],       [ -17. ,   99. ,    8. ,    1.2],       [ -70. ,   74. ,    9. ,    0.9],       [ -93. ,   28. ,    7. ,    1.1],       [-100. ,  -29. ,   10. ,    1.4],       [ -71. ,  -79. ,   12. ,    1.1],       [ -17. ,  -98. ,   15. ,    1.2],       [  43. ,  -88. ,   11. ,    0.9],       [  80. ,  -52. ,   10. ,    0.9],       [  49. ,   -1. ,   15. ,    1.3],       [  41. ,   29. ,   11. ,    1. ],       [  25. ,   43. ,   10. ,    1.1],       [ -10. ,   52. ,   17. ,    0.8],       [ -35. ,   37. ,   19. ,    0.6],       [ -50. ,   12. ,   13. ,    1. ],       [ -48. ,  -18. ,   11. ,    1.5],       [ -31. ,  -40. ,   17. ,    0.5],       [  -6. ,  -54. ,   17. ,    1.2],       [  15. ,  -46. ,   16. ,    1. ],       [  46. ,  -24. ,   18. ,    1.3],       [  57. ,    0. ,   15. ,    0.7],       [  52. ,   29. ,   10. ,    1.4],       [  27. ,   56. ,   17. ,    1.3],       [ -12. ,   59. ,   11. ,    1.2],       [ -36. ,   46. ,   15. ,    1.4],       [ -51. ,   13. ,   10. ,    1.1],       [ -58. ,  -18. ,   16. ,    1.4],       [ -35. ,  -44. ,   15. ,    1.1],       [ -12. ,  -54. ,   14. ,    0.6],       [  21. ,  -54. ,   10. ,    0.6],       [  45. ,  -29. ,   18. ,    0.9],       [  64. ,    2. ,   11. ,    0.8],       [  54. ,   38. ,   16. ,    0.9],       [  21. ,   54. ,   17. ,    1. ],       [ -13. ,   58. ,   12. ,    1. ],       [ -39. ,   48. ,   13. ,    1.4],       [ -61. ,   13. ,   10. ,    0.9],       [ -58. ,  -23. ,   10. ,    1.5],       [ -47. ,  -47. ,   13. ,    1.1],       [  -7. ,  -67. ,   13. ,    1. ],       [  30. ,  -56. ,   12. ,    1.1],       [  50. ,  -40. ,   15. ,    1. ],       [  75. ,   -3. ,    9. ,    1.1],       [  55. ,   41. ,   10. ,    1.1],       [  28. ,   65. ,   15. ,    0.9],       [  -7. ,   69. ,   12. ,    1.1],       [ -43. ,   51. ,   18. ,    1. ],       [ -68. ,   25. ,   18. ,    1. ],       [ -66. ,  -22. ,   11. ,    1.4],       [ -48. ,  -54. ,   17. ,    1.4],       [ -14. ,  -76. ,   15. ,    1.3],       [  25. ,  -65. ,   18. ,    0.7],       [  57. ,  -42. ,   14. ,    0.8],       [  80. ,    2. ,   12. ,    1. ],       [  67. ,   46. ,   18. ,    0.9],       [  29. ,   73. ,   16. ,    1.3],       [ -14. ,   76. ,   15. ,    0.9],       [ -54. ,   64. ,   15. ,    0.9],       [ -77. ,   18. ,   10. ,    0.7],       [ -78. ,  -25. ,   16. ,    1.5],       [ -54. ,  -56. ,   18. ,    0.6],       [  -8. ,  -78. ,   11. ,    1.1],       [  34. ,  -75. ,   13. ,    1.1],       [  70. ,  -47. ,   14. ,    0.8],       [  84. ,    4. ,   14. ,    1.5],       [  71. ,   46. ,   11. ,    0.9],       [  32. ,   77. ,   17. ,    0.6],       [ -11. ,   80. ,   18. ,    0.7],       [ -52. ,   67. ,   19. ,    1. ],       [ -84. ,   24. ,   19. ,    0.7],       [ -83. ,  -28. ,   13. ,    1.1],       [ -54. ,  -67. ,   16. ,    0.5],       [ -11. ,  -89. ,   19. ,    0.9],       [  32. ,  -76. ,   10. ,    0.6],       [  70. ,  -45. ,   10. ,    1.4],       [  92. ,    3. ,   13. ,    0.8],       [  79. ,   51. ,   17. ,    0.6],       [  35. ,   82. ,   17. ,    0.9],       [ -12. ,   90. ,   15. ,    0.8],       [ -65. ,   72. ,   16. ,    0.5],       [ -89. ,   28. ,   10. ,    0.9],       [ -94. ,  -27. ,   13. ,    1. ],       [ -56. ,  -70. ,   16. ,    1.5],       [ -13. ,  -88. ,   15. ,    1.4],       [  34. ,  -81. ,   12. ,    1.4],       [  73. ,  -46. ,   18. ,    1.1],       [ 103. ,   -2. ,   16. ,    1.5],       [  80. ,   56. ,   14. ,    1. ],       [  44. ,   94. ,   12. ,    1. ],       [ -17. ,   94. ,   15. ,    0.7],       [ -68. ,   71. ,   15. ,    0.7],       [ -95. ,   27. ,   10. ,    1.2],       [ -93. ,  -25. ,   13. ,    1. ],       [ -71. ,  -75. ,   18. ,    1.3],       [ -12. ,  -95. ,   14. ,    1.3],       [  39. ,  -94. ,   13. ,    0.9],       [  81. ,  -59. ,   16. ,    1.5],       [  46. ,   -2. ,   17. ,    1.4],       [  40. ,   28. ,   16. ,    1.1],       [  16. ,   41. ,   20. ,    1.3],       [ -10. ,   47. ,   19. ,    1.3],       [ -36. ,   34. ,   18. ,    0.7],       [ -47. ,   15. ,   15. ,    1.3],       [ -47. ,  -18. ,   18. ,    1. ],       [ -28. ,  -43. ,   15. ,    1.4],       [  -8. ,  -51. ,   14. ,    0.6],       [  17. ,  -48. ,   15. ,    1.3],       [  39. ,  -31. ,   14. ,    0.7],       [  59. ,    2. ,   16. ,    0.6],       [  51. ,   32. ,   18. ,    1. ],       [  23. ,   55. ,   22. ,    1.1],       [  -8. ,   58. ,   14. ,    0.6],       [ -42. ,   38. ,   18. ,    0.7],       [ -54. ,   14. ,   17. ,    1.3],       [ -52. ,  -19. ,   18. ,    0.8],       [ -37. ,  -45. ,   21. ,    1.2],       [  -4. ,  -59. ,   22. ,    0.5],       [  22. ,  -51. ,   21. ,    0.7],       [  45. ,  -30. ,   21. ,    1.4],       [  60. ,    4. ,   16. ,    0.9],       [  53. ,   37. ,   15. ,    1. ],       [  30. ,   55. ,   17. ,    0.7],       [ -10. ,   68. ,   17. ,    1.2],       [ -43. ,   49. ,   14. ,    1.1],       [ -64. ,   17. ,   20. ,    1.2],       [ -66. ,  -18. ,   13. ,    1.4],       [ -45. ,  -52. ,   20. ,    0.7],       [  -8. ,  -65. ,   20. ,    0.9],       [  23. ,  -56. ,   14. ,    0.9],       [  51. ,  -36. ,   16. ,    0.8],       [  71. ,    1. ,   20. ,    0.9],       [  60. ,   38. ,   14. ,    1.3],       [  29. ,   68. ,   18. ,    1.5],       [ -12. ,   69. ,   21. ,    1.1],       [ -52. ,   52. ,   13. ,    0.6],       [ -73. ,   20. ,   18. ,    0.7],       [ -73. ,  -18. ,   15. ,    1.1],       [ -47. ,  -57. ,   20. ,    0.8],       [  -8. ,  -71. ,   13. ,    1.2],       [  28. ,  -68. ,   16. ,    0.9],       [  56. ,  -41. ,   20. ,    1.1],       [  77. ,    2. ,   15. ,    1.4],       [  68. ,   40. ,   14. ,    1.2],       [  31. ,   72. ,   20. ,    1.2],       [ -15. ,   75. ,   13. ,    0.9],       [ -55. ,   61. ,   20. ,    1.2],       [ -80. ,   23. ,   22. ,    1.4],       [ -73. ,  -26. ,   14. ,    1. ],       [ -53. ,  -64. ,   22. ,    1.4],       [ -13. ,  -75. ,   18. ,    1.5],       [  32. ,  -70. ,   19. ,    1.2],       [  69. ,  -40. ,   19. ,    0.7],       [  86. ,   -3. ,   19. ,    0.9],       [  76. ,   47. ,   13. ,    1.3],       [  33. ,   74. ,   17. ,    1.4],       [ -15. ,   82. ,   21. ,    0.9],       [ -56. ,   65. ,   21. ,    1.2],       [ -81. ,   23. ,   20. ,    0.8],       [ -88. ,  -25. ,   14. ,    0.8],       [ -58. ,  -70. ,   18. ,    1. ],       [ -17. ,  -88. ,   14. ,    0.7],       [  39. ,  -77. ,   16. ,    1.1],       [  70. ,  -42. ,   14. ,    0.9],       [  92. ,   -3. ,   20. ,    0.7],       [  79. ,   54. ,   18. ,    1.3],       [  33. ,   83. ,   16. ,    1. ],       [ -15. ,   87. ,   19. ,    0.5],       [ -65. ,   66. ,   14. ,    1. ],       [ -95. ,   27. ,   21. ,    0.7],       [ -85. ,  -25. ,   19. ,    1.2],       [ -64. ,  -68. ,   16. ,    1. ],       [ -15. ,  -95. ,   15. ,    1.3],       [  35. ,  -88. ,   20. ,    1.3],       [  76. ,  -55. ,   14. ,    0.6],       [  98. ,   -5. ,   15. ,    1. ],       [  81. ,   57. ,   22. ,    1.2],       [  37. ,   89. ,   21. ,    1. ],       [ -17. ,  100. ,   14. ,    1.2],       [ -65. ,   75. ,   16. ,    1.2],       [ -94. ,   25. ,   20. ,    1.5],       [ -95. ,  -28. ,   21. ,    0.5],       [ -69. ,  -80. ,   21. ,    0.9],       [ -11. ,  -95. ,   13. ,    1.1],       [  37. ,  -92. ,   21. ,    1.3],       [  83. ,  -59. ,   17. ,    1.2],       [  45. ,    1. ,   19. ,    0.9],       [  42. ,   31. ,   23. ,    1.3],       [  19. ,   48. ,   22. ,    0.5],       [  -6. ,   51. ,   23. ,    1.3],       [ -34. ,   34. ,   20. ,    1.5],       [ -46. ,   10. ,   24. ,    1.1],       [ -46. ,  -13. ,   24. ,    0.5],       [ -31. ,  -42. ,   24. ,    1.1],       [  -7. ,  -46. ,   23. ,    0.9],       [  17. ,  -46. ,   19. ,    1.5],       [  37. ,  -29. ,   18. ,    0.8],       [  54. ,    2. ,   23. ,    0.9],       [  47. ,   29. ,   19. ,    0.7],       [  26. ,   53. ,   24. ,    0.6],       [ -13. ,   54. ,   24. ,    1.3],       [ -42. ,   44. ,   17. ,    0.6],       [ -52. ,   17. ,   23. ,    1. ],       [ -56. ,  -19. ,   24. ,    0.9],       [ -36. ,  -45. ,   18. ,    0.8],       [  -6. ,  -56. ,   24. ,    0.5],       [  20. ,  -56. ,   17. ,    0.5],       [  45. ,  -35. ,   23. ,    1.4],       [  68. ,   -4. ,   17. ,    1.1],       [  54. ,   33. ,   19. ,    0.6],       [  30. ,   55. ,   25. ,    0.6],       [ -11. ,   67. ,   20. ,    1. ],       [ -44. ,   45. ,   17. ,    0.9],       [ -59. ,   20. ,   26. ,    1.5],       [ -60. ,  -15. ,   25. ,    0.9],       [ -46. ,  -53. ,   25. ,    1.4],       [ -14. ,  -63. ,   25. ,    1.4],       [  21. ,  -58. ,   22. ,    1.5],       [  55. ,  -40. ,   20. ,    0.7],       [  74. ,   -1. ,   24. ,    1. ],       [  64. ,   35. ,   23. ,    1.2],       [  25. ,   63. ,   23. ,    0.6],       [  -7. ,   68. ,   26. ,    0.8],       [ -44. ,   51. ,   21. ,    0.8],       [ -71. ,   21. ,   22. ,    1.2],       [ -68. ,  -23. ,   22. ,    0.7],       [ -46. ,  -52. ,   23. ,    0.8],       [ -10. ,  -69. ,   26. ,    1.4],       [  32. ,  -70. ,   17. ,    1.4],       [  64. ,  -38. ,   22. ,    0.9],       [  75. ,    1. ,   18. ,    1.4],       [  67. ,   37. ,   21. ,    0.9],       [  31. ,   72. ,   26. ,    1.4],       [ -14. ,   80. ,   18. ,    1.4],       [ -51. ,   57. ,   21. ,    1.3],       [ -77. ,   25. ,   18. ,    1.1],       [ -72. ,  -19. ,   23. ,    1.1],       [ -53. ,  -57. ,   26. ,    0.7],       [ -15. ,  -75. ,   20. ,    1.1],       [  30. ,  -67. ,   25. ,    0.8],       [  66. ,  -47. ,   22. ,    1.2],       [  82. ,   -3. ,   20. ,    1. ],       [  68. ,   50. ,   23. ,    0.6],       [  33. ,   77. ,   21. ,    0.9],       [ -10. ,   81. ,   20. ,    1.3],       [ -54. ,   67. ,   21. ,    1. ],       [ -87. ,   25. ,   18. ,    1.2],       [ -79. ,  -21. ,   18. ,    1.3],       [ -61. ,  -70. ,   24. ,    1.4],       [  -9. ,  -87. ,   25. ,    1.1],       [  35. ,  -75. ,   24. ,    1.5],       [  76. ,  -51. ,   22. ,    1.1],       [  91. ,    1. ,   18. ,    0.9],       [  77. ,   48. ,   24. ,    0.6],       [  41. ,   82. ,   24. ,    0.8],       [ -12. ,   96. ,   19. ,    0.6],       [ -57. ,   68. ,   19. ,    0.8],       [ -86. ,   21. ,   16. ,    1.2],       [ -89. ,  -25. ,   20. ,    1.2],       [ -62. ,  -72. ,   25. ,    0.8],       [ -13. ,  -87. ,   18. ,    1. ],       [  36. ,  -89. ,   25. ,    0.9],       [  81. ,  -55. ,   24. ,    1. ],       [  99. ,    2. ,   23. ,    0.6],       [  81. ,   49. ,   17. ,    1.3],       [  40. ,   93. ,   23. ,    1.5],       [ -17. ,   95. ,   24. ,    0.8],       [ -61. ,   73. ,   22. ,    0.6],       [ -92. ,   32. ,   26. ,    1.3],       [ -99. ,  -30. ,   18. ,    0.9],       [ -65. ,  -80. ,   20. ,    0.7],       [ -18. ,  -97. ,   23. ,    1.1],       [  42. ,  -90. ,   24. ,    1.2],       [  79. ,  -53. ,   25. ,    1.1],       [  50. ,    4. ,   23. ,    0.9],       [  38. ,   30. ,   28. ,    0.9],       [  16. ,   46. ,   22. ,    0.9],       [  -4. ,   51. ,   20. ,    0.5],       [ -38. ,   34. ,   20. ,    0.6],       [ -44. ,   11. ,   30. ,    1.4],       [ -46. ,  -18. ,   27. ,    1. ],       [ -33. ,  -38. ,   22. ,    1. ],       [  -5. ,  -47. ,   28. ,    0.9],       [  24. ,  -50. ,   22. ,    0.6],       [  38. ,  -26. ,   21. ,    1.1],       [  56. ,    2. ,   26. ,    1.4],       [  50. ,   29. ,   20. ,    1.4],       [  21. ,   48. ,   24. ,    1.4],       [ -11. ,   56. ,   23. ,    0.9],       [ -37. ,   39. ,   26. ,    1.1],       [ -51. ,   16. ,   20. ,    1.4],       [ -57. ,  -12. ,   20. ,    0.9],       [ -42. ,  -43. ,   22. ,    0.6],       [  -5. ,  -54. ,   29. ,    1.1],       [  23. ,  -56. ,   25. ,    1.1],       [  49. ,  -32. ,   26. ,    0.7],       [  67. ,    2. ,   22. ,    1. ],       [  52. ,   39. ,   29. ,    1. ],       [  29. ,   61. ,   28. ,    1.1],       [  -5. ,   65. ,   24. ,    1.2],       [ -46. ,   50. ,   21. ,    1.1],       [ -58. ,   14. ,   21. ,    0.6],       [ -61. ,  -20. ,   26. ,    1.1],       [ -40. ,  -47. ,   29. ,    1.3],       [  -8. ,  -63. ,   21. ,    1. ],       [  29. ,  -61. ,   28. ,    0.8],       [  49. ,  -36. ,   25. ,    1.5],       [  72. ,    4. ,   22. ,    1.3],       [  57. ,   34. ,   21. ,    0.9],       [  33. ,   63. ,   29. ,    1.2],       [ -15. ,   74. ,   22. ,    0.8],       [ -50. ,   53. ,   25. ,    1. ],       [ -65. ,   18. ,   27. ,    0.8],       [ -70. ,  -20. ,   24. ,    0.8],       [ -49. ,  -51. ,   27. ,    1.4],       [  -8. ,  -69. ,   22. ,    1.1],       [  29. ,  -68. ,   27. ,    1.3],       [  61. ,  -38. ,   21. ,    1.4],       [  81. ,   -5. ,   23. ,    1.5],       [  63. ,   37. ,   30. ,    0.7],       [  34. ,   73. ,   26. ,    1.5],       [ -12. ,   76. ,   25. ,    1.2],       [ -52. ,   60. ,   21. ,    1.2],       [ -73. ,   18. ,   23. ,    1.2],       [ -72. ,  -27. ,   29. ,    1. ],       [ -50. ,  -61. ,   20. ,    0.8],       [  -7. ,  -74. ,   24. ,    1. ],       [  29. ,  -70. ,   30. ,    1.4],       [  68. ,  -41. ,   25. ,    1.5],       [  87. ,   -1. ,   24. ,    0.6],       [  72. ,   48. ,   24. ,    1.1],       [  40. ,   73. ,   20. ,    1.5],       [  -8. ,   86. ,   23. ,    1.2],       [ -53. ,   64. ,   23. ,    1.1],       [ -86. ,   20. ,   24. ,    0.7],       [ -86. ,  -27. ,   20. ,    1.2],       [ -61. ,  -69. ,   26. ,    0.9],       [ -14. ,  -87. ,   27. ,    0.7],       [  31. ,  -76. ,   29. ,    0.6],       [  73. ,  -44. ,   23. ,    1.1],       [  88. ,   -3. ,   21. ,    1.3],       [  81. ,   49. ,   26. ,    0.9],       [  38. ,   79. ,   24. ,    1.2],       [ -16. ,   96. ,   22. ,    0.7],       [ -66. ,   72. ,   21. ,    1.4],       [ -92. ,   24. ,   25. ,    0.9],       [ -93. ,  -22. ,   29. ,    0.7],       [ -65. ,  -73. ,   30. ,    0.9],       [ -11. ,  -92. ,   22. ,    0.9],       [  37. ,  -82. ,   28. ,    1.3],       [  80. ,  -47. ,   25. ,    0.6],       [ 102. ,    2. ,   25. ,    1. ],       [  85. ,   54. ,   24. ,    1.4],       [  42. ,   91. ,   21. ,    1.4],       [ -11. ,  101. ,   21. ,    1.5],       [ -66. ,   74. ,   26. ,    0.6],       [ -97. ,   32. ,   20. ,    0.8],       [-101. ,  -27. ,   27. ,    0.7],       [ -61. ,  -75. ,   24. ,    1.5],       [ -15. , -100. ,   27. ,    1.4],       [  37. ,  -89. ,   23. ,    1.2],       [  86. ,  -53. ,   27. ,    0.5],       [  51. ,    3. ,   28. ,    0.9],       [  41. ,   28. ,   33. ,    0.8],       [  19. ,   45. ,   30. ,    1.3],       [  -6. ,   51. ,   28. ,    1.1],       [ -30. ,   33. ,   32. ,    1.3],       [ -49. ,   13. ,   24. ,    0.7],       [ -45. ,  -17. ,   31. ,    0.8],       [ -31. ,  -33. ,   30. ,    1. ],       [  -8. ,  -55. ,   27. ,    1.1],       [  25. ,  -49. ,   32. ,    1.1],       [  41. ,  -26. ,   25. ,    1.1],       [  60. ,   -4. ,   31. ,    0.7],       [  51. ,   34. ,   28. ,    0.8],       [  23. ,   54. ,   26. ,    1.5],       [  -5. ,   55. ,   30. ,    0.5],       [ -42. ,   44. ,   25. ,    0.8],       [ -57. ,   20. ,   32. ,    0.5],       [ -60. ,  -17. ,   32. ,    1.4],       [ -39. ,  -45. ,   28. ,    1.1],       [  -9. ,  -55. ,   31. ,    1. ],       [  26. ,  -55. ,   31. ,    1.4],       [  49. ,  -28. ,   26. ,    1.2],       [  61. ,    1. ,   28. ,    1.1],       [  57. ,   33. ,   27. ,    0.6],       [  22. ,   56. ,   31. ,    0.6],       [ -12. ,   60. ,   25. ,    0.5],       [ -39. ,   44. ,   27. ,    1.4],       [ -58. ,   20. ,   26. ,    1. ],       [ -63. ,  -14. ,   28. ,    0.8],       [ -42. ,  -47. ,   30. ,    0.7],       [  -5. ,  -65. ,   26. ,    0.9],       [  23. ,  -60. ,   32. ,    1.3],       [  52. ,  -40. ,   27. ,    1.2],       [  74. ,    0. ,   33. ,    1.2],       [  62. ,   37. ,   27. ,    0.8],       [  25. ,   61. ,   29. ,    1.3],       [  -7. ,   74. ,   32. ,    1.1],       [ -45. ,   55. ,   28. ,    1.2],       [ -67. ,   16. ,   26. ,    0.8],       [ -70. ,  -21. ,   24. ,    1.1],       [ -48. ,  -57. ,   33. ,    0.8],       [  -9. ,  -71. ,   29. ,    1.3],       [  32. ,  -67. ,   31. ,    1.2],       [  64. ,  -44. ,   33. ,    0.9],       [  80. ,    0. ,   31. ,    1.2],       [  63. ,   43. ,   32. ,    1.3],       [  28. ,   69. ,   31. ,    0.9],       [ -15. ,   80. ,   29. ,    1.5],       [ -53. ,   58. ,   31. ,    1.2],       [ -79. ,   23. ,   33. ,    0.9],       [ -73. ,  -25. ,   33. ,    0.9],       [ -55. ,  -62. ,   30. ,    0.6],       [ -11. ,  -81. ,   28. ,    1.2],       [  29. ,  -67. ,   25. ,    1. ],       [  62. ,  -41. ,   26. ,    0.9],       [  85. ,    4. ,   32. ,    1. ],       [  72. ,   42. ,   27. ,    1.1],       [  35. ,   80. ,   27. ,    0.6],       [ -12. ,   88. ,   30. ,    1.2],       [ -60. ,   61. ,   28. ,    0.8],       [ -82. ,   27. ,   25. ,    1.1],       [ -80. ,  -28. ,   29. ,    0.7],       [ -60. ,  -61. ,   28. ,    0.7],       [ -13. ,  -85. ,   31. ,    0.7],       [  30. ,  -81. ,   28. ,    0.9],       [  74. ,  -48. ,   24. ,    1.3],       [  91. ,    2. ,   30. ,    1. ],       [  80. ,   53. ,   32. ,    0.5],       [  39. ,   83. ,   24. ,    1.1],       [ -13. ,   92. ,   34. ,    0.6],       [ -66. ,   67. ,   33. ,    1. ],       [ -90. ,   28. ,   26. ,    1.3],       [ -87. ,  -23. ,   33. ,    1.2],       [ -60. ,  -72. ,   28. ,    1.5],       [ -12. ,  -92. ,   26. ,    1. ],       [  34. ,  -86. ,   26. ,    1.1],       [  75. ,  -52. ,   25. ,    1.4],       [ 103. ,    3. ,   30. ,    1. ],       [  80. ,   55. ,   28. ,    0.6],       [  42. ,   89. ,   26. ,    1.1],       [ -14. ,   94. ,   26. ,    1.2],       [ -68. ,   71. ,   28. ,    1.2],       [ -95. ,   32. ,   26. ,    0.8],       [ -92. ,  -25. ,   32. ,    1.1],       [ -71. ,  -76. ,   27. ,    1.1],       [ -14. , -101. ,   28. ,    0.6],       [  40. ,  -88. ,   25. ,    1.1],       [  88. ,  -59. ,   28. ,    0.7],       [  45. ,   -4. ,   36. ,    1. ],       [  38. ,   24. ,   28. ,    0.8],       [  25. ,   41. ,   33. ,    0.9],       [  -7. ,   49. ,   29. ,    1.1],       [ -30. ,   33. ,   31. ,    1.4],       [ -44. ,   16. ,   27. ,    1.5],       [ -48. ,  -19. ,   31. ,    1.2],       [ -34. ,  -41. ,   29. ,    1.1],       [  -9. ,  -47. ,   36. ,    0.8],       [  16. ,  -46. ,   32. ,    0.8],       [  46. ,  -25. ,   34. ,    1.2],       [  59. ,    1. ,   37. ,    0.9],       [  46. ,   28. ,   30. ,    0.8],       [  24. ,   50. ,   36. ,    0.8],       [  -6. ,   52. ,   29. ,    1.1],       [ -35. ,   46. ,   32. ,    1.4],       [ -59. ,   14. ,   36. ,    1.5],       [ -51. ,  -19. ,   32. ,    1.2],       [ -38. ,  -43. ,   32. ,    1.2],       [  -7. ,  -53. ,   34. ,    0.7],       [  23. ,  -49. ,   35. ,    1.1],       [  44. ,  -32. ,   35. ,    0.8],       [  63. ,    0. ,   33. ,    1.3],       [  56. ,   29. ,   30. ,    1.3],       [  23. ,   55. ,   30. ,    0.6],       [  -6. ,   59. ,   27. ,    1. ],       [ -40. ,   51. ,   28. ,    1. ],       [ -61. ,   19. ,   34. ,    0.7],       [ -58. ,  -15. ,   37. ,    1.3],       [ -38. ,  -52. ,   32. ,    0.7],       [  -7. ,  -67. ,   28. ,    0.6],       [  25. ,  -57. ,   28. ,    0.7],       [  52. ,  -35. ,   29. ,    1.4],       [  74. ,   -2. ,   37. ,    1.4],       [  56. ,   40. ,   35. ,    1.2],       [  34. ,   61. ,   28. ,    0.7],       [  -7. ,   67. ,   34. ,    0.8],       [ -50. ,   55. ,   34. ,    1.1],       [ -72. ,   16. ,   33. ,    1. ],       [ -72. ,  -16. ,   27. ,    0.7],       [ -43. ,  -52. ,   32. ,    1.4],       [  -8. ,  -69. ,   33. ,    0.5],       [  27. ,  -63. ,   31. ,    1.4],       [  62. ,  -40. ,   31. ,    0.8],       [  83. ,   -3. ,   28. ,    1. ],       [  62. ,   37. ,   31. ,    0.9],       [  33. ,   66. ,   27. ,    0.8],       [ -16. ,   79. ,   33. ,    1.2],       [ -51. ,   60. ,   33. ,    0.9],       [ -79. ,   24. ,   35. ,    0.6],       [ -73. ,  -24. ,   35. ,    1.3],       [ -49. ,  -58. ,   32. ,    0.5],       [  -9. ,  -78. ,   35. ,    0.7],       [  33. ,  -76. ,   27. ,    1.2],       [  64. ,  -45. ,   28. ,    1. ],       [  88. ,    3. ,   36. ,    1.3],       [  71. ,   43. ,   36. ,    1.3],       [  34. ,   75. ,   36. ,    0.6],       [ -12. ,   80. ,   31. ,    1.1],       [ -52. ,   59. ,   35. ,    0.7],       [ -84. ,   26. ,   28. ,    1.2],       [ -87. ,  -28. ,   34. ,    0.7],       [ -57. ,  -64. ,   32. ,    0.7],       [ -17. ,  -84. ,   29. ,    0.8],       [  38. ,  -77. ,   36. ,    0.6],       [  72. ,  -51. ,   30. ,    0.7],       [  91. ,    4. ,   29. ,    0.8],       [  81. ,   51. ,   32. ,    1.2],       [  40. ,   86. ,   31. ,    1.3],       [ -12. ,   88. ,   37. ,    0.7],       [ -62. ,   71. ,   32. ,    0.6],       [ -92. ,   23. ,   28. ,    0.8],       [ -89. ,  -25. ,   32. ,    1.3],       [ -62. ,  -68. ,   36. ,    1.2],       [ -11. ,  -93. ,   37. ,    1.5],       [  36. ,  -90. ,   31. ,    0.9],       [  77. ,  -54. ,   33. ,    1.4],       [ 102. ,   -5. ,   35. ,    1.2],       [  84. ,   51. ,   31. ,    1.4],       [  45. ,   87. ,   35. ,    0.5],       [ -10. ,   97. ,   29. ,    0.6],       [ -65. ,   74. ,   33. ,    1.1],       [ -95. ,   23. ,   31. ,    0.8],       [ -97. ,  -26. ,   32. ,    1.3],       [ -71. ,  -79. ,   35. ,    1.3],       [ -20. ,  -97. ,   29. ,    0.7],       [  42. ,  -96. ,   30. ,    1.2],       [  85. ,  -54. ,   32. ,    0.6],       [  54. ,   -4. ,   38. ,    1.2],       [  45. ,   30. ,   33. ,    1. ],       [  25. ,   43. ,   39. ,    0.8],       [ -11. ,   51. ,   33. ,    0.7],       [ -31. ,   41. ,   32. ,    1.1],       [ -48. ,   10. ,   36. ,    0.5],       [ -51. ,  -14. ,   38. ,    1. ],       [ -32. ,  -40. ,   32. ,    0.9],       [  -7. ,  -45. ,   38. ,    0.8],       [  21. ,  -48. ,   40. ,    0.5],       [  44. ,  -28. ,   41. ,    1.3],       [  53. ,   -3. ,   31. ,    1.1],       [  51. ,   28. ,   32. ,    0.7],       [  22. ,   51. ,   38. ,    0.7],       [ -12. ,   56. ,   33. ,    1.2],       [ -37. ,   47. ,   37. ,    1. ],       [ -58. ,   13. ,   33. ,    0.7],       [ -54. ,  -16. ,   35. ,    0.6],       [ -41. ,  -39. ,   31. ,    1.3],       [ -10. ,  -54. ,   41. ,    0.9],       [  27. ,  -57. ,   34. ,    1.2],       [  43. ,  -36. ,   35. ,    1.4],       [  59. ,   -1. ,   34. ,    0.8],       [  49. ,   33. ,   35. ,    1.3],       [  31. ,   62. ,   40. ,    1.1],       [ -11. ,   62. ,   37. ,    1.4],       [ -39. ,   50. ,   36. ,    1.4],       [ -61. ,   16. ,   38. ,    1.2],       [ -62. ,  -19. ,   39. ,    0.7],       [ -43. ,  -48. ,   32. ,    0.7],       [ -13. ,  -63. ,   35. ,    1.5],       [  29. ,  -63. ,   31. ,    1.4],       [  49. ,  -31. ,   40. ,    1.5],       [  73. ,    1. ,   36. ,    1.2],       [  60. ,   40. ,   36. ,    1.3],       [  26. ,   60. ,   37. ,    0.9],       [ -14. ,   67. ,   32. ,    1.1],       [ -46. ,   57. ,   40. ,    0.6],       [ -74. ,   15. ,   32. ,    1.2],       [ -66. ,  -17. ,   36. ,    0.7],       [ -44. ,  -53. ,   38. ,    1.4],       [  -7. ,  -68. ,   34. ,    0.5],       [  27. ,  -69. ,   40. ,    1.3],       [  61. ,  -42. ,   37. ,    0.8],       [  75. ,   -5. ,   38. ,    1.2],       [  61. ,   42. ,   31. ,    0.7],       [  37. ,   67. ,   35. ,    0.6],       [  -7. ,   73. ,   33. ,    0.8],       [ -54. ,   57. ,   41. ,    0.8],       [ -74. ,   24. ,   35. ,    1.5],       [ -81. ,  -22. ,   31. ,    1.3],       [ -48. ,  -58. ,   40. ,    0.7],       [  -9. ,  -76. ,   39. ,    0.9],       [  36. ,  -76. ,   32. ,    0.7],       [  66. ,  -39. ,   33. ,    1. ],       [  86. ,    3. ,   31. ,    0.7],       [  70. ,   42. ,   40. ,    1.2],       [  33. ,   81. ,   38. ,    0.9],       [ -17. ,   81. ,   35. ,    1.1],       [ -53. ,   60. ,   40. ,    0.9],       [ -80. ,   20. ,   35. ,    1.3],       [ -81. ,  -27. ,   39. ,    0.6],       [ -56. ,  -65. ,   32. ,    0.8],       [ -16. ,  -87. ,   33. ,    1. ],       [  35. ,  -79. ,   35. ,    1.2],       [  68. ,  -48. ,   35. ,    1.5],       [  96. ,   -4. ,   32. ,    0.7],       [  73. ,   46. ,   39. ,    0.7],       [  38. ,   86. ,   32. ,    1.3],       [ -14. ,   96. ,   34. ,    1.4],       [ -66. ,   73. ,   37. ,    1.4],       [ -88. ,   25. ,   32. ,    1.5],       [ -89. ,  -27. ,   40. ,    1. ],       [ -63. ,  -66. ,   40. ,    0.7],       [ -14. ,  -97. ,   37. ,    0.7],       [  42. ,  -86. ,   38. ,    1.2],       [  78. ,  -52. ,   36. ,    0.6],       [ 103. ,   -5. ,   31. ,    1.3],       [  85. ,   49. ,   33. ,    1.2],       [  39. ,   91. ,   37. ,    0.8],       [ -11. ,   94. ,   36. ,    1. ],       [ -65. ,   73. ,   33. ,    1.4],       [ -94. ,   25. ,   40. ,    1.4],       [ -94. ,  -24. ,   32. ,    1.3],       [ -65. ,  -81. ,   39. ,    1.1],       [ -11. ,  -95. ,   33. ,    0.7],       [  44. ,  -95. ,   40. ,    1.1],       [  82. ,  -59. ,   32. ,    0.7],       [  52. ,    2. ,   36. ,    0.5],       [  40. ,   23. ,   43. ,    1. ],       [  19. ,   40. ,   39. ,    0.9],       [  -3. ,   54. ,   42. ,    1.5],       [ -29. ,   37. ,   44. ,    1.4],       [ -51. ,    9. ,   38. ,    0.8],       [ -47. ,  -18. ,   37. ,    0.7],       [ -37. ,  -36. ,   39. ,    0.7],       [ -11. ,  -53. ,   37. ,    1. ],       [  19. ,  -45. ,   36. ,    0.7],       [  46. ,  -24. ,   44. ,    1. ],       [  54. ,   -2. ,   42. ,    1.2],       [  45. ,   34. ,   37. ,    1. ],       [  26. ,   49. ,   41. ,    1. ],       [ -10. ,   53. ,   43. ,    1.2],       [ -42. ,   45. ,   38. ,    0.9],       [ -54. ,   16. ,   44. ,    0.6],       [ -56. ,  -15. ,   37. ,    0.6],       [ -40. ,  -46. ,   35. ,    1. ],       [  -7. ,  -60. ,   36. ,    0.6],       [  25. ,  -55. ,   37. ,    1. ],       [  47. ,  -28. ,   38. ,    1. ],       [  63. ,   -3. ,   44. ,    0.9],       [  51. ,   32. ,   35. ,    1.3],       [  26. ,   56. ,   41. ,    0.7],       [  -8. ,   66. ,   41. ,    0.6],       [ -46. ,   45. ,   43. ,    0.7],       [ -62. ,   14. ,   44. ,    0.9],       [ -67. ,  -16. ,   40. ,    0.6],       [ -38. ,  -46. ,   42. ,    1.3],       [ -10. ,  -64. ,   36. ,    1. ],       [  29. ,  -59. ,   36. ,    1.5],       [  58. ,  -32. ,   39. ,    1.4],       [  75. ,   -4. ,   43. ,    1.4],       [  58. ,   41. ,   40. ,    1.3],       [  30. ,   65. ,   41. ,    1.5],       [ -16. ,   67. ,   36. ,    1. ],       [ -46. ,   55. ,   40. ,    1.1],       [ -68. ,   23. ,   38. ,    0.6],       [ -69. ,  -24. ,   41. ,    1.2],       [ -45. ,  -50. ,   40. ,    1.4],       [ -13. ,  -71. ,   41. ,    0.6],       [  34. ,  -65. ,   44. ,    0.8],       [  59. ,  -39. ,   38. ,    1.4],       [  82. ,   -3. ,   37. ,    1.1],       [  70. ,   39. ,   37. ,    1.5],       [  32. ,   69. ,   38. ,    1.3],       [ -11. ,   73. ,   38. ,    0.7],       [ -52. ,   60. ,   38. ,    0.8],       [ -72. ,   23. ,   38. ,    0.9],       [ -78. ,  -20. ,   43. ,    1. ],       [ -54. ,  -59. ,   40. ,    1. ],       [  -7. ,  -80. ,   35. ,    1.1],       [  35. ,  -72. ,   43. ,    1.4],       [  63. ,  -42. ,   38. ,    1.1],       [  90. ,    4. ,   40. ,    1. ],       [  73. ,   45. ,   41. ,    0.9],       [  39. ,   82. ,   37. ,    1. ],       [ -10. ,   86. ,   37. ,    1.1],       [ -57. ,   65. ,   42. ,    0.9],       [ -87. ,   21. ,   41. ,    1.4],       [ -82. ,  -28. ,   35. ,    1.4],       [ -56. ,  -68. ,   41. ,    0.9],       [ -17. ,  -84. ,   44. ,    0.6],       [  35. ,  -83. ,   40. ,    0.8],       [  74. ,  -49. ,   37. ,    0.9],       [  96. ,    1. ,   41. ,    1.1],       [  78. ,   48. ,   37. ,    1.2],       [  39. ,   85. ,   37. ,    1.3],       [ -17. ,   90. ,   43. ,    1. ],       [ -61. ,   65. ,   42. ,    1.4],       [ -94. ,   30. ,   36. ,    1.3],       [ -89. ,  -26. ,   38. ,    1.2],       [ -63. ,  -71. ,   41. ,    1.1],       [ -18. ,  -90. ,   37. ,    0.7],       [  38. ,  -83. ,   41. ,    0.8],       [  75. ,  -55. ,   36. ,    0.6],       [  98. ,    1. ,   42. ,    0.8],       [  81. ,   55. ,   38. ,    0.6],       [  40. ,   90. ,   38. ,    1.4],       [ -19. ,  103. ,   35. ,    1.1],       [ -62. ,   73. ,   36. ,    0.7],       [ -98. ,   32. ,   37. ,    0.7],       [ -99. ,  -32. ,   36. ,    0.8],       [ -62. ,  -77. ,   41. ,    1. ],       [ -13. , -103. ,   40. ,    0.9],       [  37. ,  -88. ,   40. ,    1.3],       [  89. ,  -50. ,   38. ,    0.6]])
        basis0 = BSplineBasis(7, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.6,  3.1,  4. ,
        4.9,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  7.4]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.1,  3.3,  4.4,
        5.2,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 7.8,  5.3,  5.5])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 7.800000
        pt2[...,1] -= 5.300000
        pt2[...,2] -= 5.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p565_rational_C0_periodic(self):
        controlpoints = np.array([[  49. ,   -3. ,    3. ,    1.4],       [  31. ,   40. ,    0. ,    1.2],       [  -4. ,   54. ,    1. ,    1.2],       [ -32. ,   35. ,   -2. ,    1.4],       [ -46. ,   -5. ,   -2. ,    1.2],       [ -33. ,  -35. ,   -3. ,    0.6],       [  -2. ,  -47. ,   -2. ,    0.5],       [  34. ,  -35. ,    1. ,    1.4],       [  51. ,    0. ,   -2. ,    1.3],       [  39. ,   34. ,    3. ,    1.2],       [   4. ,   52. ,    0. ,    1.3],       [ -39. ,   37. ,    1. ,    1.1],       [ -58. ,   -2. ,   -2. ,    1.3],       [ -45. ,  -40. ,   -1. ,    0.8],       [   4. ,  -55. ,    0. ,    0.9],       [  41. ,  -40. ,    3. ,    0.7],       [  58. ,   -4. ,   -3. ,    0.5],       [  47. ,   42. ,    1. ,    0.7],       [   0. ,   64. ,   -4. ,    1. ],       [ -45. ,   39. ,    1. ,    0.8],       [ -61. ,   -2. ,    2. ,    1.4],       [ -44. ,  -40. ,    3. ,    0.7],       [  -4. ,  -65. ,    1. ,    1.5],       [  39. ,  -47. ,    0. ,    1. ],       [  71. ,    0. ,    2. ,    0.5],       [  48. ,   50. ,   -5. ,    1.2],       [  -2. ,   67. ,   -4. ,    0.7],       [ -45. ,   47. ,   -5. ,    1.2],       [ -68. ,    4. ,    0. ,    0.8],       [ -46. ,  -48. ,    0. ,    1. ],       [  -4. ,  -71. ,    1. ,    1. ],       [  43. ,  -46. ,   -4. ,    0.9],       [  75. ,   -1. ,    3. ,    1.2],       [  49. ,   51. ,   -4. ,    1.2],       [  -5. ,   70. ,    0. ,    0.6],       [ -52. ,   46. ,    1. ,    1.4],       [ -76. ,   -3. ,   -3. ,    1. ],       [ -54. ,  -56. ,    4. ,    1.4],       [   3. ,  -77. ,    4. ,    1.2],       [  48. ,  -47. ,   -5. ,    1.2],       [  76. ,   -1. ,    3. ,    0.7],       [  55. ,   55. ,    4. ,    1.3],       [   0. ,   81. ,   -1. ,    1.1],       [ -60. ,   59. ,    1. ,    1. ],       [ -74. ,   -1. ,   -5. ,    1.2],       [ -57. ,  -55. ,    0. ,    0.6],       [  -5. ,  -82. ,    3. ,    1.4],       [  56. ,  -58. ,    4. ,    1. ],       [  88. ,    3. ,    0. ,    0.8],       [  60. ,   59. ,   -2. ,    0.7],       [  -3. ,   79. ,   -3. ,    1.3],       [ -56. ,   62. ,   -3. ,    1.2],       [ -79. ,   -2. ,    1. ,    1.1],       [ -62. ,  -61. ,    3. ,    0.9],       [   4. ,  -83. ,    0. ,    0.6],       [  58. ,  -64. ,    3. ,    1.1],       [  88. ,   -4. ,    3. ,    1.4],       [  62. ,   60. ,    1. ,    1. ],       [   0. ,   86. ,   -5. ,    1.2],       [ -59. ,   64. ,    4. ,    0.5],       [ -88. ,    2. ,   -4. ,    0.6],       [ -67. ,  -65. ,   -3. ,    0.6],       [   3. ,  -85. ,    3. ,    1.3],       [  59. ,  -64. ,    0. ,    1.4],       [  94. ,   -1. ,   -1. ,    0.9],       [  71. ,   64. ,   -5. ,    0.8],       [   4. ,   97. ,    0. ,    1.1],       [ -63. ,   65. ,    1. ,    1.1],       [-100. ,    1. ,    4. ,    0.6],       [ -63. ,  -71. ,   -2. ,    0.6],       [   4. ,  -98. ,    0. ,    1.5],       [  62. ,  -69. ,   -2. ,    1.3],       [ 100. ,    2. ,   -4. ,    1.3],       [  69. ,   69. ,    3. ,    0.6],       [   1. ,  104. ,    0. ,    1.1],       [ -66. ,   68. ,    0. ,    1.5],       [-104. ,   -2. ,    0. ,    1. ],       [ -72. ,  -68. ,    3. ,    0.6],       [   3. ,  -99. ,   -5. ,    1.2],       [  73. ,  -71. ,    2. ,    1.2],       [  54. ,    0. ,    4. ,    1.3],       [  36. ,   32. ,    5. ,    1.3],       [  -4. ,   54. ,    9. ,    1. ],       [ -41. ,   37. ,    7. ,    1.2],       [ -46. ,    1. ,    5. ,    1.4],       [ -32. ,  -39. ,    2. ,    1.4],       [  -3. ,  -47. ,    7. ,    1.4],       [  31. ,  -33. ,    9. ,    0.9],       [  59. ,   -3. ,    8. ,    1.2],       [  42. ,   35. ,    7. ,    1.2],       [   1. ,   56. ,    1. ,    1.1],       [ -38. ,   34. ,    3. ,    1.4],       [ -57. ,    2. ,    8. ,    0.7],       [ -39. ,  -40. ,    5. ,    1.1],       [   3. ,  -57. ,    7. ,    1.3],       [  39. ,  -42. ,    6. ,    0.7],       [  60. ,   -5. ,    9. ,    0.6],       [  38. ,   43. ,    9. ,    0.9],       [   4. ,   58. ,    9. ,    0.7],       [ -43. ,   38. ,    9. ,    1.3],       [ -59. ,    1. ,    7. ,    0.6],       [ -44. ,  -41. ,    0. ,    1.2],       [   0. ,  -66. ,   10. ,    1.3],       [  41. ,  -46. ,    0. ,    1.5],       [  68. ,   -4. ,    2. ,    1. ],       [  48. ,   43. ,    3. ,    1.3],       [  -5. ,   66. ,    7. ,    0.6],       [ -43. ,   42. ,    1. ,    0.5],       [ -65. ,   -2. ,   10. ,    1.2],       [ -51. ,  -43. ,   10. ,    0.7],       [  -5. ,  -63. ,    6. ,    0.7],       [  51. ,  -46. ,    9. ,    1.3],       [  69. ,    4. ,    1. ,    1.3],       [  53. ,   53. ,    6. ,    1.5],       [  -4. ,   73. ,    7. ,    0.6],       [ -52. ,   52. ,    2. ,    0.9],       [ -72. ,   -1. ,   10. ,    1. ],       [ -50. ,  -49. ,    5. ,    0.8],       [  -3. ,  -76. ,    3. ,    0.6],       [  50. ,  -56. ,    5. ,    0.6],       [  76. ,   -2. ,    2. ,    1.1],       [  53. ,   54. ,    8. ,    1.4],       [  -5. ,   73. ,    3. ,    1.1],       [ -60. ,   58. ,    2. ,    1.3],       [ -75. ,   -4. ,    1. ,    0.6],       [ -51. ,  -51. ,    4. ,    1. ],       [   4. ,  -75. ,    7. ,    0.7],       [  53. ,  -55. ,    6. ,    0.8],       [  85. ,    2. ,    7. ,    1.5],       [  62. ,   61. ,    9. ,    1. ],       [  -3. ,   87. ,   10. ,    1.2],       [ -57. ,   58. ,    2. ,    1.2],       [ -81. ,   -4. ,    7. ,    0.8],       [ -59. ,  -60. ,    5. ,    1. ],       [  -2. ,  -87. ,   10. ,    1.2],       [  63. ,  -63. ,    9. ,    1.1],       [  87. ,   -4. ,    0. ,    0.6],       [  63. ,   60. ,    9. ,    0.6],       [  -2. ,   90. ,    2. ,    1.4],       [ -59. ,   67. ,    8. ,    1. ],       [ -89. ,    2. ,    5. ,    0.5],       [ -58. ,  -64. ,    6. ,    0.8],       [   1. ,  -91. ,    8. ,    1.2],       [  65. ,  -62. ,   10. ,    1.3],       [  93. ,    1. ,    0. ,    0.6],       [  66. ,   65. ,    9. ,    0.8],       [   1. ,   94. ,    7. ,    1. ],       [ -71. ,   70. ,    3. ,    0.7],       [ -96. ,   -2. ,    3. ,    1.4],       [ -68. ,  -71. ,    4. ,    1.2],       [   2. ,  -93. ,    3. ,    0.7],       [  65. ,  -71. ,    2. ,    1.4],       [  96. ,   -5. ,    8. ,    1.4],       [  72. ,   68. ,    9. ,    0.8],       [  -1. ,   95. ,    3. ,    1. ],       [ -72. ,   69. ,    6. ,    1.5],       [ -96. ,    4. ,    1. ,    0.6],       [ -71. ,  -73. ,    1. ,    0.9],       [   3. , -102. ,    6. ,    0.9],       [  69. ,  -72. ,    2. ,    1.3],       [  53. ,   -1. ,   11. ,    0.8],       [  38. ,   31. ,   12. ,    1. ],       [  -2. ,   46. ,   12. ,    1. ],       [ -40. ,   35. ,   11. ,    1.1],       [ -50. ,   -2. ,   11. ,    1.1],       [ -33. ,  -36. ,   15. ,    1.3],       [   1. ,  -48. ,   11. ,    1.4],       [  34. ,  -37. ,   13. ,    1.4],       [  55. ,    1. ,   10. ,    0.9],       [  36. ,   42. ,    8. ,    1.1],       [  -4. ,   60. ,   16. ,    0.6],       [ -36. ,   40. ,   14. ,    0.7],       [ -58. ,   -2. ,   12. ,    0.8],       [ -40. ,  -42. ,   15. ,    1. ],       [   4. ,  -57. ,   15. ,    0.8],       [  34. ,  -38. ,   14. ,    1.3],       [  57. ,    0. ,   15. ,    0.6],       [  46. ,   46. ,   15. ,    1.1],       [  -2. ,   62. ,   12. ,    1.1],       [ -46. ,   43. ,   13. ,    0.9],       [ -65. ,    2. ,   12. ,    1.3],       [ -48. ,  -46. ,   12. ,    1.4],       [  -3. ,  -60. ,    8. ,    1.1],       [  47. ,  -43. ,   15. ,    0.9],       [  63. ,    4. ,   14. ,    1.2],       [  43. ,   48. ,    8. ,    0.9],       [   2. ,   63. ,    8. ,    1.1],       [ -43. ,   46. ,   15. ,    1.5],       [ -71. ,   -4. ,    9. ,    0.6],       [ -43. ,  -50. ,    9. ,    1.1],       [  -3. ,  -64. ,   12. ,    0.9],       [  49. ,  -46. ,    8. ,    1.4],       [  72. ,   -4. ,   11. ,    1.5],       [  53. ,   47. ,    9. ,    1.3],       [  -3. ,   71. ,   14. ,    1.3],       [ -49. ,   50. ,   12. ,    0.6],       [ -76. ,    1. ,    6. ,    1.4],       [ -51. ,  -52. ,   13. ,    1.5],       [   2. ,  -72. ,   11. ,    0.9],       [  48. ,  -47. ,   11. ,    1.3],       [  78. ,   -5. ,    8. ,    1.2],       [  50. ,   51. ,   16. ,    1.1],       [   2. ,   79. ,    8. ,    0.8],       [ -59. ,   56. ,    7. ,    1.1],       [ -81. ,    2. ,   11. ,    1.4],       [ -55. ,  -55. ,   16. ,    1. ],       [   4. ,  -81. ,   12. ,    1.2],       [  51. ,  -54. ,    8. ,    0.6],       [  83. ,    0. ,    6. ,    0.6],       [  63. ,   59. ,   15. ,    1.4],       [  -4. ,   87. ,   13. ,    0.7],       [ -58. ,   54. ,   11. ,    1. ],       [ -84. ,    3. ,    9. ,    1. ],       [ -55. ,  -63. ,   15. ,    0.8],       [   2. ,  -88. ,   10. ,    1. ],       [  60. ,  -58. ,   11. ,    0.5],       [  92. ,    2. ,    7. ,    1.3],       [  66. ,   65. ,    9. ,    1.4],       [   4. ,   92. ,    7. ,    0.5],       [ -67. ,   65. ,   10. ,    0.8],       [ -87. ,    4. ,   13. ,    1.2],       [ -60. ,  -65. ,   15. ,    1.3],       [   0. ,  -92. ,    6. ,    0.9],       [  64. ,  -67. ,    6. ,    1. ],       [  91. ,   -2. ,   10. ,    1.3],       [  65. ,   65. ,   16. ,    1. ],       [  -3. ,   98. ,   10. ,    1.3],       [ -69. ,   69. ,    9. ,    1. ],       [ -92. ,   -2. ,   10. ,    0.9],       [ -69. ,  -66. ,   11. ,    1. ],       [   0. ,  -98. ,   15. ,    0.8],       [  62. ,  -66. ,   11. ,    0.8],       [ 103. ,   -4. ,    8. ,    0.7],       [  68. ,   71. ,    9. ,    0.6],       [   1. ,  103. ,   14. ,    0.7],       [ -73. ,   68. ,   12. ,    1. ],       [ -96. ,    4. ,   14. ,    1.2],       [ -74. ,  -69. ,   13. ,    1.2],       [  -5. , -102. ,    9. ,    0.8],       [  68. ,  -72. ,    7. ,    0.8],       [  50. ,   -5. ,   21. ,    1.1],       [  31. ,   34. ,   15. ,    1.1],       [   2. ,   50. ,   21. ,    1.4],       [ -40. ,   35. ,   17. ,    0.6],       [ -49. ,    4. ,   12. ,    1.3],       [ -31. ,  -32. ,   20. ,    0.5],       [  -4. ,  -47. ,   12. ,    1.3],       [  35. ,  -34. ,   13. ,    1.1],       [  53. ,    0. ,   13. ,    1.2],       [  43. ,   39. ,   22. ,    0.6],       [   0. ,   56. ,   13. ,    1. ],       [ -38. ,   36. ,   19. ,    1.1],       [ -54. ,   -3. ,   13. ,    1.3],       [ -44. ,  -38. ,   12. ,    1.3],       [   4. ,  -53. ,   14. ,    1. ],       [  42. ,  -43. ,   16. ,    0.7],       [  56. ,    2. ,   19. ,    1.4],       [  47. ,   47. ,   20. ,    0.8],       [   4. ,   59. ,   20. ,    0.8],       [ -40. ,   40. ,   19. ,    0.9],       [ -66. ,    2. ,   22. ,    0.5],       [ -45. ,  -48. ,   16. ,    0.5],       [   3. ,  -60. ,   19. ,    0.7],       [  41. ,  -49. ,   22. ,    1. ],       [  62. ,    0. ,   20. ,    0.7],       [  47. ,   50. ,   16. ,    0.8],       [   2. ,   70. ,   14. ,    1. ],       [ -50. ,   50. ,   13. ,    1. ],       [ -63. ,    3. ,   16. ,    0.8],       [ -46. ,  -51. ,   17. ,    0.9],       [   3. ,  -66. ,   19. ,    1. ],       [  49. ,  -48. ,   18. ,    1.1],       [  68. ,   -2. ,   16. ,    1.5],       [  46. ,   54. ,   12. ,    1.1],       [   4. ,   72. ,   19. ,    1.3],       [ -48. ,   54. ,   12. ,    0.7],       [ -74. ,   -1. ,   13. ,    1.2],       [ -54. ,  -53. ,   16. ,    0.6],       [  -3. ,  -71. ,   15. ,    0.9],       [  51. ,  -52. ,   13. ,    0.9],       [  79. ,   -5. ,   12. ,    1.3],       [  58. ,   56. ,   16. ,    0.8],       [  -3. ,   79. ,   19. ,    1.5],       [ -52. ,   53. ,   15. ,    1.1],       [ -75. ,    2. ,   14. ,    0.5],       [ -53. ,  -60. ,   14. ,    1.4],       [   4. ,  -82. ,   18. ,    0.6],       [  58. ,  -56. ,   18. ,    0.7],       [  88. ,    1. ,   12. ,    0.9],       [  55. ,   58. ,   15. ,    1.3],       [  -1. ,   87. ,   13. ,    1. ],       [ -55. ,   56. ,   14. ,    1.4],       [ -79. ,   -3. ,   19. ,    1.4],       [ -55. ,  -61. ,   20. ,    1.2],       [   3. ,  -81. ,   12. ,    0.9],       [  60. ,  -64. ,   21. ,    0.6],       [  91. ,   -2. ,   21. ,    1.5],       [  58. ,   63. ,   18. ,    0.7],       [  -5. ,   85. ,   17. ,    0.9],       [ -65. ,   66. ,   21. ,    1.3],       [ -87. ,    2. ,   17. ,    1.4],       [ -63. ,  -66. ,   12. ,    1.3],       [  -3. ,  -85. ,   20. ,    0.7],       [  60. ,  -62. ,   16. ,    0.8],       [  90. ,   -5. ,   12. ,    1.4],       [  62. ,   64. ,   20. ,    1.4],       [   0. ,   92. ,   20. ,    0.6],       [ -67. ,   62. ,   16. ,    0.5],       [ -94. ,   -3. ,   15. ,    0.9],       [ -63. ,  -65. ,   17. ,    0.6],       [   0. ,  -92. ,   19. ,    0.8],       [  66. ,  -64. ,   14. ,    0.6],       [ 103. ,   -4. ,   17. ,    0.6],       [  66. ,   73. ,   21. ,    0.8],       [   1. ,   99. ,   12. ,    1.3],       [ -67. ,   75. ,   12. ,    1. ],       [ -99. ,    1. ,   12. ,    0.7],       [ -73. ,  -74. ,   12. ,    1.2],       [   1. , -105. ,   17. ,    1.4],       [  72. ,  -76. ,   19. ,    0.8],       [  50. ,    4. ,   25. ,    1.1],       [  34. ,   33. ,   19. ,    0.8],       [   2. ,   46. ,   25. ,    1. ],       [ -35. ,   32. ,   18. ,    1.2],       [ -55. ,   -1. ,   26. ,    1.2],       [ -40. ,  -34. ,   21. ,    0.7],       [   3. ,  -53. ,   22. ,    0.6],       [  34. ,  -36. ,   26. ,    1.3],       [  56. ,    3. ,   25. ,    1.2],       [  41. ,   35. ,   27. ,    0.6],       [  -3. ,   56. ,   18. ,    1. ],       [ -40. ,   34. ,   22. ,    1.2],       [ -57. ,   -5. ,   20. ,    1.3],       [ -39. ,  -44. ,   21. ,    0.6],       [   1. ,  -61. ,   23. ,    0.7],       [  44. ,  -35. ,   22. ,    0.9],       [  61. ,    4. ,   18. ,    0.9],       [  43. ,   40. ,   25. ,    1.2],       [  -2. ,   60. ,   23. ,    0.8],       [ -45. ,   39. ,   18. ,    0.6],       [ -58. ,   -1. ,   20. ,    1.1],       [ -43. ,  -48. ,   21. ,    1.4],       [  -2. ,  -64. ,   19. ,    0.8],       [  46. ,  -39. ,   25. ,    1.1],       [  66. ,   -2. ,   24. ,    1.1],       [  45. ,   47. ,   27. ,    0.5],       [   4. ,   69. ,   17. ,    0.6],       [ -49. ,   47. ,   21. ,    0.9],       [ -67. ,   -4. ,   26. ,    0.8],       [ -46. ,  -47. ,   24. ,    0.7],       [   4. ,  -68. ,   26. ,    0.8],       [  49. ,  -46. ,   26. ,    0.7],       [  67. ,    4. ,   18. ,    0.6],       [  50. ,   52. ,   21. ,    1.3],       [  -5. ,   70. ,   22. ,    0.6],       [ -50. ,   51. ,   20. ,    1.1],       [ -72. ,   -3. ,   24. ,    1.2],       [ -54. ,  -53. ,   19. ,    1. ],       [  -4. ,  -72. ,   26. ,    0.9],       [  52. ,  -56. ,   19. ,    1.3],       [  78. ,   -5. ,   25. ,    1.3],       [  58. ,   51. ,   18. ,    1. ],       [  -5. ,   73. ,   18. ,    1.3],       [ -55. ,   50. ,   19. ,    1.4],       [ -82. ,   -1. ,   21. ,    1.2],       [ -52. ,  -56. ,   21. ,    1.4],       [   0. ,  -81. ,   26. ,    1.2],       [  54. ,  -54. ,   21. ,    0.7],       [  82. ,    3. ,   21. ,    0.8],       [  58. ,   60. ,   24. ,    1.4],       [   1. ,   86. ,   23. ,    0.8],       [ -59. ,   60. ,   26. ,    1.3],       [ -79. ,   -4. ,   27. ,    1.2],       [ -56. ,  -59. ,   23. ,    1. ],       [  -4. ,  -86. ,   23. ,    1. ],       [  58. ,  -59. ,   26. ,    0.9],       [  89. ,    0. ,   21. ,    0.9],       [  62. ,   60. ,   22. ,    1.4],       [   0. ,   87. ,   20. ,    1.1],       [ -65. ,   64. ,   19. ,    0.6],       [ -90. ,    2. ,   19. ,    0.9],       [ -63. ,  -65. ,   19. ,    1.3],       [   4. ,  -92. ,   24. ,    0.6],       [  66. ,  -67. ,   27. ,    0.6],       [  93. ,   -3. ,   20. ,    1. ],       [  70. ,   63. ,   22. ,    1.5],       [   1. ,   89. ,   23. ,    1.1],       [ -72. ,   62. ,   21. ,    1. ],       [ -95. ,   -5. ,   18. ,    0.6],       [ -66. ,  -70. ,   20. ,    0.7],       [   4. ,  -92. ,   26. ,    1.2],       [  69. ,  -67. ,   26. ,    0.6],       [  95. ,    0. ,   18. ,    1.4],       [  67. ,   67. ,   23. ,    0.7],       [   4. ,   98. ,   26. ,    1.2],       [ -70. ,   66. ,   24. ,    0.6],       [-104. ,    1. ,   23. ,    1.3],       [ -68. ,  -71. ,   27. ,    0.6],       [   4. , -105. ,   19. ,    1.2],       [  71. ,  -69. ,   25. ,    1.4],       [  47. ,   -1. ,   24. ,    0.9],       [  39. ,   33. ,   32. ,    0.8],       [  -3. ,   45. ,   29. ,    1.2],       [ -32. ,   35. ,   27. ,    1.4],       [ -55. ,    2. ,   31. ,    1.1],       [ -40. ,  -37. ,   24. ,    1.3],       [   4. ,  -52. ,   24. ,    1. ],       [  31. ,  -31. ,   32. ,    0.8],       [  50. ,    1. ,   24. ,    0.8],       [  43. ,   41. ,   26. ,    1.3],       [  -3. ,   56. ,   24. ,    1.2],       [ -36. ,   34. ,   25. ,    0.9],       [ -53. ,    1. ,   25. ,    1.2],       [ -44. ,  -43. ,   27. ,    1.3],       [   0. ,  -58. ,   28. ,    1.4],       [  40. ,  -44. ,   31. ,    1.1],       [  64. ,   -2. ,   28. ,    1.1],       [  41. ,   47. ,   27. ,    0.5],       [   3. ,   59. ,   30. ,    1. ],       [ -40. ,   44. ,   25. ,    1.1],       [ -65. ,    3. ,   25. ,    1.1],       [ -45. ,  -46. ,   32. ,    1. ],       [  -1. ,  -57. ,   25. ,    1. ],       [  44. ,  -47. ,   26. ,    0.7],       [  71. ,   -5. ,   31. ,    0.8],       [  48. ,   48. ,   23. ,    0.9],       [  -2. ,   65. ,   26. ,    0.9],       [ -49. ,   50. ,   27. ,    0.9],       [ -71. ,    4. ,   29. ,    1.1],       [ -47. ,  -49. ,   32. ,    1.1],       [  -4. ,  -63. ,   27. ,    0.6],       [  48. ,  -45. ,   25. ,    1.1],       [  76. ,    2. ,   26. ,    1.3],       [  51. ,   49. ,   24. ,    0.6],       [  -4. ,   71. ,   29. ,    1.4],       [ -47. ,   48. ,   29. ,    1.2],       [ -72. ,    0. ,   28. ,    1.3],       [ -50. ,  -54. ,   28. ,    0.5],       [  -2. ,  -73. ,   33. ,    0.6],       [  48. ,  -53. ,   33. ,    1.2],       [  79. ,   -4. ,   27. ,    0.6],       [  55. ,   59. ,   24. ,    0.7],       [   0. ,   73. ,   32. ,    0.8],       [ -51. ,   58. ,   25. ,    0.6],       [ -83. ,    0. ,   24. ,    0.9],       [ -51. ,  -53. ,   33. ,    1.4],       [  -2. ,  -80. ,   30. ,    1.4],       [  51. ,  -60. ,   27. ,    0.7],       [  82. ,   -3. ,   27. ,    0.8],       [  57. ,   56. ,   33. ,    0.5],       [  -1. ,   87. ,   31. ,    1.3],       [ -61. ,   60. ,   28. ,    1.2],       [ -81. ,    4. ,   24. ,    1. ],       [ -61. ,  -57. ,   33. ,    1.3],       [  -4. ,  -85. ,   27. ,    1. ],       [  61. ,  -61. ,   32. ,    1. ],       [  86. ,    0. ,   32. ,    0.8],       [  59. ,   62. ,   27. ,    1.4],       [  -4. ,   87. ,   27. ,    0.6],       [ -66. ,   62. ,   31. ,    1.2],       [ -92. ,   -1. ,   30. ,    0.5],       [ -59. ,  -66. ,   24. ,    0.6],       [  -2. ,  -89. ,   28. ,    1. ],       [  60. ,  -61. ,   25. ,    0.8],       [  89. ,    3. ,   30. ,    0.5],       [  64. ,   66. ,   31. ,    1.1],       [   3. ,   95. ,   29. ,    0.8],       [ -70. ,   65. ,   33. ,    0.7],       [ -98. ,    3. ,   29. ,    1.4],       [ -70. ,  -69. ,   27. ,    1.3],       [   2. ,  -98. ,   29. ,    0.8],       [  64. ,  -69. ,   28. ,    0.7],       [  99. ,    3. ,   29. ,    1.3],       [  67. ,   73. ,   25. ,    1.3],       [   0. ,  100. ,   24. ,    0.5],       [ -76. ,   73. ,   32. ,    0.6],       [ -99. ,    2. ,   24. ,    0.5],       [ -70. ,  -69. ,   28. ,    0.6],       [   0. , -105. ,   24. ,    0.9],       [  72. ,  -71. ,   27. ,    1.2],       [  51. ,   -4. ,   39. ,    0.6],       [  39. ,   34. ,   33. ,    0.7],       [   2. ,   45. ,   31. ,    1.3],       [ -36. ,   31. ,   29. ,    0.9],       [ -49. ,   -5. ,   30. ,    0.9],       [ -41. ,  -32. ,   34. ,    1.2],       [  -5. ,  -47. ,   30. ,    1.5],       [  32. ,  -34. ,   36. ,    0.7],       [  56. ,   -5. ,   35. ,    0.6],       [  39. ,   36. ,   32. ,    0.9],       [  -5. ,   57. ,   32. ,    0.5],       [ -41. ,   36. ,   32. ,    0.9],       [ -61. ,   -3. ,   31. ,    1. ],       [ -43. ,  -38. ,   38. ,    1. ],       [  -1. ,  -56. ,   37. ,    1.5],       [  36. ,  -38. ,   29. ,    1.3],       [  57. ,    1. ,   29. ,    0.5],       [  40. ,   40. ,   29. ,    0.7],       [  -1. ,   60. ,   29. ,    0.8],       [ -48. ,   47. ,   30. ,    1.1],       [ -61. ,    4. ,   30. ,    1.1],       [ -43. ,  -46. ,   30. ,    1. ],       [  -2. ,  -61. ,   32. ,    1.4],       [  47. ,  -47. ,   37. ,    0.6],       [  62. ,    1. ,   34. ,    0.7],       [  51. ,   49. ,   35. ,    0.6],       [   3. ,   68. ,   35. ,    0.5],       [ -47. ,   51. ,   34. ,    0.9],       [ -63. ,    1. ,   32. ,    0.9],       [ -49. ,  -52. ,   35. ,    0.8],       [   3. ,  -64. ,   30. ,    1.4],       [  47. ,  -49. ,   32. ,    1.4],       [  73. ,   -3. ,   34. ,    0.6],       [  50. ,   52. ,   31. ,    0.6],       [   3. ,   75. ,   31. ,    1.2],       [ -54. ,   50. ,   36. ,    1.2],       [ -71. ,    0. ,   31. ,    1.3],       [ -51. ,  -47. ,   31. ,    1.4],       [  -4. ,  -70. ,   39. ,    0.6],       [  46. ,  -54. ,   36. ,    1.4],       [  73. ,    3. ,   30. ,    1. ],       [  59. ,   53. ,   33. ,    1.5],       [   0. ,   78. ,   30. ,    0.8],       [ -56. ,   59. ,   32. ,    1.1],       [ -77. ,    0. ,   32. ,    1.2],       [ -51. ,  -56. ,   35. ,    1.3],       [  -3. ,  -77. ,   37. ,    1.1],       [  52. ,  -55. ,   34. ,    0.5],       [  86. ,    3. ,   34. ,    1.2],       [  56. ,   63. ,   37. ,    0.9],       [  -1. ,   84. ,   34. ,    0.6],       [ -56. ,   59. ,   31. ,    0.5],       [ -80. ,    2. ,   37. ,    1.1],       [ -60. ,  -64. ,   31. ,    0.8],       [   2. ,  -84. ,   31. ,    1.2],       [  61. ,  -63. ,   34. ,    0.9],       [  85. ,   -4. ,   38. ,    1.3],       [  62. ,   59. ,   29. ,    1.3],       [   1. ,   84. ,   36. ,    1.4],       [ -62. ,   59. ,   33. ,    0.8],       [ -88. ,    2. ,   29. ,    1.1],       [ -65. ,  -60. ,   32. ,    1.2],       [  -3. ,  -87. ,   33. ,    0.9],       [  66. ,  -68. ,   37. ,    1. ],       [  98. ,    2. ,   36. ,    1.1],       [  65. ,   70. ,   29. ,    1.1],       [  -3. ,   94. ,   38. ,    1.3],       [ -66. ,   66. ,   30. ,    1. ],       [ -99. ,   -1. ,   37. ,    1.3],       [ -69. ,  -68. ,   34. ,    0.9],       [   4. ,  -94. ,   30. ,    1.1],       [  70. ,  -62. ,   37. ,    1.4],       [  99. ,    3. ,   38. ,    0.9],       [  67. ,   72. ,   38. ,    1.4],       [  -3. ,   95. ,   37. ,    0.8],       [ -67. ,   71. ,   29. ,    0.9],       [-100. ,   -3. ,   34. ,    0.6],       [ -69. ,  -72. ,   34. ,    0.7],       [  -4. ,  -97. ,   31. ,    1.2],       [  73. ,  -75. ,   36. ,    1.3],       [  53. ,    2. ,   38. ,    1.3],       [  34. ,   35. ,   41. ,    0.9],       [  -5. ,   54. ,   38. ,    1.1],       [ -39. ,   36. ,   38. ,    0.6],       [ -46. ,    0. ,   44. ,    1.1],       [ -36. ,  -35. ,   39. ,    0.6],       [   4. ,  -46. ,   39. ,    1.1],       [  35. ,  -34. ,   44. ,    0.5],       [  57. ,   -5. ,   40. ,    1.2],       [  43. ,   43. ,   44. ,    0.6],       [   3. ,   58. ,   39. ,    0.5],       [ -43. ,   37. ,   39. ,    1.1],       [ -59. ,    1. ,   41. ,    1.3],       [ -38. ,  -36. ,   40. ,    1.4],       [   0. ,  -57. ,   35. ,    1. ],       [  41. ,  -44. ,   39. ,    1.4],       [  61. ,    0. ,   40. ,    0.7],       [  45. ,   46. ,   41. ,    1.2],       [   4. ,   64. ,   39. ,    0.7],       [ -45. ,   44. ,   44. ,    1.1],       [ -58. ,    4. ,   41. ,    1.3],       [ -42. ,  -42. ,   36. ,    0.5],       [  -3. ,  -64. ,   38. ,    0.8],       [  43. ,  -42. ,   35. ,    0.9],       [  68. ,    2. ,   40. ,    0.9],       [  49. ,   48. ,   41. ,    0.5],       [   1. ,   66. ,   40. ,    0.8],       [ -47. ,   46. ,   39. ,    0.9],       [ -71. ,    3. ,   44. ,    0.8],       [ -43. ,  -52. ,   40. ,    0.5],       [  -4. ,  -65. ,   37. ,    1.1],       [  47. ,  -47. ,   38. ,    1.5],       [  75. ,    0. ,   36. ,    1.5],       [  53. ,   55. ,   37. ,    1.4],       [   2. ,   72. ,   43. ,    0.6],       [ -54. ,   46. ,   42. ,    1.2],       [ -72. ,   -5. ,   38. ,    1.3],       [ -51. ,  -54. ,   36. ,    0.9],       [  -5. ,  -70. ,   42. ,    0.8],       [  53. ,  -54. ,   38. ,    1.2],       [  77. ,   -5. ,   44. ,    1.2],       [  56. ,   54. ,   43. ,    0.7],       [   1. ,   74. ,   37. ,    1. ],       [ -55. ,   50. ,   39. ,    0.7],       [ -81. ,    0. ,   43. ,    0.9],       [ -52. ,  -57. ,   43. ,    1. ],       [   4. ,  -78. ,   44. ,    0.8],       [  53. ,  -52. ,   44. ,    1.3],       [  80. ,    4. ,   37. ,    1. ],       [  56. ,   62. ,   43. ,    1.3],       [  -3. ,   83. ,   35. ,    0.9],       [ -57. ,   63. ,   38. ,    1.1],       [ -87. ,    1. ,   39. ,    1.5],       [ -57. ,  -57. ,   35. ,    0.6],       [  -3. ,  -84. ,   40. ,    0.6],       [  63. ,  -63. ,   42. ,    1.4],       [  91. ,   -2. ,   40. ,    0.5],       [  59. ,   58. ,   37. ,    1.4],       [  -4. ,   84. ,   40. ,    0.5],       [ -61. ,   67. ,   43. ,    0.8],       [ -92. ,    2. ,   41. ,    1.1],       [ -62. ,  -66. ,   44. ,    1.2],       [  -2. ,  -89. ,   43. ,    1.3],       [  59. ,  -65. ,   41. ,    0.5],       [  91. ,    1. ,   38. ,    0.8],       [  62. ,   65. ,   37. ,    1.1],       [   0. ,   96. ,   37. ,    0.8],       [ -65. ,   69. ,   39. ,    0.5],       [ -98. ,    0. ,   37. ,    1. ],       [ -63. ,  -70. ,   41. ,    1. ],       [   4. ,  -95. ,   44. ,    1.5],       [  70. ,  -62. ,   35. ,    1.2],       [ 101. ,   -4. ,   35. ,    0.6],       [  68. ,   65. ,   35. ,    0.6],       [   0. ,  101. ,   40. ,    1.2],       [ -68. ,   68. ,   41. ,    1.2],       [-102. ,   -2. ,   39. ,    0.6],       [ -66. ,  -66. ,   40. ,    0.9],       [   3. ,  -98. ,   42. ,    1.2],       [  68. ,  -75. ,   42. ,    1.3]])
        basis0 = BSplineBasis(5, np.array([-1.4,  0. ,  0. ,  0. ,  0. ,  1. ,  1.7,  2.7,  3.6,  5. ,  5. ,
        5. ,  5. ,  6. ]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.8,  2.8,  3.6,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  3.4,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 6. ,  8.5,  6.7])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 6.000000
        pt2[...,1] /= 8.500000
        pt2[...,2] /= 6.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p657_rational_C0_periodic(self):
        controlpoints = np.array([[  46. ,    1. ,    4. ,    0.7],       [  36. ,   31. ,    2. ,    1.4],       [   5. ,   48. ,   -2. ,    1.4],       [ -24. ,   47. ,   -2. ,    1.1],       [ -48. ,   14. ,    2. ,    0.7],       [ -50. ,  -21. ,    4. ,    1.1],       [ -24. ,  -44. ,    1. ,    1.1],       [   8. ,  -47. ,    3. ,    0.8],       [  34. ,  -35. ,    3. ,    1. ],       [  60. ,   -3. ,    4. ,    1.5],       [  47. ,   40. ,    1. ,    0.6],       [   8. ,   59. ,    2. ,    1.4],       [ -27. ,   46. ,   -5. ,    0.9],       [ -50. ,   17. ,   -4. ,    0.9],       [ -58. ,  -19. ,   -2. ,    1.1],       [ -27. ,  -52. ,    1. ,    0.7],       [   8. ,  -59. ,    3. ,    1.4],       [  47. ,  -33. ,    2. ,    1.4],       [  59. ,    1. ,   -5. ,    1.3],       [  44. ,   39. ,    1. ,    0.7],       [  14. ,   65. ,    2. ,    0.8],       [ -28. ,   55. ,   -2. ,    0.9],       [ -60. ,   20. ,   -5. ,    1.1],       [ -66. ,  -23. ,    4. ,    1.1],       [ -34. ,  -59. ,    4. ,    1.4],       [  13. ,  -67. ,    4. ,    0.7],       [  48. ,  -43. ,   -2. ,    0.7],       [  75. ,    4. ,   -1. ,    1.3],       [  55. ,   45. ,   -4. ,    1.4],       [  13. ,   68. ,    0. ,    1.1],       [ -36. ,   57. ,   -4. ,    0.6],       [ -70. ,   24. ,   -1. ,    1.3],       [ -69. ,  -23. ,   -1. ,    0.8],       [ -32. ,  -59. ,    2. ,    0.6],       [  11. ,  -70. ,    0. ,    0.6],       [  55. ,  -47. ,   -5. ,    0.6],       [  78. ,   -1. ,   -1. ,    1.2],       [  58. ,   48. ,   -3. ,    0.7],       [  14. ,   77. ,   -2. ,    1.4],       [ -40. ,   69. ,    4. ,    1.4],       [ -75. ,   31. ,    4. ,    0.9],       [ -76. ,  -31. ,   -3. ,    1.3],       [ -36. ,  -68. ,   -4. ,    1.2],       [  15. ,  -76. ,   -4. ,    0.5],       [  63. ,  -54. ,    0. ,    1.3],       [  88. ,   -4. ,    3. ,    0.6],       [  68. ,   54. ,    0. ,    1. ],       [  10. ,   87. ,   -4. ,    0.7],       [ -40. ,   73. ,    1. ,    1.3],       [ -84. ,   24. ,   -4. ,    0.6],       [ -77. ,  -26. ,    4. ,    1. ],       [ -45. ,  -72. ,    1. ,    1.4],       [  11. ,  -87. ,   -2. ,    1.2],       [  63. ,  -55. ,   -3. ,    1.1],       [  92. ,    0. ,    1. ,    0.6],       [  68. ,   58. ,    1. ,    1.1],       [  17. ,   92. ,    3. ,    1.2],       [ -44. ,   78. ,    4. ,    1.4],       [ -83. ,   32. ,   -2. ,    1.5],       [ -86. ,  -28. ,   -5. ,    1.5],       [ -49. ,  -82. ,    1. ,    0.8],       [  19. ,  -88. ,    1. ,    1. ],       [  68. ,  -56. ,   -1. ,    0.6],       [  96. ,   -2. ,    2. ,    1.2],       [  72. ,   68. ,    2. ,    0.6],       [  15. ,   97. ,    3. ,    1.1],       [ -49. ,   89. ,   -1. ,    0.9],       [ -90. ,   35. ,   -4. ,    1.3],       [ -98. ,  -30. ,   -3. ,    0.8],       [ -52. ,  -88. ,   -3. ,    1.4],       [  20. ,  -98. ,   -4. ,    1. ],       [  77. ,  -68. ,   -4. ,    1.3],       [  52. ,    0. ,    6. ,    1. ],       [  34. ,   33. ,    2. ,    1.4],       [  12. ,   52. ,    1. ,    1.1],       [ -24. ,   46. ,    1. ,    1. ],       [ -50. ,   14. ,    4. ,    1.1],       [ -44. ,  -16. ,    5. ,    1.2],       [ -22. ,  -41. ,    4. ,    0.7],       [  13. ,  -46. ,    4. ,    1.2],       [  41. ,  -33. ,    2. ,    0.5],       [  52. ,   -2. ,    4. ,    1.4],       [  41. ,   33. ,   -1. ,    1.5],       [   7. ,   51. ,    0. ,    0.5],       [ -26. ,   48. ,    1. ,    1. ],       [ -50. ,   16. ,    2. ,    0.5],       [ -55. ,  -21. ,    2. ,    1.1],       [ -29. ,  -50. ,    8. ,    1. ],       [  11. ,  -54. ,    3. ,    0.8],       [  42. ,  -34. ,    2. ,    0.6],       [  66. ,   -2. ,    3. ,    1. ],       [  52. ,   45. ,    1. ,    0.8],       [  14. ,   60. ,    0. ,    0.5],       [ -34. ,   51. ,    9. ,    0.8],       [ -64. ,   26. ,    8. ,    0.6],       [ -60. ,  -26. ,    4. ,    0.5],       [ -33. ,  -54. ,    0. ,    1.2],       [  15. ,  -66. ,    8. ,    0.8],       [  49. ,  -38. ,    4. ,    1. ],       [  68. ,   -5. ,    3. ,    1.1],       [  57. ,   43. ,    6. ,    1.3],       [  15. ,   73. ,    6. ,    0.6],       [ -39. ,   61. ,    3. ,    1. ],       [ -66. ,   25. ,    3. ,    1.2],       [ -68. ,  -28. ,    2. ,    0.8],       [ -41. ,  -64. ,   -1. ,    0.7],       [  14. ,  -67. ,    2. ,    1.1],       [  50. ,  -49. ,    0. ,    1.4],       [  82. ,   -2. ,    2. ,    0.7],       [  63. ,   54. ,    0. ,    1.1],       [  14. ,   73. ,    5. ,    0.7],       [ -42. ,   64. ,    0. ,    0.9],       [ -72. ,   22. ,    7. ,    0.6],       [ -74. ,  -23. ,   -1. ,    1.2],       [ -44. ,  -72. ,    6. ,    1. ],       [  12. ,  -80. ,    4. ,    1. ],       [  59. ,  -48. ,    5. ,    1.2],       [  86. ,    1. ,    5. ,    0.7],       [  67. ,   58. ,    0. ,    0.6],       [  11. ,   88. ,    4. ,    0.8],       [ -40. ,   75. ,    9. ,    1.4],       [ -81. ,   25. ,    5. ,    0.5],       [ -80. ,  -31. ,    8. ,    1.4],       [ -41. ,  -72. ,    0. ,    0.9],       [  16. ,  -82. ,    2. ,    1.3],       [  61. ,  -54. ,    3. ,    0.8],       [  92. ,    1. ,    6. ,    0.9],       [  67. ,   56. ,    3. ,    1.5],       [  12. ,   88. ,    2. ,    1.2],       [ -50. ,   85. ,    5. ,    1.1],       [ -92. ,   35. ,    6. ,    1.4],       [ -89. ,  -36. ,    3. ,    1.1],       [ -45. ,  -86. ,    8. ,    1.1],       [  21. ,  -91. ,    1. ,    1.4],       [  74. ,  -61. ,    1. ,    0.7],       [  99. ,   -2. ,    1. ,    0.5],       [  77. ,   62. ,    4. ,    0.8],       [  18. ,   93. ,    1. ,    1.5],       [ -52. ,   85. ,    7. ,    0.6],       [ -91. ,   29. ,    4. ,    1.3],       [ -93. ,  -32. ,    1. ,    0.9],       [ -49. ,  -90. ,    1. ,    0.6],       [  16. ,  -95. ,    7. ,    1.2],       [  74. ,  -62. ,    1. ,    0.7],       [  46. ,   -4. ,    4. ,    0.5],       [  34. ,   31. ,    8. ,    1.3],       [   9. ,   52. ,    6. ,    0.5],       [ -25. ,   42. ,    8. ,    0.5],       [ -52. ,   16. ,   13. ,    1.1],       [ -47. ,  -20. ,    7. ,    1.4],       [ -30. ,  -46. ,    8. ,    1.4],       [   3. ,  -48. ,   12. ,    1.2],       [  41. ,  -34. ,   13. ,    0.8],       [  54. ,   -1. ,    6. ,    1.2],       [  48. ,   33. ,   11. ,    1.1],       [   5. ,   51. ,    4. ,    1.4],       [ -30. ,   54. ,    7. ,    1.2],       [ -56. ,   21. ,   13. ,    0.5],       [ -52. ,  -19. ,   12. ,    1.1],       [ -31. ,  -51. ,   10. ,    0.7],       [   4. ,  -60. ,    3. ,    0.9],       [  42. ,  -42. ,    8. ,    1.4],       [  60. ,   -4. ,   13. ,    1. ],       [  48. ,   44. ,   12. ,    0.8],       [  11. ,   64. ,    4. ,    1.5],       [ -32. ,   59. ,    9. ,    1. ],       [ -60. ,   22. ,   10. ,    1. ],       [ -59. ,  -24. ,   13. ,    0.9],       [ -36. ,  -53. ,    7. ,    1.2],       [  12. ,  -65. ,   12. ,    1.2],       [  53. ,  -40. ,    5. ,    1.1],       [  71. ,   -3. ,    5. ,    1. ],       [  58. ,   50. ,   11. ,    0.8],       [  17. ,   74. ,   10. ,    1.2],       [ -34. ,   56. ,    9. ,    1.2],       [ -71. ,   27. ,   12. ,    0.5],       [ -70. ,  -25. ,    9. ,    0.8],       [ -32. ,  -59. ,    9. ,    1.3],       [   7. ,  -69. ,   12. ,    1. ],       [  51. ,  -46. ,    5. ,    1. ],       [  78. ,    0. ,   13. ,    1.1],       [  64. ,   46. ,    6. ,    1.4],       [   9. ,   77. ,    8. ,    1.4],       [ -43. ,   63. ,   12. ,    1.2],       [ -70. ,   26. ,    5. ,    1.5],       [ -69. ,  -26. ,    6. ,    0.7],       [ -35. ,  -72. ,    4. ,    0.5],       [  15. ,  -73. ,    7. ,    1.2],       [  64. ,  -47. ,    8. ,    1.2],       [  87. ,    4. ,    4. ,    0.7],       [  61. ,   52. ,   10. ,    1.2],       [  10. ,   87. ,    9. ,    1. ],       [ -43. ,   70. ,    9. ,    1.2],       [ -85. ,   32. ,   10. ,    0.5],       [ -85. ,  -34. ,   11. ,    1.4],       [ -45. ,  -73. ,   12. ,    0.8],       [  19. ,  -86. ,    5. ,    0.8],       [  66. ,  -59. ,   10. ,    1.3],       [  91. ,   -4. ,    9. ,    0.7],       [  66. ,   63. ,    9. ,    0.8],       [  11. ,   88. ,   11. ,    1.3],       [ -43. ,   84. ,    5. ,    0.8],       [ -91. ,   27. ,    4. ,    1.3],       [ -88. ,  -37. ,   13. ,    1.1],       [ -48. ,  -86. ,    7. ,    0.8],       [  18. ,  -94. ,   13. ,    1.1],       [  72. ,  -57. ,    8. ,    1.3],       [ 100. ,    2. ,   11. ,    0.6],       [  77. ,   61. ,   12. ,    0.5],       [  15. ,   96. ,   13. ,    1.4],       [ -50. ,   85. ,    4. ,    1.1],       [ -96. ,   37. ,    6. ,    0.6],       [ -97. ,  -36. ,    9. ,    1.1],       [ -46. ,  -85. ,   10. ,    1.3],       [  21. ,  -94. ,    4. ,    1.3],       [  76. ,  -68. ,   10. ,    1.3],       [  52. ,   -5. ,   10. ,    0.7],       [  40. ,   32. ,   13. ,    1.1],       [   6. ,   53. ,    8. ,    1.1],       [ -27. ,   47. ,    8. ,    1.4],       [ -50. ,   21. ,   18. ,    1.3],       [ -47. ,  -19. ,   17. ,    0.6],       [ -24. ,  -43. ,   16. ,    0.5],       [   8. ,  -54. ,   10. ,    1.1],       [  39. ,  -30. ,    8. ,    1.3],       [  56. ,    2. ,   14. ,    1.1],       [  44. ,   37. ,   10. ,    0.7],       [  11. ,   59. ,    9. ,    1.1],       [ -29. ,   49. ,   11. ,    0.8],       [ -51. ,   16. ,   13. ,    1. ],       [ -58. ,  -23. ,   12. ,    0.7],       [ -31. ,  -51. ,   17. ,    1.4],       [   8. ,  -56. ,    8. ,    1.2],       [  40. ,  -37. ,   17. ,    1. ],       [  59. ,    0. ,    9. ,    0.6],       [  47. ,   36. ,   13. ,    1.5],       [  15. ,   59. ,   14. ,    1.4],       [ -29. ,   52. ,   11. ,    0.6],       [ -58. ,   24. ,   15. ,    0.8],       [ -65. ,  -24. ,   14. ,    0.6],       [ -32. ,  -57. ,   15. ,    1. ],       [   9. ,  -61. ,   15. ,    1.2],       [  49. ,  -45. ,   13. ,    1.4],       [  68. ,    0. ,   17. ,    1.3],       [  53. ,   41. ,   11. ,    0.9],       [  10. ,   73. ,    8. ,    1.3],       [ -36. ,   64. ,   12. ,    0.7],       [ -67. ,   26. ,   14. ,    0.5],       [ -64. ,  -26. ,   16. ,    1.1],       [ -40. ,  -58. ,    8. ,    1.1],       [   9. ,  -75. ,   16. ,    1. ],       [  53. ,  -42. ,   17. ,    1.3],       [  81. ,    1. ,   17. ,    0.9],       [  64. ,   51. ,    9. ,    1.4],       [  15. ,   73. ,   15. ,    1.2],       [ -44. ,   68. ,   10. ,    1.3],       [ -73. ,   31. ,   10. ,    1.4],       [ -73. ,  -30. ,   11. ,    1.2],       [ -35. ,  -67. ,    9. ,    1.4],       [  13. ,  -74. ,   15. ,    0.7],       [  63. ,  -49. ,   11. ,    1.4],       [  88. ,   -5. ,   13. ,    0.8],       [  69. ,   50. ,   17. ,    1.5],       [  15. ,   83. ,    9. ,    1. ],       [ -42. ,   74. ,   18. ,    1. ],       [ -80. ,   29. ,    9. ,    1. ],       [ -79. ,  -29. ,   10. ,    1.3],       [ -45. ,  -78. ,   13. ,    0.8],       [  11. ,  -81. ,   16. ,    1.2],       [  66. ,  -57. ,   18. ,    0.9],       [  88. ,    1. ,   13. ,    1.3],       [  72. ,   63. ,   16. ,    1.1],       [  13. ,   93. ,   13. ,    0.9],       [ -50. ,   77. ,   11. ,    0.6],       [ -89. ,   31. ,   11. ,    1. ],       [ -83. ,  -31. ,   14. ,    1.4],       [ -45. ,  -77. ,   13. ,    1.4],       [  11. ,  -94. ,   15. ,    0.9],       [  69. ,  -61. ,   15. ,    0.7],       [ 103. ,    3. ,   15. ,    0.8],       [  73. ,   60. ,   16. ,    1.2],       [  18. ,   96. ,   17. ,    1.4],       [ -51. ,   89. ,   10. ,    0.6],       [ -99. ,   35. ,   18. ,    0.9],       [ -91. ,  -31. ,   14. ,    1. ],       [ -52. ,  -88. ,   15. ,    1.1],       [  20. ,  -97. ,    8. ,    0.6],       [  72. ,  -62. ,   12. ,    0.6],       [  48. ,   -2. ,   18. ,    0.8],       [  37. ,   37. ,   18. ,    0.6],       [   3. ,   47. ,   13. ,    0.5],       [ -27. ,   46. ,   15. ,    1.4],       [ -52. ,   14. ,   21. ,    0.7],       [ -45. ,  -17. ,   17. ,    1.1],       [ -24. ,  -41. ,   20. ,    0.8],       [  12. ,  -51. ,   17. ,    1. ],       [  42. ,  -33. ,   17. ,    1.2],       [  58. ,    1. ,   16. ,    1.1],       [  45. ,   35. ,   17. ,    0.7],       [   8. ,   59. ,   13. ,    0.8],       [ -30. ,   52. ,   19. ,    0.6],       [ -58. ,   15. ,   19. ,    1. ],       [ -53. ,  -21. ,   15. ,    1.4],       [ -32. ,  -54. ,   16. ,    1.3],       [  13. ,  -61. ,   22. ,    0.9],       [  44. ,  -35. ,   21. ,    1. ],       [  62. ,    4. ,   13. ,    1.1],       [  53. ,   45. ,   17. ,    0.7],       [  10. ,   63. ,   14. ,    0.7],       [ -37. ,   59. ,   22. ,    0.6],       [ -62. ,   26. ,   20. ,    0.7],       [ -57. ,  -25. ,   17. ,    0.9],       [ -32. ,  -55. ,   17. ,    0.8],       [  13. ,  -64. ,   15. ,    1.1],       [  49. ,  -43. ,   15. ,    1.1],       [  70. ,    1. ,   17. ,    1.2],       [  55. ,   49. ,   16. ,    0.5],       [  13. ,   66. ,   15. ,    1. ],       [ -41. ,   59. ,   14. ,    1.3],       [ -71. ,   29. ,   18. ,    0.9],       [ -70. ,  -21. ,   19. ,    0.6],       [ -37. ,  -65. ,   20. ,    1. ],       [  12. ,  -72. ,   22. ,    0.9],       [  53. ,  -46. ,   22. ,    1.4],       [  78. ,   -5. ,   14. ,    0.7],       [  55. ,   45. ,   21. ,    0.6],       [  13. ,   75. ,   20. ,    1. ],       [ -35. ,   63. ,   21. ,    0.5],       [ -71. ,   22. ,   15. ,    1. ],       [ -75. ,  -26. ,   18. ,    0.5],       [ -43. ,  -72. ,   18. ,    1.4],       [  18. ,  -80. ,   21. ,    1.3],       [  61. ,  -52. ,   17. ,    1. ],       [  81. ,    0. ,   17. ,    1.2],       [  61. ,   50. ,   20. ,    1.3],       [  15. ,   82. ,   18. ,    1.2],       [ -41. ,   77. ,   17. ,    0.8],       [ -84. ,   26. ,   21. ,    0.7],       [ -83. ,  -27. ,   16. ,    0.6],       [ -42. ,  -72. ,   15. ,    0.9],       [  10. ,  -90. ,   21. ,    1.1],       [  61. ,  -55. ,   16. ,    1.1],       [  96. ,   -3. ,   21. ,    0.8],       [  75. ,   60. ,   18. ,    0.7],       [  15. ,   95. ,   20. ,    0.5],       [ -52. ,   79. ,   16. ,    0.9],       [ -83. ,   35. ,   20. ,    0.7],       [ -89. ,  -31. ,   17. ,    0.8],       [ -47. ,  -78. ,   14. ,    1.2],       [  16. ,  -88. ,   13. ,    1.3],       [  75. ,  -64. ,   14. ,    1.4],       [ 101. ,   -2. ,   21. ,    1.4],       [  72. ,   63. ,   15. ,    1. ],       [  17. ,   95. ,   17. ,    1.1],       [ -52. ,   86. ,   16. ,    1.5],       [ -98. ,   30. ,   18. ,    0.8],       [ -96. ,  -38. ,   16. ,    0.6],       [ -51. ,  -83. ,   12. ,    0.7],       [  13. ,  -99. ,   18. ,    0.9],       [  79. ,  -63. ,   15. ,    0.6],       [  53. ,    4. ,   23. ,    1.2],       [  39. ,   36. ,   20. ,    1.5],       [   6. ,   49. ,   22. ,    1. ],       [ -29. ,   45. ,   17. ,    1.2],       [ -44. ,   15. ,   26. ,    0.6],       [ -48. ,  -19. ,   18. ,    0.7],       [ -25. ,  -45. ,   18. ,    0.8],       [  12. ,  -51. ,   18. ,    1.2],       [  36. ,  -33. ,   22. ,    0.9],       [  53. ,    0. ,   24. ,    1.3],       [  43. ,   39. ,   26. ,    0.9],       [   7. ,   60. ,   24. ,    0.6],       [ -32. ,   45. ,   19. ,    0.5],       [ -56. ,   23. ,   20. ,    1.2],       [ -55. ,  -20. ,   21. ,    0.8],       [ -32. ,  -49. ,   22. ,    0.6],       [   6. ,  -52. ,   24. ,    1.2],       [  39. ,  -39. ,   26. ,    1.5],       [  67. ,    3. ,   27. ,    1.1],       [  51. ,   37. ,   17. ,    1.3],       [  15. ,   61. ,   24. ,    1.2],       [ -32. ,   59. ,   22. ,    1.4],       [ -60. ,   19. ,   26. ,    0.8],       [ -64. ,  -26. ,   19. ,    1. ],       [ -30. ,  -54. ,   19. ,    1.4],       [   7. ,  -63. ,   25. ,    1.5],       [  53. ,  -45. ,   25. ,    1.3],       [  71. ,   -4. ,   26. ,    1.3],       [  55. ,   42. ,   18. ,    1.3],       [  17. ,   65. ,   20. ,    0.9],       [ -32. ,   58. ,   19. ,    1.2],       [ -66. ,   23. ,   25. ,    0.9],       [ -69. ,  -24. ,   22. ,    0.7],       [ -39. ,  -64. ,   25. ,    1.4],       [  16. ,  -68. ,   24. ,    0.7],       [  54. ,  -43. ,   21. ,    1.5],       [  77. ,   -3. ,   17. ,    1.3],       [  57. ,   54. ,   20. ,    0.7],       [  14. ,   80. ,   25. ,    0.6],       [ -40. ,   67. ,   25. ,    1.1],       [ -72. ,   26. ,   24. ,    1. ],       [ -72. ,  -26. ,   23. ,    0.7],       [ -41. ,  -71. ,   21. ,    0.6],       [  12. ,  -78. ,   18. ,    1.4],       [  60. ,  -54. ,   19. ,    0.6],       [  80. ,    1. ,   20. ,    0.5],       [  66. ,   52. ,   26. ,    1. ],       [  12. ,   83. ,   18. ,    1. ],       [ -40. ,   72. ,   19. ,    0.8],       [ -86. ,   33. ,   22. ,    0.5],       [ -82. ,  -26. ,   18. ,    0.8],       [ -43. ,  -72. ,   23. ,    0.8],       [  15. ,  -81. ,   19. ,    1.2],       [  61. ,  -57. ,   25. ,    0.7],       [  88. ,    4. ,   22. ,    1.1],       [  66. ,   58. ,   22. ,    0.7],       [  17. ,   89. ,   26. ,    0.6],       [ -49. ,   77. ,   18. ,    1.4],       [ -89. ,   27. ,   24. ,    1.3],       [ -91. ,  -34. ,   19. ,    0.5],       [ -46. ,  -82. ,   17. ,    0.7],       [  15. ,  -90. ,   26. ,    0.7],       [  67. ,  -57. ,   25. ,    1.3],       [ 103. ,   -5. ,   23. ,    1.1],       [  81. ,   64. ,   19. ,    0.6],       [  13. ,   97. ,   20. ,    1.3],       [ -46. ,   91. ,   26. ,    1.4],       [ -95. ,   29. ,   18. ,    1.3],       [ -94. ,  -34. ,   23. ,    1.4],       [ -46. ,  -83. ,   18. ,    1.2],       [  18. , -103. ,   21. ,    0.6],       [  74. ,  -65. ,   22. ,    0.8],       [  52. ,   -4. ,   22. ,    0.7],       [  38. ,   33. ,   23. ,    0.6],       [  10. ,   50. ,   25. ,    0.6],       [ -25. ,   43. ,   25. ,    0.6],       [ -49. ,   17. ,   22. ,    1.3],       [ -43. ,  -15. ,   30. ,    0.6],       [ -21. ,  -46. ,   29. ,    0.8],       [  11. ,  -49. ,   24. ,    1.4],       [  36. ,  -34. ,   24. ,    0.6],       [  55. ,   -4. ,   22. ,    0.7],       [  43. ,   35. ,   27. ,    0.7],       [  10. ,   52. ,   22. ,    1.4],       [ -32. ,   51. ,   29. ,    0.9],       [ -59. ,   22. ,   26. ,    1.1],       [ -55. ,  -17. ,   25. ,    1.1],       [ -26. ,  -48. ,   26. ,    1.2],       [  13. ,  -58. ,   27. ,    0.7],       [  46. ,  -39. ,   31. ,    0.6],       [  64. ,   -1. ,   21. ,    0.8],       [  49. ,   43. ,   23. ,    1. ],       [  15. ,   65. ,   25. ,    0.6],       [ -37. ,   53. ,   26. ,    1.1],       [ -59. ,   17. ,   26. ,    1.5],       [ -58. ,  -19. ,   23. ,    0.8],       [ -30. ,  -59. ,   25. ,    0.7],       [  11. ,  -64. ,   29. ,    0.6],       [  48. ,  -38. ,   25. ,    0.8],       [  73. ,   -2. ,   31. ,    1.4],       [  57. ,   48. ,   29. ,    1. ],       [   8. ,   70. ,   23. ,    0.9],       [ -40. ,   65. ,   26. ,    1.2],       [ -64. ,   22. ,   24. ,    0.9],       [ -67. ,  -24. ,   29. ,    1.1],       [ -40. ,  -64. ,   29. ,    0.6],       [  11. ,  -67. ,   26. ,    0.5],       [  53. ,  -44. ,   25. ,    0.9],       [  81. ,   -1. ,   26. ,    0.8],       [  56. ,   50. ,   27. ,    1.2],       [  17. ,   74. ,   23. ,    1.3],       [ -44. ,   63. ,   31. ,    1.2],       [ -72. ,   25. ,   23. ,    1.3],       [ -76. ,  -31. ,   31. ,    0.7],       [ -35. ,  -70. ,   24. ,    0.9],       [  14. ,  -73. ,   29. ,    1.2],       [  55. ,  -50. ,   30. ,    0.8],       [  81. ,   -3. ,   27. ,    1.2],       [  66. ,   59. ,   23. ,    1.5],       [  17. ,   88. ,   27. ,    0.7],       [ -42. ,   70. ,   21. ,    1.5],       [ -79. ,   25. ,   22. ,    0.8],       [ -77. ,  -30. ,   30. ,    1. ],       [ -42. ,  -73. ,   28. ,    1.3],       [  17. ,  -81. ,   22. ,    0.5],       [  64. ,  -58. ,   27. ,    0.8],       [  88. ,    1. ,   30. ,    0.6],       [  68. ,   57. ,   26. ,    1.3],       [  18. ,   87. ,   24. ,    0.8],       [ -49. ,   82. ,   22. ,    0.6],       [ -88. ,   33. ,   30. ,    0.6],       [ -87. ,  -30. ,   25. ,    0.5],       [ -47. ,  -82. ,   25. ,    0.7],       [  16. ,  -97. ,   26. ,    0.9],       [  72. ,  -64. ,   28. ,    0.9],       [ 100. ,    3. ,   22. ,    1.3],       [  80. ,   62. ,   29. ,    0.8],       [  17. ,  101. ,   21. ,    0.6],       [ -47. ,   89. ,   24. ,    1.3],       [ -92. ,   31. ,   30. ,    1.5],       [ -95. ,  -35. ,   28. ,    1.2],       [ -47. ,  -88. ,   30. ,    0.7],       [  19. , -100. ,   22. ,    0.9],       [  76. ,  -68. ,   23. ,    1.5],       [  46. ,   -1. ,   27. ,    0.6],       [  42. ,   32. ,   31. ,    1.1],       [   5. ,   53. ,   28. ,    0.8],       [ -25. ,   44. ,   28. ,    1.5],       [ -51. ,   20. ,   33. ,    1.4],       [ -45. ,  -17. ,   28. ,    0.9],       [ -29. ,  -41. ,   34. ,    1.1],       [  10. ,  -49. ,   32. ,    1.2],       [  38. ,  -32. ,   34. ,    0.6],       [  61. ,   -2. ,   34. ,    1.4],       [  42. ,   38. ,   31. ,    0.9],       [  13. ,   58. ,   35. ,    0.8],       [ -28. ,   53. ,   31. ,    1.1],       [ -57. ,   17. ,   35. ,    1. ],       [ -58. ,  -24. ,   31. ,    1.1],       [ -28. ,  -54. ,   29. ,    1.2],       [  13. ,  -56. ,   29. ,    0.5],       [  41. ,  -38. ,   30. ,    1. ],       [  67. ,    1. ,   31. ,    0.9],       [  47. ,   37. ,   30. ,    1. ],       [   6. ,   68. ,   34. ,    1.4],       [ -37. ,   50. ,   33. ,    0.6],       [ -58. ,   20. ,   31. ,    1.5],       [ -65. ,  -25. ,   34. ,    0.7],       [ -32. ,  -57. ,   29. ,    1.1],       [   8. ,  -62. ,   27. ,    1.1],       [  48. ,  -39. ,   31. ,    1.2],       [  70. ,    0. ,   36. ,    0.9],       [  56. ,   45. ,   31. ,    1.4],       [   9. ,   71. ,   32. ,    1.4],       [ -41. ,   62. ,   30. ,    1.2],       [ -71. ,   23. ,   30. ,    0.6],       [ -67. ,  -22. ,   31. ,    1. ],       [ -34. ,  -58. ,   28. ,    0.8],       [  17. ,  -67. ,   35. ,    0.7],       [  55. ,  -42. ,   30. ,    0.9],       [  82. ,    1. ,   27. ,    1.2],       [  55. ,   48. ,   29. ,    0.7],       [  12. ,   77. ,   27. ,    1.4],       [ -43. ,   63. ,   33. ,    0.6],       [ -77. ,   27. ,   28. ,    1.5],       [ -73. ,  -30. ,   30. ,    1.1],       [ -43. ,  -73. ,   28. ,    1.4],       [  15. ,  -76. ,   34. ,    0.8],       [  64. ,  -46. ,   32. ,    0.9],       [  88. ,   -2. ,   31. ,    0.8],       [  69. ,   50. ,   32. ,    0.7],       [  14. ,   89. ,   30. ,    0.8],       [ -40. ,   70. ,   30. ,    0.8],       [ -79. ,   32. ,   26. ,    1.4],       [ -83. ,  -28. ,   31. ,    1.2],       [ -45. ,  -73. ,   30. ,    0.9],       [  13. ,  -86. ,   27. ,    1.5],       [  61. ,  -60. ,   36. ,    0.7],       [  89. ,    3. ,   29. ,    1.5],       [  75. ,   56. ,   34. ,    0.6],       [  13. ,   95. ,   34. ,    1. ],       [ -47. ,   77. ,   31. ,    1.5],       [ -88. ,   36. ,   31. ,    0.9],       [ -85. ,  -36. ,   29. ,    1. ],       [ -48. ,  -84. ,   26. ,    1.1],       [  18. ,  -92. ,   31. ,    0.7],       [  75. ,  -56. ,   28. ,    1.3],       [  99. ,   -3. ,   32. ,    1. ],       [  81. ,   62. ,   28. ,    0.6],       [  18. ,   94. ,   27. ,    0.6],       [ -49. ,   82. ,   26. ,    1.1],       [ -99. ,   34. ,   35. ,    1.5],       [ -93. ,  -37. ,   27. ,    1.3],       [ -53. ,  -89. ,   35. ,    1.2],       [  15. ,  -97. ,   26. ,    0.7],       [  80. ,  -61. ,   32. ,    0.5],       [  53. ,    3. ,   34. ,    1.4],       [  39. ,   31. ,   33. ,    1.2],       [  10. ,   52. ,   33. ,    0.5],       [ -26. ,   40. ,   35. ,    0.8],       [ -47. ,   18. ,   39. ,    1.4],       [ -48. ,  -16. ,   37. ,    0.7],       [ -30. ,  -46. ,   32. ,    1.5],       [   6. ,  -50. ,   39. ,    1.4],       [  39. ,  -28. ,   32. ,    1.5],       [  53. ,    0. ,   35. ,    0.8],       [  41. ,   37. ,   38. ,    0.9],       [  12. ,   53. ,   39. ,    0.5],       [ -27. ,   44. ,   31. ,    0.9],       [ -50. ,   20. ,   37. ,    1.1],       [ -55. ,  -24. ,   36. ,    1.1],       [ -25. ,  -52. ,   36. ,    1.2],       [   9. ,  -61. ,   38. ,    0.7],       [  47. ,  -38. ,   31. ,    1.1],       [  62. ,    0. ,   40. ,    1.5],       [  49. ,   45. ,   39. ,    1.4],       [  10. ,   60. ,   37. ,    1.2],       [ -34. ,   57. ,   35. ,    0.8],       [ -62. ,   24. ,   36. ,    1.4],       [ -59. ,  -27. ,   30. ,    0.6],       [ -36. ,  -57. ,   38. ,    1. ],       [  13. ,  -61. ,   31. ,    1.5],       [  47. ,  -43. ,   35. ,    0.6],       [  73. ,    2. ,   32. ,    0.7],       [  58. ,   44. ,   39. ,    1.1],       [  13. ,   67. ,   33. ,    0.7],       [ -37. ,   64. ,   34. ,    1.2],       [ -67. ,   20. ,   33. ,    1.1],       [ -73. ,  -28. ,   37. ,    1.3],       [ -33. ,  -64. ,   38. ,    1.3],       [  14. ,  -73. ,   40. ,    0.7],       [  56. ,  -45. ,   37. ,    1.2],       [  77. ,   -1. ,   34. ,    1.4],       [  64. ,   54. ,   34. ,    0.5],       [  14. ,   79. ,   33. ,    0.8],       [ -38. ,   65. ,   34. ,    0.9],       [ -72. ,   26. ,   40. ,    1.2],       [ -71. ,  -25. ,   31. ,    0.5],       [ -38. ,  -70. ,   37. ,    1.3],       [  14. ,  -78. ,   40. ,    1.5],       [  62. ,  -50. ,   38. ,    0.6],       [  84. ,    4. ,   36. ,    0.6],       [  67. ,   53. ,   36. ,    1.4],       [  12. ,   81. ,   33. ,    1.1],       [ -45. ,   76. ,   34. ,    1.3],       [ -83. ,   24. ,   38. ,    0.6],       [ -79. ,  -33. ,   32. ,    0.6],       [ -46. ,  -78. ,   38. ,    1.1],       [  16. ,  -81. ,   36. ,    1. ],       [  68. ,  -59. ,   35. ,    1. ],       [  95. ,   -4. ,   34. ,    0.6],       [  69. ,   60. ,   31. ,    0.6],       [  19. ,   93. ,   31. ,    0.8],       [ -48. ,   78. ,   38. ,    0.7],       [ -92. ,   34. ,   34. ,    1.1],       [ -92. ,  -33. ,   39. ,    0.6],       [ -51. ,  -84. ,   33. ,    0.6],       [  13. ,  -97. ,   39. ,    1.2],       [  69. ,  -63. ,   36. ,    1.4],       [  99. ,    3. ,   37. ,    1.2],       [  71. ,   66. ,   35. ,    1.3],       [  19. ,  100. ,   35. ,    1.3],       [ -47. ,   84. ,   36. ,    1.1],       [ -98. ,   35. ,   33. ,    1.4],       [ -93. ,  -30. ,   36. ,    0.6],       [ -47. ,  -89. ,   34. ,    0.8],       [  22. ,  -98. ,   35. ,    1.2],       [  79. ,  -67. ,   40. ,    0.5],       [  51. ,   -3. ,   41. ,    0.6],       [  34. ,   28. ,   36. ,    0.8],       [  11. ,   44. ,   38. ,    1.2],       [ -23. ,   42. ,   37. ,    1. ],       [ -48. ,   16. ,   36. ,    1.2],       [ -46. ,  -19. ,   40. ,    1. ],       [ -24. ,  -40. ,   35. ,    1.3],       [  11. ,  -45. ,   38. ,    1. ],       [  36. ,  -33. ,   38. ,    0.6],       [  55. ,   -2. ,   35. ,    1.3],       [  43. ,   37. ,   43. ,    1. ],       [   8. ,   59. ,   44. ,    1.1],       [ -34. ,   52. ,   41. ,    0.9],       [ -51. ,   16. ,   40. ,    1.5],       [ -53. ,  -20. ,   40. ,    0.6],       [ -28. ,  -46. ,   37. ,    1.3],       [   5. ,  -52. ,   42. ,    1.3],       [  38. ,  -40. ,   43. ,    1.1],       [  62. ,    3. ,   41. ,    0.5],       [  50. ,   43. ,   44. ,    0.8],       [   7. ,   63. ,   38. ,    1.4],       [ -33. ,   57. ,   37. ,    1.4],       [ -63. ,   18. ,   37. ,    0.8],       [ -61. ,  -25. ,   44. ,    1.3],       [ -28. ,  -55. ,   42. ,    1.4],       [   7. ,  -66. ,   38. ,    0.6],       [  50. ,  -38. ,   41. ,    1. ],       [  72. ,   -2. ,   43. ,    1.5],       [  58. ,   44. ,   35. ,    0.7],       [  13. ,   67. ,   35. ,    1.5],       [ -41. ,   59. ,   35. ,    0.7],       [ -65. ,   23. ,   35. ,    1.4],       [ -69. ,  -25. ,   37. ,    0.8],       [ -39. ,  -60. ,   37. ,    1.1],       [  16. ,  -75. ,   37. ,    0.6],       [  58. ,  -51. ,   42. ,    0.9],       [  77. ,   -3. ,   42. ,    1.2],       [  57. ,   52. ,   43. ,    1. ],       [   8. ,   78. ,   42. ,    1.1],       [ -40. ,   69. ,   43. ,    0.8],       [ -70. ,   27. ,   38. ,    0.5],       [ -72. ,  -27. ,   35. ,    1.3],       [ -39. ,  -69. ,   39. ,    1.5],       [  11. ,  -82. ,   42. ,    1. ],       [  62. ,  -54. ,   38. ,    1.4],       [  83. ,    4. ,   38. ,    0.5],       [  67. ,   57. ,   35. ,    0.6],       [   9. ,   82. ,   44. ,    0.5],       [ -46. ,   78. ,   40. ,    0.7],       [ -78. ,   24. ,   35. ,    0.5],       [ -77. ,  -34. ,   36. ,    1.1],       [ -47. ,  -79. ,   39. ,    0.8],       [  14. ,  -85. ,   37. ,    0.6],       [  66. ,  -54. ,   41. ,    1.3],       [  95. ,   -2. ,   35. ,    1.4],       [  73. ,   56. ,   35. ,    1.2],       [  17. ,   94. ,   36. ,    1.4],       [ -47. ,   79. ,   36. ,    1.4],       [ -85. ,   31. ,   39. ,    1.4],       [ -84. ,  -37. ,   41. ,    1.4],       [ -45. ,  -84. ,   38. ,    0.9],       [  15. ,  -94. ,   36. ,    1. ],       [  67. ,  -63. ,   36. ,    1.3],       [  98. ,   -2. ,   35. ,    0.6],       [  75. ,   63. ,   35. ,    1.4],       [  18. ,   94. ,   38. ,    1.2],       [ -55. ,   91. ,   44. ,    1.2],       [ -92. ,   35. ,   38. ,    1. ],       [ -97. ,  -40. ,   40. ,    1.1],       [ -54. ,  -91. ,   36. ,    1.1],       [  17. , -102. ,   44. ,    0.8],       [  79. ,  -68. ,   44. ,    0.7]])
        basis0 = BSplineBasis(6, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.8,  3.3,  4. ,  5. ,
        5. ,  5. ,  5. ,  5. ,  6.2]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.7,  3.2,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.1,  2.7,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.mirror([3, 0, 0])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p5_rational_C1_periodic(self):
        controlpoints = np.array([[ 102. ,   -5. ,    0. ,    1.2],
       [  81. ,   65. ,   -2. ,    0.7],
       [  13. ,  100. ,   -3. ,    1.2],
       [ -55. ,   89. ,   -1. ,    1. ],
       [ -99. ,   32. ,   -3. ,    1. ],
       [ -91. ,  -38. ,   -3. ,    1.5],
       [ -48. ,  -90. ,    3. ,    1.4],
       [  21. , -102. ,    2. ,    1. ],
       [  79. ,  -67. ,   -1. ,    0.6]])
        basis0 = BSplineBasis(5, np.array([-1.6, -1.1,  0. ,  0. ,  0. ,  1.1,  2.3,  2.7,  3.7,  5.4,  5.9,
        7. ,  7. ,  7. ,  8.1,  9.3]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 4.8,  3.5,  9.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 4.800000
        pt2[...,1] -= 3.500000
        pt2[...,2] -= 9.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p7_rational_C1_periodic(self):
        controlpoints = np.array([[  96. ,    2. ,    1. ,    0.9],
       [  80. ,   63. ,   -1. ,    0.8],
       [  34. ,   91. ,    4. ,    0.9],
       [ -34. ,   98. ,   -5. ,    0.8],
       [ -79. ,   54. ,    4. ,    0.5],
       [ -98. ,   -2. ,   -2. ,    0.7],
       [ -86. ,  -64. ,   -1. ,    1.1],
       [ -31. ,  -92. ,   -3. ,    1.1],
       [  32. , -100. ,   -1. ,    0.7],
       [  81. ,  -55. ,    4. ,    0.9]])
        basis0 = BSplineBasis(7, np.array([-1.7, -0.6,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2.3,  3.3,  4.3,
        5.4,  6. ,  6. ,  6. ,  6. ,  6. ,  6.6,  8.3]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([  6.3,  11.6,   7.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 6.300000
        pt2[...,1] /= 11.600000
        pt2[...,2] /= 7.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p5_rational_C1_periodic(self):
        controlpoints = np.array([[ 98. ,  -3. ,   4. ,   0.7],
       [ 46. ,  86. ,   0. ,   0.6],
       [-53. ,  89. ,   4. ,   0.7],
       [-97. ,   0. ,   3. ,   1.2],
       [-53. , -84. ,  -2. ,   0.8],
       [ 52. , -87. ,  -5. ,   0.7]])
        basis0 = BSplineBasis(5, np.array([-2.3, -1.2,  0. ,  0. ,  0. ,  1.1,  1.7,  2.8,  4. ,  4. ,  4. ,
        5.1,  5.7]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.mirror([0, 0, 3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p56_rational_C1_periodic(self):
        controlpoints = np.array([[  55. ,   -4. ,    0. ,    0.8],       [  32. ,   56. ,   -5. ,    1.4],       [ -30. ,   52. ,   -1. ,    0.8],       [ -64. ,   -5. ,   -5. ,    1.5],       [ -27. ,  -55. ,    2. ,    1.1],       [  28. ,  -49. ,    3. ,    0.5],       [  61. ,   -3. ,    2. ,    0.8],       [  27. ,   59. ,   -3. ,    0.8],       [ -34. ,   55. ,   -3. ,    1.3],       [ -67. ,   -2. ,   -4. ,    1.2],       [ -34. ,  -59. ,   -5. ,    1.1],       [  35. ,  -52. ,   -5. ,    1.2],       [  64. ,    1. ,    3. ,    0.9],       [  30. ,   57. ,   -2. ,    1.5],       [ -37. ,   62. ,    1. ,    1.4],       [ -66. ,   -4. ,   -2. ,    1.5],       [ -39. ,  -60. ,   -2. ,    1.1],       [  33. ,  -61. ,   -1. ,    1.2],       [  75. ,    2. ,   -1. ,    0.5],       [  40. ,   60. ,    1. ,    1.2],       [ -32. ,   66. ,    0. ,    1.3],       [ -75. ,    2. ,   -5. ,    1.3],       [ -32. ,  -63. ,    0. ,    1.4],       [  40. ,  -65. ,    3. ,    1.3],       [  78. ,    0. ,    4. ,    1.3],       [  34. ,   66. ,    4. ,    1.1],       [ -37. ,   62. ,   -4. ,    1. ],       [ -80. ,   -3. ,   -2. ,    0.7],       [ -39. ,  -65. ,    2. ,    1.1],       [  39. ,  -70. ,    4. ,    1.4],       [  84. ,    0. ,   -1. ,    0.6],       [  38. ,   71. ,    0. ,    1.3],       [ -38. ,   64. ,   -5. ,    0.6],       [ -85. ,   -2. ,   -3. ,    0.9],       [ -38. ,  -65. ,   -4. ,    1.2],       [  39. ,  -71. ,    1. ,    0.9],       [  82. ,   -2. ,    4. ,    1.1],       [  42. ,   72. ,    4. ,    0.9],       [ -46. ,   76. ,   -5. ,    1.3],       [ -83. ,   -4. ,   -1. ,    0.9],       [ -39. ,  -69. ,   -1. ,    1. ],       [  40. ,  -75. ,   -1. ,    0.8],       [  84. ,    2. ,   -4. ,    1.3],       [  45. ,   76. ,    4. ,    0.8],       [ -47. ,   75. ,   -4. ,    0.7],       [ -85. ,    0. ,    1. ,    0.7],       [ -41. ,  -76. ,    0. ,    0.8],       [  42. ,  -76. ,    3. ,    1.3],       [  95. ,   -2. ,    1. ,    0.9],       [  46. ,   83. ,    1. ,    0.9],       [ -45. ,   76. ,    0. ,    1. ],       [ -97. ,   -5. ,   -1. ,    0.7],       [ -51. ,  -84. ,    0. ,    0.6],       [  49. ,  -80. ,    4. ,    0.6],       [  91. ,    0. ,   -1. ,    0.9],       [  48. ,   79. ,    4. ,    1.2],       [ -46. ,   84. ,   -5. ,    0.7],       [ -92. ,   -1. ,   -4. ,    1.5],       [ -53. ,  -82. ,   -3. ,    0.8],       [  51. ,  -85. ,    0. ,    0.7],       [  95. ,   -4. ,    0. ,    1.4],       [  50. ,   84. ,    3. ,    0.9],       [ -54. ,   82. ,    1. ,    1.1],       [-104. ,   -2. ,    2. ,    1.1],       [ -46. ,  -85. ,    2. ,    0.6],       [  53. ,  -87. ,   -3. ,    0.9]])
        basis0 = BSplineBasis(5, np.array([-2.4, -0.6,  0. ,  0. ,  0. ,  0.8,  1.6,  3.4,  4. ,  4. ,  4. ,
        4.8,  5.6]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.9,  3. ,  4. ,  4.9,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 7.4,  3.9,  2.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 7.400000
        pt2[...,1] -= 3.900000
        pt2[...,2] -= 2.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p75_rational_C1_periodic(self):
        controlpoints = np.array([[  59. ,   -3. ,    1. ,    1.5],       [  52. ,   32. ,   -5. ,    0.7],       [  30. ,   56. ,   -2. ,    1.3],       [   2. ,   55. ,   -3. ,    0.7],       [ -33. ,   54. ,    2. ,    1.5],       [ -53. ,   34. ,    1. ,    1.5],       [ -64. ,    1. ,    4. ,    1.4],       [ -48. ,  -35. ,    4. ,    1. ],       [ -27. ,  -55. ,    2. ,    0.6],       [   3. ,  -60. ,   -5. ,    0.6],       [  33. ,  -48. ,    4. ,    0.9],       [  49. ,  -33. ,    0. ,    1.1],       [  65. ,   -4. ,    3. ,    1.2],       [  60. ,   28. ,   -3. ,    1.2],       [  35. ,   53. ,    1. ,    1.1],       [   2. ,   65. ,   -3. ,    0.9],       [ -37. ,   59. ,    2. ,    0.7],       [ -62. ,   35. ,    1. ,    0.8],       [ -66. ,   -3. ,   -4. ,    0.9],       [ -63. ,  -29. ,   -4. ,    0.8],       [ -37. ,  -61. ,    2. ,    1.4],       [   2. ,  -70. ,    3. ,    1.1],       [  37. ,  -58. ,    2. ,    0.7],       [  57. ,  -31. ,    1. ,    0.7],       [  70. ,   -1. ,    4. ,    0.9],       [  59. ,   39. ,   -1. ,    1.2],       [  35. ,   64. ,   -1. ,    0.6],       [  -2. ,   76. ,    0. ,    0.7],       [ -37. ,   67. ,   -4. ,    1. ],       [ -63. ,   38. ,   -4. ,    1.4],       [ -76. ,    1. ,   -3. ,    1.3],       [ -65. ,  -33. ,   -4. ,    0.9],       [ -37. ,  -68. ,   -3. ,    0.8],       [   3. ,  -74. ,    4. ,    1.3],       [  32. ,  -62. ,    2. ,    1.5],       [  62. ,  -39. ,    4. ,    0.5],       [  84. ,    4. ,    3. ,    0.6],       [  70. ,   44. ,   -1. ,    1.2],       [  38. ,   72. ,   -3. ,    0.7],       [   4. ,   84. ,    0. ,    1.1],       [ -39. ,   65. ,    3. ,    0.8],       [ -72. ,   36. ,    0. ,    1.5],       [ -85. ,   -4. ,    0. ,    0.9],       [ -70. ,  -40. ,   -5. ,    1.2],       [ -43. ,  -67. ,   -1. ,    1.2],       [  -3. ,  -85. ,   -5. ,    1.4],       [  39. ,  -74. ,   -4. ,    1.1],       [  71. ,  -39. ,    1. ,    0.7],       [  91. ,   -5. ,   -4. ,    0.9],       [  71. ,   42. ,    2. ,    1.4],       [  46. ,   75. ,    2. ,    0.6],       [   4. ,   89. ,    3. ,    1.1],       [ -47. ,   79. ,   -5. ,    1. ],       [ -71. ,   43. ,   -5. ,    0.9],       [ -85. ,    1. ,    3. ,    0.7],       [ -71. ,  -42. ,    0. ,    1.4],       [ -48. ,  -74. ,    0. ,    1. ],       [   0. ,  -92. ,   -4. ,    0.7],       [  39. ,  -71. ,    1. ,    0.5],       [  71. ,  -41. ,    4. ,    1.1],       [  93. ,   -2. ,    4. ,    1.4],       [  77. ,   42. ,   -5. ,    0.9],       [  46. ,   78. ,    2. ,    1.3],       [  -3. ,   92. ,    4. ,    0.7],       [ -43. ,   85. ,   -3. ,    1. ],       [ -84. ,   50. ,    0. ,    1. ],       [ -95. ,    0. ,   -4. ,    1.2],       [ -85. ,  -52. ,   -5. ,    1.4],       [ -51. ,  -83. ,   -5. ,    1.3],       [   2. ,  -98. ,   -2. ,    1.5],       [  50. ,  -83. ,    1. ,    1.1],       [  76. ,  -51. ,   -3. ,    0.7],       [ 102. ,   -4. ,   -4. ,    0.9],       [  86. ,   51. ,    1. ,    0.7],       [  50. ,   86. ,    3. ,    0.6],       [   2. ,  102. ,    4. ,    1. ],       [ -51. ,   91. ,    1. ,    0.8],       [ -87. ,   45. ,    2. ,    0.8],       [-100. ,    3. ,   -3. ,    1.1],       [ -83. ,  -52. ,   -1. ,    0.5],       [ -50. ,  -83. ,   -3. ,    1.1],       [   0. ,  -99. ,   -4. ,    1.4],       [  46. ,  -83. ,    0. ,    0.9],       [  88. ,  -46. ,   -2. ,    0.6]])
        basis0 = BSplineBasis(7, np.array([-1.7, -0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.9,  3.4,  4.1,
        4.8,  6.3,  7.1,  8. ,  8. ,  8. ,  8. ,  8. ,  8.9,  9.9]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.2,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 6.6,  9.9,  8.5])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 6.600000
        pt2[...,1] /= 9.900000
        pt2[...,2] /= 8.500000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p76_rational_C1_periodic(self):
        controlpoints = np.array([[  63. ,    1. ,   -2. ,    1.1],       [  43. ,   35. ,   -2. ,    0.9],       [  14. ,   61. ,    0. ,    1.5],       [ -28. ,   55. ,    3. ,    1.5],       [ -52. ,   24. ,    2. ,    0.8],       [ -54. ,  -23. ,   -5. ,    1.2],       [ -26. ,  -50. ,   -1. ,    1.1],       [  10. ,  -61. ,   -2. ,    0.6],       [  48. ,  -37. ,   -2. ,    0.7],       [  61. ,    3. ,   -1. ,    0.9],       [  45. ,   42. ,    2. ,    0.7],       [  11. ,   66. ,    2. ,    0.7],       [ -31. ,   53. ,   -2. ,    1.5],       [ -65. ,   20. ,   -3. ,    1. ],       [ -62. ,  -27. ,    2. ,    0.6],       [ -37. ,  -55. ,   -5. ,    1.1],       [  13. ,  -63. ,   -2. ,    0.5],       [  47. ,  -41. ,    3. ,    1.3],       [  64. ,   -5. ,   -3. ,    1.1],       [  54. ,   40. ,   -4. ,    1.2],       [  12. ,   69. ,   -1. ,    1. ],       [ -39. ,   63. ,    1. ,    0.9],       [ -62. ,   18. ,   -4. ,    0.9],       [ -68. ,  -19. ,   -1. ,    0.6],       [ -31. ,  -63. ,   -2. ,    0.7],       [  15. ,  -70. ,   -2. ,    1.4],       [  49. ,  -49. ,   -2. ,    0.6],       [  69. ,   -5. ,    0. ,    1. ],       [  57. ,   41. ,   -4. ,    0.8],       [  12. ,   66. ,   -4. ,    1.2],       [ -35. ,   63. ,   -1. ,    0.7],       [ -70. ,   25. ,    2. ,    1.3],       [ -72. ,  -21. ,   -3. ,    0.8],       [ -41. ,  -61. ,   -4. ,    1. ],       [  11. ,  -71. ,   -1. ,    0.7],       [  57. ,  -45. ,    0. ,    1.1],       [  71. ,   -3. ,    3. ,    1.2],       [  58. ,   46. ,    1. ,    0.8],       [   9. ,   75. ,    2. ,    1.1],       [ -38. ,   62. ,   -3. ,    0.8],       [ -76. ,   28. ,    1. ,    0.5],       [ -76. ,  -27. ,   -2. ,    1.3],       [ -35. ,  -66. ,    1. ,    0.9],       [  10. ,  -79. ,   -5. ,    0.8],       [  61. ,  -45. ,    4. ,    1.1],       [  83. ,    1. ,    3. ,    1.2],       [  61. ,   53. ,   -1. ,    0.7],       [  11. ,   78. ,   -3. ,    1.1],       [ -39. ,   66. ,   -2. ,    0.9],       [ -74. ,   22. ,    0. ,    0.9],       [ -77. ,  -28. ,    0. ,    0.8],       [ -43. ,  -69. ,    3. ,    0.7],       [  14. ,  -77. ,    1. ,    1.3],       [  60. ,  -53. ,    1. ,    0.8],       [  80. ,   -1. ,    0. ,    0.7],       [  67. ,   51. ,    4. ,    1.1],       [  16. ,   84. ,   -2. ,    1.4],       [ -40. ,   70. ,   -4. ,    0.7],       [ -75. ,   33. ,   -4. ,    0.7],       [ -79. ,  -30. ,    3. ,    1.1],       [ -45. ,  -77. ,    4. ,    0.8],       [  10. ,  -84. ,   -3. ,    1.4],       [  65. ,  -54. ,    0. ,    0.5],       [  91. ,    3. ,    3. ,    1.2],       [  66. ,   60. ,   -3. ,    0.7],       [  17. ,   90. ,    4. ,    1.1],       [ -40. ,   79. ,   -3. ,    1.3],       [ -82. ,   33. ,   -3. ,    1.5],       [ -80. ,  -26. ,    3. ,    0.9],       [ -45. ,  -77. ,    3. ,    1.4],       [  19. ,  -88. ,    3. ,    1.5],       [  64. ,  -61. ,    3. ,    1.1],       [  95. ,   -3. ,    4. ,    1.1],       [  75. ,   56. ,    1. ,    0.6],       [  15. ,   85. ,    4. ,    0.6],       [ -45. ,   79. ,    4. ,    1.3],       [ -83. ,   31. ,    3. ,    0.8],       [ -83. ,  -37. ,   -3. ,    0.5],       [ -44. ,  -85. ,   -2. ,    1.5],       [  11. ,  -91. ,   -3. ,    0.8],       [  73. ,  -55. ,   -1. ,    1.2],       [  91. ,    0. ,    2. ,    0.6],       [  75. ,   61. ,    0. ,    1.4],       [  12. ,   90. ,    3. ,    1.4],       [ -44. ,   79. ,    3. ,    0.6],       [ -86. ,   30. ,    2. ,    0.8],       [ -95. ,  -38. ,    4. ,    0.9],       [ -45. ,  -85. ,    3. ,    1.3],       [  17. ,  -93. ,   -3. ,    1.3],       [  70. ,  -64. ,   -4. ,    0.9],       [ 103. ,   -3. ,   -5. ,    0.8],       [  72. ,   64. ,    2. ,    1.2],       [  13. ,   99. ,    2. ,    0.7],       [ -53. ,   83. ,   -5. ,    1.2],       [ -97. ,   31. ,   -1. ,    1.2],       [ -90. ,  -33. ,    2. ,    1.4],       [ -54. ,  -84. ,   -4. ,    1.2],       [  13. ,  -97. ,   -4. ,    0.6],       [  73. ,  -61. ,   -2. ,    1.4]])
        basis0 = BSplineBasis(7, np.array([-2.2, -0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  2.8,  4.3,
        5. ,  5. ,  5. ,  5. ,  5. ,  6. ,  7.1]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.8,  3.4,  3.7,  5.2,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.mirror([0, 1, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,1] = -pt2[...,1]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p757_rational_C1_periodic(self):
        controlpoints = np.array([[  52. ,   -5. ,   -1. ,    0.6],       [  38. ,   23. ,    3. ,    0.8],       [  20. ,   48. ,    3. ,    1. ],       [  -4. ,   51. ,    3. ,    0.7],       [ -34. ,   38. ,    0. ,    0.8],       [ -48. ,   17. ,    1. ,    0.8],       [ -51. ,  -19. ,    3. ,    1.5],       [ -34. ,  -40. ,   -1. ,    0.6],       [  -5. ,  -50. ,   -4. ,    1.3],       [  20. ,  -45. ,    4. ,    0.7],       [  38. ,  -27. ,   -4. ,    0.8],       [  60. ,    1. ,   -5. ,    1.4],       [  46. ,   35. ,    2. ,    0.5],       [  24. ,   51. ,    4. ,    1.3],       [  -5. ,   52. ,    0. ,    0.6],       [ -34. ,   43. ,   -4. ,    1.2],       [ -59. ,   17. ,    3. ,    0.8],       [ -56. ,  -16. ,   -2. ,    0.9],       [ -33. ,  -45. ,   -3. ,    1.3],       [  -4. ,  -56. ,    4. ,    1. ],       [  21. ,  -52. ,   -3. ,    1. ],       [  50. ,  -36. ,    1. ,    0.5],       [  67. ,    4. ,    0. ,    1.4],       [  54. ,   38. ,   -5. ,    1.2],       [  25. ,   57. ,    1. ,    1.1],       [  -8. ,   58. ,   -3. ,    1.1],       [ -39. ,   44. ,    3. ,    0.7],       [ -60. ,   18. ,    4. ,    0.6],       [ -64. ,  -22. ,    0. ,    1.1],       [ -43. ,  -48. ,   -1. ,    0.6],       [ -10. ,  -64. ,    4. ,    0.8],       [  23. ,  -59. ,   -3. ,    1.2],       [  57. ,  -37. ,   -5. ,    0.7],       [  72. ,   -3. ,   -5. ,    0.7],       [  61. ,   39. ,   -4. ,    1. ],       [  32. ,   65. ,    2. ,    0.9],       [  -9. ,   66. ,    2. ,    1.4],       [ -49. ,   49. ,    3. ,    1.2],       [ -73. ,   19. ,    0. ,    1.4],       [ -69. ,  -22. ,    0. ,    1.1],       [ -45. ,  -50. ,    2. ,    0.9],       [  -8. ,  -67. ,    1. ,    1.5],       [  25. ,  -66. ,   -4. ,    1.4],       [  60. ,  -41. ,   -2. ,    0.9],       [  81. ,   -5. ,   -2. ,    1.4],       [  70. ,   38. ,    0. ,    1.1],       [  37. ,   76. ,    3. ,    1.5],       [ -10. ,   76. ,    4. ,    1.1],       [ -50. ,   62. ,    0. ,    0.6],       [ -77. ,   23. ,   -2. ,    0.6],       [ -78. ,  -18. ,    4. ,    0.5],       [ -52. ,  -62. ,   -3. ,    0.7],       [ -10. ,  -74. ,   -2. ,    1.1],       [  33. ,  -72. ,   -4. ,    1. ],       [  69. ,  -38. ,    1. ,    0.9],       [  83. ,    3. ,   -2. ,    0.8],       [  72. ,   46. ,   -3. ,    1.4],       [  38. ,   79. ,   -4. ,    1.1],       [ -11. ,   89. ,   -5. ,    0.9],       [ -59. ,   64. ,   -5. ,    0.6],       [ -82. ,   26. ,   -5. ,    1.5],       [ -85. ,  -25. ,   -4. ,    1.2],       [ -55. ,  -63. ,   -1. ,    0.5],       [ -15. ,  -90. ,    2. ,    0.8],       [  35. ,  -78. ,   -3. ,    1. ],       [  67. ,  -51. ,   -5. ,    0.9],       [  91. ,    2. ,   -4. ,    1.1],       [  82. ,   49. ,    2. ,    1.1],       [  36. ,   86. ,   -1. ,    0.8],       [ -19. ,   95. ,   -3. ,    0.6],       [ -63. ,   73. ,   -1. ,    0.6],       [ -88. ,   25. ,   -1. ,    1.4],       [ -90. ,  -27. ,    2. ,    1.4],       [ -65. ,  -70. ,    1. ,    1.2],       [ -15. ,  -93. ,    4. ,    1. ],       [  36. ,  -89. ,    4. ,    0.8],       [  82. ,  -49. ,   -2. ,    0.8],       [  98. ,   -2. ,    1. ,    0.9],       [  83. ,   50. ,    4. ,    1.3],       [  37. ,   95. ,    1. ,    1.2],       [ -11. ,   94. ,   -5. ,    1.1],       [ -68. ,   77. ,    0. ,    1.1],       [ -93. ,   32. ,   -4. ,    1.3],       [ -94. ,  -30. ,    0. ,    0.6],       [ -61. ,  -79. ,    0. ,    0.7],       [ -17. , -100. ,   -4. ,    1.1],       [  40. ,  -92. ,    4. ,    1.4],       [  81. ,  -55. ,   -2. ,    1.2],       [  53. ,   -3. ,    5. ,    1.1],       [  43. ,   29. ,    2. ,    0.6],       [  17. ,   42. ,    3. ,    1.1],       [  -7. ,   46. ,    0. ,    1.2],       [ -34. ,   41. ,    3. ,    0.8],       [ -47. ,   17. ,    5. ,    0.9],       [ -46. ,  -19. ,   -1. ,    1.1],       [ -35. ,  -43. ,    8. ,    1. ],       [  -8. ,  -55. ,    5. ,    1.2],       [  22. ,  -49. ,    2. ,    0.5],       [  39. ,  -25. ,    5. ,    0.7],       [  61. ,    1. ,    0. ,    1.2],       [  50. ,   35. ,    4. ,    0.5],       [  26. ,   49. ,    1. ,    1.4],       [  -9. ,   59. ,    5. ,    1.2],       [ -36. ,   41. ,    4. ,    0.6],       [ -52. ,   13. ,    0. ,    0.9],       [ -50. ,  -18. ,    8. ,    1.1],       [ -35. ,  -43. ,    2. ,    0.7],       [  -9. ,  -55. ,    1. ,    1.2],       [  19. ,  -51. ,    8. ,    0.6],       [  47. ,  -35. ,    2. ,    1.1],       [  65. ,   -5. ,    6. ,    0.8],       [  55. ,   38. ,    1. ,    1.2],       [  31. ,   53. ,    6. ,    1.3],       [ -13. ,   61. ,    3. ,    1.2],       [ -42. ,   46. ,    0. ,    1.2],       [ -63. ,   19. ,   -1. ,    0.9],       [ -60. ,  -21. ,    4. ,    1.5],       [ -43. ,  -45. ,    8. ,    0.9],       [ -13. ,  -67. ,    6. ,    1.1],       [  22. ,  -57. ,    5. ,    0.8],       [  49. ,  -36. ,   -1. ,    1. ],       [  69. ,   -1. ,    5. ,    0.9],       [  64. ,   42. ,    5. ,    1.4],       [  28. ,   66. ,   -1. ,    0.7],       [  -8. ,   70. ,    8. ,    1.4],       [ -44. ,   55. ,    3. ,    0.9],       [ -70. ,   16. ,    5. ,    0.9],       [ -68. ,  -19. ,    1. ,    0.5],       [ -44. ,  -59. ,    2. ,    1.3],       [ -15. ,  -69. ,    2. ,    1.4],       [  25. ,  -68. ,    7. ,    1.1],       [  60. ,  -39. ,    1. ,    1.1],       [  77. ,   -3. ,    0. ,    0.8],       [  69. ,   41. ,   -1. ,    1.3],       [  35. ,   67. ,    2. ,    1.4],       [ -12. ,   73. ,    1. ,    1.2],       [ -52. ,   63. ,    5. ,    0.8],       [ -74. ,   21. ,    6. ,    0.7],       [ -80. ,  -25. ,    2. ,    1.2],       [ -48. ,  -55. ,    3. ,    1.1],       [ -10. ,  -76. ,    5. ,    0.9],       [  31. ,  -74. ,    6. ,    0.6],       [  69. ,  -40. ,   -1. ,    1. ],       [  89. ,   -2. ,    5. ,    0.6],       [  67. ,   48. ,    6. ,    1.1],       [  33. ,   80. ,    2. ,    1. ],       [ -11. ,   86. ,   -1. ,    1. ],       [ -55. ,   69. ,    0. ,    1.4],       [ -87. ,   25. ,    6. ,    1. ],       [ -79. ,  -27. ,    3. ,    0.6],       [ -60. ,  -68. ,   -1. ,    1.5],       [ -10. ,  -86. ,    5. ,    1.2],       [  37. ,  -78. ,    1. ,    0.7],       [  76. ,  -48. ,    5. ,    1.4],       [  93. ,   -5. ,    6. ,    1.4],       [  75. ,   45. ,    8. ,    1.4],       [  38. ,   86. ,    3. ,    1.5],       [ -13. ,   90. ,    4. ,    1.3],       [ -65. ,   74. ,    3. ,    1.2],       [ -85. ,   23. ,    0. ,    0.5],       [ -85. ,  -23. ,    1. ,    0.9],       [ -59. ,  -74. ,    1. ,    0.7],       [ -11. ,  -95. ,    0. ,    0.7],       [  37. ,  -86. ,    3. ,    1. ],       [  76. ,  -53. ,    3. ,    1.2],       [ 104. ,    3. ,    6. ,    0.8],       [  88. ,   54. ,    0. ,    0.5],       [  41. ,   93. ,    7. ,    1.1],       [ -16. ,   99. ,    7. ,    1.2],       [ -63. ,   71. ,    3. ,    1.2],       [-101. ,   32. ,    0. ,    1.2],       [ -96. ,  -25. ,    2. ,    1.4],       [ -70. ,  -78. ,    6. ,    1.3],       [ -18. , -104. ,    7. ,    0.7],       [  40. ,  -87. ,    3. ,    1.3],       [  83. ,  -51. ,    7. ,    1. ],       [  47. ,   -1. ,    6. ,    1.4],       [  45. ,   23. ,    7. ,    0.5],       [  23. ,   41. ,    9. ,    0.9],       [  -8. ,   51. ,   12. ,    1.2],       [ -37. ,   33. ,    5. ,    0.8],       [ -48. ,   13. ,    3. ,    0.6],       [ -52. ,  -19. ,    7. ,    1.4],       [ -37. ,  -37. ,    7. ,    0.7],       [ -10. ,  -49. ,    7. ,    1.2],       [  18. ,  -48. ,    5. ,    1. ],       [  41. ,  -27. ,    9. ,    1.2],       [  60. ,   -2. ,   10. ,    0.6],       [  51. ,   31. ,    7. ,    1. ],       [  22. ,   53. ,    3. ,    0.8],       [ -12. ,   56. ,    9. ,    0.6],       [ -40. ,   40. ,   11. ,    0.6],       [ -51. ,   15. ,   10. ,    0.6],       [ -59. ,  -18. ,    7. ,    0.7],       [ -39. ,  -43. ,    6. ,    1.4],       [  -9. ,  -57. ,    7. ,    0.8],       [  22. ,  -50. ,    3. ,    1.4],       [  47. ,  -27. ,    4. ,    1.3],       [  59. ,    3. ,    8. ,    0.8],       [  56. ,   38. ,    3. ,    1.2],       [  25. ,   61. ,    4. ,    1.1],       [ -11. ,   65. ,   11. ,    1. ],       [ -40. ,   51. ,   10. ,    1.3],       [ -59. ,   14. ,   12. ,    1. ],       [ -64. ,  -16. ,    5. ,    1.1],       [ -46. ,  -52. ,    5. ,    1. ],       [  -5. ,  -63. ,    7. ,    1.4],       [  23. ,  -58. ,    4. ,    0.8],       [  52. ,  -33. ,    9. ,    1.2],       [  75. ,    0. ,    9. ,    0.5],       [  58. ,   36. ,   11. ,    1.2],       [  30. ,   63. ,    5. ,    0.6],       [ -15. ,   74. ,   11. ,    0.6],       [ -48. ,   57. ,   11. ,    1. ],       [ -73. ,   22. ,    3. ,    0.8],       [ -69. ,  -23. ,    4. ,    1.2],       [ -44. ,  -57. ,    7. ,    1.5],       [ -14. ,  -71. ,    9. ,    1.2],       [  25. ,  -63. ,    5. ,    1.3],       [  55. ,  -34. ,    9. ,    0.6],       [  79. ,    1. ,   12. ,    1.2],       [  62. ,   41. ,    3. ,    1.3],       [  30. ,   74. ,    3. ,    1.5],       [  -9. ,   80. ,   12. ,    0.8],       [ -55. ,   58. ,   11. ,    0.5],       [ -79. ,   18. ,   10. ,    0.6],       [ -73. ,  -19. ,    9. ,    1.3],       [ -50. ,  -58. ,    5. ,    0.8],       [ -13. ,  -78. ,   11. ,    0.8],       [  36. ,  -68. ,   12. ,    0.7],       [  64. ,  -43. ,   10. ,    0.8],       [  84. ,   -3. ,   11. ,    1.5],       [  69. ,   47. ,   12. ,    0.9],       [  32. ,   75. ,    6. ,    1.2],       [ -10. ,   89. ,    4. ,    1.1],       [ -53. ,   64. ,    5. ,    0.6],       [ -83. ,   26. ,   10. ,    0.6],       [ -83. ,  -21. ,   11. ,    1.3],       [ -52. ,  -70. ,    3. ,    1.2],       [  -8. ,  -83. ,    5. ,    1.1],       [  39. ,  -78. ,   12. ,    1.1],       [  68. ,  -49. ,    5. ,    1.2],       [  93. ,    4. ,    8. ,    0.8],       [  76. ,   51. ,    4. ,    1.2],       [  35. ,   85. ,    4. ,    1.4],       [ -11. ,   92. ,    8. ,    1.1],       [ -60. ,   69. ,   10. ,    1. ],       [ -86. ,   22. ,    4. ,    1. ],       [ -86. ,  -24. ,   11. ,    0.7],       [ -58. ,  -73. ,    6. ,    0.5],       [ -10. ,  -90. ,    5. ,    1.1],       [  37. ,  -82. ,    7. ,    0.9],       [  81. ,  -55. ,    9. ,    1.5],       [  95. ,    3. ,    4. ,    1.1],       [  86. ,   51. ,   11. ,    0.5],       [  37. ,   90. ,    9. ,    0.9],       [ -10. ,   99. ,   11. ,    0.6],       [ -66. ,   73. ,   11. ,    1.1],       [ -95. ,   30. ,   10. ,    0.7],       [ -97. ,  -26. ,    4. ,    0.5],       [ -68. ,  -71. ,   10. ,    0.5],       [ -12. ,  -95. ,    5. ,    0.6],       [  41. ,  -92. ,    5. ,    1. ],       [  82. ,  -60. ,    5. ,    1.4],       [  54. ,    1. ,   11. ,    0.6],       [  42. ,   31. ,   13. ,    1.3],       [  18. ,   44. ,   12. ,    1. ],       [  -8. ,   45. ,   16. ,    0.6],       [ -30. ,   39. ,    8. ,    1. ],       [ -50. ,   12. ,   14. ,    1.2],       [ -45. ,  -18. ,   15. ,    0.8],       [ -29. ,  -40. ,   11. ,    0.6],       [  -6. ,  -53. ,   11. ,    0.9],       [  19. ,  -45. ,   16. ,    1.4],       [  42. ,  -27. ,   11. ,    0.9],       [  58. ,    4. ,    7. ,    1.1],       [  47. ,   30. ,   11. ,    1. ],       [  26. ,   47. ,   14. ,    1. ],       [  -9. ,   51. ,   14. ,    1.1],       [ -40. ,   44. ,   12. ,    1. ],       [ -56. ,   20. ,   16. ,    0.6],       [ -60. ,  -16. ,    9. ,    1.3],       [ -36. ,  -44. ,   14. ,    1.1],       [  -4. ,  -54. ,   11. ,    0.7],       [  20. ,  -50. ,    9. ,    0.6],       [  47. ,  -28. ,    7. ,    1.3],       [  60. ,    2. ,   12. ,    1.5],       [  56. ,   37. ,   14. ,    0.7],       [  27. ,   54. ,   16. ,    0.7],       [  -8. ,   67. ,    8. ,    0.9],       [ -38. ,   52. ,   16. ,    1. ],       [ -66. ,   21. ,   12. ,    1.1],       [ -66. ,  -18. ,   14. ,    0.7],       [ -39. ,  -48. ,   16. ,    1.2],       [ -13. ,  -63. ,   14. ,    1.3],       [  22. ,  -55. ,    8. ,    0.6],       [  53. ,  -32. ,   16. ,    0.7],       [  74. ,    2. ,   16. ,    0.5],       [  61. ,   42. ,    8. ,    0.5],       [  29. ,   68. ,   12. ,    0.6],       [ -13. ,   68. ,   16. ,    1.1],       [ -45. ,   55. ,   16. ,    1.1],       [ -67. ,   19. ,   16. ,    1.2],       [ -73. ,  -20. ,   11. ,    1.5],       [ -49. ,  -55. ,   14. ,    0.7],       [  -9. ,  -70. ,    7. ,    0.9],       [  25. ,  -69. ,   16. ,    1.3],       [  61. ,  -35. ,   15. ,    0.7],       [  79. ,   -1. ,   14. ,    1.1],       [  63. ,   43. ,   16. ,    0.5],       [  31. ,   75. ,   14. ,    1.2],       [ -16. ,   77. ,   16. ,    0.9],       [ -51. ,   56. ,   14. ,    0.6],       [ -71. ,   24. ,    8. ,    0.6],       [ -73. ,  -24. ,    9. ,    1. ],       [ -53. ,  -61. ,   14. ,    1. ],       [ -15. ,  -78. ,    9. ,    1.1],       [  32. ,  -75. ,    8. ,    1.2],       [  69. ,  -44. ,    9. ,    1. ],       [  85. ,   -1. ,   10. ,    0.5],       [  76. ,   45. ,   15. ,    1.1],       [  39. ,   74. ,    8. ,    1.2],       [  -8. ,   84. ,   16. ,    1.5],       [ -56. ,   61. ,   10. ,    1.5],       [ -85. ,   28. ,   12. ,    0.9],       [ -81. ,  -20. ,   10. ,    1.2],       [ -59. ,  -68. ,   14. ,    1.3],       [ -17. ,  -85. ,   16. ,    1. ],       [  31. ,  -81. ,   12. ,    1.2],       [  70. ,  -42. ,    7. ,    1.2],       [  87. ,    4. ,   10. ,    1.1],       [  79. ,   49. ,    7. ,    0.9],       [  41. ,   80. ,   10. ,    1.1],       [ -16. ,   87. ,   11. ,    1.1],       [ -62. ,   67. ,   14. ,    0.8],       [ -94. ,   25. ,   15. ,    1.2],       [ -93. ,  -28. ,    7. ,    0.6],       [ -64. ,  -70. ,   11. ,    0.9],       [ -17. ,  -92. ,   12. ,    1.3],       [  36. ,  -80. ,   11. ,    1. ],       [  74. ,  -49. ,    8. ,    0.9],       [ 102. ,   -4. ,   10. ,    1.2],       [  87. ,   57. ,    8. ,    1. ],       [  42. ,   89. ,   16. ,    1.5],       [ -18. ,   96. ,   14. ,    1.1],       [ -67. ,   71. ,   16. ,    1.5],       [ -91. ,   26. ,   16. ,    0.6],       [ -92. ,  -32. ,   13. ,    1.1],       [ -69. ,  -76. ,   14. ,    1.2],       [ -15. ,  -98. ,    7. ,    1.3],       [  38. ,  -96. ,   11. ,    0.7],       [  85. ,  -52. ,   15. ,    1.1],       [  48. ,   -5. ,   13. ,    1. ],       [  42. ,   26. ,   11. ,    1.3],       [  21. ,   45. ,   15. ,    1.2],       [ -11. ,   53. ,   15. ,    1. ],       [ -34. ,   40. ,   12. ,    1.2],       [ -44. ,   12. ,   16. ,    1. ],       [ -46. ,  -11. ,   14. ,    0.5],       [ -35. ,  -33. ,   18. ,    0.7],       [  -3. ,  -49. ,   12. ,    0.6],       [  18. ,  -48. ,   14. ,    1.3],       [  46. ,  -29. ,   20. ,    0.9],       [  60. ,    0. ,   12. ,    0.9],       [  43. ,   29. ,   16. ,    0.7],       [  26. ,   50. ,   11. ,    0.5],       [  -8. ,   57. ,   14. ,    1.2],       [ -42. ,   38. ,   19. ,    0.6],       [ -56. ,   11. ,   16. ,    1.4],       [ -56. ,  -13. ,   16. ,    0.9],       [ -42. ,  -45. ,   11. ,    1. ],       [  -8. ,  -53. ,   15. ,    0.5],       [  27. ,  -52. ,   11. ,    1.2],       [  46. ,  -36. ,   14. ,    0.7],       [  64. ,   -1. ,   19. ,    0.7],       [  54. ,   34. ,   11. ,    1.1],       [  22. ,   63. ,   20. ,    1. ],       [ -12. ,   67. ,   16. ,    1.1],       [ -44. ,   48. ,   17. ,    1.5],       [ -60. ,   14. ,   14. ,    0.5],       [ -65. ,  -22. ,   12. ,    1.1],       [ -47. ,  -46. ,   13. ,    0.6],       [ -10. ,  -61. ,   13. ,    0.7],       [  24. ,  -60. ,   14. ,    1.2],       [  58. ,  -33. ,   19. ,    0.7],       [  72. ,    4. ,   20. ,    0.5],       [  59. ,   34. ,   15. ,    1.5],       [  29. ,   61. ,   14. ,    0.5],       [ -13. ,   72. ,   17. ,    1. ],       [ -51. ,   53. ,   19. ,    1.4],       [ -72. ,   19. ,   18. ,    0.7],       [ -69. ,  -24. ,   12. ,    1.1],       [ -46. ,  -51. ,   12. ,    0.9],       [ -12. ,  -73. ,   13. ,    1. ],       [  33. ,  -65. ,   19. ,    0.7],       [  57. ,  -38. ,   18. ,    0.9],       [  80. ,   -4. ,   18. ,    1.3],       [  65. ,   37. ,   16. ,    0.6],       [  32. ,   68. ,   17. ,    0.9],       [ -16. ,   73. ,   11. ,    1.3],       [ -53. ,   57. ,   17. ,    0.9],       [ -75. ,   17. ,   19. ,    1.5],       [ -79. ,  -24. ,   16. ,    0.8],       [ -53. ,  -58. ,   17. ,    1.2],       [ -16. ,  -77. ,   17. ,    0.6],       [  28. ,  -67. ,   16. ,    1. ],       [  67. ,  -41. ,   13. ,    0.6],       [  84. ,   -2. ,   19. ,    1. ],       [  68. ,   49. ,   11. ,    1.2],       [  36. ,   81. ,   18. ,    0.5],       [  -9. ,   88. ,   19. ,    0.7],       [ -52. ,   68. ,   15. ,    1. ],       [ -85. ,   26. ,   13. ,    0.8],       [ -87. ,  -23. ,   16. ,    0.8],       [ -58. ,  -68. ,   13. ,    1.2],       [ -13. ,  -89. ,   13. ,    0.5],       [  32. ,  -83. ,   19. ,    1. ],       [  73. ,  -45. ,   13. ,    0.9],       [  91. ,   -4. ,   13. ,    0.8],       [  75. ,   53. ,   19. ,    0.6],       [  36. ,   82. ,   16. ,    1.2],       [ -17. ,   88. ,   14. ,    1.1],       [ -57. ,   69. ,   13. ,    0.7],       [ -85. ,   22. ,   13. ,    1.1],       [ -85. ,  -26. ,   13. ,    1.3],       [ -56. ,  -74. ,   12. ,    0.6],       [ -16. ,  -97. ,   15. ,    0.6],       [  33. ,  -80. ,   13. ,    0.8],       [  78. ,  -47. ,   15. ,    1. ],       [  99. ,    0. ,   16. ,    0.8],       [  86. ,   49. ,   19. ,    1.5],       [  42. ,   92. ,   14. ,    0.6],       [ -18. ,   95. ,   19. ,    1.3],       [ -63. ,   79. ,   13. ,    0.9],       [-101. ,   29. ,   19. ,    0.8],       [ -93. ,  -31. ,   11. ,    0.6],       [ -66. ,  -73. ,   12. ,    0.7],       [ -18. ,  -98. ,   12. ,    0.6],       [  44. ,  -88. ,   13. ,    0.5],       [  84. ,  -53. ,   12. ,    1.3],       [  46. ,    1. ,   15. ,    1.3],       [  42. ,   29. ,   22. ,    0.6],       [  18. ,   44. ,   19. ,    1. ],       [  -7. ,   54. ,   24. ,    0.9],       [ -37. ,   37. ,   16. ,    0.6],       [ -48. ,   15. ,   15. ,    0.7],       [ -44. ,  -18. ,   20. ,    1.1],       [ -34. ,  -39. ,   20. ,    1.4],       [  -8. ,  -45. ,   17. ,    0.9],       [  17. ,  -45. ,   24. ,    1.4],       [  38. ,  -32. ,   19. ,    0.7],       [  55. ,    0. ,   21. ,    1.3],       [  51. ,   33. ,   18. ,    0.5],       [  18. ,   52. ,   17. ,    0.7],       [  -8. ,   59. ,   16. ,    0.6],       [ -40. ,   46. ,   24. ,    1.2],       [ -51. ,   14. ,   23. ,    0.5],       [ -59. ,  -13. ,   21. ,    0.5],       [ -38. ,  -40. ,   21. ,    0.9],       [  -8. ,  -58. ,   16. ,    1.4],       [  21. ,  -52. ,   22. ,    0.6],       [  47. ,  -36. ,   24. ,    1.4],       [  63. ,   -3. ,   17. ,    0.5],       [  55. ,   32. ,   18. ,    1. ],       [  25. ,   57. ,   18. ,    1.2],       [  -6. ,   63. ,   19. ,    1.4],       [ -41. ,   44. ,   15. ,    0.6],       [ -58. ,   20. ,   17. ,    0.9],       [ -66. ,  -15. ,   17. ,    1.2],       [ -45. ,  -51. ,   24. ,    1.3],       [ -10. ,  -61. ,   15. ,    1.3],       [  30. ,  -57. ,   20. ,    0.8],       [  55. ,  -32. ,   23. ,    1.3],       [  71. ,   -2. ,   21. ,    1.3],       [  62. ,   43. ,   20. ,    0.6],       [  28. ,   62. ,   24. ,    1.2],       [ -15. ,   71. ,   24. ,    1.3],       [ -51. ,   55. ,   21. ,    0.6],       [ -64. ,   22. ,   22. ,    0.7],       [ -69. ,  -22. ,   20. ,    0.9],       [ -48. ,  -56. ,   17. ,    1.1],       [  -6. ,  -67. ,   19. ,    1.4],       [  30. ,  -70. ,   21. ,    0.9],       [  55. ,  -42. ,   16. ,    0.7],       [  83. ,   -4. ,   15. ,    1. ],       [  61. ,   43. ,   18. ,    0.7],       [  29. ,   68. ,   16. ,    0.8],       [  -8. ,   80. ,   22. ,    0.6],       [ -48. ,   61. ,   24. ,    0.6],       [ -73. ,   26. ,   17. ,    1.4],       [ -78. ,  -26. ,   20. ,    1.5],       [ -55. ,  -58. ,   19. ,    0.9],       [ -11. ,  -78. ,   19. ,    0.7],       [  31. ,  -67. ,   18. ,    1.4],       [  63. ,  -47. ,   18. ,    1.3],       [  84. ,   -2. ,   16. ,    1. ],       [  72. ,   42. ,   21. ,    0.7],       [  38. ,   81. ,   24. ,    0.9],       [  -9. ,   87. ,   22. ,    0.6],       [ -53. ,   68. ,   15. ,    0.6],       [ -85. ,   21. ,   21. ,    1.2],       [ -86. ,  -23. ,   17. ,    0.8],       [ -56. ,  -61. ,   17. ,    1. ],       [ -13. ,  -87. ,   16. ,    0.7],       [  30. ,  -78. ,   20. ,    1.2],       [  72. ,  -51. ,   23. ,    1. ],       [  89. ,   -5. ,   24. ,    1. ],       [  76. ,   45. ,   18. ,    0.8],       [  33. ,   83. ,   23. ,    1.1],       [ -16. ,   93. ,   20. ,    1.4],       [ -59. ,   69. ,   15. ,    0.7],       [ -89. ,   25. ,   16. ,    0.6],       [ -86. ,  -29. ,   20. ,    1.4],       [ -61. ,  -68. ,   16. ,    1. ],       [ -19. ,  -92. ,   16. ,    0.9],       [  34. ,  -88. ,   19. ,    0.8],       [  79. ,  -52. ,   17. ,    1.4],       [  99. ,    1. ,   18. ,    0.7],       [  80. ,   53. ,   20. ,    1.4],       [  40. ,   86. ,   16. ,    1.3],       [ -19. ,   96. ,   15. ,    1.1],       [ -65. ,   72. ,   22. ,    1.1],       [ -97. ,   23. ,   23. ,    1.3],       [ -92. ,  -29. ,   22. ,    1.5],       [ -69. ,  -71. ,   22. ,    1. ],       [ -19. ,  -97. ,   24. ,    0.8],       [  39. ,  -92. ,   17. ,    1.2],       [  84. ,  -56. ,   24. ,    1.5],       [  53. ,   -1. ,   19. ,    0.7],       [  39. ,   30. ,   28. ,    0.9],       [  17. ,   41. ,   19. ,    1.1],       [ -10. ,   45. ,   20. ,    1.2],       [ -33. ,   38. ,   20. ,    1.4],       [ -47. ,    9. ,   23. ,    1.1],       [ -52. ,  -12. ,   20. ,    1.4],       [ -34. ,  -34. ,   23. ,    0.5],       [  -5. ,  -50. ,   19. ,    1.4],       [  17. ,  -51. ,   27. ,    0.5],       [  43. ,  -30. ,   19. ,    1.1],       [  61. ,   -5. ,   28. ,    0.6],       [  47. ,   26. ,   21. ,    1.2],       [  28. ,   49. ,   26. ,    0.7],       [ -12. ,   55. ,   24. ,    0.6],       [ -34. ,   43. ,   28. ,    1.4],       [ -52. ,   16. ,   28. ,    1.1],       [ -58. ,  -14. ,   28. ,    0.7],       [ -36. ,  -48. ,   19. ,    0.5],       [  -9. ,  -62. ,   27. ,    1.4],       [  25. ,  -54. ,   19. ,    0.9],       [  49. ,  -31. ,   28. ,    1.5],       [  64. ,    0. ,   20. ,    1.4],       [  50. ,   30. ,   22. ,    0.5],       [  26. ,   60. ,   23. ,    1.2],       [ -10. ,   61. ,   27. ,    0.6],       [ -39. ,   48. ,   22. ,    1.4],       [ -60. ,   18. ,   24. ,    1.1],       [ -59. ,  -22. ,   28. ,    1.5],       [ -43. ,  -53. ,   27. ,    1.4],       [  -8. ,  -59. ,   20. ,    1. ],       [  28. ,  -57. ,   23. ,    0.6],       [  58. ,  -31. ,   19. ,    1.3],       [  68. ,    4. ,   21. ,    0.8],       [  58. ,   37. ,   20. ,    1.2],       [  28. ,   62. ,   25. ,    1. ],       [  -8. ,   68. ,   25. ,    1.3],       [ -50. ,   50. ,   24. ,    0.7],       [ -73. ,   17. ,   25. ,    1.1],       [ -69. ,  -22. ,   25. ,    1.1],       [ -44. ,  -58. ,   19. ,    1.1],       [  -8. ,  -74. ,   27. ,    0.6],       [  25. ,  -63. ,   22. ,    1.4],       [  64. ,  -34. ,   27. ,    1.4],       [  77. ,    2. ,   28. ,    0.7],       [  66. ,   45. ,   21. ,    0.6],       [  30. ,   68. ,   26. ,    1.1],       [  -7. ,   76. ,   27. ,    1.1],       [ -54. ,   59. ,   20. ,    0.7],       [ -73. ,   22. ,   20. ,    0.6],       [ -74. ,  -20. ,   24. ,    1. ],       [ -48. ,  -55. ,   21. ,    0.8],       [  -7. ,  -77. ,   27. ,    1.1],       [  37. ,  -73. ,   28. ,    0.8],       [  66. ,  -39. ,   20. ,    0.6],       [  80. ,    1. ,   19. ,    0.8],       [  75. ,   43. ,   26. ,    0.5],       [  31. ,   73. ,   20. ,    0.8],       [  -9. ,   85. ,   27. ,    0.6],       [ -57. ,   66. ,   23. ,    1.3],       [ -81. ,   23. ,   26. ,    0.5],       [ -85. ,  -26. ,   27. ,    1. ],       [ -53. ,  -62. ,   28. ,    1.4],       [ -15. ,  -83. ,   28. ,    1.3],       [  34. ,  -81. ,   27. ,    0.7],       [  72. ,  -49. ,   26. ,    1.4],       [  90. ,    4. ,   19. ,    0.6],       [  79. ,   54. ,   19. ,    0.8],       [  35. ,   82. ,   20. ,    1.1],       [ -16. ,   90. ,   27. ,    1.1],       [ -61. ,   69. ,   24. ,    1.1],       [ -87. ,   21. ,   20. ,    1. ],       [ -89. ,  -30. ,   22. ,    0.6],       [ -65. ,  -67. ,   27. ,    0.9],       [ -17. ,  -96. ,   23. ,    0.6],       [  34. ,  -83. ,   19. ,    0.9],       [  76. ,  -53. ,   21. ,    0.7],       [  99. ,   -4. ,   19. ,    1.5],       [  85. ,   56. ,   28. ,    1.2],       [  40. ,   94. ,   27. ,    1. ],       [ -15. ,  100. ,   19. ,    1. ],       [ -66. ,   78. ,   25. ,    1.2],       [ -94. ,   32. ,   26. ,    0.6],       [ -98. ,  -26. ,   23. ,    1.1],       [ -64. ,  -79. ,   19. ,    1. ],       [ -14. , -102. ,   22. ,    0.6],       [  36. ,  -96. ,   27. ,    0.8],       [  83. ,  -54. ,   27. ,    1.1],       [  49. ,    0. ,   29. ,    1.5],       [  42. ,   27. ,   32. ,    1.2],       [  21. ,   47. ,   30. ,    1.2],       [  -8. ,   44. ,   29. ,    1.2],       [ -29. ,   34. ,   30. ,    0.6],       [ -46. ,   10. ,   25. ,    1. ],       [ -45. ,  -14. ,   28. ,    1.2],       [ -37. ,  -37. ,   24. ,    1.5],       [ -10. ,  -51. ,   28. ,    1.4],       [  25. ,  -46. ,   27. ,    1.3],       [  45. ,  -23. ,   27. ,    1.1],       [  58. ,   -3. ,   28. ,    0.9],       [  49. ,   34. ,   27. ,    0.7],       [  22. ,   48. ,   29. ,    0.9],       [ -11. ,   60. ,   24. ,    1. ],       [ -36. ,   43. ,   27. ,    0.8],       [ -51. ,   13. ,   30. ,    1.4],       [ -60. ,  -18. ,   26. ,    1.2],       [ -43. ,  -41. ,   27. ,    0.7],       [ -13. ,  -56. ,   23. ,    1.3],       [  18. ,  -48. ,   24. ,    1.5],       [  43. ,  -28. ,   24. ,    1.4],       [  65. ,   -3. ,   24. ,    0.6],       [  57. ,   39. ,   25. ,    0.6],       [  22. ,   53. ,   27. ,    0.5],       [  -5. ,   63. ,   30. ,    1. ],       [ -41. ,   49. ,   24. ,    0.6],       [ -67. ,   20. ,   24. ,    0.6],       [ -64. ,  -21. ,   26. ,    0.9],       [ -44. ,  -45. ,   23. ,    1.5],       [ -13. ,  -68. ,   30. ,    0.9],       [  24. ,  -62. ,   27. ,    0.8],       [  50. ,  -30. ,   30. ,    1.2],       [  70. ,    2. ,   26. ,    1.3],       [  57. ,   39. ,   27. ,    1.3],       [  28. ,   65. ,   28. ,    1.4],       [ -13. ,   72. ,   29. ,    0.7],       [ -50. ,   56. ,   25. ,    0.5],       [ -65. ,   23. ,   29. ,    1. ],       [ -70. ,  -24. ,   30. ,    0.7],       [ -45. ,  -56. ,   29. ,    1. ],       [  -7. ,  -68. ,   29. ,    1.4],       [  33. ,  -66. ,   28. ,    1.1],       [  56. ,  -41. ,   27. ,    1.2],       [  78. ,   -4. ,   30. ,    0.8],       [  64. ,   42. ,   25. ,    0.9],       [  33. ,   69. ,   31. ,    1.1],       [ -10. ,   81. ,   23. ,    1.2],       [ -53. ,   58. ,   24. ,    1.4],       [ -80. ,   18. ,   26. ,    0.8],       [ -72. ,  -26. ,   27. ,    0.8],       [ -56. ,  -64. ,   30. ,    1.4],       [ -10. ,  -77. ,   31. ,    0.5],       [  32. ,  -67. ,   28. ,    1. ],       [  64. ,  -46. ,   29. ,    0.8],       [  83. ,    2. ,   31. ,    1.1],       [  70. ,   42. ,   29. ,    0.8],       [  38. ,   79. ,   26. ,    1. ],       [ -17. ,   82. ,   30. ,    1.2],       [ -57. ,   65. ,   23. ,    1.3],       [ -81. ,   27. ,   30. ,    1.4],       [ -86. ,  -27. ,   26. ,    0.8],       [ -61. ,  -65. ,   31. ,    0.7],       [ -16. ,  -85. ,   28. ,    1.4],       [  32. ,  -75. ,   31. ,    0.5],       [  75. ,  -47. ,   30. ,    0.8],       [  96. ,    2. ,   29. ,    1.1],       [  75. ,   53. ,   26. ,    1.3],       [  34. ,   81. ,   31. ,    1.1],       [ -15. ,   94. ,   23. ,    1.3],       [ -58. ,   71. ,   26. ,    0.9],       [ -93. ,   23. ,   28. ,    0.7],       [ -85. ,  -31. ,   25. ,    1.4],       [ -63. ,  -72. ,   28. ,    1.1],       [ -14. ,  -94. ,   32. ,    1.2],       [  38. ,  -88. ,   30. ,    1.3],       [  74. ,  -55. ,   30. ,    0.8],       [  99. ,    0. ,   30. ,    1.5],       [  83. ,   59. ,   28. ,    1.1],       [  43. ,   89. ,   26. ,    1.4],       [ -13. ,  101. ,   27. ,    1.1],       [ -64. ,   79. ,   27. ,    0.9],       [ -98. ,   29. ,   32. ,    0.6],       [-100. ,  -33. ,   27. ,    1.2],       [ -66. ,  -76. ,   29. ,    0.9],       [ -10. ,  -96. ,   29. ,    0.6],       [  43. ,  -92. ,   29. ,    0.8],       [  83. ,  -56. ,   32. ,    1. ],       [  52. ,    0. ,   30. ,    0.7],       [  41. ,   22. ,   32. ,    1.2],       [  24. ,   48. ,   36. ,    0.9],       [  -7. ,   49. ,   33. ,    0.7],       [ -31. ,   41. ,   28. ,    0.5],       [ -50. ,   15. ,   27. ,    0.9],       [ -45. ,  -17. ,   28. ,    1.1],       [ -30. ,  -42. ,   30. ,    1.3],       [  -9. ,  -50. ,   31. ,    0.5],       [  24. ,  -48. ,   33. ,    0.7],       [  42. ,  -31. ,   27. ,    0.7],       [  60. ,   -5. ,   32. ,    0.5],       [  49. ,   32. ,   36. ,    0.8],       [  26. ,   56. ,   31. ,    1.4],       [  -5. ,   59. ,   34. ,    0.9],       [ -37. ,   43. ,   33. ,    1.3],       [ -58. ,   14. ,   34. ,    0.7],       [ -58. ,  -14. ,   30. ,    1. ],       [ -34. ,  -40. ,   27. ,    1.3],       [ -11. ,  -55. ,   34. ,    1.3],       [  22. ,  -54. ,   35. ,    1.5],       [  51. ,  -35. ,   31. ,    1.4],       [  60. ,    4. ,   28. ,    0.7],       [  53. ,   38. ,   34. ,    1.4],       [  25. ,   62. ,   28. ,    0.8],       [ -10. ,   62. ,   35. ,    1.5],       [ -46. ,   50. ,   34. ,    1. ],       [ -60. ,   23. ,   32. ,    1.2],       [ -67. ,  -19. ,   33. ,    1.4],       [ -46. ,  -52. ,   31. ,    1.2],       [ -13. ,  -59. ,   29. ,    1.4],       [  26. ,  -59. ,   35. ,    1.1],       [  51. ,  -39. ,   32. ,    1.3],       [  74. ,   -5. ,   30. ,    1.4],       [  56. ,   35. ,   31. ,    0.5],       [  25. ,   64. ,   33. ,    1.3],       [ -13. ,   74. ,   32. ,    1.3],       [ -43. ,   52. ,   33. ,    0.9],       [ -69. ,   18. ,   30. ,    1.4],       [ -65. ,  -18. ,   28. ,    1.3],       [ -43. ,  -51. ,   33. ,    0.8],       [ -11. ,  -74. ,   34. ,    1.2],       [  25. ,  -65. ,   36. ,    0.6],       [  58. ,  -37. ,   32. ,    0.6],       [  79. ,   -4. ,   29. ,    0.8],       [  70. ,   46. ,   30. ,    1.4],       [  33. ,   73. ,   36. ,    1.1],       [  -7. ,   75. ,   36. ,    1.1],       [ -50. ,   54. ,   28. ,    0.9],       [ -75. ,   23. ,   35. ,    0.9],       [ -78. ,  -23. ,   27. ,    1.3],       [ -47. ,  -64. ,   34. ,    0.8],       [  -7. ,  -76. ,   28. ,    1.1],       [  36. ,  -68. ,   27. ,    0.8],       [  61. ,  -39. ,   29. ,    1.4],       [  86. ,   -5. ,   35. ,    1.4],       [  76. ,   42. ,   32. ,    1.4],       [  33. ,   79. ,   28. ,    1.1],       [ -18. ,   81. ,   29. ,    1.3],       [ -58. ,   59. ,   30. ,    0.7],       [ -83. ,   23. ,   34. ,    0.8],       [ -84. ,  -22. ,   29. ,    1.2],       [ -61. ,  -70. ,   35. ,    1. ],       [ -14. ,  -89. ,   33. ,    1.3],       [  40. ,  -77. ,   36. ,    0.8],       [  71. ,  -44. ,   28. ,    1. ],       [  90. ,   -3. ,   32. ,    0.7],       [  74. ,   50. ,   36. ,    0.6],       [  36. ,   89. ,   30. ,    1.3],       [ -17. ,   89. ,   31. ,    0.8],       [ -63. ,   74. ,   27. ,    1. ],       [ -94. ,   26. ,   32. ,    0.8],       [ -91. ,  -27. ,   29. ,    0.9],       [ -57. ,  -75. ,   32. ,    1.2],       [ -16. ,  -97. ,   28. ,    1. ],       [  37. ,  -86. ,   33. ,    1. ],       [  81. ,  -53. ,   30. ,    1.2],       [ 104. ,    1. ,   34. ,    1.3],       [  85. ,   54. ,   33. ,    0.6],       [  43. ,   89. ,   27. ,    1.5],       [ -19. ,  101. ,   32. ,    1. ],       [ -66. ,   75. ,   29. ,    1.1],       [ -97. ,   29. ,   28. ,    1.5],       [ -94. ,  -32. ,   27. ,    1.5],       [ -65. ,  -80. ,   30. ,    1. ],       [ -13. , -103. ,   36. ,    0.5],       [  41. ,  -95. ,   30. ,    1.5],       [  79. ,  -59. ,   31. ,    0.8],       [  52. ,    3. ,   37. ,    0.6],       [  37. ,   25. ,   39. ,    0.5],       [  19. ,   43. ,   39. ,    1.1],       [ -12. ,   47. ,   35. ,    1.2],       [ -29. ,   36. ,   37. ,    0.9],       [ -51. ,   10. ,   34. ,    1.5],       [ -45. ,  -19. ,   33. ,    0.9],       [ -36. ,  -38. ,   35. ,    1.2],       [  -9. ,  -54. ,   35. ,    1. ],       [  17. ,  -48. ,   39. ,    0.6],       [  37. ,  -25. ,   33. ,    1.2],       [  57. ,    2. ,   32. ,    0.7],       [  51. ,   31. ,   36. ,    0.9],       [  21. ,   49. ,   36. ,    1.1],       [  -4. ,   57. ,   38. ,    0.7],       [ -34. ,   43. ,   32. ,    1.1],       [ -59. ,   15. ,   33. ,    1. ],       [ -60. ,  -18. ,   38. ,    0.9],       [ -42. ,  -42. ,   31. ,    1.2],       [ -13. ,  -52. ,   38. ,    1.3],       [  23. ,  -52. ,   31. ,    0.8],       [  48. ,  -36. ,   40. ,    0.9],       [  64. ,   -4. ,   32. ,    1.1],       [  57. ,   39. ,   36. ,    1.4],       [  28. ,   55. ,   32. ,    0.9],       [  -7. ,   61. ,   40. ,    1. ],       [ -41. ,   45. ,   33. ,    0.5],       [ -66. ,   19. ,   31. ,    0.7],       [ -64. ,  -14. ,   39. ,    1.3],       [ -44. ,  -52. ,   39. ,    0.7],       [  -6. ,  -69. ,   32. ,    0.8],       [  27. ,  -60. ,   35. ,    0.6],       [  53. ,  -36. ,   39. ,    1.5],       [  75. ,    3. ,   39. ,    1.2],       [  63. ,   40. ,   40. ,    1.2],       [  28. ,   64. ,   34. ,    1.1],       [  -6. ,   67. ,   37. ,    1.4],       [ -46. ,   49. ,   33. ,    0.9],       [ -67. ,   15. ,   37. ,    1. ],       [ -71. ,  -18. ,   37. ,    0.6],       [ -49. ,  -58. ,   40. ,    0.9],       [  -6. ,  -75. ,   33. ,    0.5],       [  29. ,  -64. ,   37. ,    1. ],       [  64. ,  -44. ,   39. ,    0.9],       [  82. ,    0. ,   34. ,    1.2],       [  69. ,   38. ,   37. ,    1.2],       [  35. ,   70. ,   36. ,    1. ],       [ -12. ,   73. ,   33. ,    1.4],       [ -51. ,   62. ,   37. ,    1.4],       [ -80. ,   25. ,   34. ,    0.6],       [ -72. ,  -25. ,   33. ,    0.5],       [ -54. ,  -63. ,   34. ,    1.2],       [ -15. ,  -80. ,   32. ,    1.1],       [  31. ,  -75. ,   32. ,    0.8],       [  68. ,  -43. ,   40. ,    1.3],       [  83. ,    3. ,   40. ,    0.7],       [  68. ,   45. ,   33. ,    0.6],       [  30. ,   76. ,   37. ,    1.5],       [ -14. ,   81. ,   40. ,    0.5],       [ -57. ,   63. ,   33. ,    0.6],       [ -87. ,   22. ,   34. ,    1.1],       [ -86. ,  -24. ,   38. ,    1. ],       [ -57. ,  -68. ,   33. ,    0.8],       [ -14. ,  -90. ,   31. ,    0.8],       [  33. ,  -80. ,   38. ,    1.3],       [  69. ,  -49. ,   33. ,    0.7],       [  90. ,   -2. ,   36. ,    0.5],       [  79. ,   46. ,   36. ,    0.8],       [  33. ,   84. ,   34. ,    1.5],       [ -12. ,   90. ,   37. ,    1.4],       [ -64. ,   67. ,   36. ,    0.9],       [ -90. ,   25. ,   33. ,    0.7],       [ -85. ,  -22. ,   34. ,    0.6],       [ -59. ,  -72. ,   38. ,    1. ],       [ -11. ,  -96. ,   33. ,    1.4],       [  34. ,  -84. ,   38. ,    1.3],       [  80. ,  -52. ,   37. ,    0.6],       [  95. ,    0. ,   38. ,    0.6],       [  82. ,   57. ,   33. ,    1.2],       [  40. ,   90. ,   38. ,    1. ],       [ -19. ,  101. ,   35. ,    0.7],       [ -68. ,   75. ,   36. ,    1. ],       [-101. ,   30. ,   37. ,    0.7],       [ -93. ,  -25. ,   36. ,    1. ],       [ -64. ,  -72. ,   31. ,    1. ],       [ -17. ,  -99. ,   32. ,    0.8],       [  41. ,  -94. ,   36. ,    1.4],       [  87. ,  -59. ,   39. ,    1.2],       [  45. ,   -3. ,   44. ,    0.9],       [  40. ,   31. ,   41. ,    0.7],       [  18. ,   47. ,   44. ,    0.7],       [ -12. ,   48. ,   38. ,    0.6],       [ -38. ,   34. ,   37. ,    1. ],       [ -50. ,   16. ,   37. ,    1.3],       [ -48. ,  -15. ,   41. ,    0.7],       [ -38. ,  -39. ,   40. ,    1.1],       [  -9. ,  -47. ,   38. ,    1.3],       [  19. ,  -49. ,   41. ,    1.3],       [  45. ,  -24. ,   37. ,    1.2],       [  59. ,   -4. ,   36. ,    0.5],       [  47. ,   32. ,   40. ,    1.1],       [  27. ,   51. ,   41. ,    0.8],       [  -7. ,   58. ,   39. ,    0.6],       [ -40. ,   46. ,   36. ,    1.4],       [ -53. ,   18. ,   40. ,    1. ],       [ -55. ,  -20. ,   39. ,    1. ],       [ -38. ,  -46. ,   42. ,    1.2],       [ -10. ,  -60. ,   37. ,    1.4],       [  19. ,  -54. ,   43. ,    1.3],       [  47. ,  -32. ,   41. ,    1.4],       [  65. ,   -5. ,   44. ,    0.7],       [  57. ,   29. ,   40. ,    1.1],       [  29. ,   56. ,   42. ,    1.4],       [ -10. ,   65. ,   38. ,    1.3],       [ -46. ,   52. ,   36. ,    1.2],       [ -64. ,   15. ,   35. ,    0.9],       [ -63. ,  -17. ,   44. ,    0.9],       [ -44. ,  -52. ,   37. ,    1.3],       [ -11. ,  -64. ,   39. ,    1.2],       [  26. ,  -60. ,   38. ,    0.8],       [  49. ,  -30. ,   39. ,    1. ],       [  75. ,   -2. ,   42. ,    1. ],       [  60. ,   36. ,   41. ,    1.3],       [  31. ,   64. ,   43. ,    0.6],       [ -11. ,   71. ,   36. ,    0.8],       [ -51. ,   52. ,   40. ,    1.3],       [ -71. ,   21. ,   36. ,    0.8],       [ -70. ,  -19. ,   36. ,    0.8],       [ -50. ,  -55. ,   43. ,    0.9],       [  -8. ,  -67. ,   43. ,    0.6],       [  26. ,  -70. ,   41. ,    0.6],       [  61. ,  -35. ,   42. ,    0.5],       [  77. ,   -3. ,   42. ,    1.3],       [  63. ,   39. ,   44. ,    1.4],       [  36. ,   74. ,   41. ,    0.7],       [  -9. ,   81. ,   39. ,    0.7],       [ -51. ,   58. ,   36. ,    1.2],       [ -77. ,   24. ,   44. ,    0.9],       [ -75. ,  -21. ,   42. ,    1.4],       [ -52. ,  -58. ,   41. ,    1.1],       [ -14. ,  -79. ,   42. ,    0.8],       [  35. ,  -70. ,   43. ,    1.3],       [  63. ,  -43. ,   43. ,    1. ],       [  89. ,   -2. ,   42. ,    0.7],       [  76. ,   45. ,   39. ,    0.6],       [  39. ,   73. ,   44. ,    1.3],       [ -14. ,   88. ,   36. ,    1.1],       [ -59. ,   60. ,   40. ,    1.1],       [ -80. ,   22. ,   38. ,    1.3],       [ -87. ,  -22. ,   44. ,    0.6],       [ -52. ,  -63. ,   43. ,    1. ],       [ -11. ,  -81. ,   38. ,    1. ],       [  37. ,  -75. ,   38. ,    1. ],       [  73. ,  -44. ,   36. ,    1.1],       [  92. ,   -3. ,   41. ,    1.1],       [  80. ,   49. ,   42. ,    1.1],       [  36. ,   84. ,   38. ,    0.9],       [ -11. ,   90. ,   43. ,    1.2],       [ -61. ,   74. ,   43. ,    1.2],       [ -86. ,   27. ,   35. ,    1.4],       [ -86. ,  -31. ,   44. ,    1.3],       [ -58. ,  -71. ,   35. ,    1.4],       [ -14. ,  -96. ,   40. ,    0.9],       [  36. ,  -81. ,   44. ,    0.7],       [  73. ,  -55. ,   43. ,    1.3],       [ 104. ,    1. ,   40. ,    1.3],       [  85. ,   50. ,   35. ,    1.1],       [  38. ,   92. ,   37. ,    1.3],       [ -13. ,   96. ,   44. ,    1.3],       [ -66. ,   70. ,   43. ,    0.8],       [-101. ,   24. ,   37. ,    0.8],       [ -99. ,  -25. ,   41. ,    0.8],       [ -70. ,  -76. ,   35. ,    1.5],       [ -17. , -100. ,   37. ,    0.6],       [  45. ,  -91. ,   42. ,    0.7],       [  79. ,  -54. ,   40. ,    0.8]])
        basis0 = BSplineBasis(7, np.array([-1.6, -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.3,  2.8,  4.4,
        5.4,  6. ,  7. ,  7. ,  7. ,  7. ,  7. ,  7.9,  9.3]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3. ,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.3,  2.9,  3.7,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 8.4,  4.7,  6.6])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 8.400000
        pt2[...,1] -= 4.700000
        pt2[...,2] -= 6.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p565_rational_C1_periodic(self):
        controlpoints = np.array([[  49. ,   -2. ,   -5. ,    0.6],       [  43. ,   24. ,    4. ,    1. ],       [  12. ,   42. ,   -3. ,    1.1],       [ -18. ,   47. ,    4. ,    0.9],       [ -40. ,   29. ,    4. ,    0.9],       [ -51. ,    3. ,   -4. ,    0.9],       [ -38. ,  -32. ,    4. ,    1.4],       [ -19. ,  -48. ,   -2. ,    1.3],       [  19. ,  -44. ,    3. ,    0.6],       [  39. ,  -31. ,    3. ,    0.5],       [  60. ,   -4. ,   -4. ,    1.2],       [  49. ,   29. ,    0. ,    1.1],       [  16. ,   51. ,    2. ,    1.1],       [ -18. ,   56. ,    4. ,    1.5],       [ -43. ,   38. ,    0. ,    1.3],       [ -58. ,   -2. ,    4. ,    0.7],       [ -48. ,  -37. ,   -3. ,    1.2],       [ -20. ,  -53. ,    1. ,    0.6],       [  15. ,  -49. ,   -5. ,    0.7],       [  47. ,  -34. ,   -4. ,    1.3],       [  66. ,   -3. ,   -3. ,    0.7],       [  50. ,   32. ,   -4. ,    0.9],       [  21. ,   55. ,    4. ,    0.9],       [ -23. ,   54. ,   -2. ,    0.7],       [ -48. ,   39. ,    1. ,    0.7],       [ -59. ,   -4. ,    0. ,    0.6],       [ -47. ,  -34. ,    0. ,    1.2],       [ -17. ,  -57. ,   -5. ,    0.7],       [  14. ,  -59. ,    0. ,    1.1],       [  48. ,  -32. ,   -2. ,    1.1],       [  73. ,    4. ,   -2. ,    0.6],       [  51. ,   44. ,   -3. ,    0.6],       [  22. ,   62. ,    2. ,    0.8],       [ -19. ,   66. ,    3. ,    1.2],       [ -56. ,   36. ,   -1. ,    1.3],       [ -67. ,    2. ,   -4. ,    0.9],       [ -52. ,  -37. ,   -5. ,    1.3],       [ -21. ,  -63. ,   -4. ,    1.2],       [  22. ,  -62. ,    3. ,    0.6],       [  52. ,  -40. ,   -1. ,    1.4],       [  77. ,   -1. ,    4. ,    1.3],       [  56. ,   48. ,    4. ,    0.6],       [  18. ,   70. ,    3. ,    1. ],       [ -28. ,   76. ,   -4. ,    0.8],       [ -59. ,   48. ,   -2. ,    0.7],       [ -72. ,   -2. ,    1. ,    0.5],       [ -62. ,  -48. ,    2. ,    0.7],       [ -20. ,  -72. ,   -5. ,    1.1],       [  19. ,  -72. ,   -2. ,    1.3],       [  58. ,  -45. ,   -3. ,    0.8],       [  79. ,   -4. ,   -4. ,    0.6],       [  63. ,   51. ,    2. ,    1. ],       [  27. ,   75. ,    0. ,    0.8],       [ -26. ,   78. ,   -5. ,    1.2],       [ -67. ,   51. ,    3. ,    0.8],       [ -77. ,    1. ,    3. ,    1.3],       [ -68. ,  -44. ,   -5. ,    1.5],       [ -27. ,  -78. ,    1. ,    0.6],       [  26. ,  -79. ,    1. ,    1.3],       [  64. ,  -48. ,   -5. ,    0.7],       [  87. ,    4. ,   -4. ,    0.7],       [  70. ,   47. ,   -4. ,    1.1],       [  28. ,   85. ,   -1. ,    0.9],       [ -30. ,   83. ,   -2. ,    1. ],       [ -68. ,   48. ,    2. ,    0.9],       [ -84. ,    0. ,    3. ,    0.7],       [ -74. ,  -50. ,    1. ,    1.3],       [ -29. ,  -87. ,    0. ,    0.7],       [  31. ,  -86. ,    4. ,    0.6],       [  71. ,  -55. ,    1. ,    1.1],       [  97. ,   -3. ,   -3. ,    0.7],       [  77. ,   57. ,    1. ,    1.5],       [  25. ,   91. ,   -4. ,    0.7],       [ -32. ,   87. ,    0. ,    1. ],       [ -73. ,   52. ,   -5. ,    0.8],       [ -95. ,    0. ,   -5. ,    0.5],       [ -81. ,  -55. ,    0. ,    0.8],       [ -32. ,  -85. ,    3. ,    0.6],       [  28. ,  -88. ,    0. ,    0.7],       [  75. ,  -58. ,   -2. ,    0.7],       [ 103. ,   -5. ,   -4. ,    1.4],       [  80. ,   53. ,   -4. ,    1. ],       [  34. ,   91. ,    4. ,    0.8],       [ -31. ,   99. ,    4. ,    0.7],       [ -81. ,   60. ,    1. ,    1.4],       [ -99. ,    4. ,   -5. ,    1.4],       [ -85. ,  -63. ,   -1. ,    1.2],       [ -28. ,  -95. ,    0. ,    0.9],       [  33. ,  -94. ,    0. ,    1.4],       [  83. ,  -61. ,    1. ,    0.6],       [  45. ,   -5. ,    0. ,    1.4],       [  36. ,   24. ,    9. ,    0.8],       [  12. ,   44. ,    7. ,    1. ],       [ -16. ,   50. ,    1. ,    1.3],       [ -43. ,   29. ,    0. ,    1.1],       [ -52. ,   -2. ,    5. ,    0.6],       [ -42. ,  -26. ,    7. ,    1.3],       [ -18. ,  -51. ,    2. ,    0.8],       [  18. ,  -52. ,    5. ,    1.2],       [  45. ,  -34. ,    2. ,    1. ],       [  51. ,   -4. ,    0. ,    1. ],       [  45. ,   36. ,    9. ,    0.9],       [  18. ,   56. ,    2. ,    0.7],       [ -13. ,   54. ,    2. ,    0.8],       [ -50. ,   33. ,    4. ,    0.9],       [ -59. ,    3. ,    9. ,    0.8],       [ -46. ,  -32. ,    6. ,    1. ],       [ -19. ,  -54. ,    0. ,    1.2],       [  20. ,  -58. ,    1. ,    1.4],       [  41. ,  -39. ,    5. ,    0.8],       [  61. ,   -1. ,    3. ,    0.9],       [  51. ,   37. ,    1. ,    1.2],       [  18. ,   60. ,    0. ,    1.1],       [ -17. ,   58. ,    4. ,    0.6],       [ -48. ,   39. ,    0. ,    1.2],       [ -61. ,    0. ,    5. ,    1. ],       [ -56. ,  -32. ,    2. ,    0.6],       [ -19. ,  -56. ,    4. ,    0.7],       [  20. ,  -60. ,    7. ,    1. ],       [  55. ,  -41. ,    4. ,    1.2],       [  64. ,   -2. ,    4. ,    0.9],       [  58. ,   40. ,    1. ,    1.2],       [  16. ,   61. ,    3. ,    0.7],       [ -25. ,   61. ,    2. ,    0.6],       [ -60. ,   42. ,    5. ,    0.7],       [ -66. ,   -3. ,    2. ,    1.2],       [ -59. ,  -42. ,    5. ,    0.6],       [ -20. ,  -68. ,    5. ,    1.4],       [  25. ,  -67. ,    0. ,    1.4],       [  57. ,  -36. ,    8. ,    0.7],       [  78. ,   -3. ,    7. ,    1.5],       [  59. ,   41. ,    0. ,    1.2],       [  18. ,   69. ,    8. ,    1.5],       [ -23. ,   73. ,    5. ,    0.9],       [ -58. ,   45. ,    5. ,    1.2],       [ -74. ,   -1. ,    6. ,    1.3],       [ -63. ,  -47. ,    0. ,    0.7],       [ -21. ,  -70. ,    3. ,    1. ],       [  22. ,  -71. ,    5. ,    1.3],       [  63. ,  -50. ,    7. ,    0.7],       [  82. ,    0. ,    3. ,    1.5],       [  65. ,   43. ,    4. ,    0.7],       [  28. ,   76. ,    9. ,    1.3],       [ -23. ,   78. ,    7. ,    1.2],       [ -62. ,   45. ,    9. ,    0.9],       [ -81. ,   -2. ,    0. ,    0.6],       [ -68. ,  -48. ,    9. ,    1.3],       [ -23. ,  -81. ,    7. ,    0.9],       [  22. ,  -77. ,    3. ,    1.2],       [  67. ,  -45. ,    6. ,    1.1],       [  87. ,    4. ,    7. ,    1. ],       [  68. ,   47. ,    1. ,    1. ],       [  25. ,   81. ,    7. ,    1.2],       [ -28. ,   84. ,    8. ,    1.5],       [ -76. ,   51. ,    0. ,    1. ],       [ -89. ,    2. ,    7. ,    1.2],       [ -74. ,  -50. ,    3. ,    1.1],       [ -32. ,  -87. ,    4. ,    0.8],       [  23. ,  -86. ,    3. ,    1. ],       [  65. ,  -49. ,    7. ,    0.9],       [  97. ,    3. ,    7. ,    0.8],       [  71. ,   50. ,    1. ,    1. ],       [  26. ,   88. ,    5. ,    1.1],       [ -34. ,   93. ,    0. ,    1.1],       [ -77. ,   57. ,    7. ,    1. ],       [ -95. ,    3. ,    0. ,    1.2],       [ -75. ,  -55. ,    4. ,    0.5],       [ -32. ,  -94. ,    2. ,    1.1],       [  33. ,  -88. ,    7. ,    1.2],       [  75. ,  -54. ,    6. ,    0.6],       [ 103. ,    3. ,    4. ,    0.8],       [  77. ,   58. ,    0. ,    0.6],       [  28. ,   93. ,    7. ,    1.4],       [ -34. ,   96. ,    9. ,    1.1],       [ -79. ,   56. ,    2. ,    0.6],       [ -98. ,    2. ,    3. ,    0.6],       [ -86. ,  -58. ,    5. ,    0.7],       [ -36. ,  -97. ,    0. ,    1.1],       [  29. ,  -92. ,    7. ,    0.9],       [  85. ,  -61. ,    6. ,    1.3],       [  49. ,    3. ,   11. ,    1.4],       [  45. ,   27. ,   14. ,    0.5],       [  19. ,   52. ,   14. ,    0.8],       [ -15. ,   45. ,    5. ,    1.2],       [ -46. ,   26. ,   11. ,    1.1],       [ -47. ,   -1. ,    7. ,    0.8],       [ -39. ,  -25. ,   14. ,    0.9],       [ -17. ,  -46. ,   10. ,    0.8],       [  18. ,  -46. ,    5. ,    1.2],       [  41. ,  -34. ,    8. ,    0.7],       [  58. ,   -1. ,   10. ,    1.3],       [  46. ,   30. ,    6. ,    0.9],       [  20. ,   52. ,    5. ,    0.7],       [ -22. ,   48. ,    8. ,    1.1],       [ -48. ,   29. ,   12. ,    1.2],       [ -56. ,   -4. ,   13. ,    1.2],       [ -42. ,  -31. ,    9. ,    1.1],       [ -13. ,  -53. ,    8. ,    1. ],       [  12. ,  -51. ,    9. ,    0.8],       [  46. ,  -32. ,    6. ,    1.3],       [  66. ,    0. ,    7. ,    1.4],       [  52. ,   38. ,   11. ,    0.9],       [  16. ,   60. ,    7. ,    0.6],       [ -23. ,   58. ,   12. ,    0.9],       [ -52. ,   33. ,    7. ,    1.1],       [ -62. ,    0. ,   12. ,    0.5],       [ -51. ,  -42. ,    5. ,    1. ],       [ -22. ,  -65. ,   14. ,    0.6],       [  14. ,  -56. ,   13. ,    1. ],       [  45. ,  -37. ,    8. ,    1.4],       [  66. ,    0. ,   11. ,    1.1],       [  53. ,   45. ,   11. ,    0.8],       [  21. ,   65. ,   11. ,    1. ],       [ -26. ,   65. ,    8. ,    0.5],       [ -60. ,   38. ,   11. ,    1.5],       [ -73. ,   -1. ,   12. ,    0.7],       [ -53. ,  -37. ,   11. ,    0.6],       [ -21. ,  -67. ,    9. ,    0.9],       [  25. ,  -64. ,    5. ,    0.8],       [  53. ,  -39. ,   13. ,    1.2],       [  78. ,    3. ,   12. ,    1.3],       [  62. ,   40. ,   11. ,    0.6],       [  25. ,   67. ,   10. ,    0.9],       [ -21. ,   66. ,    8. ,    1.2],       [ -60. ,   47. ,    6. ,    0.6],       [ -73. ,    2. ,   13. ,    0.6],       [ -65. ,  -43. ,    8. ,    0.7],       [ -19. ,  -72. ,   13. ,    0.9],       [  25. ,  -76. ,    7. ,    0.7],       [  65. ,  -41. ,    5. ,    0.9],       [  79. ,   -5. ,    7. ,    0.9],       [  69. ,   47. ,   13. ,    1.2],       [  25. ,   73. ,   12. ,    0.6],       [ -28. ,   75. ,    8. ,    1.3],       [ -66. ,   46. ,   12. ,    1. ],       [ -79. ,   -1. ,    8. ,    0.8],       [ -70. ,  -52. ,    6. ,    1.3],       [ -26. ,  -77. ,    7. ,    0.8],       [  25. ,  -83. ,    6. ,    0.6],       [  64. ,  -47. ,    7. ,    1.3],       [  86. ,   -5. ,   10. ,    1.5],       [  74. ,   47. ,   12. ,    0.8],       [  28. ,   80. ,    8. ,    1.1],       [ -25. ,   84. ,    6. ,    1.2],       [ -69. ,   49. ,   11. ,    0.5],       [ -90. ,   -2. ,    6. ,    0.7],       [ -68. ,  -53. ,    5. ,    0.8],       [ -23. ,  -80. ,   14. ,    0.8],       [  25. ,  -84. ,   14. ,    1.2],       [  73. ,  -57. ,   14. ,    1.4],       [  97. ,    4. ,   12. ,    1. ],       [  80. ,   54. ,   10. ,    1. ],       [  29. ,   84. ,   10. ,    1.4],       [ -28. ,   89. ,   13. ,    1. ],       [ -78. ,   58. ,   14. ,    0.6],       [ -93. ,   -4. ,   12. ,    1.1],       [ -77. ,  -54. ,   12. ,    1.1],       [ -28. ,  -88. ,   10. ,    0.7],       [  24. ,  -93. ,   11. ,    0.9],       [  77. ,  -58. ,   10. ,    1.4],       [  96. ,   -5. ,    8. ,    0.8],       [  81. ,   58. ,    7. ,    0.8],       [  35. ,   97. ,    7. ,    1.1],       [ -36. ,   99. ,    5. ,    0.6],       [ -82. ,   54. ,    5. ,    0.7],       [-102. ,    1. ,   13. ,    1.2],       [ -81. ,  -63. ,   11. ,    1.1],       [ -29. ,  -95. ,    7. ,    1.1],       [  30. ,  -95. ,    9. ,    1. ],       [  77. ,  -60. ,   10. ,    1.2],       [  54. ,    4. ,   13. ,    0.8],       [  44. ,   31. ,   15. ,    0.5],       [  20. ,   45. ,   19. ,    1.4],       [ -18. ,   43. ,   12. ,    0.8],       [ -38. ,   33. ,   11. ,    1.4],       [ -50. ,   -2. ,   17. ,    0.7],       [ -44. ,  -32. ,   16. ,    0.5],       [ -15. ,  -52. ,   15. ,    1. ],       [  11. ,  -49. ,   14. ,    0.8],       [  38. ,  -29. ,   11. ,    1. ],       [  56. ,    3. ,   19. ,    1. ],       [  40. ,   29. ,   14. ,    0.7],       [  15. ,   51. ,   17. ,    1.3],       [ -23. ,   57. ,   14. ,    1.4],       [ -44. ,   30. ,   10. ,    0.7],       [ -55. ,   -1. ,   11. ,    1.1],       [ -43. ,  -29. ,   13. ,    1.1],       [ -13. ,  -49. ,   16. ,    1.1],       [  18. ,  -55. ,   17. ,    1.1],       [  49. ,  -34. ,   13. ,    1.3],       [  61. ,    0. ,   17. ,    1.1],       [  46. ,   38. ,   19. ,    1. ],       [  16. ,   54. ,   18. ,    0.8],       [ -22. ,   62. ,   10. ,    0.6],       [ -47. ,   32. ,   15. ,    0.5],       [ -67. ,    3. ,   16. ,    1. ],       [ -55. ,  -33. ,   16. ,    1.3],       [ -24. ,  -62. ,   18. ,    1.4],       [  22. ,  -61. ,   12. ,    0.8],       [  46. ,  -33. ,   10. ,    1.4],       [  66. ,    0. ,   12. ,    1.4],       [  58. ,   37. ,   14. ,    1.2],       [  19. ,   69. ,   19. ,    0.9],       [ -27. ,   69. ,   10. ,    1.4],       [ -55. ,   35. ,   19. ,    1.2],       [ -74. ,    2. ,   13. ,    1.4],       [ -60. ,  -43. ,   13. ,    1.3],       [ -25. ,  -69. ,   13. ,    1. ],       [  25. ,  -62. ,   12. ,    1.5],       [  51. ,  -44. ,   16. ,    1.2],       [  70. ,    0. ,   14. ,    0.7],       [  58. ,   41. ,   11. ,    0.9],       [  26. ,   72. ,   16. ,    1.4],       [ -26. ,   69. ,   13. ,    1. ],       [ -65. ,   41. ,   12. ,    1.1],       [ -78. ,   -5. ,   19. ,    1.4],       [ -59. ,  -45. ,   18. ,    0.9],       [ -22. ,  -74. ,   19. ,    0.8],       [  23. ,  -70. ,   14. ,    1.2],       [  58. ,  -49. ,   13. ,    1. ],       [  81. ,    3. ,   18. ,    1.3],       [  65. ,   45. ,   10. ,    0.8],       [  26. ,   76. ,   10. ,    1.4],       [ -26. ,   80. ,   16. ,    0.9],       [ -71. ,   50. ,   19. ,    0.5],       [ -83. ,    1. ,   18. ,    0.9],       [ -70. ,  -45. ,   15. ,    1.1],       [ -30. ,  -78. ,   13. ,    0.6],       [  20. ,  -79. ,   19. ,    1. ],       [  68. ,  -45. ,   14. ,    1.1],       [  90. ,   -4. ,   13. ,    0.9],       [  75. ,   49. ,   12. ,    1. ],       [  25. ,   87. ,   11. ,    0.7],       [ -24. ,   80. ,   14. ,    1. ],       [ -75. ,   48. ,   12. ,    1.2],       [ -87. ,    0. ,   17. ,    1.4],       [ -67. ,  -48. ,   12. ,    1.4],       [ -24. ,  -84. ,   12. ,    1.2],       [  29. ,  -80. ,   18. ,    1.3],       [  72. ,  -55. ,   10. ,    1.2],       [  92. ,   -1. ,   19. ,    1.1],       [  72. ,   55. ,   16. ,    1.3],       [  29. ,   90. ,   15. ,    1.3],       [ -33. ,   86. ,   13. ,    1.3],       [ -77. ,   55. ,   17. ,    1.3],       [ -97. ,    2. ,   12. ,    1.5],       [ -76. ,  -60. ,   12. ,    0.7],       [ -33. ,  -85. ,   11. ,    1.1],       [  33. ,  -89. ,   18. ,    0.6],       [  73. ,  -60. ,   18. ,    0.5],       [ 104. ,   -5. ,   10. ,    0.5],       [  76. ,   57. ,   17. ,    1.3],       [  28. ,   99. ,   10. ,    0.6],       [ -30. ,   90. ,   19. ,    0.7],       [ -84. ,   54. ,   16. ,    0.8],       [-104. ,    4. ,   19. ,    1.4],       [ -84. ,  -64. ,   13. ,    1.4],       [ -31. ,  -93. ,   11. ,    1.1],       [  35. ,  -93. ,   10. ,    0.9],       [  77. ,  -56. ,   15. ,    0.9],       [  48. ,   -3. ,   21. ,    1.4],       [  36. ,   29. ,   18. ,    0.6],       [  14. ,   48. ,   24. ,    0.8],       [ -16. ,   50. ,   19. ,    0.8],       [ -46. ,   26. ,   21. ,    0.7],       [ -52. ,   -5. ,   23. ,    1.3],       [ -39. ,  -34. ,   23. ,    1.1],       [ -20. ,  -52. ,   15. ,    1.3],       [  15. ,  -49. ,   23. ,    1.5],       [  43. ,  -33. ,   17. ,    0.6],       [  59. ,   -2. ,   22. ,    1.1],       [  41. ,   34. ,   22. ,    1.4],       [  20. ,   57. ,   18. ,    1.4],       [ -13. ,   56. ,   18. ,    0.6],       [ -51. ,   30. ,   17. ,    1.4],       [ -59. ,    4. ,   19. ,    1.3],       [ -43. ,  -35. ,   18. ,    0.6],       [ -21. ,  -49. ,   15. ,    0.8],       [  18. ,  -58. ,   17. ,    1.3],       [  48. ,  -38. ,   24. ,    0.7],       [  62. ,   -4. ,   20. ,    1.1],       [  51. ,   33. ,   21. ,    1.4],       [  21. ,   57. ,   24. ,    0.7],       [ -17. ,   54. ,   18. ,    1.5],       [ -50. ,   37. ,   21. ,    1.1],       [ -63. ,   -3. ,   22. ,    1.1],       [ -55. ,  -41. ,   19. ,    0.5],       [ -19. ,  -56. ,   19. ,    1.1],       [  21. ,  -56. ,   18. ,    0.5],       [  46. ,  -36. ,   16. ,    1.2],       [  65. ,    1. ,   24. ,    0.7],       [  57. ,   36. ,   15. ,    1.3],       [  16. ,   65. ,   24. ,    1.4],       [ -21. ,   61. ,   21. ,    0.6],       [ -54. ,   40. ,   17. ,    1.2],       [ -72. ,    4. ,   20. ,    0.9],       [ -57. ,  -36. ,   19. ,    1.4],       [ -23. ,  -69. ,   23. ,    1.2],       [  22. ,  -62. ,   22. ,    1. ],       [  55. ,  -45. ,   18. ,    0.9],       [  74. ,   -4. ,   21. ,    1. ],       [  61. ,   48. ,   18. ,    1.1],       [  26. ,   72. ,   22. ,    0.5],       [ -24. ,   66. ,   23. ,    1.2],       [ -60. ,   42. ,   16. ,    1.5],       [ -72. ,   -5. ,   16. ,    1.1],       [ -66. ,  -45. ,   17. ,    0.8],       [ -23. ,  -75. ,   24. ,    0.6],       [  18. ,  -67. ,   19. ,    1.5],       [  62. ,  -45. ,   23. ,    1.4],       [  83. ,   -3. ,   17. ,    0.6],       [  69. ,   51. ,   20. ,    1.4],       [  22. ,   81. ,   15. ,    1.5],       [ -23. ,   75. ,   19. ,    1.4],       [ -70. ,   45. ,   22. ,    0.8],       [ -79. ,   -5. ,   23. ,    1. ],       [ -68. ,  -45. ,   17. ,    0.7],       [ -21. ,  -81. ,   21. ,    1.1],       [  24. ,  -80. ,   24. ,    1.4],       [  63. ,  -47. ,   16. ,    0.9],       [  91. ,   -3. ,   18. ,    1. ],       [  67. ,   49. ,   15. ,    1.4],       [  26. ,   87. ,   17. ,    1.1],       [ -27. ,   79. ,   17. ,    1.5],       [ -71. ,   54. ,   16. ,    1.1],       [ -91. ,    1. ,   17. ,    1.3],       [ -66. ,  -55. ,   24. ,    1.2],       [ -29. ,  -80. ,   19. ,    0.6],       [  23. ,  -81. ,   18. ,    0.9],       [  73. ,  -48. ,   15. ,    1.3],       [  93. ,   -4. ,   19. ,    0.9],       [  79. ,   52. ,   17. ,    1. ],       [  29. ,   92. ,   24. ,    0.6],       [ -26. ,   87. ,   21. ,    0.6],       [ -75. ,   54. ,   20. ,    1.3],       [ -93. ,    1. ,   15. ,    0.7],       [ -79. ,  -51. ,   21. ,    0.8],       [ -29. ,  -94. ,   20. ,    0.7],       [  30. ,  -92. ,   16. ,    0.6],       [  74. ,  -58. ,   15. ,    0.8],       [ 103. ,    4. ,   15. ,    0.6],       [  77. ,   56. ,   22. ,    1.3],       [  30. ,   90. ,   20. ,    1.2],       [ -30. ,   97. ,   20. ,    0.9],       [ -85. ,   59. ,   20. ,    1. ],       [-102. ,   -3. ,   18. ,    0.9],       [ -81. ,  -64. ,   23. ,    1.1],       [ -27. ,  -92. ,   20. ,    1.3],       [  34. ,  -94. ,   23. ,    0.6],       [  76. ,  -58. ,   18. ,    0.9],       [  48. ,   -3. ,   27. ,    1.5],       [  45. ,   33. ,   25. ,    0.6],       [  11. ,   50. ,   28. ,    1.2],       [ -13. ,   52. ,   22. ,    0.9],       [ -45. ,   27. ,   22. ,    1.2],       [ -52. ,   -4. ,   24. ,    0.8],       [ -43. ,  -28. ,   23. ,    1.5],       [ -20. ,  -46. ,   25. ,    1. ],       [  10. ,  -51. ,   23. ,    1.3],       [  43. ,  -32. ,   29. ,    0.5],       [  60. ,    0. ,   23. ,    1. ],       [  44. ,   36. ,   21. ,    1.5],       [  14. ,   58. ,   21. ,    1.4],       [ -13. ,   53. ,   21. ,    1. ],       [ -43. ,   32. ,   29. ,    1.1],       [ -53. ,    3. ,   20. ,    0.6],       [ -42. ,  -34. ,   24. ,    0.9],       [ -22. ,  -56. ,   23. ,    0.7],       [  22. ,  -54. ,   21. ,    1.2],       [  49. ,  -36. ,   23. ,    0.6],       [  62. ,    2. ,   21. ,    0.7],       [  47. ,   40. ,   23. ,    1.1],       [  20. ,   59. ,   27. ,    0.5],       [ -16. ,   61. ,   26. ,    0.5],       [ -54. ,   36. ,   24. ,    1.4],       [ -65. ,   -5. ,   24. ,    1.4],       [ -54. ,  -40. ,   20. ,    0.9],       [ -24. ,  -58. ,   29. ,    0.5],       [  23. ,  -58. ,   27. ,    1.2],       [  49. ,  -34. ,   21. ,    1.1],       [  63. ,    1. ,   25. ,    1.3],       [  53. ,   38. ,   22. ,    0.9],       [  17. ,   66. ,   23. ,    0.9],       [ -24. ,   65. ,   28. ,    1.3],       [ -56. ,   38. ,   27. ,    0.9],       [ -69. ,   -5. ,   23. ,    0.8],       [ -55. ,  -38. ,   29. ,    0.6],       [ -25. ,  -66. ,   26. ,    1.2],       [  17. ,  -62. ,   28. ,    1. ],       [  59. ,  -43. ,   20. ,    1.2],       [  78. ,    0. ,   27. ,    1. ],       [  56. ,   44. ,   20. ,    0.6],       [  20. ,   75. ,   26. ,    0.8],       [ -25. ,   67. ,   25. ,    1.3],       [ -63. ,   42. ,   22. ,    1.5],       [ -78. ,   -2. ,   29. ,    0.6],       [ -59. ,  -48. ,   26. ,    0.6],       [ -19. ,  -70. ,   28. ,    0.9],       [  25. ,  -76. ,   25. ,    1.4],       [  59. ,  -40. ,   26. ,    1.1],       [  84. ,   -5. ,   28. ,    1.3],       [  63. ,   45. ,   27. ,    1.4],       [  28. ,   80. ,   22. ,    1.5],       [ -27. ,   72. ,   26. ,    0.9],       [ -62. ,   50. ,   27. ,    1.1],       [ -81. ,   -3. ,   26. ,    1.3],       [ -67. ,  -49. ,   22. ,    1.1],       [ -25. ,  -73. ,   22. ,    0.9],       [  29. ,  -76. ,   28. ,    1.4],       [  61. ,  -47. ,   23. ,    0.6],       [  91. ,   -1. ,   27. ,    1.4],       [  73. ,   51. ,   25. ,    0.7],       [  25. ,   86. ,   23. ,    0.8],       [ -33. ,   82. ,   26. ,    1. ],       [ -69. ,   56. ,   25. ,    1.3],       [ -90. ,    0. ,   20. ,    1. ],       [ -75. ,  -49. ,   28. ,    1.3],       [ -30. ,  -84. ,   21. ,    1.1],       [  28. ,  -81. ,   24. ,    1.2],       [  71. ,  -55. ,   28. ,    1.4],       [  91. ,   -2. ,   25. ,    0.9],       [  79. ,   53. ,   26. ,    0.8],       [  32. ,   86. ,   25. ,    1.2],       [ -32. ,   91. ,   21. ,    1. ],       [ -72. ,   54. ,   27. ,    0.9],       [ -94. ,    2. ,   26. ,    0.9],       [ -72. ,  -53. ,   23. ,    1.3],       [ -27. ,  -91. ,   21. ,    1.4],       [  31. ,  -93. ,   21. ,    1.3],       [  71. ,  -56. ,   22. ,    0.9],       [ 101. ,    4. ,   28. ,    1.1],       [  84. ,   54. ,   28. ,    0.7],       [  29. ,   98. ,   24. ,    1.5],       [ -26. ,   90. ,   27. ,    0.7],       [ -80. ,   61. ,   22. ,    1.3],       [-103. ,    2. ,   27. ,    1.4],       [ -85. ,  -64. ,   20. ,    0.7],       [ -34. ,  -91. ,   26. ,    0.6],       [  29. ,  -92. ,   23. ,    1.4],       [  85. ,  -57. ,   20. ,    0.8],       [  52. ,   -3. ,   32. ,    1.4],       [  36. ,   27. ,   33. ,    0.8],       [  14. ,   43. ,   29. ,    0.9],       [ -20. ,   51. ,   32. ,    0.8],       [ -46. ,   24. ,   25. ,    0.8],       [ -55. ,   -3. ,   31. ,    0.7],       [ -38. ,  -33. ,   34. ,    1.3],       [ -15. ,  -47. ,   33. ,    1. ],       [  15. ,  -49. ,   33. ,    1.1],       [  36. ,  -25. ,   27. ,    0.5],       [  52. ,   -3. ,   29. ,    1.5],       [  46. ,   36. ,   29. ,    0.9],       [  14. ,   54. ,   33. ,    1. ],       [ -15. ,   55. ,   30. ,    1.3],       [ -50. ,   32. ,   27. ,    1.1],       [ -58. ,    4. ,   26. ,    1.1],       [ -45. ,  -34. ,   28. ,    1.3],       [ -15. ,  -57. ,   30. ,    0.7],       [  19. ,  -53. ,   29. ,    1. ],       [  41. ,  -31. ,   28. ,    0.6],       [  67. ,   -5. ,   32. ,    0.9],       [  51. ,   35. ,   27. ,    1.1],       [  17. ,   58. ,   32. ,    0.8],       [ -23. ,   63. ,   26. ,    1.1],       [ -48. ,   36. ,   26. ,    0.6],       [ -59. ,    2. ,   32. ,    0.7],       [ -47. ,  -41. ,   25. ,    1.1],       [ -24. ,  -64. ,   29. ,    0.8],       [  22. ,  -64. ,   31. ,    1.5],       [  47. ,  -38. ,   30. ,    1.4],       [  64. ,    0. ,   32. ,    1.4],       [  51. ,   35. ,   29. ,    1.3],       [  19. ,   69. ,   31. ,    1. ],       [ -22. ,   65. ,   29. ,    1. ],       [ -56. ,   39. ,   27. ,    0.8],       [ -74. ,    3. ,   30. ,    0.5],       [ -55. ,  -45. ,   28. ,    1.2],       [ -23. ,  -69. ,   31. ,    0.8],       [  17. ,  -71. ,   27. ,    1.3],       [  52. ,  -45. ,   27. ,    0.6],       [  71. ,   -3. ,   27. ,    0.7],       [  61. ,   45. ,   30. ,    0.6],       [  19. ,   68. ,   31. ,    1. ],       [ -21. ,   67. ,   27. ,    0.6],       [ -66. ,   47. ,   32. ,    1.3],       [ -72. ,    0. ,   27. ,    1.2],       [ -57. ,  -41. ,   32. ,    0.9],       [ -23. ,  -69. ,   29. ,    0.5],       [  21. ,  -71. ,   34. ,    1.3],       [  59. ,  -44. ,   25. ,    0.9],       [  80. ,   -2. ,   34. ,    0.6],       [  61. ,   48. ,   28. ,    1.2],       [  22. ,   80. ,   26. ,    1.3],       [ -23. ,   80. ,   25. ,    1.3],       [ -66. ,   43. ,   28. ,    1.1],       [ -87. ,    0. ,   30. ,    1. ],       [ -68. ,  -47. ,   27. ,    1.2],       [ -29. ,  -79. ,   25. ,    1. ],       [  25. ,  -82. ,   33. ,    0.6],       [  61. ,  -52. ,   25. ,    0.6],       [  84. ,   -5. ,   32. ,    1. ],       [  70. ,   54. ,   31. ,    1.3],       [  22. ,   81. ,   27. ,    1.1],       [ -30. ,   84. ,   30. ,    0.9],       [ -74. ,   54. ,   32. ,    0.6],       [ -88. ,   -1. ,   26. ,    1.3],       [ -75. ,  -49. ,   28. ,    1.1],       [ -24. ,  -89. ,   26. ,    0.8],       [  24. ,  -83. ,   33. ,    0.7],       [  74. ,  -48. ,   31. ,    1.2],       [  97. ,   -3. ,   34. ,    1. ],       [  72. ,   53. ,   28. ,    1.5],       [  31. ,   88. ,   32. ,    1.4],       [ -31. ,   85. ,   29. ,    0.8],       [ -76. ,   52. ,   31. ,    1.1],       [ -92. ,   -3. ,   29. ,    0.8],       [ -80. ,  -58. ,   32. ,    1.5],       [ -30. ,  -90. ,   27. ,    0.7],       [  25. ,  -88. ,   29. ,    1.3],       [  74. ,  -59. ,   26. ,    0.9],       [ 100. ,    0. ,   25. ,    0.8],       [  82. ,   60. ,   25. ,    0.6],       [  35. ,   92. ,   30. ,    0.9],       [ -36. ,   98. ,   28. ,    0.6],       [ -85. ,   54. ,   33. ,    1.3],       [ -99. ,    2. ,   32. ,    0.6],       [ -81. ,  -64. ,   26. ,    1.1],       [ -36. ,  -97. ,   28. ,    1. ],       [  31. ,  -96. ,   26. ,    1.5],       [  80. ,  -63. ,   31. ,    0.9],       [  49. ,   -5. ,   35. ,    0.7],       [  43. ,   29. ,   33. ,    0.5],       [  19. ,   47. ,   32. ,    1.1],       [ -14. ,   42. ,   36. ,    1.1],       [ -41. ,   31. ,   35. ,    1.3],       [ -54. ,   -5. ,   39. ,    1.2],       [ -39. ,  -31. ,   35. ,    1.1],       [ -20. ,  -47. ,   31. ,    1.2],       [  18. ,  -44. ,   32. ,    0.6],       [  38. ,  -29. ,   30. ,    1.4],       [  54. ,   -3. ,   31. ,    0.9],       [  41. ,   28. ,   36. ,    1.2],       [  12. ,   54. ,   37. ,    0.8],       [ -23. ,   56. ,   30. ,    1.1],       [ -51. ,   37. ,   38. ,    1.2],       [ -57. ,   -1. ,   33. ,    1.4],       [ -47. ,  -31. ,   30. ,    1.4],       [ -20. ,  -52. ,   30. ,    1.4],       [  13. ,  -49. ,   36. ,    1.1],       [  45. ,  -29. ,   37. ,    0.7],       [  62. ,   -4. ,   35. ,    0.9],       [  49. ,   36. ,   33. ,    1.5],       [  20. ,   56. ,   30. ,    0.6],       [ -16. ,   61. ,   31. ,    1.3],       [ -50. ,   37. ,   32. ,    1.1],       [ -67. ,    1. ,   32. ,    0.5],       [ -50. ,  -38. ,   36. ,    1.2],       [ -19. ,  -63. ,   37. ,    0.5],       [  16. ,  -56. ,   39. ,    1.1],       [  49. ,  -33. ,   34. ,    1.1],       [  65. ,   -2. ,   36. ,    1. ],       [  60. ,   38. ,   32. ,    1. ],       [  17. ,   60. ,   39. ,    1.3],       [ -20. ,   69. ,   31. ,    1.4],       [ -55. ,   39. ,   39. ,    0.7],       [ -72. ,    1. ,   32. ,    1.4],       [ -56. ,  -39. ,   38. ,    0.7],       [ -22. ,  -67. ,   30. ,    1.4],       [  26. ,  -68. ,   38. ,    1.4],       [  50. ,  -38. ,   35. ,    0.7],       [  74. ,   -1. ,   35. ,    0.7],       [  65. ,   44. ,   33. ,    1. ],       [  22. ,   75. ,   30. ,    1.1],       [ -23. ,   74. ,   31. ,    0.6],       [ -58. ,   41. ,   31. ,    0.9],       [ -76. ,    4. ,   38. ,    1.4],       [ -56. ,  -44. ,   39. ,    0.6],       [ -27. ,  -77. ,   34. ,    0.9],       [  27. ,  -76. ,   37. ,    0.6],       [  56. ,  -41. ,   35. ,    0.9],       [  76. ,   -1. ,   31. ,    0.8],       [  61. ,   49. ,   31. ,    1.1],       [  29. ,   75. ,   37. ,    1. ],       [ -29. ,   76. ,   37. ,    1.3],       [ -68. ,   44. ,   35. ,    0.8],       [ -85. ,    0. ,   32. ,    1. ],       [ -70. ,  -51. ,   39. ,    1. ],       [ -24. ,  -82. ,   34. ,    0.9],       [  25. ,  -78. ,   36. ,    1.5],       [  61. ,  -51. ,   32. ,    1. ],       [  86. ,   -3. ,   36. ,    1.1],       [  66. ,   49. ,   33. ,    0.7],       [  22. ,   84. ,   32. ,    0.7],       [ -23. ,   83. ,   34. ,    0.7],       [ -69. ,   56. ,   32. ,    1.5],       [ -87. ,   -2. ,   37. ,    0.5],       [ -73. ,  -54. ,   34. ,    1.4],       [ -25. ,  -89. ,   39. ,    0.6],       [  24. ,  -81. ,   30. ,    0.9],       [  67. ,  -47. ,   39. ,    1.1],       [  96. ,    3. ,   38. ,    0.7],       [  72. ,   52. ,   36. ,    0.9],       [  25. ,   90. ,   32. ,    1.5],       [ -26. ,   85. ,   32. ,    1.1],       [ -80. ,   55. ,   32. ,    1.2],       [ -96. ,    2. ,   30. ,    1. ],       [ -72. ,  -55. ,   32. ,    1.2],       [ -29. ,  -89. ,   31. ,    1.3],       [  31. ,  -92. ,   37. ,    1.4],       [  71. ,  -51. ,   35. ,    0.6],       [ 101. ,   -4. ,   31. ,    1.1],       [  84. ,   58. ,   35. ,    0.7],       [  34. ,   93. ,   35. ,    1.4],       [ -36. ,   93. ,   35. ,    1.1],       [ -77. ,   54. ,   39. ,    1.3],       [ -96. ,   -3. ,   38. ,    0.5],       [ -85. ,  -60. ,   32. ,    0.9],       [ -36. ,  -96. ,   34. ,    0.9],       [  30. ,  -99. ,   38. ,    1. ],       [  84. ,  -64. ,   35. ,    0.9],       [  46. ,   -1. ,   35. ,    0.7],       [  39. ,   31. ,   43. ,    0.8],       [  14. ,   42. ,   37. ,    0.6],       [ -13. ,   49. ,   40. ,    0.5],       [ -37. ,   33. ,   42. ,    0.6],       [ -53. ,   -2. ,   35. ,    0.8],       [ -37. ,  -28. ,   39. ,    1.2],       [ -21. ,  -51. ,   35. ,    0.6],       [  13. ,  -48. ,   42. ,    1. ],       [  41. ,  -31. ,   35. ,    0.9],       [  51. ,   -4. ,   38. ,    0.8],       [  48. ,   32. ,   37. ,    1.3],       [  22. ,   50. ,   41. ,    0.5],       [ -17. ,   57. ,   39. ,    1.3],       [ -41. ,   31. ,   40. ,    0.5],       [ -57. ,   -1. ,   43. ,    1.5],       [ -42. ,  -33. ,   44. ,    0.8],       [ -16. ,  -52. ,   35. ,    1.3],       [  19. ,  -51. ,   39. ,    1.5],       [  40. ,  -31. ,   36. ,    1.5],       [  62. ,    2. ,   35. ,    0.6],       [  51. ,   37. ,   36. ,    1.4],       [  20. ,   60. ,   42. ,    0.5],       [ -15. ,   61. ,   35. ,    1.1],       [ -53. ,   35. ,   42. ,    1.4],       [ -64. ,   -1. ,   39. ,    1.1],       [ -56. ,  -35. ,   40. ,    1.1],       [ -21. ,  -61. ,   36. ,    1.2],       [  20. ,  -64. ,   35. ,    0.9],       [  50. ,  -40. ,   41. ,    1.5],       [  73. ,   -1. ,   38. ,    0.7],       [  51. ,   35. ,   43. ,    0.7],       [  24. ,   66. ,   44. ,    1.2],       [ -22. ,   63. ,   43. ,    0.8],       [ -61. ,   42. ,   43. ,    0.5],       [ -65. ,    4. ,   39. ,    0.6],       [ -59. ,  -39. ,   36. ,    1. ],       [ -19. ,  -66. ,   36. ,    1.3],       [  24. ,  -62. ,   43. ,    1.5],       [  53. ,  -38. ,   43. ,    0.8],       [  72. ,   -5. ,   37. ,    1.5],       [  57. ,   44. ,   36. ,    0.8],       [  22. ,   75. ,   44. ,    1.4],       [ -26. ,   69. ,   37. ,    0.7],       [ -65. ,   48. ,   42. ,    1.4],       [ -74. ,   -3. ,   35. ,    0.7],       [ -61. ,  -42. ,   38. ,    0.6],       [ -28. ,  -70. ,   42. ,    1.3],       [  24. ,  -68. ,   35. ,    0.6],       [  55. ,  -46. ,   41. ,    0.7],       [  79. ,   -1. ,   40. ,    1. ],       [  69. ,   44. ,   43. ,    1.3],       [  21. ,   72. ,   35. ,    1. ],       [ -21. ,   80. ,   42. ,    1.1],       [ -68. ,   47. ,   39. ,    1. ],       [ -80. ,    0. ,   44. ,    1.4],       [ -62. ,  -52. ,   38. ,    0.6],       [ -27. ,  -79. ,   37. ,    0.8],       [  24. ,  -77. ,   44. ,    0.7],       [  65. ,  -46. ,   43. ,    0.5],       [  85. ,   -2. ,   43. ,    1.4],       [  67. ,   47. ,   35. ,    0.7],       [  22. ,   78. ,   42. ,    1.2],       [ -27. ,   84. ,   39. ,    1.3],       [ -76. ,   56. ,   35. ,    1. ],       [ -93. ,   -1. ,   38. ,    0.7],       [ -75. ,  -52. ,   42. ,    0.7],       [ -31. ,  -87. ,   41. ,    1.2],       [  27. ,  -80. ,   39. ,    0.7],       [  71. ,  -56. ,   36. ,    1.2],       [  95. ,    3. ,   44. ,    1.2],       [  80. ,   51. ,   43. ,    1.5],       [  27. ,   89. ,   35. ,    1. ],       [ -32. ,   86. ,   40. ,    1.5],       [ -81. ,   53. ,   41. ,    1.1],       [ -96. ,   -1. ,   36. ,    0.9],       [ -80. ,  -51. ,   40. ,    0.5],       [ -28. ,  -87. ,   44. ,    0.7],       [  27. ,  -90. ,   44. ,    0.9],       [  74. ,  -52. ,   39. ,    0.9],       [ 103. ,    4. ,   39. ,    1.3],       [  80. ,   58. ,   43. ,    1.1],       [  33. ,   95. ,   35. ,    0.7],       [ -34. ,   91. ,   40. ,    0.6],       [ -82. ,   60. ,   40. ,    0.6],       [ -97. ,   -4. ,   41. ,    1.1],       [ -82. ,  -59. ,   38. ,    1. ],       [ -32. ,  -97. ,   40. ,    1.5],       [  29. ,  -94. ,   37. ,    1.1],       [  79. ,  -58. ,   38. ,    1. ]])
        basis0 = BSplineBasis(5, np.array([-2.1, -1.3,  0. ,  0. ,  0. ,  0.9,  1.8,  2.8,  4.3,  4.9,  5.9,
        6.7,  8. ,  8. ,  8. ,  8.9,  9.8]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3.2,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.1,  2.7,  3.8,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([  7.6,   9.1,  10.3])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 7.600000
        pt2[...,1] /= 9.100000
        pt2[...,2] /= 10.300000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p757_rational_C1_periodic(self):
        controlpoints = np.array([[  54. ,   -3. ,   -4. ,    1.1],       [  36. ,   24. ,    2. ,    0.7],       [  13. ,   45. ,    4. ,    1.2],       [ -17. ,   48. ,    2. ,    1.3],       [ -40. ,   31. ,    4. ,    0.8],       [ -48. ,   -4. ,   -5. ,    1.2],       [ -39. ,  -35. ,   -1. ,    1. ],       [ -20. ,  -45. ,   -2. ,    1.3],       [  13. ,  -47. ,    4. ,    0.8],       [  40. ,  -34. ,   -4. ,    1.4],       [  60. ,   -4. ,    1. ,    1.5],       [  49. ,   33. ,   -5. ,    1.1],       [  19. ,   54. ,   -1. ,    1. ],       [ -22. ,   49. ,    3. ,    0.5],       [ -41. ,   34. ,    3. ,    0.8],       [ -55. ,   -3. ,    3. ,    0.5],       [ -50. ,  -34. ,    4. ,    1.3],       [ -20. ,  -50. ,    2. ,    0.5],       [  21. ,  -53. ,    1. ,    1. ],       [  43. ,  -36. ,   -2. ,    1.5],       [  62. ,    2. ,    2. ,    1.2],       [  45. ,   32. ,    2. ,    1.3],       [  23. ,   56. ,   -4. ,    1. ],       [ -16. ,   58. ,    0. ,    1. ],       [ -52. ,   41. ,    2. ,    1.3],       [ -65. ,   -4. ,   -1. ,    0.8],       [ -53. ,  -38. ,   -4. ,    0.6],       [ -21. ,  -60. ,    2. ,    1.1],       [  21. ,  -60. ,    1. ,    0.9],       [  55. ,  -37. ,   -2. ,    1.4],       [  70. ,   -4. ,    0. ,    0.9],       [  56. ,   36. ,   -2. ,    1. ],       [  26. ,   62. ,    1. ,    1.2],       [ -21. ,   69. ,    3. ,    0.7],       [ -56. ,   45. ,   -2. ,    1. ],       [ -71. ,    2. ,    3. ,    0.8],       [ -55. ,  -38. ,   -4. ,    1. ],       [ -17. ,  -62. ,    3. ,    1.1],       [  23. ,  -62. ,    0. ,    1. ],       [  58. ,  -44. ,   -5. ,    1.4],       [  79. ,    1. ,    4. ,    1.5],       [  61. ,   47. ,    3. ,    1.3],       [  24. ,   69. ,   -5. ,    0.7],       [ -28. ,   67. ,   -1. ,    1.3],       [ -57. ,   44. ,    2. ,    0.8],       [ -74. ,   -5. ,    0. ,    1. ],       [ -61. ,  -42. ,    3. ,    1.3],       [ -25. ,  -71. ,   -3. ,    0.6],       [  18. ,  -76. ,   -1. ,    0.8],       [  62. ,  -40. ,    0. ,    1. ],       [  79. ,   -2. ,   -1. ,    1.1],       [  63. ,   45. ,    4. ,    1.4],       [  29. ,   79. ,    1. ,    0.7],       [ -27. ,   82. ,    1. ,    1.2],       [ -68. ,   47. ,    2. ,    0.6],       [ -77. ,    1. ,   -2. ,    1.1],       [ -62. ,  -52. ,    2. ,    1.1],       [ -26. ,  -73. ,    0. ,    1. ],       [  27. ,  -73. ,    3. ,    1.1],       [  63. ,  -47. ,    3. ,    1.1],       [  85. ,   -1. ,    3. ,    1.4],       [  66. ,   54. ,   -3. ,    1.4],       [  31. ,   80. ,    0. ,    1.2],       [ -24. ,   81. ,   -2. ,    0.8],       [ -72. ,   47. ,    1. ,    0.8],       [ -85. ,    1. ,    4. ,    1.5],       [ -67. ,  -49. ,   -2. ,    0.8],       [ -23. ,  -80. ,   -5. ,    0.8],       [  29. ,  -83. ,   -2. ,    0.9],       [  69. ,  -56. ,    0. ,    1. ],       [  90. ,    2. ,   -5. ,    1.3],       [  76. ,   51. ,    0. ,    0.8],       [  31. ,   89. ,    4. ,    0.7],       [ -32. ,   91. ,    0. ,    1.1],       [ -75. ,   56. ,   -1. ,    1.5],       [ -94. ,    1. ,    2. ,    0.9],       [ -80. ,  -52. ,   -2. ,    1. ],       [ -33. ,  -87. ,    0. ,    0.7],       [  28. ,  -91. ,   -1. ,    1.3],       [  79. ,  -55. ,    2. ,    0.6],       [  95. ,   -1. ,    3. ,    0.6],       [  81. ,   60. ,   -4. ,    1.1],       [  28. ,   90. ,   -1. ,    0.9],       [ -32. ,   94. ,    2. ,    1. ],       [ -82. ,   58. ,    1. ,    1.2],       [-103. ,   -4. ,   -1. ,    1.1],       [ -76. ,  -57. ,   -1. ,    1.1],       [ -30. ,  -97. ,   -1. ,    0.9],       [  32. ,  -94. ,    2. ,    1.3],       [  76. ,  -60. ,    3. ,    0.9],       [  48. ,    4. ,   -1. ,    1. ],       [  36. ,   32. ,   -1. ,    0.6],       [  17. ,   43. ,   -1. ,    0.5],       [ -14. ,   48. ,   -1. ,    0.7],       [ -37. ,   28. ,    3. ,    1.4],       [ -53. ,    1. ,    2. ,    0.9],       [ -43. ,  -29. ,    4. ,    1. ],       [ -13. ,  -50. ,    7. ,    0.8],       [  17. ,  -50. ,    5. ,    0.8],       [  39. ,  -34. ,    4. ,    1.3],       [  56. ,    4. ,    3. ,    0.9],       [  48. ,   30. ,    3. ,    0.8],       [  19. ,   52. ,    4. ,    1.4],       [ -20. ,   50. ,    8. ,    1.2],       [ -44. ,   36. ,    6. ,    1. ],       [ -53. ,   -5. ,    4. ,    1.2],       [ -43. ,  -33. ,   -1. ,    1.1],       [ -13. ,  -51. ,    0. ,    1. ],       [  21. ,  -52. ,    2. ,    0.8],       [  45. ,  -34. ,   -1. ,    1.3],       [  57. ,    2. ,   -1. ,    1.4],       [  49. ,   33. ,    2. ,    1.3],       [  19. ,   61. ,    4. ,    0.9],       [ -19. ,   61. ,    8. ,    1.4],       [ -46. ,   39. ,    6. ,    1.3],       [ -68. ,    3. ,    2. ,    0.8],       [ -51. ,  -40. ,    5. ,    1.4],       [ -23. ,  -55. ,    0. ,    1.3],       [  19. ,  -62. ,   -1. ,    1.5],       [  45. ,  -35. ,    1. ,    0.9],       [  66. ,   -1. ,    3. ,    1. ],       [  56. ,   38. ,    7. ,    0.6],       [  16. ,   63. ,    5. ,    1.3],       [ -19. ,   61. ,    1. ,    0.9],       [ -54. ,   42. ,    6. ,    1.5],       [ -69. ,    2. ,    6. ,    1.4],       [ -56. ,  -37. ,    5. ,    0.7],       [ -20. ,  -65. ,    1. ,    1.3],       [  22. ,  -66. ,    3. ,    0.8],       [  53. ,  -37. ,    4. ,    1.1],       [  74. ,   -5. ,    6. ,    0.6],       [  62. ,   47. ,    1. ,    1.5],       [  21. ,   67. ,    1. ,    1.2],       [ -22. ,   74. ,    3. ,    0.8],       [ -64. ,   42. ,    8. ,    1.3],       [ -78. ,    3. ,    8. ,    0.5],       [ -65. ,  -46. ,    6. ,    1.1],       [ -21. ,  -71. ,    1. ,    1.5],       [  23. ,  -70. ,    2. ,    0.8],       [  64. ,  -40. ,    5. ,    0.6],       [  83. ,   -5. ,    3. ,    0.9],       [  62. ,   45. ,   -2. ,    0.6],       [  26. ,   80. ,    2. ,    1.1],       [ -28. ,   80. ,    3. ,    1.1],       [ -70. ,   49. ,    0. ,    1.4],       [ -77. ,   -2. ,    0. ,    1.3],       [ -65. ,  -50. ,    5. ,    1. ],       [ -30. ,  -83. ,    1. ,    0.6],       [  20. ,  -81. ,    1. ,    1.2],       [  68. ,  -46. ,    6. ,    1.3],       [  87. ,    3. ,    1. ,    1.1],       [  67. ,   49. ,    7. ,    1.2],       [  25. ,   82. ,    8. ,    0.7],       [ -28. ,   84. ,   -1. ,    0.9],       [ -69. ,   51. ,    1. ,    1.3],       [ -90. ,    3. ,    0. ,    0.7],       [ -71. ,  -52. ,    4. ,    0.6],       [ -26. ,  -85. ,   -1. ,    1.4],       [  28. ,  -80. ,    2. ,    0.9],       [  67. ,  -48. ,    0. ,    1.3],       [  92. ,    0. ,    3. ,    1.1],       [  78. ,   52. ,    7. ,    1.4],       [  32. ,   92. ,   -1. ,    0.7],       [ -25. ,   85. ,    2. ,    0.6],       [ -77. ,   59. ,    6. ,    0.5],       [ -94. ,    4. ,    7. ,    1. ],       [ -76. ,  -59. ,    2. ,    0.6],       [ -25. ,  -85. ,    1. ,    1.3],       [  33. ,  -87. ,    0. ,    1.2],       [  73. ,  -52. ,    6. ,    0.6],       [ 101. ,    1. ,    1. ,    1.1],       [  79. ,   60. ,   -2. ,    0.7],       [  33. ,   93. ,    5. ,    1. ],       [ -33. ,   99. ,    0. ,    0.5],       [ -84. ,   55. ,    6. ,    1.4],       [-103. ,    0. ,    5. ,    1.1],       [ -83. ,  -57. ,    3. ,    0.9],       [ -33. ,  -96. ,   -1. ,    0.6],       [  28. , -100. ,    4. ,    1.3],       [  85. ,  -60. ,    4. ,    1.3],       [  46. ,   -1. ,    3. ,    0.7],       [  37. ,   32. ,    6. ,    1.1],       [  12. ,   52. ,   10. ,    0.8],       [ -16. ,   45. ,   11. ,    1.1],       [ -36. ,   30. ,    7. ,    0.5],       [ -48. ,    2. ,    2. ,    1.3],       [ -37. ,  -27. ,    5. ,    0.9],       [ -17. ,  -43. ,   11. ,    0.9],       [  11. ,  -52. ,    4. ,    1.4],       [  36. ,  -33. ,    7. ,    0.9],       [  60. ,    1. ,    8. ,    0.9],       [  49. ,   36. ,    6. ,    0.6],       [  17. ,   55. ,    3. ,    1.1],       [ -22. ,   50. ,    3. ,    0.9],       [ -48. ,   36. ,    6. ,    1.5],       [ -56. ,   -3. ,    7. ,    1.2],       [ -51. ,  -29. ,    2. ,    0.6],       [ -14. ,  -52. ,   11. ,    1.2],       [  17. ,  -49. ,   11. ,    0.8],       [  45. ,  -38. ,    6. ,    1. ],       [  67. ,   -3. ,    2. ,    1. ],       [  48. ,   35. ,    3. ,    1. ],       [  19. ,   59. ,    8. ,    1.5],       [ -15. ,   56. ,    5. ,    0.9],       [ -52. ,   32. ,    6. ,    0.8],       [ -65. ,    2. ,    4. ,    1.5],       [ -52. ,  -33. ,    8. ,    0.8],       [ -20. ,  -65. ,    4. ,    0.9],       [  20. ,  -65. ,   10. ,    1. ],       [  46. ,  -38. ,    4. ,    1.2],       [  68. ,    4. ,    9. ,    1.4],       [  53. ,   37. ,    5. ,    0.7],       [  23. ,   68. ,    3. ,    1.3],       [ -21. ,   69. ,    6. ,    0.8],       [ -53. ,   42. ,    6. ,    0.8],       [ -72. ,   -3. ,    2. ,    1. ],       [ -61. ,  -44. ,    3. ,    1.2],       [ -25. ,  -66. ,    3. ,    1.2],       [  24. ,  -69. ,    3. ,    0.9],       [  59. ,  -37. ,   11. ,    1. ],       [  72. ,    1. ,    6. ,    0.8],       [  61. ,   42. ,    2. ,    1. ],       [  20. ,   72. ,   11. ,    0.7],       [ -20. ,   73. ,   10. ,    0.6],       [ -64. ,   43. ,   10. ,    0.6],       [ -79. ,   -3. ,    7. ,    1.4],       [ -58. ,  -46. ,    9. ,    1.1],       [ -22. ,  -68. ,    3. ,    0.6],       [  24. ,  -70. ,   11. ,    1.4],       [  61. ,  -49. ,    8. ,    0.7],       [  82. ,    4. ,    3. ,    1.3],       [  68. ,   47. ,    2. ,    0.8],       [  28. ,   79. ,    9. ,    0.5],       [ -24. ,   73. ,   12. ,    1.5],       [ -67. ,   44. ,    2. ,    0.6],       [ -81. ,    3. ,    8. ,    1.3],       [ -62. ,  -46. ,    3. ,    0.6],       [ -30. ,  -74. ,   11. ,    0.7],       [  28. ,  -77. ,    7. ,    1.5],       [  69. ,  -44. ,    8. ,    1.4],       [  91. ,    2. ,    6. ,    0.9],       [  70. ,   52. ,    8. ,    1.2],       [  28. ,   82. ,    2. ,    0.9],       [ -30. ,   81. ,    9. ,    0.9],       [ -75. ,   55. ,    3. ,    0.5],       [ -85. ,    3. ,   11. ,    0.6],       [ -69. ,  -55. ,    3. ,    1.4],       [ -29. ,  -79. ,    3. ,    1.5],       [  26. ,  -79. ,    2. ,    1. ],       [  68. ,  -55. ,    9. ,    0.8],       [  91. ,   -5. ,    3. ,    0.6],       [  80. ,   50. ,    2. ,    0.8],       [  30. ,   88. ,    5. ,    0.7],       [ -25. ,   93. ,    2. ,    1.4],       [ -77. ,   60. ,    2. ,    0.7],       [ -97. ,   -1. ,    9. ,    0.7],       [ -77. ,  -54. ,    9. ,    1.2],       [ -33. ,  -91. ,    5. ,    1. ],       [  32. ,  -91. ,    3. ,    1.5],       [  80. ,  -59. ,    8. ,    1. ],       [ 104. ,    3. ,    7. ,    0.6],       [  84. ,   61. ,   12. ,    1.3],       [  28. ,   93. ,   10. ,    0.6],       [ -33. ,   99. ,    9. ,    0.6],       [ -81. ,   54. ,    4. ,    1.1],       [-100. ,    1. ,    4. ,    1.5],       [ -78. ,  -64. ,    3. ,    1.1],       [ -35. ,  -94. ,    4. ,    1.1],       [  28. ,  -92. ,   11. ,    1.1],       [  82. ,  -61. ,    2. ,    1.1],       [  45. ,   -2. ,   10. ,    1. ],       [  43. ,   28. ,   11. ,    1.2],       [  13. ,   46. ,   11. ,    0.9],       [ -14. ,   46. ,    9. ,    1.2],       [ -37. ,   25. ,   11. ,    1. ],       [ -52. ,   -4. ,    6. ,    1. ],       [ -42. ,  -35. ,   15. ,    1.1],       [ -14. ,  -49. ,    5. ,    0.7],       [  14. ,  -47. ,    9. ,    0.7],       [  41. ,  -27. ,   11. ,    1. ],       [  51. ,   -5. ,   14. ,    0.7],       [  46. ,   28. ,   11. ,    0.7],       [  16. ,   58. ,   10. ,    0.9],       [ -17. ,   55. ,   12. ,    0.8],       [ -49. ,   32. ,   10. ,    0.5],       [ -54. ,    0. ,    7. ,    1.3],       [ -50. ,  -35. ,   13. ,    1.1],       [ -16. ,  -53. ,   12. ,    1.3],       [  15. ,  -57. ,   13. ,    0.8],       [  48. ,  -34. ,   10. ,    1.1],       [  65. ,    4. ,   12. ,    0.9],       [  55. ,   39. ,    6. ,    0.5],       [  17. ,   59. ,    6. ,    1.4],       [ -18. ,   63. ,   12. ,    1.3],       [ -46. ,   37. ,    8. ,    1.3],       [ -62. ,    0. ,    6. ,    0.6],       [ -55. ,  -34. ,    8. ,    1.5],       [ -19. ,  -63. ,    9. ,    0.9],       [  16. ,  -55. ,   12. ,    0.8],       [  51. ,  -39. ,    6. ,    0.7],       [  72. ,   -3. ,   15. ,    1.3],       [  53. ,   39. ,   10. ,    0.7],       [  24. ,   61. ,   14. ,    1.2],       [ -23. ,   69. ,    6. ,    1.3],       [ -53. ,   42. ,   11. ,    1.2],       [ -64. ,   -4. ,   14. ,    0.7],       [ -54. ,  -45. ,   14. ,    1.5],       [ -26. ,  -67. ,   12. ,    1.3],       [  22. ,  -65. ,   15. ,    0.6],       [  51. ,  -36. ,   10. ,    1.2],       [  74. ,   -1. ,   13. ,    1.3],       [  64. ,   45. ,   15. ,    1. ],       [  20. ,   73. ,   12. ,    0.6],       [ -23. ,   69. ,   12. ,    0.9],       [ -57. ,   46. ,   15. ,    0.6],       [ -72. ,    1. ,   11. ,    1.5],       [ -65. ,  -40. ,   10. ,    1.3],       [ -24. ,  -70. ,   13. ,    1. ],       [  24. ,  -69. ,   11. ,    1. ],       [  63. ,  -45. ,   15. ,    0.6],       [  83. ,   -4. ,   12. ,    1.2],       [  63. ,   48. ,   15. ,    1. ],       [  21. ,   80. ,    6. ,    1.3],       [ -25. ,   80. ,    5. ,    0.7],       [ -65. ,   49. ,   10. ,    1.2],       [ -82. ,    3. ,    9. ,    0.6],       [ -63. ,  -51. ,   12. ,    0.7],       [ -24. ,  -75. ,    6. ,    1. ],       [  24. ,  -77. ,    7. ,    1. ],       [  69. ,  -47. ,   11. ,    1.3],       [  83. ,    1. ,   15. ,    0.7],       [  67. ,   49. ,   11. ,    1.5],       [  22. ,   83. ,   11. ,    1.3],       [ -29. ,   81. ,    9. ,    1. ],       [ -68. ,   50. ,   12. ,    1.5],       [ -86. ,    2. ,   13. ,    0.6],       [ -75. ,  -51. ,    7. ,    1. ],       [ -32. ,  -82. ,   12. ,    0.6],       [  24. ,  -79. ,   14. ,    0.7],       [  74. ,  -52. ,    9. ,    0.8],       [  93. ,   -3. ,    9. ,    0.6],       [  71. ,   55. ,   14. ,    0.7],       [  32. ,   88. ,   12. ,    0.8],       [ -34. ,   90. ,   13. ,    0.8],       [ -75. ,   55. ,   14. ,    1.1],       [ -99. ,   -2. ,   10. ,    1.1],       [ -78. ,  -52. ,   10. ,    1.4],       [ -32. ,  -93. ,    7. ,    1.3],       [  28. ,  -88. ,    8. ,    0.7],       [  74. ,  -54. ,    6. ,    1.4],       [ 100. ,    3. ,   11. ,    0.8],       [  80. ,   61. ,   13. ,    1.1],       [  28. ,   92. ,    8. ,    0.8],       [ -35. ,   92. ,    6. ,    1.2],       [ -80. ,   62. ,   11. ,    0.5],       [ -98. ,    2. ,    7. ,    0.5],       [ -81. ,  -60. ,   14. ,    0.5],       [ -32. ,  -92. ,    7. ,    1.3],       [  27. ,  -94. ,   12. ,    1.1],       [  82. ,  -61. ,    7. ,    0.7],       [  53. ,    0. ,   18. ,    1. ],       [  38. ,   27. ,   10. ,    1.2],       [  15. ,   43. ,   14. ,    1.4],       [ -20. ,   51. ,   14. ,    0.7],       [ -38. ,   32. ,   15. ,    0.8],       [ -54. ,    3. ,   12. ,    0.5],       [ -42. ,  -28. ,   15. ,    1.3],       [ -12. ,  -43. ,   12. ,    0.8],       [  14. ,  -50. ,   10. ,    0.8],       [  39. ,  -33. ,   16. ,    0.8],       [  57. ,    3. ,   16. ,    1.5],       [  45. ,   36. ,   17. ,    0.9],       [  16. ,   55. ,   19. ,    1.2],       [ -20. ,   54. ,   16. ,    0.7],       [ -48. ,   28. ,   10. ,    0.7],       [ -60. ,    1. ,   15. ,    0.7],       [ -48. ,  -38. ,   13. ,    0.6],       [ -18. ,  -53. ,   12. ,    1.4],       [  20. ,  -52. ,   11. ,    1.4],       [  48. ,  -34. ,   11. ,    1.3],       [  66. ,    4. ,   10. ,    0.6],       [  53. ,   37. ,   11. ,    1.3],       [  15. ,   62. ,   18. ,    1.3],       [ -18. ,   60. ,   12. ,    0.7],       [ -51. ,   32. ,   19. ,    0.6],       [ -58. ,   -5. ,   12. ,    0.6],       [ -55. ,  -38. ,   13. ,    1. ],       [ -19. ,  -60. ,   18. ,    0.6],       [  20. ,  -57. ,   15. ,    0.6],       [  46. ,  -37. ,   13. ,    1.2],       [  64. ,   -2. ,   16. ,    0.7],       [  50. ,   39. ,   12. ,    1. ],       [  25. ,   65. ,   10. ,    0.6],       [ -19. ,   68. ,   17. ,    1.2],       [ -60. ,   36. ,   13. ,    1. ],       [ -65. ,   -5. ,   18. ,    1.4],       [ -58. ,  -44. ,   13. ,    0.9],       [ -23. ,  -62. ,   19. ,    1.5],       [  22. ,  -65. ,   14. ,    0.8],       [  56. ,  -38. ,   16. ,    1. ],       [  70. ,   -5. ,   17. ,    0.6],       [  57. ,   43. ,   17. ,    0.9],       [  22. ,   73. ,   12. ,    0.8],       [ -24. ,   73. ,   12. ,    1.4],       [ -59. ,   41. ,   15. ,    1.4],       [ -72. ,    4. ,   11. ,    0.9],       [ -59. ,  -44. ,   19. ,    0.7],       [ -26. ,  -67. ,   10. ,    0.8],       [  27. ,  -70. ,   14. ,    1.2],       [  58. ,  -46. ,   18. ,    0.7],       [  77. ,   -3. ,   18. ,    0.9],       [  66. ,   47. ,   13. ,    1.1],       [  24. ,   76. ,   13. ,    1. ],       [ -27. ,   79. ,   11. ,    1.4],       [ -70. ,   46. ,   11. ,    1.1],       [ -86. ,    0. ,   14. ,    1.3],       [ -70. ,  -47. ,   16. ,    1. ],       [ -26. ,  -76. ,   14. ,    0.6],       [  25. ,  -74. ,   16. ,    1.2],       [  68. ,  -46. ,   12. ,    0.7],       [  92. ,   -2. ,   13. ,    1.1],       [  68. ,   53. ,   18. ,    1. ],       [  24. ,   82. ,   13. ,    1. ],       [ -32. ,   81. ,   15. ,    0.7],       [ -71. ,   50. ,   11. ,    1.2],       [ -92. ,   -3. ,   13. ,    0.7],       [ -75. ,  -49. ,   13. ,    0.6],       [ -31. ,  -83. ,   10. ,    1.2],       [  22. ,  -85. ,   18. ,    1. ],       [  67. ,  -49. ,   11. ,    0.5],       [  89. ,   -4. ,   10. ,    1.3],       [  79. ,   56. ,   13. ,    0.6],       [  27. ,   90. ,    9. ,    1.3],       [ -28. ,   85. ,   18. ,    1.2],       [ -76. ,   53. ,   16. ,    1.4],       [ -90. ,    3. ,   15. ,    1. ],       [ -79. ,  -54. ,   13. ,    1.5],       [ -33. ,  -89. ,   11. ,    1.4],       [  33. ,  -88. ,   10. ,    1.3],       [  71. ,  -57. ,   11. ,    1.2],       [ 102. ,   -3. ,   16. ,    0.7],       [  76. ,   59. ,   17. ,    1.1],       [  34. ,   97. ,   17. ,    0.7],       [ -27. ,   93. ,   17. ,    0.7],       [ -77. ,   55. ,   10. ,    0.6],       [ -98. ,   -1. ,   11. ,    0.8],       [ -83. ,  -60. ,   12. ,    1.1],       [ -33. ,  -96. ,   18. ,    0.6],       [  33. ,  -98. ,   15. ,    1.2],       [  81. ,  -64. ,   18. ,    0.9],       [  53. ,   -1. ,   16. ,    1. ],       [  41. ,   28. ,   18. ,    0.6],       [  13. ,   51. ,   18. ,    0.8],       [ -17. ,   47. ,   18. ,    0.8],       [ -39. ,   32. ,   18. ,    1.2],       [ -47. ,    1. ,   20. ,    0.6],       [ -45. ,  -34. ,   19. ,    1.2],       [ -14. ,  -52. ,   21. ,    1.2],       [  16. ,  -49. ,   20. ,    1.4],       [  38. ,  -25. ,   16. ,    0.8],       [  57. ,    1. ,   22. ,    1.4],       [  47. ,   30. ,   17. ,    1.3],       [  15. ,   57. ,   15. ,    0.9],       [ -21. ,   48. ,   19. ,    0.8],       [ -44. ,   30. ,   16. ,    1.1],       [ -61. ,    1. ,   20. ,    0.9],       [ -49. ,  -31. ,   22. ,    1.3],       [ -18. ,  -50. ,   18. ,    1. ],       [  15. ,  -52. ,   19. ,    0.7],       [  44. ,  -29. ,   13. ,    1.3],       [  60. ,   -4. ,   18. ,    1. ],       [  48. ,   38. ,   18. ,    1.2],       [  17. ,   60. ,   20. ,    1.4],       [ -19. ,   62. ,   18. ,    1.3],       [ -53. ,   35. ,   14. ,    0.6],       [ -59. ,    1. ,   20. ,    0.9],       [ -54. ,  -33. ,   18. ,    0.8],       [ -18. ,  -63. ,   19. ,    1.5],       [  22. ,  -62. ,   19. ,    0.8],       [  53. ,  -38. ,   14. ,    1. ],       [  66. ,    3. ,   21. ,    1.1],       [  59. ,   42. ,   22. ,    1.2],       [  20. ,   66. ,   19. ,    0.5],       [ -27. ,   63. ,   15. ,    0.6],       [ -52. ,   43. ,   20. ,    0.7],       [ -65. ,   -2. ,   18. ,    1.5],       [ -55. ,  -37. ,   20. ,    0.7],       [ -20. ,  -65. ,   14. ,    0.6],       [  17. ,  -67. ,   23. ,    1.1],       [  56. ,  -45. ,   13. ,    0.5],       [  79. ,   -5. ,   22. ,    0.8],       [  64. ,   42. ,   14. ,    1.1],       [  18. ,   75. ,   21. ,    0.7],       [ -28. ,   74. ,   20. ,    1. ],       [ -65. ,   47. ,   20. ,    0.6],       [ -72. ,   -1. ,   21. ,    1.3],       [ -66. ,  -42. ,   18. ,    0.9],       [ -26. ,  -69. ,   18. ,    0.8],       [  22. ,  -75. ,   20. ,    0.8],       [  56. ,  -48. ,   14. ,    1.2],       [  85. ,   -5. ,   20. ,    1.1],       [  64. ,   47. ,   17. ,    1.1],       [  23. ,   72. ,   17. ,    1.4],       [ -26. ,   75. ,   22. ,    1.5],       [ -62. ,   46. ,   21. ,    1.5],       [ -80. ,   -4. ,   17. ,    1.2],       [ -64. ,  -45. ,   17. ,    0.8],       [ -25. ,  -78. ,   22. ,    1.1],       [  23. ,  -73. ,   15. ,    0.5],       [  68. ,  -51. ,   14. ,    1.2],       [  90. ,    0. ,   13. ,    1.1],       [  71. ,   50. ,   20. ,    0.7],       [  23. ,   79. ,   17. ,    0.7],       [ -32. ,   84. ,   16. ,    0.6],       [ -73. ,   53. ,   20. ,    0.6],       [ -90. ,   -2. ,   15. ,    1.1],       [ -69. ,  -48. ,   19. ,    0.9],       [ -31. ,  -83. ,   20. ,    1.2],       [  25. ,  -80. ,   20. ,    0.9],       [  72. ,  -54. ,   21. ,    1.3],       [  93. ,   -1. ,   19. ,    0.6],       [  77. ,   59. ,   20. ,    1.2],       [  32. ,   91. ,   14. ,    0.9],       [ -32. ,   93. ,   19. ,    0.9],       [ -80. ,   58. ,   14. ,    1.4],       [ -94. ,   -3. ,   14. ,    1.4],       [ -72. ,  -57. ,   21. ,    1.2],       [ -26. ,  -88. ,   15. ,    0.7],       [  31. ,  -94. ,   13. ,    0.6],       [  78. ,  -55. ,   22. ,    1.1],       [  97. ,   -3. ,   19. ,    0.9],       [  78. ,   55. ,   14. ,    1.1],       [  28. ,   94. ,   18. ,    1.2],       [ -32. ,   99. ,   17. ,    0.7],       [ -77. ,   63. ,   18. ,    0.9],       [-100. ,   -5. ,   17. ,    1.1],       [ -83. ,  -59. ,   22. ,    0.5],       [ -29. ,  -96. ,   20. ,    0.6],       [  34. ,  -95. ,   22. ,    0.5],       [  76. ,  -56. ,   13. ,    0.7],       [  54. ,   -4. ,   18. ,    0.8],       [  39. ,   24. ,   19. ,    1.1],       [  15. ,   48. ,   22. ,    0.6],       [ -20. ,   44. ,   23. ,    1.5],       [ -46. ,   32. ,   19. ,    1. ],       [ -47. ,    4. ,   25. ,    0.6],       [ -39. ,  -35. ,   18. ,    1. ],       [ -13. ,  -50. ,   26. ,    0.7],       [  18. ,  -46. ,   25. ,    1.2],       [  37. ,  -28. ,   24. ,    1. ],       [  59. ,    3. ,   21. ,    0.6],       [  44. ,   37. ,   17. ,    1.2],       [  13. ,   55. ,   17. ,    0.9],       [ -20. ,   57. ,   25. ,    1.2],       [ -46. ,   35. ,   21. ,    1.1],       [ -57. ,   -4. ,   18. ,    1.1],       [ -49. ,  -37. ,   22. ,    0.7],       [ -23. ,  -58. ,   25. ,    1.2],       [  14. ,  -59. ,   19. ,    1.3],       [  41. ,  -32. ,   17. ,    1.1],       [  62. ,   -4. ,   21. ,    0.6],       [  54. ,   31. ,   24. ,    1.2],       [  23. ,   55. ,   22. ,    1.5],       [ -18. ,   61. ,   20. ,    1.5],       [ -52. ,   33. ,   23. ,    0.9],       [ -65. ,   -4. ,   25. ,    0.6],       [ -53. ,  -40. ,   18. ,    0.9],       [ -18. ,  -60. ,   25. ,    0.5],       [  22. ,  -55. ,   22. ,    1.1],       [  54. ,  -36. ,   25. ,    0.7],       [  65. ,    3. ,   24. ,    0.6],       [  59. ,   42. ,   19. ,    1. ],       [  24. ,   64. ,   23. ,    0.6],       [ -18. ,   61. ,   23. ,    0.5],       [ -59. ,   44. ,   17. ,    1.1],       [ -74. ,    2. ,   19. ,    1.1],       [ -54. ,  -46. ,   18. ,    1.3],       [ -21. ,  -64. ,   18. ,    0.8],       [  26. ,  -62. ,   25. ,    1.4],       [  52. ,  -39. ,   23. ,    1.2],       [  70. ,   -2. ,   20. ,    0.6],       [  62. ,   45. ,   23. ,    0.7],       [  19. ,   73. ,   24. ,    1.2],       [ -22. ,   66. ,   25. ,    0.6],       [ -61. ,   47. ,   22. ,    1.3],       [ -80. ,    4. ,   23. ,    0.7],       [ -60. ,  -42. ,   20. ,    1.3],       [ -25. ,  -70. ,   18. ,    1.4],       [  18. ,  -74. ,   25. ,    1.2],       [  62. ,  -45. ,   17. ,    0.5],       [  76. ,    3. ,   18. ,    0.9],       [  62. ,   51. ,   23. ,    1.4],       [  21. ,   75. ,   20. ,    0.8],       [ -26. ,   75. ,   23. ,    1.3],       [ -65. ,   52. ,   26. ,    0.8],       [ -84. ,   -1. ,   19. ,    1.1],       [ -69. ,  -50. ,   24. ,    1.1],       [ -28. ,  -78. ,   22. ,    0.6],       [  29. ,  -82. ,   17. ,    0.7],       [  62. ,  -52. ,   24. ,    0.9],       [  92. ,    3. ,   24. ,    1.1],       [  67. ,   50. ,   25. ,    1.1],       [  26. ,   87. ,   23. ,    0.8],       [ -30. ,   82. ,   21. ,    1.1],       [ -67. ,   51. ,   19. ,    0.6],       [ -84. ,   -2. ,   19. ,    1.3],       [ -74. ,  -55. ,   26. ,    1.4],       [ -26. ,  -85. ,   20. ,    0.7],       [  27. ,  -86. ,   19. ,    1. ],       [  72. ,  -51. ,   25. ,    1.2],       [  95. ,   -1. ,   24. ,    1.5],       [  77. ,   51. ,   26. ,    1.2],       [  33. ,   88. ,   20. ,    1.2],       [ -30. ,   91. ,   18. ,    1.3],       [ -75. ,   50. ,   16. ,    0.5],       [ -93. ,    4. ,   17. ,    0.8],       [ -75. ,  -54. ,   17. ,    0.5],       [ -33. ,  -94. ,   17. ,    1.1],       [  25. ,  -87. ,   23. ,    0.8],       [  76. ,  -55. ,   21. ,    1.2],       [ 100. ,   -4. ,   24. ,    0.6],       [  79. ,   59. ,   22. ,    0.8],       [  33. ,   91. ,   21. ,    1.4],       [ -31. ,   97. ,   25. ,    0.7],       [ -82. ,   57. ,   22. ,    1.2],       [ -99. ,    1. ,   21. ,    1.3],       [ -78. ,  -64. ,   25. ,    1.1],       [ -32. ,  -99. ,   25. ,    0.9],       [  30. ,  -99. ,   26. ,    0.7],       [  79. ,  -64. ,   23. ,    0.9],       [  50. ,    2. ,   20. ,    1.2],       [  43. ,   32. ,   21. ,    0.7],       [  18. ,   43. ,   27. ,    1. ],       [ -18. ,   48. ,   20. ,    1.1],       [ -38. ,   29. ,   23. ,    1.5],       [ -52. ,   -2. ,   25. ,    0.9],       [ -38. ,  -26. ,   21. ,    0.7],       [ -16. ,  -50. ,   22. ,    1.2],       [  16. ,  -53. ,   22. ,    0.8],       [  43. ,  -25. ,   29. ,    0.6],       [  55. ,   -2. ,   20. ,    0.8],       [  45. ,   32. ,   25. ,    1.1],       [  20. ,   53. ,   24. ,    1.4],       [ -23. ,   52. ,   21. ,    0.6],       [ -49. ,   32. ,   28. ,    0.7],       [ -58. ,    3. ,   27. ,    0.7],       [ -48. ,  -37. ,   27. ,    0.6],       [ -14. ,  -55. ,   25. ,    1.5],       [  15. ,  -51. ,   24. ,    1. ],       [  45. ,  -33. ,   21. ,    0.9],       [  63. ,   -4. ,   27. ,    1. ],       [  49. ,   37. ,   21. ,    1. ],       [  19. ,   57. ,   27. ,    1.3],       [ -16. ,   59. ,   26. ,    0.9],       [ -48. ,   31. ,   21. ,    0.7],       [ -65. ,    2. ,   29. ,    1. ],       [ -49. ,  -35. ,   28. ,    0.5],       [ -18. ,  -64. ,   29. ,    0.8],       [  19. ,  -63. ,   29. ,    1.4],       [  49. ,  -33. ,   28. ,    0.6],       [  71. ,   -2. ,   28. ,    1.2],       [  55. ,   37. ,   21. ,    1.1],       [  17. ,   61. ,   23. ,    1.2],       [ -18. ,   65. ,   28. ,    1.4],       [ -58. ,   38. ,   25. ,    1.1],       [ -71. ,    1. ,   25. ,    1.1],       [ -57. ,  -40. ,   25. ,    1.1],       [ -24. ,  -67. ,   23. ,    0.8],       [  18. ,  -65. ,   22. ,    1.3],       [  50. ,  -44. ,   23. ,    0.9],       [  75. ,    1. ,   28. ,    0.9],       [  57. ,   49. ,   21. ,    0.8],       [  24. ,   70. ,   29. ,    0.7],       [ -27. ,   71. ,   22. ,    0.8],       [ -64. ,   45. ,   27. ,    1.4],       [ -80. ,   -5. ,   28. ,    1.2],       [ -65. ,  -47. ,   21. ,    0.6],       [ -26. ,  -72. ,   23. ,    1.4],       [  19. ,  -68. ,   28. ,    0.9],       [  59. ,  -46. ,   25. ,    1.1],       [  82. ,   -5. ,   24. ,    0.6],       [  61. ,   45. ,   29. ,    0.8],       [  28. ,   78. ,   27. ,    1. ],       [ -21. ,   77. ,   26. ,    1.3],       [ -71. ,   51. ,   28. ,    0.9],       [ -80. ,   -5. ,   26. ,    0.5],       [ -66. ,  -48. ,   23. ,    1.1],       [ -28. ,  -79. ,   26. ,    1.5],       [  26. ,  -81. ,   25. ,    1.1],       [  63. ,  -44. ,   27. ,    1.1],       [  88. ,   -5. ,   30. ,    0.5],       [  74. ,   56. ,   20. ,    0.9],       [  27. ,   80. ,   23. ,    1.1],       [ -27. ,   81. ,   21. ,    0.8],       [ -68. ,   52. ,   28. ,    1.2],       [ -87. ,   -1. ,   23. ,    0.5],       [ -71. ,  -54. ,   26. ,    0.7],       [ -28. ,  -88. ,   23. ,    1.2],       [  28. ,  -87. ,   29. ,    0.8],       [  69. ,  -52. ,   25. ,    1. ],       [  93. ,   -5. ,   24. ,    0.6],       [  75. ,   51. ,   21. ,    1. ],       [  25. ,   91. ,   25. ,    1.4],       [ -34. ,   84. ,   27. ,    1.4],       [ -78. ,   59. ,   28. ,    1. ],       [ -93. ,   -5. ,   23. ,    1. ],       [ -76. ,  -51. ,   30. ,    1.2],       [ -25. ,  -87. ,   26. ,    0.8],       [  32. ,  -85. ,   22. ,    1.3],       [  71. ,  -56. ,   27. ,    1.3],       [  97. ,   -5. ,   30. ,    1.1],       [  78. ,   55. ,   24. ,    1.3],       [  35. ,   92. ,   20. ,    1.3],       [ -34. ,   97. ,   25. ,    1.4],       [ -82. ,   60. ,   21. ,    1.2],       [ -99. ,   -3. ,   29. ,    1.2],       [ -84. ,  -64. ,   25. ,    0.6],       [ -34. ,  -93. ,   25. ,    1.4],       [  31. ,  -93. ,   24. ,    1.5],       [  85. ,  -56. ,   26. ,    1.4],       [  52. ,    4. ,   29. ,    1.4],       [  41. ,   27. ,   27. ,    1.4],       [  16. ,   50. ,   32. ,    1.5],       [ -14. ,   45. ,   25. ,    1.2],       [ -45. ,   34. ,   28. ,    1.4],       [ -54. ,   -4. ,   30. ,    1.3],       [ -37. ,  -27. ,   29. ,    0.8],       [ -12. ,  -44. ,   25. ,    1.4],       [  19. ,  -52. ,   24. ,    0.6],       [  36. ,  -30. ,   28. ,    1.1],       [  54. ,   -2. ,   26. ,    1.2],       [  41. ,   31. ,   24. ,    0.8],       [  17. ,   50. ,   30. ,    0.5],       [ -18. ,   56. ,   33. ,    0.6],       [ -50. ,   29. ,   28. ,    1.5],       [ -59. ,    2. ,   27. ,    0.7],       [ -45. ,  -33. ,   24. ,    0.9],       [ -15. ,  -54. ,   32. ,    1.1],       [  18. ,  -57. ,   24. ,    1.4],       [  45. ,  -34. ,   32. ,    0.8],       [  65. ,    1. ,   30. ,    1.1],       [  45. ,   39. ,   32. ,    0.8],       [  15. ,   58. ,   31. ,    0.9],       [ -20. ,   62. ,   31. ,    1. ],       [ -49. ,   39. ,   26. ,    1.2],       [ -67. ,   -4. ,   33. ,    1.2],       [ -48. ,  -40. ,   25. ,    1.1],       [ -25. ,  -60. ,   24. ,    1.4],       [  22. ,  -60. ,   27. ,    0.8],       [  53. ,  -42. ,   32. ,    1.2],       [  73. ,    2. ,   30. ,    1.5],       [  51. ,   36. ,   32. ,    0.7],       [  24. ,   62. ,   33. ,    0.8],       [ -21. ,   66. ,   29. ,    0.9],       [ -55. ,   43. ,   25. ,    1.1],       [ -72. ,    3. ,   26. ,    0.9],       [ -60. ,  -42. ,   34. ,    0.9],       [ -22. ,  -62. ,   29. ,    0.8],       [  19. ,  -70. ,   32. ,    1.3],       [  58. ,  -44. ,   24. ,    0.8],       [  77. ,   -3. ,   27. ,    1.4],       [  60. ,   41. ,   27. ,    1. ],       [  19. ,   75. ,   24. ,    0.6],       [ -25. ,   70. ,   28. ,    1.1],       [ -65. ,   49. ,   30. ,    0.6],       [ -72. ,   -4. ,   28. ,    1.3],       [ -63. ,  -42. ,   30. ,    1.2],       [ -19. ,  -75. ,   24. ,    1.5],       [  26. ,  -71. ,   31. ,    0.9],       [  57. ,  -48. ,   26. ,    1.4],       [  77. ,    3. ,   26. ,    0.6],       [  60. ,   48. ,   30. ,    0.9],       [  29. ,   74. ,   25. ,    0.6],       [ -26. ,   78. ,   30. ,    1.2],       [ -69. ,   52. ,   32. ,    0.5],       [ -81. ,    2. ,   24. ,    0.8],       [ -65. ,  -51. ,   28. ,    0.8],       [ -29. ,  -76. ,   28. ,    1. ],       [  23. ,  -82. ,   24. ,    1.4],       [  66. ,  -52. ,   33. ,    1.2],       [  87. ,    2. ,   33. ,    1.1],       [  67. ,   53. ,   30. ,    1.4],       [  27. ,   83. ,   30. ,    0.6],       [ -23. ,   86. ,   28. ,    1.2],       [ -72. ,   52. ,   33. ,    1.2],       [ -91. ,   -4. ,   31. ,    0.8],       [ -73. ,  -47. ,   27. ,    0.9],       [ -26. ,  -85. ,   24. ,    0.8],       [  28. ,  -84. ,   26. ,    1. ],       [  72. ,  -53. ,   25. ,    0.9],       [  93. ,    2. ,   26. ,    0.7],       [  79. ,   59. ,   25. ,    0.8],       [  33. ,   93. ,   25. ,    0.8],       [ -28. ,   85. ,   31. ,    0.8],       [ -73. ,   54. ,   29. ,    0.9],       [ -94. ,   -5. ,   28. ,    0.9],       [ -77. ,  -59. ,   27. ,    1.2],       [ -28. ,  -86. ,   25. ,    1. ],       [  29. ,  -87. ,   27. ,    1.1],       [  73. ,  -54. ,   29. ,    0.9],       [  96. ,    0. ,   32. ,    1.2],       [  80. ,   63. ,   26. ,    0.7],       [  28. ,   93. ,   32. ,    1.2],       [ -29. ,   92. ,   25. ,    1.5],       [ -83. ,   54. ,   26. ,    1.2],       [-105. ,   -5. ,   33. ,    1.4],       [ -83. ,  -60. ,   28. ,    0.9],       [ -28. ,  -94. ,   34. ,    1.2],       [  33. , -100. ,   33. ,    1.3],       [  85. ,  -57. ,   25. ,    1.5],       [  53. ,    4. ,   34. ,    1.3],       [  38. ,   26. ,   34. ,    0.9],       [  11. ,   44. ,   28. ,    1.5],       [ -12. ,   47. ,   30. ,    0.5],       [ -40. ,   28. ,   34. ,    1.3],       [ -55. ,   -1. ,   36. ,    1.5],       [ -43. ,  -31. ,   35. ,    1.2],       [ -19. ,  -44. ,   30. ,    1.2],       [  15. ,  -48. ,   36. ,    1.1],       [  44. ,  -31. ,   28. ,    0.6],       [  56. ,    4. ,   37. ,    1.5],       [  45. ,   34. ,   31. ,    0.6],       [  22. ,   58. ,   29. ,    0.8],       [ -20. ,   52. ,   28. ,    0.8],       [ -50. ,   33. ,   31. ,    1.2],       [ -60. ,    0. ,   31. ,    0.8],       [ -47. ,  -30. ,   30. ,    0.8],       [ -19. ,  -56. ,   36. ,    1. ],       [  15. ,  -52. ,   37. ,    1.4],       [  49. ,  -34. ,   33. ,    0.6],       [  60. ,   -5. ,   30. ,    1.4],       [  54. ,   39. ,   31. ,    1.2],       [  21. ,   57. ,   34. ,    0.7],       [ -16. ,   63. ,   33. ,    0.9],       [ -54. ,   31. ,   28. ,    1.2],       [ -66. ,   -3. ,   33. ,    0.9],       [ -50. ,  -39. ,   36. ,    1. ],       [ -18. ,  -58. ,   31. ,    0.6],       [  15. ,  -59. ,   30. ,    1.4],       [  49. ,  -38. ,   36. ,    1. ],       [  65. ,   -3. ,   34. ,    0.6],       [  51. ,   35. ,   35. ,    1.2],       [  20. ,   65. ,   37. ,    0.9],       [ -22. ,   66. ,   35. ,    0.8],       [ -52. ,   41. ,   30. ,    0.8],       [ -72. ,    3. ,   34. ,    1.4],       [ -60. ,  -46. ,   31. ,    1.5],       [ -24. ,  -68. ,   27. ,    1.5],       [  20. ,  -62. ,   35. ,    0.6],       [  51. ,  -37. ,   30. ,    0.8],       [  75. ,    3. ,   35. ,    0.5],       [  62. ,   45. ,   33. ,    1.1],       [  26. ,   67. ,   32. ,    0.6],       [ -23. ,   73. ,   34. ,    0.6],       [ -63. ,   42. ,   36. ,    1. ],       [ -74. ,   -4. ,   31. ,    1.4],       [ -58. ,  -42. ,   34. ,    1.4],       [ -22. ,  -70. ,   32. ,    1.3],       [  19. ,  -74. ,   32. ,    0.9],       [  65. ,  -46. ,   30. ,    0.8],       [  79. ,   -2. ,   30. ,    0.7],       [  61. ,   43. ,   28. ,    1.2],       [  25. ,   74. ,   34. ,    0.8],       [ -21. ,   73. ,   29. ,    0.6],       [ -71. ,   51. ,   28. ,    0.8],       [ -78. ,    1. ,   33. ,    0.8],       [ -71. ,  -44. ,   36. ,    0.6],       [ -29. ,  -75. ,   35. ,    0.7],       [  24. ,  -77. ,   34. ,    1.2],       [  64. ,  -47. ,   28. ,    1.4],       [  89. ,    4. ,   35. ,    1.5],       [  69. ,   47. ,   34. ,    0.6],       [  23. ,   85. ,   30. ,    0.9],       [ -27. ,   85. ,   28. ,    1.2],       [ -70. ,   50. ,   28. ,    0.7],       [ -88. ,   -1. ,   33. ,    0.9],       [ -67. ,  -47. ,   30. ,    0.6],       [ -24. ,  -88. ,   33. ,    1.1],       [  30. ,  -82. ,   30. ,    1.3],       [  65. ,  -48. ,   32. ,    0.8],       [  92. ,   -3. ,   37. ,    0.8],       [  73. ,   53. ,   36. ,    0.8],       [  27. ,   90. ,   28. ,    1.1],       [ -27. ,   87. ,   35. ,    1.2],       [ -72. ,   52. ,   31. ,    1.1],       [ -97. ,   -5. ,   29. ,    0.8],       [ -77. ,  -57. ,   33. ,    0.5],       [ -34. ,  -87. ,   29. ,    0.6],       [  24. ,  -87. ,   28. ,    1.4],       [  76. ,  -52. ,   30. ,    0.7],       [  98. ,    2. ,   30. ,    1.3],       [  84. ,   59. ,   36. ,    0.9],       [  33. ,   98. ,   36. ,    1.2],       [ -27. ,   94. ,   30. ,    1. ],       [ -85. ,   55. ,   32. ,    0.7],       [-100. ,    2. ,   34. ,    0.7],       [ -82. ,  -61. ,   28. ,    1. ],       [ -28. ,  -93. ,   31. ,    1.4],       [  35. ,  -94. ,   30. ,    1. ],       [  80. ,  -55. ,   37. ,    0.8],       [  45. ,    4. ,   38. ,    0.8],       [  45. ,   30. ,   37. ,    0.8],       [  12. ,   48. ,   32. ,    0.9],       [ -18. ,   47. ,   41. ,    1. ],       [ -38. ,   33. ,   35. ,    1.2],       [ -51. ,   -4. ,   34. ,    0.8],       [ -43. ,  -31. ,   38. ,    1.5],       [ -12. ,  -44. ,   41. ,    1.3],       [  18. ,  -51. ,   33. ,    0.9],       [  39. ,  -27. ,   40. ,    1. ],       [  58. ,   -2. ,   39. ,    0.8],       [  40. ,   29. ,   41. ,    1.1],       [  14. ,   51. ,   39. ,    0.7],       [ -15. ,   52. ,   31. ,    0.8],       [ -46. ,   32. ,   33. ,    1.2],       [ -60. ,    1. ,   34. ,    0.6],       [ -44. ,  -30. ,   33. ,    0.9],       [ -16. ,  -54. ,   31. ,    0.5],       [  13. ,  -57. ,   40. ,    1.3],       [  40. ,  -35. ,   36. ,    1. ],       [  60. ,    2. ,   34. ,    0.7],       [  55. ,   39. ,   33. ,    0.6],       [  17. ,   63. ,   31. ,    1.2],       [ -23. ,   62. ,   33. ,    1.1],       [ -53. ,   36. ,   37. ,    0.9],       [ -59. ,   -2. ,   32. ,    1.3],       [ -52. ,  -33. ,   38. ,    0.9],       [ -19. ,  -60. ,   37. ,    1.4],       [  15. ,  -59. ,   35. ,    0.9],       [  51. ,  -35. ,   40. ,    1. ],       [  67. ,   -5. ,   37. ,    1.3],       [  53. ,   38. ,   40. ,    0.7],       [  16. ,   68. ,   38. ,    1.5],       [ -22. ,   69. ,   37. ,    1.3],       [ -53. ,   41. ,   37. ,    1.2],       [ -67. ,    3. ,   39. ,    0.7],       [ -59. ,  -44. ,   31. ,    0.7],       [ -17. ,  -69. ,   35. ,    0.6],       [  18. ,  -68. ,   40. ,    1.1],       [  56. ,  -38. ,   31. ,    0.7],       [  76. ,   -5. ,   39. ,    0.5],       [  56. ,   41. ,   40. ,    1.4],       [  27. ,   66. ,   34. ,    0.6],       [ -19. ,   76. ,   39. ,    1. ],       [ -62. ,   48. ,   32. ,    1.3],       [ -74. ,   -5. ,   34. ,    1.5],       [ -56. ,  -48. ,   33. ,    0.8],       [ -25. ,  -68. ,   38. ,    1.3],       [  21. ,  -73. ,   40. ,    0.6],       [  59. ,  -47. ,   34. ,    0.7],       [  79. ,   -1. ,   37. ,    1.1],       [  66. ,   50. ,   40. ,    0.8],       [  23. ,   78. ,   36. ,    1. ],       [ -24. ,   77. ,   40. ,    0.9],       [ -66. ,   45. ,   40. ,    1.4],       [ -82. ,   -1. ,   39. ,    1.5],       [ -67. ,  -45. ,   33. ,    1.4],       [ -28. ,  -76. ,   39. ,    0.6],       [  27. ,  -76. ,   38. ,    0.6],       [  70. ,  -51. ,   39. ,    1.3],       [  89. ,    1. ,   33. ,    0.7],       [  73. ,   52. ,   37. ,    0.5],       [  22. ,   84. ,   38. ,    1.2],       [ -30. ,   80. ,   34. ,    0.6],       [ -73. ,   55. ,   38. ,    1.5],       [ -92. ,   -1. ,   40. ,    1.4],       [ -73. ,  -50. ,   41. ,    1.2],       [ -24. ,  -83. ,   40. ,    0.9],       [  28. ,  -88. ,   35. ,    0.7],       [  66. ,  -53. ,   41. ,    1. ],       [  98. ,    2. ,   37. ,    1. ],       [  73. ,   52. ,   39. ,    1.3],       [  30. ,   90. ,   33. ,    1.2],       [ -25. ,   92. ,   37. ,    1.4],       [ -81. ,   57. ,   31. ,    1.3],       [ -99. ,    4. ,   31. ,    0.8],       [ -74. ,  -54. ,   32. ,    1.4],       [ -30. ,  -91. ,   35. ,    0.6],       [  25. ,  -87. ,   37. ,    1.5],       [  72. ,  -57. ,   32. ,    1.2],       [  95. ,   -5. ,   32. ,    1.1],       [  79. ,   54. ,   32. ,    1.4],       [  33. ,   90. ,   35. ,    1.3],       [ -33. ,   93. ,   34. ,    0.5],       [ -82. ,   58. ,   38. ,    1. ],       [-104. ,    2. ,   34. ,    1.4],       [ -81. ,  -55. ,   40. ,    0.8],       [ -34. ,  -97. ,   35. ,    0.9],       [  30. ,  -92. ,   33. ,    0.8],       [  76. ,  -59. ,   33. ,    0.5],       [  51. ,   -3. ,   42. ,    0.9],       [  39. ,   25. ,   44. ,    0.9],       [  19. ,   50. ,   36. ,    0.8],       [ -18. ,   51. ,   38. ,    1.1],       [ -38. ,   29. ,   40. ,    1.3],       [ -54. ,   -5. ,   38. ,    0.9],       [ -42. ,  -35. ,   43. ,    1.1],       [ -11. ,  -44. ,   35. ,    0.9],       [  18. ,  -43. ,   37. ,    0.6],       [  43. ,  -28. ,   39. ,    1.1],       [  52. ,   -3. ,   38. ,    0.8],       [  47. ,   36. ,   37. ,    0.7],       [  14. ,   57. ,   41. ,    1.1],       [ -22. ,   56. ,   39. ,    1.5],       [ -46. ,   37. ,   39. ,    1.3],       [ -57. ,   -4. ,   40. ,    1.3],       [ -41. ,  -34. ,   40. ,    1.2],       [ -14. ,  -58. ,   44. ,    0.6],       [  19. ,  -55. ,   39. ,    1.4],       [  47. ,  -31. ,   36. ,    1.1],       [  61. ,   -1. ,   38. ,    0.6],       [  53. ,   38. ,   40. ,    0.6],       [  15. ,   62. ,   39. ,    1. ],       [ -21. ,   63. ,   36. ,    0.6],       [ -47. ,   33. ,   43. ,    0.8],       [ -64. ,    0. ,   35. ,    0.5],       [ -46. ,  -36. ,   39. ,    1.3],       [ -20. ,  -55. ,   44. ,    0.9],       [  17. ,  -59. ,   35. ,    0.7],       [  49. ,  -40. ,   42. ,    0.7],       [  72. ,    1. ,   37. ,    1.2],       [  51. ,   43. ,   37. ,    1.4],       [  25. ,   70. ,   43. ,    1.3],       [ -20. ,   60. ,   37. ,    0.8],       [ -54. ,   37. ,   36. ,    1.3],       [ -70. ,   -2. ,   35. ,    0.8],       [ -53. ,  -44. ,   35. ,    1. ],       [ -22. ,  -65. ,   36. ,    0.5],       [  17. ,  -61. ,   36. ,    1. ],       [  59. ,  -44. ,   43. ,    1.5],       [  78. ,   -5. ,   41. ,    1.2],       [  56. ,   46. ,   36. ,    0.5],       [  25. ,   75. ,   44. ,    0.6],       [ -25. ,   67. ,   41. ,    1.1],       [ -58. ,   48. ,   38. ,    0.9],       [ -77. ,    0. ,   44. ,    1.2],       [ -65. ,  -40. ,   42. ,    0.8],       [ -27. ,  -71. ,   36. ,    0.5],       [  20. ,  -75. ,   36. ,    1.5],       [  60. ,  -47. ,   36. ,    1.2],       [  77. ,    2. ,   35. ,    0.9],       [  69. ,   45. ,   35. ,    1.3],       [  20. ,   78. ,   41. ,    1.2],       [ -28. ,   80. ,   41. ,    1.2],       [ -65. ,   50. ,   38. ,    0.9],       [ -85. ,   -2. ,   37. ,    1.5],       [ -65. ,  -44. ,   35. ,    1.5],       [ -28. ,  -77. ,   40. ,    1.2],       [  22. ,  -76. ,   36. ,    0.9],       [  65. ,  -53. ,   36. ,    0.6],       [  90. ,   -1. ,   36. ,    1.1],       [  66. ,   50. ,   35. ,    0.5],       [  26. ,   83. ,   44. ,    1.3],       [ -23. ,   82. ,   40. ,    1. ],       [ -67. ,   53. ,   36. ,    0.9],       [ -92. ,   -1. ,   39. ,    1.4],       [ -76. ,  -48. ,   43. ,    0.8],       [ -26. ,  -83. ,   37. ,    0.6],       [  27. ,  -84. ,   39. ,    1.4],       [  74. ,  -51. ,   40. ,    1.3],       [  93. ,   -5. ,   42. ,    0.8],       [  80. ,   51. ,   36. ,    1.4],       [  32. ,   85. ,   36. ,    0.7],       [ -27. ,   88. ,   42. ,    1.2],       [ -79. ,   57. ,   35. ,    1.5],       [ -94. ,   -5. ,   41. ,    1. ],       [ -77. ,  -53. ,   39. ,    0.7],       [ -26. ,  -93. ,   35. ,    1.4],       [  26. ,  -88. ,   35. ,    0.8],       [  74. ,  -53. ,   40. ,    1.5],       [ 101. ,    4. ,   43. ,    1. ],       [  84. ,   57. ,   39. ,    1.4],       [  34. ,   91. ,   35. ,    0.9],       [ -34. ,   93. ,   41. ,    1.4],       [ -79. ,   61. ,   43. ,    0.5],       [-100. ,    0. ,   36. ,    0.8],       [ -85. ,  -58. ,   40. ,    0.5],       [ -34. ,  -98. ,   35. ,    0.8],       [  30. , -101. ,   44. ,    0.6],       [  85. ,  -59. ,   38. ,    0.7]])
        basis0 = BSplineBasis(7, np.array([-1.8, -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.7,  3.1,  4.2,
        5. ,  6. ,  6. ,  6. ,  6. ,  6. ,  7.4,  7.7]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.9,  3.3,  4.1,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.2,  3.3,  4.3,
        5.3,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.mirror([2, 0, 0])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p7(self):
        controlpoints = np.array([[  3.,  -4.,  -5.],
       [  9.,   2.,  -1.],
       [ 23.,  -2.,   2.],
       [ 37.,   2.,   1.],
       [ 46.,   4.,  -5.],
       [ 56.,  -3.,  -2.],
       [ 70.,  -5.,   3.],
       [ 78.,   1.,   2.],
       [ 91.,  -5.,   3.],
       [ 97.,   3.,  -2.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  1.8,  2.8,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 4.3,  5.5,  7.4])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 4.300000
        pt2[...,1] -= 5.500000
        pt2[...,2] -= 7.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p7(self):
        controlpoints = np.array([[  0.,   1.,   3.],
       [ 11.,   2.,  -5.],
       [ 20.,   4.,  -2.],
       [ 27.,   3.,  -4.],
       [ 32.,  -5.,  -3.],
       [ 49.,  -5.,   3.],
       [ 55.,  -3.,  -5.],
       [ 60.,  -5.,  -5.],
       [ 75.,  -5.,  -1.],
       [ 82.,   1.,   2.],
       [ 91.,   2.,   0.],
       [ 97.,   3.,   0.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.7,  2.9,  4.3,
        5.2,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([  7.3,   7.2,  11.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 7.300000
        pt2[...,1] /= 7.200000
        pt2[...,2] /= 11.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p7(self):
        controlpoints = np.array([[   0.,    4.,   -5.],
       [  12.,    3.,   -2.],
       [  26.,    1.,    4.],
       [  47.,    4.,    3.],
       [  61.,    3.,    3.],
       [  68.,   -1.,    0.],
       [  88.,   -5.,   -4.],
       [ 100.,    3.,    2.]])
        basis0 = BSplineBasis(7, np.array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  2.,  2.,  2.,  2.,  2.,
        2.,  2.]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.mirror([1, 0, 0])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p77(self):
        controlpoints = np.array([[   3.,   -1.,   -2.],       [   8.,   -1.,   -4.],       [  22.,    3.,   -1.],       [  35.,    1.,    0.],       [  44.,    4.,   -1.],       [  58.,    0.,   -5.],       [  65.,    0.,   -5.],       [  81.,   -5.,   -5.],       [  85.,    0.,   -4.],       [  95.,   -2.,   -3.],       [   4.,    9.,    2.],       [  11.,   11.,   -2.],       [  24.,    8.,    3.],       [  34.,   13.,    4.],       [  41.,   15.,    4.],       [  59.,    9.,    4.],       [  70.,   15.,    3.],       [  77.,   13.,    4.],       [  87.,   16.,   -4.],       [  97.,   14.,    0.],       [  -3.,   25.,    3.],       [  10.,   29.,    1.],       [  27.,   28.,   -4.],       [  28.,   27.,   -4.],       [  42.,   27.,    4.],       [  52.,   24.,   -5.],       [  64.,   26.,   -2.],       [  81.,   26.,   -2.],       [  84.,   22.,   -3.],       [  99.,   21.,    0.],       [   0.,   33.,   -5.],       [  13.,   39.,   -5.],       [  18.,   41.,   -4.],       [  29.,   42.,    4.],       [  39.,   33.,   -4.],       [  53.,   35.,    0.],       [  65.,   35.,    0.],       [  75.,   39.,   -4.],       [  85.,   36.,   -5.],       [  99.,   34.,   -2.],       [   1.,   53.,    3.],       [  12.,   48.,    3.],       [  18.,   45.,   -1.],       [  36.,   46.,    4.],       [  48.,   52.,   -3.],       [  54.,   50.,   -4.],       [  64.,   53.,   -1.],       [  79.,   53.,   -4.],       [  88.,   53.,   -4.],       [ 104.,   48.,   -3.],       [   1.,   64.,   -3.],       [   6.,   57.,   -5.],       [  19.,   65.,    2.],       [  35.,   63.,   -3.],       [  46.,   65.,    3.],       [  50.,   66.,    1.],       [  71.,   60.,   -1.],       [  75.,   61.,   -3.],       [  85.,   62.,    1.],       [  99.,   67.,   -2.],       [   3.,   75.,    3.],       [   7.,   72.,   -3.],       [  18.,   78.,    2.],       [  30.,   79.,   -5.],       [  48.,   76.,   -2.],       [  55.,   79.,   -1.],       [  68.,   77.,    4.],       [  75.,   70.,   -1.],       [  92.,   78.,   -2.],       [ 103.,   74.,    1.],       [  -2.,   89.,   -3.],       [  11.,   85.,    3.],       [  19.,   88.,    3.],       [  29.,   91.,    1.],       [  46.,   89.,    4.],       [  59.,   82.,    1.],       [  63.,   92.,   -2.],       [  75.,   89.,    2.],       [  92.,   89.,    0.],       [  98.,   90.,    0.],       [   4.,   99.,    2.],       [   8.,   95.,   -2.],       [  26.,  101.,    0.],       [  37.,  104.,   -4.],       [  41.,  101.,   -4.],       [  53.,  100.,    4.],       [  63.,  104.,   -1.],       [  73.,   96.,    2.],       [  84.,   99.,   -2.],       [  99.,   98.,   -2.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.6,  2.7,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2.3,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 7.2,  2.7,  5.6])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 7.200000
        pt2[...,1] -= 2.700000
        pt2[...,2] -= 5.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p77(self):
        controlpoints = np.array([[  -1.,   -4.,   -4.],       [   5.,   -3.,   -3.],       [  18.,    4.,   -1.],       [  24.,   -4.,    1.],       [  33.,   -3.,    1.],       [  49.,    0.,    1.],       [  59.,    0.,   -4.],       [  67.,   -3.,   -4.],       [  71.,    3.,    1.],       [  86.,    4.,    1.],       [  93.,   -5.,   -5.],       [  98.,    1.,   -5.],       [   3.,   11.,    0.],       [   8.,    8.,    0.],       [  22.,   14.,    4.],       [  31.,   15.,   -3.],       [  38.,   15.,   -4.],       [  43.,   13.,    0.],       [  53.,   14.,    4.],       [  59.,   13.,   -1.],       [  76.,   10.,   -2.],       [  79.,    9.,   -2.],       [  94.,    7.,    2.],       [ 101.,   15.,   -1.],       [   4.,   25.,    1.],       [  11.,   22.,    1.],       [  21.,   23.,   -5.],       [  25.,   23.,    4.],       [  31.,   25.,    1.],       [  45.,   26.,   -2.],       [  50.,   22.,    2.],       [  61.,   24.,   -2.],       [  76.,   20.,   -2.],       [  76.,   26.,   -4.],       [  89.,   22.,   -5.],       [  96.,   22.,    1.],       [   1.,   41.,   -4.],       [  12.,   35.,    0.],       [  14.,   35.,    2.],       [  30.,   34.,   -5.],       [  35.,   34.,   -2.],       [  47.,   36.,   -2.],       [  54.,   37.,   -4.],       [  61.,   36.,    1.],       [  71.,   37.,    1.],       [  85.,   32.,    3.],       [  92.,   41.,    4.],       [ 104.,   41.,    1.],       [   2.,   48.,    1.],       [   9.,   51.,   -4.],       [  22.,   45.,   -1.],       [  31.,   51.,   -4.],       [  32.,   46.,    1.],       [  46.,   51.,    4.],       [  55.,   53.,   -3.],       [  64.,   47.,    0.],       [  69.,   47.,   -4.],       [  80.,   47.,    2.],       [  93.,   54.,   -5.],       [ 101.,   51.,    4.],       [  -4.,   60.,   -3.],       [   7.,   58.,   -1.],       [  21.,   59.,    2.],       [  28.,   66.,    1.],       [  41.,   61.,    3.],       [  47.,   58.,    0.],       [  55.,   58.,   -3.],       [  68.,   63.,   -2.],       [  68.,   61.,   -5.],       [  83.,   64.,    0.],       [  94.,   63.,   -1.],       [ 101.,   60.,    0.],       [   0.,   70.,    1.],       [   5.,   77.,   -1.],       [  21.,   74.,   -1.],       [  28.,   79.,   -2.],       [  36.,   70.,   -1.],       [  42.,   78.,   -1.],       [  55.,   79.,   -1.],       [  60.,   72.,    4.],       [  69.,   75.,   -5.],       [  76.,   71.,    0.],       [  94.,   78.,    2.],       [  98.,   79.,   -1.],       [  -1.,   85.,   -5.],       [   4.,   85.,   -3.],       [  18.,   88.,    0.],       [  24.,   86.,    2.],       [  34.,   91.,    2.],       [  45.,   90.,   -3.],       [  57.,   88.,   -5.],       [  65.,   85.,   -4.],       [  74.,   88.,    3.],       [  78.,   89.,    1.],       [  89.,   92.,   -2.],       [ 101.,   82.,   -1.],       [  -4.,  103.,   -5.],       [   6.,   96.,   -1.],       [  21.,   99.,   -3.],       [  30.,  102.,    4.],       [  31.,  104.,    4.],       [  44.,  104.,   -2.],       [  51.,   97.,   -3.],       [  66.,   98.,    1.],       [  68.,   98.,   -2.],       [  84.,   97.,   -1.],       [  95.,   99.,    0.],       [  99.,   99.,   -4.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  3.2,  4.2,
        5.1,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.6,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 6.6,  7.7,  2.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 6.600000
        pt2[...,1] /= 7.700000
        pt2[...,2] /= 2.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p77(self):
        controlpoints = np.array([[  -2.,   -3.,    4.],       [   8.,    2.,    3.],       [  19.,    1.,   -4.],       [  27.,   -3.,    4.],       [  39.,   -2.,    4.],       [  54.,   -1.,   -4.],       [  55.,   -5.,    4.],       [  73.,    2.,    1.],       [  79.,    1.,   -3.],       [  86.,    1.,    1.],       [  96.,    1.,   -5.],       [   4.,   14.,    0.],       [  13.,    6.,    1.],       [  20.,   15.,    3.],       [  34.,   13.,   -3.],       [  40.,   15.,    4.],       [  48.,    9.,   -4.],       [  59.,   15.,    2.],       [  67.,   15.,    4.],       [  79.,   14.,    0.],       [  94.,   15.,   -2.],       [  97.,   10.,    2.],       [  -2.,   24.,   -1.],       [   7.,   22.,   -5.],       [  15.,   22.,   -1.],       [  29.,   19.,    1.],       [  36.,   26.,   -1.],       [  46.,   17.,   -4.],       [  59.,   19.,   -1.],       [  70.,   27.,   -4.],       [  81.,   18.,   -5.],       [  87.,   22.,   -2.],       [ 104.,   23.,    2.],       [   0.,   34.,   -2.],       [   6.,   38.,    4.],       [  20.,   33.,    2.],       [  32.,   34.,   -1.],       [  38.,   28.,   -4.],       [  52.,   38.,   -1.],       [  64.,   31.,   -1.],       [  72.,   35.,    1.],       [  82.,   32.,    0.],       [  86.,   29.,   -1.],       [ 101.,   35.,    0.],       [   4.,   40.,   -3.],       [   7.,   46.,    2.],       [  19.,   47.,    0.],       [  25.,   44.,   -3.],       [  36.,   48.,    1.],       [  49.,   39.,   -3.],       [  63.,   49.,   -3.],       [  67.,   39.,   -4.],       [  80.,   40.,    0.],       [  90.,   44.,   -5.],       [  99.,   39.,    4.],       [  -3.,   54.,   -4.],       [  13.,   58.,    1.],       [  18.,   54.,   -5.],       [  30.,   57.,   -4.],       [  38.,   55.,   -1.],       [  47.,   58.,    1.],       [  55.,   52.,    0.],       [  70.,   58.,    0.],       [  81.,   58.,    2.],       [  90.,   55.,   -4.],       [  95.,   57.,   -1.],       [   3.,   63.,   -1.],       [  14.,   62.,    2.],       [  21.,   69.,   -2.],       [  26.,   67.,    3.],       [  41.,   64.,   -2.],       [  45.,   65.,   -5.],       [  59.,   68.,   -1.],       [  69.,   68.,   -3.],       [  76.,   69.,    2.],       [  91.,   69.,    4.],       [ 101.,   62.,   -3.],       [   2.,   79.,    2.],       [  12.,   77.,   -1.],       [  17.,   81.,   -2.],       [  26.,   76.,    3.],       [  43.,   82.,    1.],       [  46.,   77.,    0.],       [  64.,   73.,    4.],       [  72.,   80.,    0.],       [  78.,   82.,    1.],       [  94.,   77.,    4.],       [ 100.,   78.,   -4.],       [  -3.,   89.,   -3.],       [  13.,   89.,    4.],       [  15.,   87.,    2.],       [  32.,   93.,    2.],       [  38.,   90.,    0.],       [  48.,   90.,   -5.],       [  64.,   87.,    4.],       [  71.,   89.,    1.],       [  78.,   93.,   -2.],       [  86.,   93.,    3.],       [ 104.,   86.,   -2.],       [   4.,   95.,   -4.],       [   8.,   98.,   -3.],       [  16.,   98.,    1.],       [  32.,  104.,   -5.],       [  40.,  100.,    0.],       [  49.,  104.,    2.],       [  57.,   95.,   -3.],       [  67.,  100.,    1.],       [  82.,   95.,   -5.],       [  93.,   99.,    2.],       [ 100.,   95.,    3.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.3,  3.3,  4.1,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.9,  2.6,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.mirror([0, 0, 3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p656(self):
        controlpoints = np.array([[   1.,    1.,    2.],       [  16.,   -2.,    3.],       [  32.,   -4.,   -1.],       [  40.,    3.,    0.],       [  54.,    2.,    2.],       [  71.,    1.,   -5.],       [  86.,    2.,   -5.],       [  97.,    2.,   -2.],       [  -2.,   23.,   -2.],       [   9.,   23.,    3.],       [  25.,   24.,   -5.],       [  41.,   18.,   -1.],       [  62.,   22.,    3.],       [  71.,   16.,    0.],       [  86.,   23.,    1.],       [  96.,   24.,    3.],       [  -3.,   37.,   -3.],       [  10.,   42.,    1.],       [  28.,   43.,    0.],       [  40.,   44.,    1.],       [  52.,   43.,   -5.],       [  72.,   37.,   -1.],       [  86.,   42.,    3.],       [  96.,   35.,   -3.],       [   0.,   55.,    3.],       [   9.,   63.,   -1.],       [  30.,   62.,   -4.],       [  46.,   60.,   -2.],       [  53.,   57.,    3.],       [  74.,   59.,   -4.],       [  85.,   64.,   -1.],       [  95.,   58.,   -1.],       [  -2.,   82.,   -1.],       [  18.,   75.,   -3.],       [  28.,   75.,    1.],       [  45.,   80.,   -4.],       [  56.,   79.,   -3.],       [  72.,   79.,    3.],       [  82.,   84.,    4.],       [ 103.,   75.,   -1.],       [   4.,   95.,   -4.],       [  13.,  103.,    3.],       [  26.,  102.,   -2.],       [  41.,  100.,    0.],       [  54.,  104.,   -5.],       [  76.,  100.,   -5.],       [  82.,   96.,    4.],       [ 102.,   95.,    2.],       [   3.,   -3.,   10.],       [  13.,   -4.,   17.],       [  30.,    3.,   11.],       [  37.,   -3.,   16.],       [  55.,    0.,   14.],       [  70.,   -1.,   13.],       [  81.,   -3.,   10.],       [ 102.,    2.,   14.],       [  -4.,   20.,   13.],       [   9.,   15.,   12.],       [  28.,   22.,   15.],       [  44.,   22.,    7.],       [  55.,   24.,    8.],       [  71.,   19.,    8.],       [  87.,   22.,   16.],       [  95.,   24.,   12.],       [  -2.,   36.,    8.],       [  18.,   36.,   14.],       [  24.,   37.,    9.],       [  40.,   37.,   17.],       [  55.,   36.,   10.],       [  74.,   44.,    9.],       [  90.,   42.,   15.],       [ 100.,   41.,   17.],       [  -4.,   61.,   17.],       [   9.,   55.,    9.],       [  31.,   61.,    9.],       [  37.,   59.,    9.],       [  54.,   60.,    9.],       [  68.,   60.,    8.],       [  90.,   59.,   11.],       [ 100.,   64.,   11.],       [  -4.,   79.,    9.],       [  10.,   81.,   15.],       [  23.,   79.,    8.],       [  40.,   84.,    9.],       [  59.,   83.,   14.],       [  66.,   83.,   16.],       [  89.,   76.,    9.],       [ 100.,   84.,   14.],       [  -1.,  100.,    8.],       [  19.,   96.,    7.],       [  28.,   96.,   13.],       [  42.,  102.,   11.],       [  53.,   97.,   10.],       [  67.,  101.,   14.],       [  80.,  104.,    8.],       [  98.,  103.,    7.],       [   3.,    3.,   20.],       [  10.,    4.,   23.],       [  23.,    4.,   25.],       [  42.,    3.,   22.],       [  57.,    1.,   23.],       [  69.,   -2.,   28.],       [  84.,   -4.,   26.],       [ 104.,    3.,   24.],       [  -4.,   16.,   24.],       [  17.,   19.,   21.],       [  32.,   22.,   21.],       [  44.,   19.,   28.],       [  60.,   15.,   24.],       [  75.,   23.,   24.],       [  90.,   24.,   29.],       [ 100.,   24.,   23.],       [  -3.,   43.,   25.],       [  10.,   38.,   29.],       [  33.,   40.,   24.],       [  45.,   42.,   23.],       [  59.,   35.,   29.],       [  73.,   42.,   23.],       [  88.,   39.,   20.],       [  98.,   41.,   24.],       [   4.,   62.,   27.],       [  14.,   59.,   23.],       [  32.,   61.,   24.],       [  38.,   58.,   29.],       [  59.,   61.,   21.],       [  69.,   55.,   23.],       [  82.,   60.,   29.],       [  95.,   55.,   21.],       [  -1.,   81.,   29.],       [  19.,   84.,   20.],       [  29.,   80.,   29.],       [  45.,   79.,   20.],       [  60.,   79.,   24.],       [  74.,   78.,   29.],       [  90.,   84.,   29.],       [ 102.,   80.,   29.],       [   4.,   97.,   24.],       [  11.,   98.,   28.],       [  33.,   96.,   24.],       [  40.,   97.,   27.],       [  58.,  103.,   28.],       [  73.,   95.,   23.],       [  86.,   97.,   22.],       [  95.,  103.,   23.],       [   4.,   -4.,   37.],       [  18.,   -2.,   34.],       [  23.,    2.,   35.],       [  38.,    3.,   35.],       [  52.,   -5.,   35.],       [  69.,   -2.,   36.],       [  84.,   -1.,   35.],       [ 101.,   -4.,   37.],       [  -4.,   23.,   34.],       [  17.,   20.,   34.],       [  23.,   24.,   32.],       [  37.,   22.,   33.],       [  60.,   17.,   40.],       [  71.,   19.,   40.],       [  88.,   20.,   36.],       [ 102.,   20.,   33.],       [  -2.,   37.,   33.],       [  16.,   42.,   40.],       [  33.,   44.,   41.],       [  38.,   39.,   35.],       [  55.,   37.,   32.],       [  71.,   38.,   41.],       [  82.,   36.,   35.],       [  98.,   35.,   37.],       [  -5.,   55.,   38.],       [  13.,   55.,   32.],       [  27.,   56.,   34.],       [  43.,   63.,   37.],       [  55.,   64.,   41.],       [  72.,   55.,   33.],       [  84.,   57.,   35.],       [  98.,   55.,   39.],       [   3.,   75.,   42.],       [  12.,   80.,   40.],       [  26.,   79.,   39.],       [  42.,   78.,   32.],       [  59.,   79.,   37.],       [  70.,   82.,   38.],       [  81.,   77.,   37.],       [  95.,   84.,   35.],       [  -2.,  101.,   33.],       [  13.,   95.,   33.],       [  25.,  102.,   38.],       [  45.,  102.,   37.],       [  53.,   95.,   34.],       [  66.,  103.,   33.],       [  88.,  104.,   36.],       [  99.,   96.,   32.],       [  -4.,    4.,   45.],       [  11.,    0.,   52.],       [  30.,   -1.,   49.],       [  47.,    0.,   53.],       [  54.,    3.,   53.],       [  66.,    4.,   48.],       [  89.,    0.,   53.],       [  95.,    3.,   48.],       [  -5.,   22.,   52.],       [  10.,   17.,   47.],       [  26.,   17.,   52.],       [  42.,   16.,   48.],       [  60.,   24.,   48.],       [  71.,   18.,   48.],       [  82.,   18.,   51.],       [ 100.,   22.,   50.],       [  -5.,   43.,   46.],       [  12.,   41.,   48.],       [  31.,   40.,   48.],       [  42.,   39.,   47.],       [  62.,   43.,   51.],       [  74.,   40.,   52.],       [  89.,   36.,   50.],       [  99.,   43.,   52.],       [   3.,   64.,   47.],       [  10.,   57.,   47.],       [  26.,   64.,   48.],       [  43.,   58.,   52.],       [  55.,   60.,   48.],       [  69.,   62.,   49.],       [  84.,   62.,   53.],       [  98.,   58.,   52.],       [  -4.,   82.,   49.],       [  15.,   76.,   46.],       [  27.,   76.,   54.],       [  47.,   79.,   51.],       [  52.,   78.,   51.],       [  70.,   81.,   45.],       [  87.,   82.,   53.],       [ 100.,   76.,   47.],       [   3.,  104.,   47.],       [  19.,  103.,   51.],       [  30.,   96.,   52.],       [  40.,  102.,   45.],       [  61.,   98.,   53.],       [  69.,   97.,   47.],       [  81.,  103.,   51.],       [ 104.,   97.,   52.],       [  -3.,    0.,   60.],       [  15.,   -2.,   61.],       [  25.,    0.,   61.],       [  46.,    1.,   65.],       [  54.,    3.,   66.],       [  67.,   -2.,   58.],       [  87.,    3.,   58.],       [ 103.,   -4.,   59.],       [  -1.,   23.,   64.],       [  16.,   21.,   63.],       [  28.,   18.,   57.],       [  41.,   21.,   62.],       [  57.,   15.,   60.],       [  69.,   19.,   64.],       [  83.,   16.,   61.],       [ 104.,   19.,   63.],       [  -3.,   41.,   58.],       [  15.,   42.,   58.],       [  23.,   42.,   59.],       [  39.,   37.,   66.],       [  62.,   44.,   62.],       [  66.,   39.,   58.],       [  82.,   42.,   63.],       [ 103.,   40.,   63.],       [  -4.,   61.,   66.],       [  15.,   58.,   66.],       [  27.,   55.,   61.],       [  39.,   56.,   63.],       [  52.,   61.,   65.],       [  69.,   55.,   62.],       [  85.,   56.,   57.],       [ 104.,   55.,   57.],       [   1.,   80.,   65.],       [  12.,   80.,   62.],       [  25.,   75.,   67.],       [  42.,   76.,   66.],       [  60.,   77.,   66.],       [  73.,   80.,   62.],       [  88.,   84.,   61.],       [ 103.,   80.,   65.],       [  -2.,   99.,   60.],       [  10.,  101.,   65.],       [  27.,  100.,   57.],       [  40.,   98.,   60.],       [  58.,   97.,   61.],       [  68.,   97.,   64.],       [  82.,   98.,   59.],       [  96.,   99.,   64.],       [  -2.,    3.,   75.],       [  18.,    2.,   76.],       [  31.,   -5.,   72.],       [  47.,    2.,   71.],       [  62.,    2.,   70.],       [  67.,   -4.,   75.],       [  86.,   -1.,   73.],       [ 103.,   -4.,   71.],       [  -3.,   16.,   76.],       [  15.,   20.,   75.],       [  26.,   18.,   78.],       [  43.,   24.,   78.],       [  59.,   22.,   75.],       [  72.,   19.,   70.],       [  88.,   22.,   79.],       [  98.,   19.,   79.],       [  -1.,   41.,   76.],       [  13.,   39.,   78.],       [  25.,   40.,   79.],       [  42.,   37.,   72.],       [  60.,   43.,   79.],       [  67.,   36.,   73.],       [  83.,   44.,   75.],       [ 100.,   37.,   78.],       [  -1.,   59.,   74.],       [  11.,   55.,   71.],       [  31.,   63.,   71.],       [  47.,   62.,   75.],       [  59.,   57.,   75.],       [  76.,   63.,   73.],       [  84.,   58.,   79.],       [ 104.,   57.,   74.],       [  -1.,   84.,   71.],       [  10.,   79.,   75.],       [  24.,   78.,   78.],       [  44.,   79.,   72.],       [  57.,   75.,   72.],       [  73.,   79.,   75.],       [  87.,   75.,   73.],       [ 104.,   77.,   79.],       [  -4.,   98.,   77.],       [  13.,  100.,   77.],       [  25.,   96.,   74.],       [  39.,  102.,   79.],       [  62.,   96.,   73.],       [  75.,   95.,   70.],       [  88.,   97.,   74.],       [  99.,   95.,   74.],       [  -1.,   -4.,   83.],       [   9.,   -1.,   91.],       [  23.,    4.,   89.],       [  38.,   -5.,   91.],       [  55.,    0.,   82.],       [  75.,   -3.,   90.],       [  86.,   -3.,   82.],       [  96.,   -4.,   88.],       [  -3.,   17.,   83.],       [  10.,   24.,   82.],       [  28.,   20.,   90.],       [  42.,   15.,   88.],       [  55.,   20.,   85.],       [  75.,   23.,   87.],       [  83.,   16.,   90.],       [ 104.,   20.,   85.],       [  -5.,   44.,   84.],       [  10.,   42.,   84.],       [  24.,   39.,   83.],       [  39.,   44.,   87.],       [  60.,   42.,   88.],       [  66.,   39.,   90.],       [  81.,   38.,   86.],       [  98.,   44.,   86.],       [  -5.,   63.,   88.],       [   9.,   64.,   85.],       [  25.,   60.,   89.],       [  43.,   64.,   88.],       [  59.,   55.,   90.],       [  74.,   64.,   85.],       [  90.,   61.,   85.],       [ 103.,   64.,   92.],       [  -4.,   83.,   92.],       [  14.,   75.,   84.],       [  26.,   78.,   88.],       [  46.,   79.,   91.],       [  58.,   82.,   83.],       [  73.,   79.,   90.],       [  82.,   81.,   83.],       [  95.,   84.,   90.],       [   1.,   96.,   83.],       [  11.,  101.,   88.],       [  27.,  102.,   88.],       [  47.,   97.,   88.],       [  54.,  104.,   87.],       [  70.,  101.,   82.],       [  87.,  102.,   92.],       [ 100.,   97.,   83.],       [  -3.,   -4.,   95.],       [  18.,   -5.,   98.],       [  28.,   -5.,   98.],       [  45.,   -4.,  101.],       [  53.,   -3.,  101.],       [  75.,   -2.,   97.],       [  86.,    2.,  101.],       [ 101.,    1.,  103.],       [   3.,   24.,  101.],       [  17.,   21.,   98.],       [  31.,   17.,  104.],       [  45.,   16.,   99.],       [  56.,   17.,   98.],       [  70.,   19.,   98.],       [  83.,   18.,  101.],       [  96.,   20.,   99.],       [  -2.,   42.,  104.],       [  14.,   39.,  102.],       [  27.,   40.,  102.],       [  44.,   41.,  104.],       [  57.,   40.,  100.],       [  75.,   36.,  103.],       [  83.,   42.,  101.],       [ 104.,   44.,  101.],       [   3.,   56.,   96.],       [  10.,   62.,  100.],       [  29.,   56.,  104.],       [  46.,   58.,  103.],       [  55.,   58.,   97.],       [  69.,   61.,  100.],       [  89.,   57.,  101.],       [ 101.,   57.,  103.],       [  -1.,   83.,   97.],       [  18.,   82.,   98.],       [  33.,   78.,  101.],       [  46.,   75.,  100.],       [  54.,   81.,  101.],       [  73.,   77.,  104.],       [  86.,   79.,   95.],       [  98.,   83.,   98.],       [   2.,  100.,  100.],       [  12.,  104.,  104.],       [  26.,  103.,  103.],       [  44.,  100.,  100.],       [  62.,  103.,   97.],       [  66.,   99.,  100.],       [  81.,  101.,   99.],       [  95.,  101.,   96.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.3,  3. ,  3. ,  3. ,
        3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2. ,  2. ,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.3,  3.1,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 5.7,  7.2,  6.9])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 5.700000
        pt2[...,1] -= 7.200000
        pt2[...,2] -= 6.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p557(self):
        controlpoints = np.array([[  -1.,   -4.,   -1.],       [  12.,   -2.,   -3.],       [  25.,    1.,   -2.],       [  41.,    3.,   -4.],       [  53.,   -3.,    1.],       [  59.,    0.,   -2.],       [  70.,   -5.,    1.],       [  88.,   -2.,   -2.],       [ 102.,    4.,   -2.],       [  -1.,   13.,   -1.],       [  15.,   10.,   -2.],       [  23.,   16.,    3.],       [  41.,   17.,    4.],       [  52.,   18.,    1.],       [  60.,    9.,    4.],       [  72.,   11.,   -4.],       [  90.,   18.,   -3.],       [ 101.,   16.,    4.],       [  -3.,   30.,    3.],       [  16.,   25.,    0.],       [  28.,   28.,    0.],       [  39.,   33.,    4.],       [  53.,   29.,    0.],       [  67.,   33.,   -3.],       [  74.,   25.,   -3.],       [  88.,   33.,    0.],       [ 100.,   25.,   -3.],       [   0.,   46.,    1.],       [   7.,   38.,   -3.],       [  26.,   38.,   -3.],       [  37.,   39.,   -2.],       [  52.,   43.,    3.],       [  60.,   43.,    2.],       [  75.,   40.,    1.],       [  88.,   47.,    4.],       [  96.,   43.,    0.],       [   0.,   57.,   -3.],       [  14.,   59.,   -5.],       [  22.,   54.,    2.],       [  42.,   53.,    4.],       [  48.,   57.,    4.],       [  62.,   59.,    3.],       [  71.,   59.,    3.],       [  89.,   54.,    2.],       [  98.,   52.,   -1.],       [   3.,   71.,    3.],       [  17.,   76.,   -5.],       [  29.,   70.,    0.],       [  37.,   73.,   -2.],       [  54.,   73.,    4.],       [  66.,   76.,    2.],       [  73.,   75.,    3.],       [  83.,   68.,    1.],       [ 104.,   72.,   -1.],       [  -1.,   88.,    1.],       [   8.,   85.,   -1.],       [  29.,   82.,   -5.],       [  37.,   85.,    2.],       [  51.,   83.,   -2.],       [  62.,   87.,    0.],       [  75.,   85.,    2.],       [  92.,   82.,   -5.],       [ 102.,   87.,   -2.],       [  -5.,   98.,   -3.],       [  13.,  100.,    1.],       [  20.,   98.,    3.],       [  39.,   95.,    3.],       [  48.,   97.,    2.],       [  63.,  103.,   -2.],       [  73.,   95.,    1.],       [  89.,   99.,    0.],       [  97.,   95.,   -1.],       [  -2.,   -5.,   12.],       [  10.,   -3.,   11.],       [  27.,    4.,   10.],       [  35.,    0.,   14.],       [  45.,   -1.,   11.],       [  65.,    4.,   13.],       [  76.,   -1.,    9.],       [  87.,    0.,   15.],       [  97.,    2.,   14.],       [   0.,   12.,   12.],       [  16.,   15.,   17.],       [  23.,   11.,   10.],       [  34.,   12.,   13.],       [  45.,   11.,   12.],       [  65.,    9.,   12.],       [  78.,   10.,   12.],       [  92.,   11.,   12.],       [ 101.,   17.,   16.],       [  -1.,   32.,   13.],       [  15.,   27.,   19.],       [  28.,   24.,   18.],       [  36.,   29.,   17.],       [  46.,   30.,   14.],       [  64.,   25.,   12.],       [  71.,   27.,    9.],       [  88.,   32.,    9.],       [  99.,   32.,   18.],       [  -2.,   41.,   11.],       [  13.,   47.,   18.],       [  24.,   41.,   18.],       [  37.,   43.,   17.],       [  47.,   39.,   12.],       [  66.,   44.,   14.],       [  79.,   42.,   15.],       [  92.,   42.,   16.],       [  95.,   42.,   16.],       [   4.,   59.,   16.],       [   8.,   53.,   10.],       [  20.,   60.,   18.],       [  34.,   59.,   14.],       [  49.,   57.,   16.],       [  67.,   52.,   13.],       [  72.,   57.,   15.],       [  89.,   52.,   16.],       [ 101.,   60.,   11.],       [   1.,   73.,   11.],       [   8.,   69.,   18.],       [  21.,   70.,   10.],       [  37.,   72.,   16.],       [  51.,   68.,   14.],       [  59.,   69.,   12.],       [  77.,   74.,   10.],       [  89.,   73.,   18.],       [ 100.,   74.,   19.],       [  -4.,   88.,   10.],       [  14.,   90.,   14.],       [  22.,   84.,   16.],       [  32.,   90.,   16.],       [  53.,   80.,   11.],       [  60.,   84.,   17.],       [  77.,   85.,   14.],       [  91.,   83.,   16.],       [  99.,   81.,   15.],       [   1.,   97.,   17.],       [  12.,   97.,   10.],       [  23.,   97.,   18.],       [  42.,   97.,   16.],       [  54.,   97.,   14.],       [  63.,  100.,    9.],       [  79.,  101.,    9.],       [  88.,   96.,   11.],       [  99.,  102.,   17.],       [   2.,   -1.,   31.],       [   7.,    4.,   26.],       [  22.,   -1.,   32.],       [  40.,   -2.,   31.],       [  45.,   -3.,   25.],       [  67.,   -1.,   25.],       [  78.,    3.,   30.],       [  91.,   -4.,   33.],       [  96.,    3.,   27.],       [  -2.,   18.,   29.],       [  11.,   14.,   24.],       [  28.,   18.,   28.],       [  33.,   14.,   27.],       [  46.,   13.,   31.],       [  60.,   11.,   30.],       [  73.,   16.,   31.],       [  85.,   13.,   32.],       [ 102.,   10.,   33.],       [   1.,   28.,   32.],       [  10.,   33.,   23.],       [  22.,   24.,   26.],       [  41.,   31.,   26.],       [  51.,   24.,   29.],       [  59.,   30.,   26.],       [  71.,   30.,   25.],       [  85.,   28.,   23.],       [ 104.,   30.,   25.],       [  -4.,   45.,   24.],       [   9.,   44.,   23.],       [  24.,   43.,   31.],       [  35.,   42.,   31.],       [  46.,   38.,   25.],       [  67.,   39.,   30.],       [  70.,   47.,   31.],       [  82.,   47.,   26.],       [  99.,   38.,   32.],       [  -3.,   57.,   25.],       [  15.,   55.,   25.],       [  28.,   62.,   25.],       [  42.,   55.,   28.],       [  47.,   56.,   33.],       [  63.,   61.,   31.],       [  77.,   57.,   30.],       [  89.,   60.,   27.],       [  97.,   55.,   32.],       [   3.,   67.,   29.],       [   7.,   75.,   24.],       [  24.,   74.,   32.],       [  33.,   67.,   31.],       [  51.,   69.,   32.],       [  62.,   68.,   29.],       [  76.,   72.,   28.],       [  83.,   74.,   32.],       [  97.,   68.,   26.],       [   3.,   89.,   25.],       [  13.,   86.,   26.],       [  25.,   85.,   25.],       [  36.,   84.,   25.],       [  51.,   88.,   30.],       [  57.,   84.,   26.],       [  71.,   89.,   32.],       [  87.,   86.,   26.],       [  98.,   83.,   26.],       [   2.,   95.,   31.],       [  17.,   99.,   28.],       [  27.,  100.,   23.],       [  35.,   96.,   23.],       [  50.,  103.,   31.],       [  62.,   96.,   28.],       [  73.,  100.,   30.],       [  90.,  103.,   26.],       [ 103.,   96.,   33.],       [  -4.,    3.,   42.],       [  14.,   -4.,   44.],       [  28.,   -4.,   42.],       [  38.,   -3.,   46.],       [  53.,    1.,   44.],       [  67.,   -3.,   45.],       [  75.,    1.,   41.],       [  90.,    2.,   42.],       [ 101.,    0.,   44.],       [  -4.,   11.,   43.],       [   9.,   19.,   38.],       [  21.,   15.,   41.],       [  33.,   11.,   42.],       [  46.,   12.,   41.],       [  61.,   11.,   38.],       [  73.,   18.,   40.],       [  89.,   18.,   39.],       [ 102.,   11.,   45.],       [  -2.,   25.,   41.],       [  13.,   23.,   44.],       [  28.,   32.,   39.],       [  33.,   27.,   42.],       [  46.,   31.,   45.],       [  67.,   30.,   37.],       [  70.,   30.,   42.],       [  89.,   33.,   42.],       [  99.,   31.,   40.],       [   3.,   46.,   39.],       [   9.,   47.,   41.],       [  21.,   38.,   43.],       [  40.,   39.,   40.],       [  46.,   39.,   39.],       [  59.,   46.,   47.],       [  74.,   43.,   39.],       [  84.,   47.,   40.],       [ 102.,   38.,   43.],       [  -5.,   52.,   47.],       [  10.,   53.,   41.],       [  21.,   53.,   39.],       [  38.,   56.,   39.],       [  45.,   53.,   39.],       [  59.,   56.,   41.],       [  75.,   54.,   39.],       [  89.,   61.,   47.],       [ 101.,   62.,   47.],       [   4.,   67.,   45.],       [  13.,   66.,   47.],       [  29.,   67.,   40.],       [  39.,   71.,   39.],       [  52.,   67.,   40.],       [  66.,   68.,   46.],       [  72.,   71.,   39.],       [  91.,   70.,   47.],       [  96.,   67.,   40.],       [   2.,   84.,   44.],       [  14.,   85.,   40.],       [  28.,   81.,   42.],       [  40.,   84.,   41.],       [  46.,   86.,   38.],       [  66.,   85.,   47.],       [  77.,   87.,   47.],       [  87.,   83.,   41.],       [ 104.,   85.,   40.],       [  -4.,  104.,   44.],       [   8.,  101.,   40.],       [  21.,   95.,   43.],       [  35.,  103.,   41.],       [  50.,   99.,   47.],       [  57.,   96.,   46.],       [  72.,   95.,   38.],       [  88.,   99.,   46.],       [ 104.,   97.,   39.],       [   0.,    1.,   57.],       [   7.,   -4.,   61.],       [  24.,   -2.,   52.],       [  37.,    4.,   57.],       [  49.,    0.,   56.],       [  59.,   -1.,   56.],       [  71.,    2.,   60.],       [  87.,    4.,   52.],       [  96.,   -1.,   57.],       [  -2.,   11.,   61.],       [  15.,   13.,   52.],       [  27.,   17.,   53.],       [  35.,   16.,   57.],       [  51.,   12.,   59.],       [  66.,   13.,   61.],       [  79.,   15.,   53.],       [  83.,   16.,   61.],       [ 101.,   17.,   53.],       [   4.,   27.,   60.],       [  10.,   33.,   55.],       [  28.,   25.,   57.],       [  32.,   33.,   57.],       [  53.,   29.,   54.],       [  64.,   27.,   61.],       [  78.,   29.,   57.],       [  88.,   32.,   55.],       [ 100.,   29.,   52.],       [   0.,   46.,   54.],       [  15.,   41.,   52.],       [  25.,   40.,   52.],       [  42.,   42.,   59.],       [  54.,   41.,   55.],       [  60.,   40.,   52.],       [  79.,   42.,   53.],       [  83.,   39.,   55.],       [  99.,   39.,   60.],       [  -3.,   61.,   58.],       [  15.,   54.,   55.],       [  28.,   56.,   53.],       [  35.,   55.,   54.],       [  50.,   60.,   52.],       [  65.,   55.,   58.],       [  70.,   61.,   57.],       [  91.,   55.,   60.],       [ 102.,   60.,   52.],       [   4.,   73.,   52.],       [  10.,   71.,   55.],       [  25.,   72.,   55.],       [  35.,   75.,   53.],       [  46.,   67.,   53.],       [  61.,   73.,   60.],       [  72.,   74.,   59.],       [  82.,   71.,   55.],       [ 100.,   74.,   59.],       [  -3.,   86.,   55.],       [  15.,   88.,   54.],       [  22.,   89.,   54.],       [  40.,   84.,   59.],       [  53.,   84.,   52.],       [  65.,   85.,   56.],       [  79.,   81.,   53.],       [  90.,   84.,   57.],       [ 103.,   90.,   55.],       [  -5.,   98.,   57.],       [   9.,  100.,   53.],       [  20.,   95.,   60.],       [  40.,  100.,   60.],       [  51.,  101.,   56.],       [  60.,   95.,   55.],       [  78.,  104.,   56.],       [  85.,  104.,   60.],       [ 103.,   95.,   58.],       [   2.,    2.,   75.],       [   9.,    1.,   67.],       [  23.,    1.,   75.],       [  41.,    0.,   69.],       [  52.,    1.,   71.],       [  59.,   -1.,   72.],       [  75.,    2.,   74.],       [  84.,    1.,   71.],       [ 100.,    2.,   70.],       [  -5.,   12.,   76.],       [  17.,   17.,   67.],       [  29.,   12.,   72.],       [  35.,   13.,   71.],       [  45.,   11.,   74.],       [  58.,    9.,   75.],       [  70.,   15.,   68.],       [  88.,   10.,   74.],       [ 101.,   15.,   69.],       [   3.,   28.,   70.],       [  15.,   31.,   76.],       [  21.,   29.,   71.],       [  37.,   25.,   67.],       [  51.,   23.,   75.],       [  64.,   30.,   73.],       [  78.,   29.,   69.],       [  86.,   31.,   71.],       [ 103.,   26.,   73.],       [   4.,   40.,   72.],       [   9.,   42.,   67.],       [  23.,   39.,   69.],       [  40.,   46.,   74.],       [  48.,   42.,   67.],       [  60.,   39.,   73.],       [  71.,   46.,   74.],       [  88.,   47.,   76.],       [  98.,   47.,   68.],       [  -4.,   55.,   73.],       [   8.,   52.,   70.],       [  22.,   61.,   68.],       [  37.,   56.,   76.],       [  54.,   61.,   71.],       [  62.,   57.,   70.],       [  79.,   60.,   66.],       [  87.,   61.,   74.],       [  95.,   60.,   66.],       [   3.,   69.,   70.],       [  10.,   66.,   71.],       [  20.,   72.,   69.],       [  40.,   74.,   75.],       [  48.,   68.,   69.],       [  67.,   67.,   73.],       [  70.,   73.,   73.],       [  85.,   69.,   71.],       [ 103.,   76.,   70.],       [   0.,   89.,   73.],       [   8.,   88.,   74.],       [  25.,   83.,   67.],       [  35.,   88.,   67.],       [  51.,   89.,   66.],       [  58.,   89.,   68.],       [  72.,   87.,   69.],       [  89.,   85.,   68.],       [  97.,   87.,   69.],       [  -4.,  102.,   74.],       [   9.,  103.,   75.],       [  27.,  102.,   67.],       [  40.,  100.,   66.],       [  51.,  102.,   69.],       [  61.,   95.,   67.],       [  79.,   99.,   73.],       [  85.,  103.,   66.],       [  97.,   99.,   70.],       [   4.,   -1.,   89.],       [  15.,   -3.,   82.],       [  21.,   -3.,   84.],       [  39.,    4.,   80.],       [  48.,    0.,   87.],       [  64.,   -4.,   82.],       [  71.,   -2.,   87.],       [  84.,   -2.,   84.],       [ 102.,   -2.,   87.],       [  -1.,   13.,   84.],       [  11.,   13.,   90.],       [  20.,   12.,   89.],       [  41.,   18.,   82.],       [  54.,   14.,   89.],       [  63.,   17.,   81.],       [  78.,   11.,   86.],       [  92.,   11.,   80.],       [  98.,   10.,   89.],       [   1.,   26.,   90.],       [  13.,   32.,   90.],       [  22.,   25.,   82.],       [  41.,   30.,   83.],       [  46.,   23.,   81.],       [  63.,   25.,   83.],       [  72.,   24.,   85.],       [  89.,   29.,   90.],       [ 102.,   30.,   89.],       [  -1.,   42.,   85.],       [  15.,   41.,   82.],       [  28.,   39.,   87.],       [  41.,   39.,   84.],       [  50.,   40.,   81.],       [  60.,   40.,   83.],       [  71.,   46.,   88.],       [  88.,   39.,   81.],       [  95.,   43.,   86.],       [   4.,   55.,   85.],       [  12.,   54.,   87.],       [  27.,   54.,   87.],       [  41.,   60.,   90.],       [  53.,   52.,   83.],       [  60.,   57.,   89.],       [  78.,   53.,   82.],       [  88.,   52.,   82.],       [ 103.,   53.,   84.],       [   4.,   76.,   83.],       [  15.,   69.,   81.],       [  20.,   67.,   84.],       [  34.,   71.,   88.],       [  50.,   69.,   85.],       [  65.,   74.,   87.],       [  72.,   69.,   83.],       [  87.,   72.,   89.],       [ 104.,   74.,   88.],       [  -1.,   86.,   87.],       [  14.,   83.,   88.],       [  24.,   83.,   82.],       [  42.,   82.,   90.],       [  50.,   88.,   84.],       [  62.,   87.,   88.],       [  78.,   88.,   86.],       [  90.,   83.,   85.],       [  95.,   85.,   90.],       [   2.,   97.,   84.],       [  11.,  102.,   88.],       [  25.,   97.,   83.],       [  37.,  102.,   86.],       [  48.,  102.,   90.],       [  61.,   97.,   88.],       [  73.,  104.,   87.],       [  84.,   96.,   81.],       [ 103.,   98.,   84.],       [   4.,   -4.,   99.],       [   8.,   -4.,   98.],       [  29.,   -3.,   97.],       [  33.,    2.,  104.],       [  52.,   -2.,   96.],       [  64.,   -5.,  104.],       [  74.,   -1.,  100.],       [  87.,   -3.,   95.],       [  95.,   -3.,   95.],       [   0.,   11.,  100.],       [  16.,   10.,   99.],       [  23.,   13.,  102.],       [  36.,   15.,  104.],       [  45.,   18.,   95.],       [  58.,   16.,  103.],       [  79.,   15.,  103.],       [  83.,   12.,   96.],       [ 103.,   12.,   97.],       [   2.,   32.,  100.],       [  10.,   24.,  103.],       [  21.,   32.,   95.],       [  33.,   28.,   99.],       [  47.,   24.,  102.],       [  64.,   33.,  100.],       [  72.,   27.,  100.],       [  83.,   33.,   99.],       [ 103.,   24.,  103.],       [  -4.,   44.,  104.],       [  11.,   41.,  102.],       [  21.,   41.,   99.],       [  34.,   45.,  101.],       [  52.,   46.,  104.],       [  57.,   42.,  103.],       [  70.,   41.,  101.],       [  92.,   47.,  104.],       [  95.,   44.,   96.],       [   4.,   61.,  102.],       [  14.,   60.,  104.],       [  22.,   57.,  104.],       [  39.,   55.,  101.],       [  52.,   59.,   96.],       [  61.,   52.,  101.],       [  71.,   55.,   97.],       [  91.,   58.,  100.],       [ 104.,   59.,  101.],       [  -2.,   71.,   98.],       [  14.,   71.,   99.],       [  25.,   74.,   99.],       [  38.,   73.,   99.],       [  48.,   73.,  102.],       [  60.,   69.,   98.],       [  74.,   74.,   96.],       [  86.,   71.,  103.],       [  98.,   72.,   98.],       [   1.,   87.,  104.],       [  11.,   82.,  101.],       [  20.,   88.,   98.],       [  37.,   90.,   99.],       [  49.,   85.,   95.],       [  64.,   84.,  104.],       [  75.,   89.,  104.],       [  86.,   84.,  103.],       [  98.,   86.,   95.],       [  -3.,  104.,   99.],       [  15.,  103.,  101.],       [  20.,   98.,   96.],       [  40.,   95.,  102.],       [  52.,  100.,  102.],       [  62.,   97.,  100.],       [  73.,  103.,   99.],       [  89.,   97.,  104.],       [ 101.,  103.,  104.]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.9,  3.1,  4.4,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.4,  2.9,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  2.,  2.,  2.,  2.,  2.,
        2.,  2.]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([ 4.4,  7.3,  6.2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 4.400000
        pt2[...,1] /= 7.300000
        pt2[...,2] /= 6.200000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p777(self):
        controlpoints = np.array([[  -5.,    1.,    2.],       [   8.,   -2.,    4.],       [  26.,    4.,   -2.],       [  29.,    1.,    2.],       [  48.,   -2.,   -5.],       [  55.,    3.,    4.],       [  69.,   -4.,    1.],       [  73.,   -5.,    0.],       [  91.,    4.,   -1.],       [  99.,    1.,   -1.],       [   4.,   15.,    1.],       [  12.,    6.,   -5.],       [  20.,    8.,    3.],       [  36.,   12.,    1.],       [  46.,    7.,    0.],       [  53.,   11.,   -1.],       [  70.,    8.,    4.],       [  75.,    6.,    1.],       [  83.,   12.,   -1.],       [  98.,   10.,   -2.],       [  -3.,   20.,   -2.],       [  14.,   19.,    3.],       [  17.,   23.,    3.],       [  32.,   25.,    1.],       [  39.,   20.,   -3.],       [  53.,   21.,    0.],       [  69.,   24.,    2.],       [  78.,   17.,    4.],       [  90.,   25.,    3.],       [ 101.,   23.,    4.],       [   2.,   33.,    4.],       [   9.,   32.,    0.],       [  23.,   34.,   -3.],       [  28.,   31.,    1.],       [  46.,   28.,   -2.],       [  54.,   33.,    0.],       [  62.,   31.,    4.],       [  80.,   32.,    3.],       [  92.,   38.,    4.],       [ 103.,   32.,    4.],       [   0.,   40.,    4.],       [   8.,   47.,   -3.],       [  22.,   46.,   -5.],       [  29.,   46.,    0.],       [  41.,   47.,   -2.],       [  59.,   45.,    2.],       [  66.,   44.,   -5.],       [  77.,   44.,   -4.],       [  87.,   45.,   -3.],       [  98.,   47.,   -2.],       [   0.,   54.,   -2.],       [   9.,   55.,   -4.],       [  25.,   56.,   -2.],       [  30.,   57.,    1.],       [  39.,   59.,    0.],       [  57.,   60.,    3.],       [  70.,   54.,   -5.],       [  82.,   54.,    2.],       [  89.,   52.,   -1.],       [  95.,   52.,    3.],       [   0.,   66.,    3.],       [  12.,   65.,    0.],       [  17.,   69.,   -5.],       [  33.,   66.,    2.],       [  41.,   70.,    4.],       [  59.,   70.,   -3.],       [  62.,   67.,   -2.],       [  73.,   62.,   -3.],       [  90.,   70.,   -4.],       [  96.,   63.,    4.],       [   1.,   76.,   -2.],       [  15.,   74.,   -2.],       [  20.,   81.,    0.],       [  29.,   74.,    0.],       [  43.,   73.,    2.],       [  55.,   82.,   -5.],       [  66.,   80.,    0.],       [  82.,   73.,   -3.],       [  85.,   79.,    1.],       [  97.,   73.,    3.],       [  -2.,   88.,   -3.],       [  13.,   86.,    3.],       [  19.,   84.,   -5.],       [  32.,   85.,    3.],       [  46.,   84.,    3.],       [  59.,   89.,   -3.],       [  64.,   92.,   -4.],       [  80.,   90.,   -5.],       [  93.,   88.,    3.],       [ 100.,   89.,    4.],       [   2.,   96.,   -3.],       [   8.,  102.,   -4.],       [  17.,   99.,   -4.],       [  34.,   99.,   -2.],       [  46.,   98.,    3.],       [  54.,  102.,    4.],       [  69.,  100.,   -1.],       [  77.,   96.,    0.],       [  87.,  104.,   -1.],       [  97.,   96.,   -2.],       [   4.,    0.,   11.],       [  10.,   -3.,   17.],       [  18.,   -2.,   16.],       [  28.,    0.,   17.],       [  41.,   -2.,   13.],       [  54.,   -5.,   18.],       [  65.,   -3.,   18.],       [  78.,   -5.,   17.],       [  84.,   -5.,   19.],       [ 100.,    2.,   15.],       [  -4.,   14.,   18.],       [  14.,   14.,   15.],       [  22.,   13.,   19.],       [  31.,   13.,   18.],       [  43.,   14.,   17.],       [  54.,    6.,    9.],       [  69.,   13.,   10.],       [  73.,   13.,   18.],       [  87.,   10.,   18.],       [  99.,    6.,   14.],       [  -3.,   23.,   14.],       [  12.,   17.,   15.],       [  22.,   23.,   15.],       [  31.,   23.,   13.],       [  43.,   23.,   17.],       [  53.,   21.,   14.],       [  69.,   24.,   18.],       [  78.,   22.,   15.],       [  87.,   26.,   13.],       [ 100.,   18.,   14.],       [   3.,   32.,   12.],       [   8.,   37.,   13.],       [  19.,   32.,   13.],       [  30.,   33.,   10.],       [  45.,   36.,   12.],       [  51.,   30.,   17.],       [  65.,   28.,   16.],       [  82.,   31.,   19.],       [  93.,   30.,   10.],       [ 101.,   34.,   15.],       [   0.,   47.,    9.],       [  13.,   46.,   12.],       [  22.,   44.,   11.],       [  31.,   44.,   12.],       [  46.,   42.,   17.],       [  60.,   43.,   16.],       [  62.,   46.,   14.],       [  74.,   48.,   10.],       [  87.,   40.,   16.],       [  97.,   41.,   13.],       [   1.,   55.,   11.],       [   6.,   54.,   19.],       [  22.,   54.,   14.],       [  38.,   59.,   15.],       [  47.,   54.,   10.],       [  60.,   54.,   13.],       [  63.,   58.,   19.],       [  79.,   59.,   17.],       [  84.,   54.,   18.],       [ 100.,   59.,   16.],       [   3.,   67.,   16.],       [  11.,   66.,   18.],       [  19.,   69.,   19.],       [  31.,   65.,   15.],       [  44.,   62.,   15.],       [  51.,   62.,    9.],       [  64.,   65.,   17.],       [  75.,   63.,   18.],       [  87.,   68.,   11.],       [  95.,   70.,   11.],       [   4.,   74.,   12.],       [  13.,   76.,   10.],       [  21.,   77.,   13.],       [  30.,   82.,   15.],       [  48.,   77.,   12.],       [  58.,   80.,   14.],       [  69.,   73.,   12.],       [  81.,   76.,   13.],       [  89.,   77.,   17.],       [  96.,   78.,   18.],       [   1.,   89.,   14.],       [  12.,   88.,   10.],       [  25.,   84.,   12.],       [  35.,   84.,   14.],       [  43.,   88.,   14.],       [  58.,   84.,   10.],       [  68.,   87.,   10.],       [  79.,   85.,   10.],       [  92.,   85.,   16.],       [ 100.,   91.,   15.],       [  -2.,  100.,   11.],       [  10.,   98.,   15.],       [  21.,  102.,   16.],       [  36.,   96.,   14.],       [  39.,  102.,   13.],       [  59.,  102.,   10.],       [  68.,   96.,   17.],       [  81.,   97.,   16.],       [  92.,   96.,   18.],       [  96.,  101.,   15.],       [  -4.,   -3.,   29.],       [  14.,   -4.,   24.],       [  22.,   -5.,   26.],       [  34.,   -2.,   24.],       [  43.,    4.,   25.],       [  54.,    2.,   30.],       [  66.,   -3.,   24.],       [  74.,    2.,   27.],       [  87.,   -4.,   28.],       [  97.,   -4.,   31.],       [  -2.,   11.,   29.],       [   6.,    9.,   24.],       [  21.,    7.,   26.],       [  28.,   10.,   29.],       [  47.,    8.,   28.],       [  60.,   10.,   29.],       [  65.,    9.,   30.],       [  78.,   15.,   31.],       [  85.,   12.,   28.],       [ 104.,   10.,   30.],       [   2.,   23.,   24.],       [  10.,   22.,   30.],       [  26.,   21.,   32.],       [  34.,   22.,   30.],       [  45.,   22.,   27.],       [  55.,   22.,   28.],       [  68.,   22.,   26.],       [  77.,   25.,   29.],       [  90.,   25.,   31.],       [  99.,   24.,   27.],       [   1.,   29.,   26.],       [  12.,   31.,   30.],       [  20.,   36.,   32.],       [  36.,   34.,   23.],       [  43.,   30.,   23.],       [  55.,   36.,   26.],       [  65.,   33.,   31.],       [  79.,   36.,   29.],       [  84.,   31.,   31.],       [  97.,   35.,   33.],       [   0.,   44.,   24.],       [  15.,   41.,   26.],       [  20.,   45.,   25.],       [  32.,   41.,   26.],       [  43.,   44.,   26.],       [  56.,   41.,   28.],       [  67.,   46.,   28.],       [  73.,   40.,   30.],       [  89.,   43.,   27.],       [  95.,   42.,   29.],       [  -2.,   51.,   33.],       [  15.,   59.,   25.],       [  22.,   52.,   33.],       [  33.,   58.,   28.],       [  43.,   60.,   31.],       [  54.,   54.,   24.],       [  65.,   52.,   31.],       [  78.,   58.,   26.],       [  87.,   55.,   24.],       [ 104.,   55.,   29.],       [  -5.,   64.,   33.],       [   6.,   68.,   27.],       [  22.,   68.,   24.],       [  29.,   71.,   27.],       [  45.,   67.,   31.],       [  60.,   61.,   31.],       [  62.,   65.,   29.],       [  77.,   71.,   25.],       [  88.,   68.,   32.],       [ 101.,   65.,   29.],       [   3.,   77.,   24.],       [  13.,   80.,   30.],       [  17.,   74.,   26.],       [  28.,   73.,   30.],       [  47.,   75.,   31.],       [  57.,   77.,   33.],       [  65.,   76.,   25.],       [  75.,   80.,   32.],       [  86.,   81.,   29.],       [  97.,   76.,   24.],       [  -2.,   84.,   32.],       [  11.,   85.,   27.],       [  20.,   87.,   33.],       [  29.,   88.,   29.],       [  39.,   85.,   32.],       [  59.,   84.,   28.],       [  61.,   85.,   33.],       [  80.,   91.,   27.],       [  88.,   93.,   32.],       [  95.,   91.,   30.],       [  -4.,  102.,   27.],       [   6.,  102.,   31.],       [  25.,   95.,   28.],       [  31.,  103.,   27.],       [  39.,  104.,   33.],       [  52.,   99.,   28.],       [  63.,  104.,   25.],       [  81.,  103.,   27.],       [  84.,  104.,   28.],       [  96.,  102.,   30.],       [  -2.,   -4.,   39.],       [   6.,   -1.,   40.],       [  17.,    4.,   47.],       [  35.,   -4.,   43.],       [  49.,    4.,   47.],       [  55.,    1.,   44.],       [  66.,   -2.,   44.],       [  79.,    1.,   40.],       [  92.,   -4.,   43.],       [  99.,   -3.,   42.],       [   2.,   15.,   46.],       [  15.,   12.,   39.],       [  24.,   15.,   39.],       [  38.,   16.,   41.],       [  47.,   12.,   46.],       [  58.,   11.,   41.],       [  62.,   15.,   46.],       [  75.,   12.,   38.],       [  92.,   11.,   46.],       [ 101.,   14.,   41.],       [  -5.,   21.,   47.],       [   9.,   23.,   42.],       [  21.,   19.,   40.],       [  34.,   24.,   46.],       [  43.,   20.,   46.],       [  52.,   24.,   46.],       [  67.,   25.,   44.],       [  81.,   22.,   38.],       [  84.,   23.,   44.],       [  96.,   27.,   44.],       [   2.,   32.,   39.],       [   7.,   36.,   39.],       [  21.,   32.,   43.],       [  31.,   31.,   43.],       [  40.,   29.,   41.],       [  56.,   36.,   45.],       [  66.,   35.,   39.],       [  77.,   30.,   37.],       [  91.,   35.,   42.],       [  98.,   37.,   42.],       [   2.,   45.,   41.],       [  11.,   43.,   46.],       [  25.,   40.,   38.],       [  33.,   41.,   39.],       [  41.,   42.,   45.],       [  58.,   41.,   39.],       [  69.,   45.,   40.],       [  75.,   40.,   45.],       [  88.,   46.,   38.],       [ 101.,   43.,   40.],       [   0.,   52.,   44.],       [  14.,   53.,   44.],       [  18.,   57.,   42.],       [  28.,   56.,   44.],       [  43.,   51.,   40.],       [  54.,   55.,   42.],       [  62.,   55.,   43.],       [  75.,   52.,   40.],       [  88.,   58.,   44.],       [  99.,   59.,   41.],       [   3.,   62.,   37.],       [   9.,   66.,   38.],       [  25.,   62.,   46.],       [  36.,   68.,   42.],       [  40.,   65.,   39.],       [  58.,   65.,   46.],       [  70.,   67.,   42.],       [  77.,   61.,   41.],       [  84.,   64.,   42.],       [  96.,   65.,   46.],       [  -2.,   81.,   44.],       [   6.,   74.,   38.],       [  24.,   80.,   38.],       [  36.,   74.,   42.],       [  42.,   77.,   39.],       [  51.,   76.,   38.],       [  63.,   77.,   42.],       [  77.,   82.,   40.],       [  91.,   75.,   38.],       [  95.,   77.,   47.],       [  -5.,   85.,   44.],       [   8.,   89.,   45.],       [  24.,   86.,   46.],       [  36.,   89.,   39.],       [  40.,   91.,   45.],       [  50.,   85.,   40.],       [  67.,   85.,   38.],       [  81.,   90.,   47.],       [  84.,   93.,   39.],       [  96.,   88.,   43.],       [   3.,  102.,   43.],       [   9.,  102.,   39.],       [  23.,   95.,   43.],       [  29.,  100.,   45.],       [  41.,   98.,   45.],       [  53.,   99.,   42.],       [  62.,  104.,   39.],       [  79.,   95.,   41.],       [  93.,  101.,   40.],       [ 103.,   98.,   46.],       [  -3.,    4.,   52.],       [   8.,    2.,   57.],       [  22.,   -5.,   56.],       [  29.,   -1.,   59.],       [  43.,   -4.,   52.],       [  55.,   -1.,   53.],       [  63.,   -5.,   57.],       [  78.,   -2.,   57.],       [  93.,    4.,   54.],       [  95.,    0.,   52.],       [   3.,    7.,   61.],       [   9.,   10.,   58.],       [  22.,    7.,   60.],       [  32.,   10.,   60.],       [  39.,   11.,   61.],       [  54.,   15.,   61.],       [  65.,   15.,   53.],       [  73.,   12.,   59.],       [  90.,    6.,   61.],       [ 101.,   11.,   52.],       [   0.,   26.,   62.],       [  11.,   27.,   59.],       [  20.,   25.,   61.],       [  35.,   23.,   56.],       [  48.,   26.,   53.],       [  50.,   24.,   54.],       [  69.,   26.,   54.],       [  79.,   24.,   56.],       [  92.,   25.,   55.],       [ 103.,   23.,   57.],       [  -1.,   31.,   55.],       [   6.,   28.,   58.],       [  20.,   33.,   59.],       [  36.,   36.,   52.],       [  43.,   32.,   55.],       [  52.,   33.,   56.],       [  61.,   34.,   57.],       [  75.,   29.,   53.],       [  92.,   32.,   56.],       [  99.,   35.,   55.],       [   1.,   42.,   53.],       [  16.,   45.,   54.],       [  25.,   40.,   52.],       [  29.,   44.,   60.],       [  44.,   41.,   52.],       [  52.,   40.,   58.],       [  66.,   44.,   57.],       [  80.,   47.,   59.],       [  87.,   44.,   59.],       [ 104.,   45.,   55.],       [   2.,   59.,   54.],       [  10.,   54.,   56.],       [  18.,   60.,   54.],       [  37.,   51.,   55.],       [  45.,   57.,   55.],       [  58.,   57.,   62.],       [  68.,   53.,   57.],       [  76.,   52.,   54.],       [  88.,   51.,   59.],       [ 100.,   52.,   57.],       [  -1.,   66.,   58.],       [  11.,   63.,   57.],       [  24.,   65.,   54.],       [  30.,   68.,   53.],       [  47.,   71.,   54.],       [  55.,   69.,   53.],       [  68.,   66.,   57.],       [  77.,   62.,   53.],       [  84.,   68.,   53.],       [ 104.,   66.,   57.],       [   2.,   78.,   55.],       [  15.,   81.,   55.],       [  18.,   82.,   57.],       [  31.,   80.,   54.],       [  44.,   74.,   61.],       [  55.,   73.,   61.],       [  62.,   81.,   54.],       [  77.,   80.,   57.],       [  92.,   74.,   52.],       [  99.,   74.,   62.],       [  -4.,   87.,   59.],       [  10.,   90.,   59.],       [  23.,   86.,   56.],       [  35.,   93.,   56.],       [  41.,   83.,   56.],       [  52.,   85.,   53.],       [  64.,   93.,   60.],       [  74.,   90.,   61.],       [  88.,   90.,   56.],       [ 100.,   87.,   57.],       [   0.,   95.,   55.],       [  15.,   99.,   56.],       [  21.,   96.,   55.],       [  31.,  104.,   57.],       [  47.,   96.,   61.],       [  60.,   96.,   61.],       [  69.,   99.,   57.],       [  79.,   97.,   53.],       [  89.,   97.,   58.],       [ 100.,   99.,   59.],       [  -3.,   -3.,   69.],       [  11.,   -2.,   73.],       [  17.,   -5.,   69.],       [  34.,   -3.,   70.],       [  41.,   -3.,   70.],       [  57.,   -5.,   71.],       [  70.,    3.,   72.],       [  80.,    4.,   75.],       [  90.,   -4.,   70.],       [ 101.,   -4.,   74.],       [   1.,   10.,   71.],       [  15.,   15.,   68.],       [  17.,    6.,   66.],       [  32.,    6.,   69.],       [  45.,    8.,   69.],       [  54.,   14.,   71.],       [  69.,    8.,   68.],       [  82.,   10.,   70.],       [  84.,   13.,   75.],       [ 104.,   15.,   74.],       [   4.,   26.,   70.],       [  14.,   20.,   72.],       [  18.,   26.,   71.],       [  30.,   23.,   75.],       [  48.,   20.,   72.],       [  53.,   20.,   70.],       [  68.,   23.,   69.],       [  82.,   18.,   76.],       [  84.,   27.,   70.],       [  97.,   26.,   70.],       [  -5.,   31.,   72.],       [  10.,   28.,   72.],       [  18.,   32.,   71.],       [  35.,   30.,   73.],       [  46.,   32.,   74.],       [  52.,   30.,   68.],       [  66.,   36.,   70.],       [  78.,   37.,   72.],       [  85.,   33.,   71.],       [  99.,   29.,   68.],       [  -4.,   40.,   74.],       [   7.,   47.,   75.],       [  19.,   45.,   74.],       [  34.,   39.,   69.],       [  44.,   44.,   75.],       [  51.,   42.,   69.],       [  62.,   42.,   67.],       [  79.,   41.,   72.],       [  85.,   45.,   72.],       [  97.,   39.,   72.],       [  -1.,   56.,   74.],       [  12.,   60.,   76.],       [  26.,   54.,   74.],       [  35.,   53.,   71.],       [  42.,   57.,   73.],       [  56.,   51.,   69.],       [  66.,   56.,   75.],       [  76.,   57.,   72.],       [  87.,   59.,   67.],       [ 100.,   55.,   72.],       [  -3.,   64.,   68.],       [   8.,   71.,   73.],       [  24.,   64.,   72.],       [  38.,   64.,   68.],       [  42.,   61.,   72.],       [  57.,   70.,   74.],       [  66.,   67.,   68.],       [  82.,   70.,   68.],       [  92.,   63.,   73.],       [ 100.,   67.,   71.],       [   3.,   78.,   76.],       [   7.,   77.,   74.],       [  24.,   80.,   75.],       [  37.,   75.,   70.],       [  45.,   78.,   66.],       [  59.,   80.,   73.],       [  70.,   77.,   70.],       [  79.,   80.,   74.],       [  91.,   81.,   73.],       [  98.,   81.,   76.],       [   2.,   85.,   66.],       [   8.,   91.,   72.],       [  20.,   86.,   69.],       [  31.,   93.,   67.],       [  48.,   86.,   71.],       [  51.,   86.,   68.],       [  65.,   85.,   75.],       [  75.,   83.,   72.],       [  90.,   90.,   74.],       [  96.,   93.,   71.],       [   2.,   96.,   66.],       [   9.,  102.,   70.],       [  25.,  100.,   68.],       [  31.,  102.,   67.],       [  43.,  104.,   68.],       [  59.,   99.,   66.],       [  70.,  100.,   73.],       [  80.,   96.,   74.],       [  85.,   99.,   74.],       [ 103.,   99.,   70.],       [   2.,    3.,   87.],       [   9.,    1.,   84.],       [  25.,   -2.,   84.],       [  35.,   -2.,   90.],       [  45.,    2.,   90.],       [  56.,    1.,   80.],       [  61.,   -2.,   84.],       [  82.,    0.,   90.],       [  92.,   -5.,   85.],       [ 103.,    2.,   83.],       [  -3.,   14.,   83.],       [  11.,    8.,   84.],       [  23.,   11.,   90.],       [  28.,    9.,   82.],       [  46.,   11.,   90.],       [  55.,   10.,   84.],       [  62.,   13.,   82.],       [  74.,    8.,   88.],       [  93.,   12.,   82.],       [ 101.,   16.,   89.],       [   2.,   18.,   86.],       [  14.,   18.,   86.],       [  26.,   20.,   90.],       [  29.,   26.,   81.],       [  45.,   21.,   81.],       [  58.,   22.,   84.],       [  65.,   26.,   85.],       [  75.,   26.,   87.],       [  89.,   22.,   81.],       [ 100.,   24.,   88.],       [  -1.,   35.,   81.],       [   7.,   37.,   82.],       [  22.,   37.,   88.],       [  35.,   29.,   89.],       [  44.,   32.,   84.],       [  51.,   32.,   87.],       [  70.,   35.,   84.],       [  75.,   38.,   85.],       [  88.,   31.,   82.],       [  96.,   37.,   81.],       [   1.,   45.,   83.],       [  15.,   45.,   83.],       [  23.,   49.,   85.],       [  35.,   40.,   84.],       [  44.,   46.,   80.],       [  57.,   42.,   83.],       [  69.,   46.,   80.],       [  74.,   47.,   88.],       [  89.,   44.,   90.],       [ 100.,   49.,   84.],       [   1.,   58.,   86.],       [  15.,   59.,   80.],       [  20.,   54.,   88.],       [  29.,   51.,   82.],       [  39.,   58.,   89.],       [  55.,   51.,   86.],       [  64.,   58.,   89.],       [  72.,   59.,   87.],       [  90.,   57.,   87.],       [  97.,   56.,   89.],       [   4.,   66.,   83.],       [  10.,   71.,   83.],       [  22.,   69.,   83.],       [  34.,   63.,   87.],       [  46.,   68.,   80.],       [  56.,   65.,   86.],       [  68.,   63.,   81.],       [  81.,   66.,   82.],       [  85.,   69.,   85.],       [  95.,   62.,   87.],       [   2.,   73.,   89.],       [  14.,   75.,   89.],       [  19.,   74.,   88.],       [  34.,   80.,   83.],       [  48.,   80.,   90.],       [  52.,   82.,   85.],       [  69.,   79.,   87.],       [  81.,   75.,   81.],       [  87.,   79.,   84.],       [  98.,   78.,   83.],       [  -2.,   92.,   87.],       [  10.,   92.,   83.],       [  21.,   84.,   81.],       [  28.,   86.,   85.],       [  47.,   86.,   90.],       [  55.,   89.,   89.],       [  71.,   85.,   89.],       [  80.,   85.,   84.],       [  92.,   85.,   84.],       [ 102.,   83.,   89.],       [   4.,   98.,   83.],       [  14.,   98.,   89.],       [  21.,   98.,   81.],       [  36.,  100.,   82.],       [  42.,  100.,   88.],       [  58.,   99.,   83.],       [  62.,   97.,   83.],       [  77.,   99.,   87.],       [  93.,  103.,   87.],       [  95.,   98.,   88.],       [  -4.,   -3.,  100.],       [   8.,   -5.,  102.],       [  21.,    3.,   95.],       [  31.,   -4.,   96.],       [  46.,    1.,  101.],       [  58.,    4.,   96.],       [  65.,   -1.,   97.],       [  77.,   -5.,  104.],       [  93.,    3.,  104.],       [  96.,    1.,  101.],       [  -2.,   11.,  100.],       [  15.,   14.,  104.],       [  20.,   11.,  103.],       [  37.,    8.,  101.],       [  46.,   14.,   99.],       [  55.,    9.,  104.],       [  70.,   15.,   97.],       [  75.,   16.,  100.],       [  88.,    7.,   96.],       [  95.,    8.,  102.],       [   4.,   21.,   99.],       [  15.,   24.,   95.],       [  20.,   21.,  103.],       [  36.,   19.,  103.],       [  47.,   27.,  102.],       [  58.,   25.,  103.],       [  62.,   19.,  100.],       [  75.,   26.,  100.],       [  92.,   20.,  102.],       [  98.,   19.,  102.],       [  -2.,   32.,   95.],       [  13.,   34.,   95.],       [  20.,   32.,  103.],       [  28.,   34.,  100.],       [  40.,   38.,   97.],       [  53.,   36.,  104.],       [  62.,   36.,  104.],       [  73.,   34.,   99.],       [  86.,   30.,  103.],       [ 104.,   33.,  100.],       [   0.,   47.,  101.],       [  10.,   45.,   99.],       [  19.,   45.,  103.],       [  31.,   45.,   95.],       [  42.,   42.,   99.],       [  51.,   42.,   99.],       [  61.,   40.,  101.],       [  72.,   41.,  104.],       [  86.,   42.,  102.],       [  97.,   47.,  103.],       [   4.,   53.,   97.],       [   9.,   57.,   97.],       [  22.,   50.,  104.],       [  33.,   57.,   99.],       [  45.,   55.,  102.],       [  59.,   52.,  104.],       [  71.,   60.,  104.],       [  80.,   59.,  101.],       [  84.,   53.,  104.],       [  97.,   54.,   98.],       [   4.,   64.,  104.],       [  13.,   63.,   98.],       [  25.,   69.,   95.],       [  30.,   67.,  100.],       [  39.,   69.,  104.],       [  56.,   63.,   95.],       [  66.,   69.,  101.],       [  77.,   62.,  104.],       [  92.,   63.,   96.],       [ 103.,   65.,   97.],       [   1.,   80.,  104.],       [  10.,   76.,   95.],       [  26.,   79.,   99.],       [  30.,   82.,  104.],       [  42.,   73.,  103.],       [  51.,   80.,  100.],       [  62.,   75.,   98.],       [  80.,   75.,   97.],       [  89.,   75.,  100.],       [  97.,   75.,   95.],       [   2.,   87.,   95.],       [  14.,   90.,   97.],       [  23.,   85.,   95.],       [  36.,   83.,  104.],       [  44.,   92.,  103.],       [  57.,   91.,  104.],       [  65.,   90.,  102.],       [  81.,   85.,  104.],       [  84.,   90.,  104.],       [ 104.,   88.,   98.],       [  -2.,  101.,   99.],       [   6.,  100.,  101.],       [  23.,   98.,   99.],       [  30.,   96.,  103.],       [  41.,   95.,   96.],       [  59.,  103.,   95.],       [  63.,  101.,   99.],       [  76.,   95.,   96.],       [  90.,   96.,   96.],       [  95.,   95.,  103.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.3,  3.2,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  3.2,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.mirror([0, 1, 0])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,1] = -pt2[...,1]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p5_C0_periodic(self):
        controlpoints = np.array([[ 101.,    3.,   -1.],
       [  64.,   74.,    1.],
       [ -24.,   94.,   -4.],
       [ -95.,   39.,    4.],
       [ -88.,  -44.,    4.],
       [ -23., -101.,   -3.],
       [  66.,  -83.,    2.]])
        basis0 = BSplineBasis(5, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.7,  3. ,  4. ,  4. ,  4. ,
        4. ,  5.3]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 0.9,  4.2,  0. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 0.900000
        pt2[...,1] -= 4.200000
        pt2[...,2] -= 0.000000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p7_C0_periodic(self):
        controlpoints = np.array([[  99.,   -2.,    1.],
       [  85.,   49.,   -1.],
       [  46.,   87.,   -1.],
       [   3.,   99.,    0.],
       [ -55.,   84.,   -2.],
       [ -83.,   45.,    4.],
       [-104.,    2.,    2.],
       [ -83.,  -49.,    0.],
       [ -48.,  -90.,   -3.],
       [  -4.,  -97.,   -1.],
       [  53.,  -87.,    0.],
       [  83.,  -51.,   -1.]])
        basis0 = BSplineBasis(7, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.3,  2.7,  4. ,
        5.2,  6. ,  7. ,  7. ,  7. ,  7. ,  7. ,  7. ,  7.7]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 4.8,  9.4,  6.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.800000
        pt2[...,1] /= 9.400000
        pt2[...,2] /= 6.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p7_C0_periodic(self):
        controlpoints = np.array([[ 100.,    2.,   -5.],
       [  73.,   67.,   -1.],
       [  21.,  103.,    2.],
       [ -53.,   85.,   -2.],
       [ -90.,   37.,   -1.],
       [ -97.,  -32.,   -2.],
       [ -51.,  -82.,   -5.],
       [  13.,  -97.,    0.],
       [  81.,  -66.,    1.]])
        basis0 = BSplineBasis(7, np.array([-0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.1,  3.1,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  5.3]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.mirror([0, 1, 0])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,1] = -pt2[...,1]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p75_C0_periodic(self):
        controlpoints = np.array([[  58.,    2.,   -1.],       [  53.,   31.,   -2.],       [  23.,   59.,   -1.],       [  -8.,   59.,    1.],       [ -39.,   44.,    2.],       [ -63.,   20.,   -5.],       [ -61.,  -14.,   -4.],       [ -41.,  -47.,   -1.],       [ -13.,  -58.,   -5.],       [  27.,  -51.,   -2.],       [  52.,  -31.,   -4.],       [  61.,   -1.,    1.],       [  52.,   37.,   -3.],       [  24.,   56.,   -5.],       [  -9.,   64.,   -3.],       [ -38.,   50.,   -5.],       [ -60.,   18.,   -1.],       [ -64.,  -22.,    1.],       [ -47.,  -48.,   -2.],       [  -7.,  -63.,    0.],       [  21.,  -57.,    3.],       [  55.,  -34.,    2.],       [  64.,   -3.,    3.],       [  61.,   40.,   -4.],       [  33.,   65.,   -5.],       [ -13.,   66.,   -4.],       [ -48.,   50.,   -5.],       [ -69.,   16.,   -4.],       [ -69.,  -21.,    2.],       [ -50.,  -55.,    3.],       [ -14.,  -66.,   -3.],       [  27.,  -64.,    2.],       [  57.,  -41.,    2.],       [  77.,   -3.,   -1.],       [  57.,   40.,    1.],       [  27.,   65.,    1.],       [  -6.,   69.,   -3.],       [ -46.,   56.,    4.],       [ -75.,   22.,   -1.],       [ -70.,  -23.,   -1.],       [ -52.,  -55.,   -5.],       [ -10.,  -73.,    2.],       [  35.,  -64.,    0.],       [  62.,  -36.,   -5.],       [  81.,    3.,   -5.],       [  61.,   40.,    2.],       [  33.,   72.,   -2.],       [ -13.,   80.,    1.],       [ -53.,   57.,   -2.],       [ -77.,   18.,    0.],       [ -77.,  -24.,    3.],       [ -51.,  -55.,    1.],       [ -11.,  -78.,   -2.],       [  33.,  -70.,   -2.],       [  62.,  -46.,    4.],       [  77.,   -1.,   -1.],       [  65.,   44.,   -2.],       [  36.,   76.,   -2.],       [ -12.,   85.,   -4.],       [ -51.,   59.,   -5.],       [ -78.,   24.,   -2.],       [ -80.,  -25.,   -3.],       [ -54.,  -61.,   -5.],       [ -16.,  -83.,    4.],       [  31.,  -74.,   -4.],       [  68.,  -40.,   -1.],       [  84.,   -2.,    0.],       [  68.,   49.,    4.],       [  33.,   81.,   -4.],       [ -10.,   90.,   -5.],       [ -62.,   70.,    1.],       [ -86.,   27.,    2.],       [ -88.,  -20.,   -1.],       [ -53.,  -70.,   -4.],       [ -14.,  -88.,   -5.],       [  33.,  -74.,    3.],       [  76.,  -48.,   -5.],       [  90.,   -2.,    0.],       [  78.,   52.,    3.],       [  36.,   83.,   -2.],       [ -15.,   89.,   -3.],       [ -58.,   70.,    1.],       [ -84.,   20.,   -3.],       [ -84.,  -25.,    1.],       [ -64.,  -74.,   -2.],       [ -17.,  -95.,    0.],       [  40.,  -84.,   -5.],       [  72.,  -46.,    4.],       [  94.,    2.,   -5.],       [  80.,   53.,   -4.],       [  37.,   87.,   -1.],       [ -10.,   93.,    2.],       [ -64.,   72.,   -2.],       [ -90.,   22.,   -1.],       [ -89.,  -25.,   -4.],       [ -62.,  -75.,    3.],       [ -12.,  -93.,   -4.],       [  43.,  -92.,    1.],       [  80.,  -55.,    3.],       [  97.,    0.,    3.],       [  88.,   54.,   -3.],       [  41.,   95.,   -3.],       [ -11.,   97.,   -5.],       [ -66.,   76.,    2.],       [-101.,   26.,    1.],       [ -93.,  -27.,    0.],       [ -67.,  -77.,    3.],       [ -16.,  -97.,    2.],       [  37.,  -92.,   -4.],       [  84.,  -55.,   -2.]])
        basis0 = BSplineBasis(7, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.7,  3.3,  3.9,
        4.9,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6.7]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.1,  3.2,  4. ,  5.1,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 1.4,  7.6,  3.7])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 1.400000
        pt2[...,1] -= 7.600000
        pt2[...,2] -= 3.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p67_C0_periodic(self):
        controlpoints = np.array([[  56.,    2.,    4.],       [  46.,   33.,    4.],       [  14.,   55.,   -4.],       [ -22.,   56.,   -1.],       [ -48.,   36.,    3.],       [ -64.,   -5.,    2.],       [ -45.,  -35.,    3.],       [ -19.,  -61.,   -2.],       [  18.,  -58.,   -1.],       [  52.,  -35.,   -5.],       [  59.,   -4.,   -5.],       [  48.,   41.,   -4.],       [  24.,   63.,   -5.],       [ -15.,   59.,    0.],       [ -48.,   41.,    2.],       [ -66.,    2.,   -4.],       [ -48.,  -38.,   -5.],       [ -22.,  -61.,    4.],       [  21.,  -62.,    4.],       [  56.,  -41.,   -3.],       [  71.,    1.,    2.],       [  55.,   38.,   -4.],       [  16.,   66.,    0.],       [ -23.,   66.,   -4.],       [ -56.,   42.,    3.],       [ -73.,   -1.,   -5.],       [ -59.,  -37.,    2.],       [ -19.,  -68.,   -5.],       [  16.,  -67.,    4.],       [  56.,  -40.,   -4.],       [  72.,    3.,   -1.],       [  62.,   44.,   -1.],       [  26.,   69.,    4.],       [ -21.,   68.,   -2.],       [ -57.,   43.,    0.],       [ -72.,   -2.,    4.],       [ -62.,  -40.,    3.],       [ -26.,  -64.,   -3.],       [  25.,  -69.,   -2.],       [  62.,  -48.,    1.],       [  76.,   -4.,    4.],       [  64.,   43.,   -5.],       [  21.,   70.,   -2.],       [ -27.,   72.,   -5.],       [ -65.,   40.,    3.],       [ -74.,   -5.,    1.],       [ -62.,  -44.,   -1.],       [ -26.,  -68.,   -4.],       [  26.,  -74.,   -3.],       [  65.,  -45.,    1.],       [  75.,   -2.,    3.],       [  66.,   46.,   -5.],       [  21.,   72.,   -5.],       [ -30.,   75.,   -4.],       [ -67.,   46.,   -5.],       [ -84.,    2.,   -2.],       [ -61.,  -47.,    2.],       [ -25.,  -74.,   -3.],       [  23.,  -73.,   -4.],       [  65.,  -45.,   -4.],       [  81.,   -2.,    0.],       [  67.,   44.,   -1.],       [  28.,   76.,    3.],       [ -26.,   77.,   -5.],       [ -64.,   48.,   -4.],       [ -84.,   -3.,    3.],       [ -70.,  -51.,   -4.],       [ -24.,  -85.,    0.],       [  29.,  -81.,    2.],       [  68.,  -47.,   -4.],       [  90.,   -1.,    1.],       [  67.,   53.,   -1.],       [  23.,   79.,    1.],       [ -29.,   86.,   -1.],       [ -73.,   49.,   -2.],       [ -88.,    2.,    4.],       [ -72.,  -50.,    2.],       [ -26.,  -84.,   -2.],       [  23.,  -81.,    2.],       [  68.,  -52.,   -1.],       [  87.,    4.,   -4.],       [  70.,   52.,    0.],       [  24.,   83.,    0.],       [ -25.,   85.,   -3.],       [ -73.,   53.,    2.],       [ -90.,   -2.,   -5.],       [ -70.,  -50.,    0.],       [ -28.,  -89.,    2.],       [  28.,  -86.,    2.],       [  77.,  -52.,   -2.],       [  99.,    1.,   -4.],       [  79.,   53.,    1.],       [  32.,   95.,    4.],       [ -28.,   93.,   -2.],       [ -78.,   56.,    2.],       [ -95.,   -3.,    3.],       [ -78.,  -55.,   -1.],       [ -32.,  -92.,    3.],       [  32.,  -92.,    1.],       [  72.,  -53.,   -4.],       [ 101.,    4.,   -3.],       [  78.,   56.,    3.],       [  28.,   97.,   -2.],       [ -31.,   99.,   -3.],       [ -81.,   61.,    2.],       [-102.,   -1.,    0.],       [ -78.,  -63.,    4.],       [ -35.,  -95.,    4.],       [  28.,  -96.,   -1.],       [  77.,  -55.,   -2.]])
        basis0 = BSplineBasis(6, np.array([-1.2,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  3.1,  4.1,  4.8,
        6. ,  6. ,  6. ,  6. ,  6. ,  6.9]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.9,  3.1,  3.9,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([  3.2,  10.2,   5.6])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.200000
        pt2[...,1] /= 10.200000
        pt2[...,2] /= 5.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p75_C0_periodic(self):
        controlpoints = np.array([[  61.,   -3.,   -4.],       [  52.,   28.,    2.],       [  25.,   55.,   -2.],       [ -10.,   62.,    4.],       [ -35.,   46.,    3.],       [ -60.,   12.,   -4.],       [ -56.,  -17.,    1.],       [ -35.,  -41.,    0.],       [  -9.,  -62.,   -4.],       [  29.,  -51.,   -1.],       [  50.,  -37.,   -1.],       [  70.,   -1.,    2.],       [  56.,   31.,   -5.],       [  29.,   61.,   -1.],       [  -9.,   62.,    0.],       [ -48.,   45.,    0.],       [ -67.,   20.,   -3.],       [ -62.,  -21.,    3.],       [ -42.,  -51.,    3.],       [ -10.,  -66.,    3.],       [  30.,  -58.,   -5.],       [  60.,  -35.,   -1.],       [  69.,    1.,    3.],       [  59.,   43.,    1.],       [  31.,   68.,   -3.],       [  -9.,   68.,    4.],       [ -47.,   50.,    2.],       [ -69.,   21.,   -5.],       [ -73.,  -26.,    4.],       [ -44.,  -58.,   -1.],       [  -8.,  -71.,   -1.],       [  33.,  -63.,    1.],       [  63.,  -43.,   -3.],       [  84.,    2.,    2.],       [  63.,   41.,   -5.],       [  29.,   73.,    4.],       [  -7.,   78.,   -3.],       [ -52.,   58.,    3.],       [ -75.,   23.,   -4.],       [ -74.,  -25.,   -1.],       [ -51.,  -58.,   -1.],       [ -11.,  -78.,   -5.],       [  36.,  -75.,    1.],       [  63.,  -40.,   -4.],       [  90.,    4.,   -3.],       [  72.,   43.,   -3.],       [  34.,   76.,    0.],       [ -10.,   80.,   -2.],       [ -54.,   67.,    2.],       [ -82.,   27.,    0.],       [ -87.,  -26.,    2.],       [ -60.,  -62.,   -3.],       [ -13.,  -81.,   -3.],       [  39.,  -84.,    2.],       [  75.,  -51.,    0.],       [  95.,    3.,    3.],       [  78.,   46.,   -2.],       [  39.,   80.,    2.],       [ -11.,   92.,    3.],       [ -63.,   66.,   -4.],       [ -86.,   30.,    4.],       [ -93.,  -31.,    4.],       [ -60.,  -70.,   -1.],       [ -18.,  -89.,    1.],       [  38.,  -87.,   -2.],       [  82.,  -47.,   -1.],       [ 102.,   -4.,    4.],       [  88.,   56.,    2.],       [  37.,   88.,    1.],       [ -12.,  103.,   -3.],       [ -67.,   75.,    0.],       [ -97.,   25.,   -1.],       [ -99.,  -29.,   -4.],       [ -65.,  -74.,   -3.],       [ -15.,  -95.,    1.],       [  43.,  -93.,   -2.],       [  89.,  -57.,    0.]])
        basis0 = BSplineBasis(7, np.array([-0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.7,  3.2,  3.7,
        5.1,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  7.3]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.7,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.mirror([1, 0, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p756_C0_periodic(self):
        controlpoints = np.array([[  53.,   -4.,   -1.],       [  32.,   38.,    4.],       [   2.,   45.,   -1.],       [ -32.,   31.,   -5.],       [ -49.,   -2.,   -5.],       [ -36.,  -33.,   -2.],       [  -4.,  -50.,   -1.],       [  33.,  -33.,   -1.],       [  53.,   -1.,   -5.],       [  36.,   40.,   -5.],       [   0.,   62.,    2.],       [ -39.,   36.,   -3.],       [ -54.,    2.,    1.],       [ -37.,  -46.,    0.],       [  -3.,  -56.,   -1.],       [  45.,  -44.,   -5.],       [  60.,    3.,    3.],       [  48.,   41.,    3.],       [  -4.,   67.,   -4.],       [ -42.,   43.,   -5.],       [ -70.,   -5.,   -5.],       [ -46.,  -50.,   -5.],       [  -1.,  -66.,   -3.],       [  50.,  -49.,   -5.],       [  72.,   -5.,    2.],       [  49.,   47.,    3.],       [   0.,   74.,    3.],       [ -49.,   50.,   -1.],       [ -68.,    3.,    2.],       [ -47.,  -54.,    1.],       [   3.,  -77.,   -1.],       [  47.,  -51.,    3.],       [  81.,    1.,    0.],       [  59.,   52.,    0.],       [  -2.,   83.,   -1.],       [ -61.,   58.,   -1.],       [ -75.,    2.,   -4.],       [ -55.,  -57.,    0.],       [  -2.,  -82.,    4.],       [  54.,  -52.,   -3.],       [  84.,    0.,   -5.],       [  60.,   56.,    0.],       [   0.,   83.,    2.],       [ -60.,   63.,    3.],       [ -82.,    2.,   -4.],       [ -63.,  -58.,   -5.],       [  -1.,  -83.,   -3.],       [  64.,  -57.,    3.],       [  97.,    4.,   -3.],       [  61.,   62.,   -2.],       [  -4.,   93.,   -5.],       [ -69.,   67.,   -5.],       [ -90.,   -3.,    3.],       [ -64.,  -61.,    1.],       [  -4.,  -96.,    1.],       [  68.,  -61.,    1.],       [ 103.,    2.,    4.],       [  69.,   74.,    0.],       [  -4.,  101.,   -3.],       [ -67.,   67.,   -4.],       [ -98.,    4.,   -4.],       [ -67.,  -70.,    2.],       [  -4.,  -98.,   -4.],       [  68.,  -74.,   -3.],       [  54.,    3.,    8.],       [  33.,   33.,    7.],       [  -2.,   47.,    5.],       [ -34.,   31.,    5.],       [ -47.,   -1.,    1.],       [ -36.,  -36.,    6.],       [  -4.,  -55.,    7.],       [  34.,  -35.,    6.],       [  60.,    3.,    0.],       [  38.,   39.,    0.],       [   4.,   55.,    4.],       [ -41.,   43.,    3.],       [ -58.,   -3.,    0.],       [ -45.,  -46.,    7.],       [  -3.,  -59.,   -1.],       [  35.,  -41.,    2.],       [  61.,    3.,    1.],       [  42.,   49.,    4.],       [   0.,   67.,    6.],       [ -47.,   45.,    7.],       [ -69.,   -3.,    2.],       [ -45.,  -50.,    8.],       [  -2.,  -61.,    8.],       [  41.,  -43.,    1.],       [  75.,    1.,    4.],       [  45.,   50.,    8.],       [  -2.,   69.,    7.],       [ -51.,   54.,    8.],       [ -74.,    4.,    5.],       [ -47.,  -56.,    2.],       [  -5.,  -67.,    0.],       [  54.,  -55.,    4.],       [  76.,    3.,    6.],       [  56.,   51.,    7.],       [  -3.,   79.,    0.],       [ -58.,   52.,    1.],       [ -83.,   -4.,    1.],       [ -53.,  -58.,   -1.],       [  -4.,  -77.,   -1.],       [  60.,  -51.,    0.],       [  90.,    3.,    7.],       [  59.,   56.,    1.],       [  -5.,   82.,    0.],       [ -62.,   65.,    6.],       [ -83.,   -4.,    4.],       [ -66.,  -58.,    8.],       [   1.,  -89.,    7.],       [  61.,  -56.,    0.],       [  89.,   -5.,    8.],       [  65.,   64.,   -1.],       [   1.,   96.,    0.],       [ -68.,   65.,    3.],       [ -96.,    3.,    2.],       [ -65.,  -63.,    1.],       [  -3.,  -94.,    7.],       [  68.,  -61.,    3.],       [  98.,   -1.,    2.],       [  75.,   70.,    0.],       [  -3.,   96.,    4.],       [ -68.,   69.,    1.],       [-102.,    2.,    6.],       [ -69.,  -67.,    6.],       [  -5., -103.,    5.],       [  70.,  -74.,    1.],       [  52.,   -1.,    8.],       [  33.,   30.,    9.],       [   0.,   48.,    6.],       [ -35.,   35.,   10.],       [ -52.,   -4.,    7.],       [ -32.,  -33.,    7.],       [  -2.,  -47.,    8.],       [  31.,  -38.,    7.],       [  61.,    0.,    5.],       [  35.,   35.,    7.],       [   2.,   57.,    5.],       [ -37.,   40.,   10.],       [ -61.,   -4.,    4.],       [ -40.,  -38.,    7.],       [   2.,  -59.,    3.],       [  42.,  -36.,   12.],       [  65.,   -2.,    4.],       [  43.,   40.,    9.],       [   0.,   62.,    6.],       [ -41.,   41.,    4.],       [ -60.,   -2.,   11.],       [ -47.,  -49.,    3.],       [  -2.,  -63.,   12.],       [  48.,  -48.,   10.],       [  69.,   -4.,    5.],       [  53.,   48.,   10.],       [   1.,   74.,   12.],       [ -46.,   51.,    7.],       [ -76.,    3.,    4.],       [ -48.,  -56.,    5.],       [   0.,  -77.,    8.],       [  49.,  -53.,   11.],       [  80.,    2.,    5.],       [  58.,   58.,    9.],       [   1.,   82.,    9.],       [ -59.,   52.,    3.],       [ -78.,   -2.,    5.],       [ -58.,  -54.,    3.],       [   1.,  -76.,    3.],       [  55.,  -56.,    3.],       [  89.,    4.,   12.],       [  61.,   58.,    8.],       [  -4.,   84.,    3.],       [ -63.,   59.,    5.],       [ -89.,   -3.,    6.],       [ -63.,  -66.,   10.],       [  -1.,  -85.,    4.],       [  58.,  -61.,    8.],       [  94.,   -1.,    4.],       [  67.,   65.,   10.],       [  -1.,   90.,    6.],       [ -64.,   62.,    5.],       [ -97.,   -2.,   10.],       [ -62.,  -66.,    7.],       [   3.,  -91.,   11.],       [  66.,  -62.,    5.],       [  98.,    0.,    3.],       [  69.,   68.,    4.],       [  -4.,   96.,    5.],       [ -66.,   73.,   11.],       [-101.,    4.,   10.],       [ -72.,  -75.,    6.],       [   1., -105.,    3.],       [  71.,  -67.,   12.],       [  47.,    0.,    8.],       [  36.,   33.,   14.],       [  -1.,   48.,   11.],       [ -31.,   34.,   11.],       [ -52.,   -3.,    7.],       [ -34.,  -39.,   14.],       [   2.,  -51.,   10.],       [  34.,  -41.,   12.],       [  55.,   -2.,   11.],       [  42.,   35.,   11.],       [   4.,   62.,   11.],       [ -42.,   36.,    9.],       [ -54.,    4.,   11.],       [ -36.,  -44.,   14.],       [   4.,  -57.,   14.],       [  36.,  -45.,   13.],       [  59.,   -1.,   10.],       [  48.,   45.,   15.],       [  -5.,   59.,   10.],       [ -46.,   44.,   11.],       [ -67.,   -5.,    8.],       [ -47.,  -41.,    8.],       [   4.,  -61.,   16.],       [  45.,  -50.,    9.],       [  74.,    0.,   13.],       [  54.,   51.,   14.],       [   2.,   70.,   10.],       [ -50.,   49.,   13.],       [ -77.,   -4.,   10.],       [ -53.,  -54.,    8.],       [   3.,  -77.,   10.],       [  51.,  -55.,   12.],       [  82.,    0.,   12.],       [  59.,   56.,   12.],       [  -4.,   79.,    8.],       [ -57.,   59.,    8.],       [ -83.,    2.,    8.],       [ -61.,  -56.,    8.],       [  -4.,  -80.,    9.],       [  51.,  -56.,    9.],       [  81.,    1.,   16.],       [  63.,   63.,   10.],       [   3.,   88.,   14.],       [ -57.,   62.,    7.],       [ -85.,   -3.,   12.],       [ -65.,  -61.,   14.],       [   4.,  -87.,   14.],       [  57.,  -57.,   13.],       [  95.,    4.,   10.],       [  62.,   67.,    7.],       [   3.,   92.,   11.],       [ -68.,   68.,   11.],       [ -91.,   -1.,   13.],       [ -64.,  -68.,   13.],       [   1.,  -98.,   14.],       [  61.,  -71.,    9.],       [  95.,   -3.,   13.],       [  72.,   73.,   14.],       [   3.,   98.,    9.],       [ -67.,   69.,    7.],       [ -98.,   -3.,    8.],       [ -76.,  -72.,   15.],       [   1., -101.,    9.],       [  71.,  -68.,    9.],       [  51.,    1.,   19.],       [  34.,   31.,   18.],       [   0.,   52.,   19.],       [ -37.,   34.,   18.],       [ -55.,   -5.,   20.],       [ -40.,  -36.,   13.],       [   2.,  -51.,   14.],       [  38.,  -38.,   17.],       [  54.,    2.,   19.],       [  39.,   35.,   15.],       [  -4.,   52.,   13.],       [ -42.,   38.,   13.],       [ -60.,    2.,   15.],       [ -44.,  -40.,   19.],       [   2.,  -56.,   11.],       [  37.,  -38.,   20.],       [  62.,   -2.,   12.],       [  50.,   41.,   18.],       [   4.,   65.,   18.],       [ -47.,   45.,   17.],       [ -61.,    4.,   13.],       [ -49.,  -46.,   13.],       [  -4.,  -60.,   18.],       [  40.,  -48.,   13.],       [  69.,    3.,   13.],       [  47.,   53.,   18.],       [   2.,   75.,   20.],       [ -48.,   46.,   16.],       [ -74.,    4.,   11.],       [ -56.,  -47.,   20.],       [   3.,  -70.,   11.],       [  55.,  -55.,   14.],       [  75.,    2.,   16.],       [  60.,   50.,   20.],       [   2.,   80.,   20.],       [ -52.,   55.,   17.],       [ -81.,    2.,   16.],       [ -53.,  -53.,   17.],       [   3.,  -80.,   13.],       [  56.,  -51.,   20.],       [  89.,   -1.,   19.],       [  65.,   64.,   16.],       [  -2.,   81.,   18.],       [ -60.,   56.,   15.],       [ -88.,    1.,   15.],       [ -62.,  -61.,   19.],       [   3.,  -89.,   16.],       [  62.,  -57.,   14.],       [  96.,   -3.,   14.],       [  64.,   67.,   18.],       [  -5.,   97.,   17.],       [ -67.,   61.,   18.],       [ -93.,   -3.,   13.],       [ -66.,  -66.,   18.],       [   0.,  -91.,   20.],       [  60.,  -70.,   12.],       [ 103.,    0.,   12.],       [  67.,   70.,   19.],       [   1.,  102.,   20.],       [ -72.,   67.,   12.],       [ -98.,   -5.,   20.],       [ -73.,  -73.,   20.],       [  -3., -101.,   12.],       [  66.,  -71.,   17.],       [  49.,    0.,   20.],       [  30.,   30.,   23.],       [  -3.,   45.,   16.],       [ -40.,   32.,   19.],       [ -53.,    1.,   18.],       [ -32.,  -35.,   22.],       [   0.,  -51.,   17.],       [  39.,  -31.,   22.],       [  60.,    4.,   22.],       [  43.,   36.,   24.],       [   1.,   52.,   22.],       [ -41.,   38.,   24.],       [ -58.,    3.,   20.],       [ -36.,  -45.,   16.],       [  -5.,  -61.,   23.],       [  35.,  -38.,   19.],       [  60.,    3.,   23.],       [  45.,   45.,   23.],       [  -4.,   62.,   24.],       [ -43.,   50.,   24.],       [ -63.,    1.,   23.],       [ -47.,  -50.,   17.],       [  -5.,  -67.,   15.],       [  49.,  -51.,   16.],       [  71.,    2.,   17.],       [  52.,   45.,   23.],       [   0.,   72.,   21.],       [ -49.,   53.,   22.],       [ -75.,    3.,   17.],       [ -53.,  -48.,   20.],       [   4.,  -75.,   23.],       [  45.,  -55.,   20.],       [  79.,    1.,   21.],       [  58.,   55.,   17.],       [  -3.,   79.,   19.],       [ -55.,   50.,   24.],       [ -83.,   -4.,   17.],       [ -54.,  -52.,   16.],       [  -2.,  -77.,   22.],       [  59.,  -56.,   22.],       [  85.,    0.,   20.],       [  61.,   61.,   20.],       [  -4.,   89.,   22.],       [ -62.,   65.,   19.],       [ -83.,    1.,   18.],       [ -59.,  -62.,   19.],       [  -5.,  -82.,   21.],       [  58.,  -61.,   19.],       [  96.,    3.,   18.],       [  64.,   61.,   18.],       [  -5.,   93.,   24.],       [ -71.,   61.,   19.],       [ -89.,   -1.,   17.],       [ -70.,  -69.,   15.],       [   2.,  -93.,   24.],       [  69.,  -69.,   16.],       [ 102.,   -1.,   17.],       [  71.,   67.,   17.],       [  -3.,  104.,   23.],       [ -71.,   67.,   18.],       [ -96.,    2.,   19.],       [ -71.,  -76.,   20.],       [   3., -104.,   19.],       [  67.,  -67.,   24.],       [  52.,   -2.,   20.],       [  36.,   30.,   28.],       [  -3.,   54.,   19.],       [ -32.,   31.,   20.],       [ -47.,    2.,   28.],       [ -35.,  -34.,   23.],       [   1.,  -51.,   25.],       [  34.,  -32.,   23.],       [  53.,    1.,   20.],       [  45.,   40.,   26.],       [   3.,   53.,   23.],       [ -44.,   41.,   23.],       [ -53.,    4.,   25.],       [ -43.,  -40.,   27.],       [   4.,  -62.,   20.],       [  38.,  -41.,   24.],       [  66.,   -2.,   28.],       [  40.,   47.,   28.],       [   4.,   68.,   20.],       [ -45.,   41.,   21.],       [ -66.,   -1.,   19.],       [ -43.,  -51.,   27.],       [   2.,  -63.,   24.],       [  46.,  -48.,   27.],       [  74.,    0.,   26.],       [  52.,   45.,   19.],       [  -2.,   74.,   27.],       [ -56.,   49.,   24.],       [ -69.,    1.,   25.],       [ -50.,  -46.,   23.],       [  -3.,  -74.,   19.],       [  51.,  -50.,   22.],       [  81.,    2.,   25.],       [  52.,   51.,   19.],       [   4.,   81.,   26.],       [ -54.,   58.,   28.],       [ -79.,   -3.,   24.],       [ -58.,  -53.,   26.],       [   4.,  -83.,   25.],       [  55.,  -56.,   28.],       [  81.,    2.,   28.],       [  55.,   63.,   28.],       [   0.,   90.,   20.],       [ -61.,   57.,   19.],       [ -89.,   -1.,   26.],       [ -59.,  -65.,   21.],       [  -4.,  -84.,   20.],       [  65.,  -59.,   21.],       [  89.,   -5.,   24.],       [  69.,   62.,   22.],       [   2.,   92.,   23.],       [ -62.,   67.,   22.],       [ -89.,   -3.,   27.],       [ -61.,  -70.,   20.],       [  -4.,  -95.,   21.],       [  60.,  -67.,   22.],       [ 102.,    1.,   25.],       [  72.,   74.,   21.],       [   1.,  100.,   24.],       [ -68.,   66.,   25.],       [-100.,    1.,   24.],       [ -68.,  -70.,   28.],       [   3., -101.,   28.],       [  70.,  -75.,   27.],       [  49.,    1.,   32.],       [  32.,   33.,   26.],       [   3.,   54.,   29.],       [ -32.,   33.,   29.],       [ -48.,    4.,   23.],       [ -40.,  -33.,   26.],       [   0.,  -48.,   25.],       [  32.,  -39.,   25.],       [  58.,   -2.,   31.],       [  41.,   40.,   23.],       [   2.,   61.,   24.],       [ -36.,   37.,   23.],       [ -58.,   -1.,   26.],       [ -36.,  -36.,   28.],       [  -1.,  -54.,   28.],       [  39.,  -44.,   23.],       [  63.,   -1.,   30.],       [  49.,   44.,   29.],       [  -5.,   63.,   25.],       [ -50.,   42.,   32.],       [ -67.,    2.,   26.],       [ -49.,  -43.,   31.],       [   3.,  -68.,   23.],       [  41.,  -47.,   29.],       [  75.,    1.,   29.],       [  55.,   52.,   24.],       [  -5.,   69.,   31.],       [ -55.,   52.,   26.],       [ -75.,    2.,   24.],       [ -56.,  -47.,   29.],       [   0.,  -76.,   27.],       [  52.,  -53.,   30.],       [  76.,    0.,   24.],       [  53.,   52.,   24.],       [  -1.,   81.,   32.],       [ -56.,   55.,   31.],       [ -78.,   -1.,   32.],       [ -54.,  -55.,   30.],       [  -2.,  -78.,   30.],       [  50.,  -56.,   29.],       [  81.,   -3.,   26.],       [  62.,   62.,   30.],       [   4.,   88.,   26.],       [ -59.,   57.,   24.],       [ -85.,   -4.,   29.],       [ -60.,  -64.,   23.],       [  -2.,  -91.,   25.],       [  62.,  -60.,   32.],       [  96.,   -1.,   28.],       [  67.,   69.,   26.],       [  -2.,   89.,   28.],       [ -62.,   68.,   27.],       [ -95.,   -5.,   24.],       [ -70.,  -66.,   26.],       [  -4.,  -91.,   29.],       [  65.,  -68.,   27.],       [  99.,   -5.,   25.],       [  72.,   67.,   30.],       [  -2.,  101.,   32.],       [ -71.,   74.,   31.],       [-103.,   -2.,   24.],       [ -73.,  -75.,   24.],       [   4., -100.,   30.],       [  66.,  -73.,   23.],       [  54.,   -1.,   34.],       [  35.,   33.,   34.],       [   3.,   47.,   32.],       [ -40.,   37.,   32.],       [ -49.,   -4.,   33.],       [ -33.,  -40.,   36.],       [   4.,  -49.,   29.],       [  40.,  -36.,   34.],       [  59.,   -5.,   28.],       [  39.,   39.,   29.],       [  -3.,   57.,   28.],       [ -36.,   35.,   35.],       [ -55.,   -5.,   27.],       [ -45.,  -43.,   31.],       [  -5.,  -53.,   34.],       [  44.,  -37.,   31.],       [  62.,   -4.,   32.],       [  50.,   48.,   32.],       [  -1.,   68.,   35.],       [ -51.,   44.,   28.],       [ -64.,   -5.,   31.],       [ -42.,  -50.,   32.],       [   0.,  -63.,   35.],       [  48.,  -46.,   32.],       [  68.,    3.,   32.],       [  50.,   52.,   32.],       [  -4.,   71.,   27.],       [ -50.,   48.,   36.],       [ -70.,    0.,   32.],       [ -46.,  -53.,   34.],       [  -2.,  -70.,   27.],       [  48.,  -49.,   36.],       [  78.,   -3.,   29.],       [  52.,   58.,   27.],       [   4.,   81.,   33.],       [ -57.,   58.,   28.],       [ -80.,   -4.,   35.],       [ -51.,  -56.,   34.],       [  -3.,  -75.,   27.],       [  53.,  -61.,   33.],       [  82.,   -5.,   27.],       [  59.,   60.,   27.],       [   3.,   80.,   31.],       [ -62.,   58.,   31.],       [ -84.,    2.,   34.],       [ -65.,  -58.,   29.],       [  -2.,  -90.,   30.],       [  64.,  -57.,   32.],       [  88.,    4.,   31.],       [  70.,   68.,   33.],       [   0.,   91.,   32.],       [ -61.,   63.,   27.],       [ -91.,   -2.,   33.],       [ -64.,  -69.,   28.],       [  -1.,  -97.,   33.],       [  62.,  -67.,   28.],       [  96.,    1.,   27.],       [  68.,   70.,   35.],       [   0.,  103.,   29.],       [ -74.,   67.,   27.],       [-102.,    2.,   28.],       [ -71.,  -71.,   34.],       [  -4., -102.,   35.],       [  68.,  -69.,   28.],       [  45.,    1.,   37.],       [  34.,   34.,   39.],       [  -2.,   51.,   37.],       [ -36.,   31.,   35.],       [ -46.,   -5.,   37.],       [ -38.,  -34.,   35.],       [  -5.,  -53.,   35.],       [  40.,  -39.,   31.],       [  54.,   -5.,   34.],       [  39.,   39.,   38.],       [  -1.,   57.,   32.],       [ -39.,   39.,   31.],       [ -59.,   -3.,   34.],       [ -44.,  -45.,   39.],       [   1.,  -54.,   33.],       [  38.,  -40.,   35.],       [  59.,   -1.,   36.],       [  44.,   42.,   39.],       [   2.,   63.,   34.],       [ -48.,   40.,   35.],       [ -61.,   -4.,   31.],       [ -48.,  -48.,   40.],       [  -5.,  -68.,   31.],       [  41.,  -46.,   35.],       [  70.,    1.,   36.],       [  47.,   55.,   38.],       [   4.,   69.,   39.],       [ -47.,   51.,   34.],       [ -68.,   -5.,   32.],       [ -54.,  -53.,   38.],       [  -3.,  -72.,   36.],       [  47.,  -55.,   34.],       [  77.,   -2.,   31.],       [  53.,   51.,   31.],       [  -3.,   74.,   32.],       [ -52.,   60.,   36.],       [ -77.,    2.,   39.],       [ -53.,  -55.,   40.],       [  -4.,  -77.,   37.],       [  59.,  -56.,   37.],       [  81.,    4.,   32.],       [  61.,   63.,   35.],       [   4.,   89.,   37.],       [ -66.,   60.,   31.],       [ -90.,   -5.,   34.],       [ -65.,  -59.,   35.],       [   0.,  -87.,   35.],       [  61.,  -66.,   32.],       [  89.,    1.,   38.],       [  69.,   60.,   39.],       [   3.,   91.,   32.],       [ -67.,   62.,   32.],       [ -94.,   -1.,   35.],       [ -69.,  -68.,   31.],       [   4.,  -95.,   31.],       [  60.,  -64.,   33.],       [ 103.,    2.,   35.],       [  67.,   70.,   36.],       [   0.,   97.,   34.],       [ -74.,   70.,   36.],       [-105.,   -4.,   35.],       [ -76.,  -73.,   32.],       [  -1., -105.,   35.],       [  66.,  -72.,   38.],       [  50.,    1.,   42.],       [  31.,   30.,   44.],       [   4.,   52.,   36.],       [ -31.,   34.,   37.],       [ -47.,   -4.,   35.],       [ -38.,  -32.,   40.],       [   0.,  -48.,   38.],       [  32.,  -38.,   38.],       [  53.,    4.,   42.],       [  40.,   44.,   35.],       [   3.,   59.,   37.],       [ -42.,   44.,   36.],       [ -60.,   -2.,   37.],       [ -41.,  -43.,   35.],       [   0.,  -56.,   36.],       [  41.,  -37.,   43.],       [  59.,   -4.,   36.],       [  43.,   43.,   43.],       [  -1.,   61.,   41.],       [ -42.,   40.,   38.],       [ -63.,    1.,   44.],       [ -50.,  -47.,   37.],       [   2.,  -69.,   42.],       [  47.,  -49.,   36.],       [  67.,    2.,   43.],       [  49.,   52.,   41.],       [   1.,   68.,   40.],       [ -47.,   46.,   41.],       [ -69.,   -3.,   44.],       [ -47.,  -54.,   36.],       [  -4.,  -72.,   43.],       [  50.,  -56.,   36.],       [  83.,    2.,   40.],       [  59.,   59.,   39.],       [   0.,   77.,   42.],       [ -55.,   51.,   39.],       [ -83.,    4.,   43.],       [ -56.,  -54.,   40.],       [  -1.,  -80.,   40.],       [  57.,  -55.,   42.],       [  86.,   -1.,   38.],       [  64.,   65.,   37.],       [   0.,   86.,   39.],       [ -64.,   56.,   39.],       [ -90.,   -3.,   39.],       [ -60.,  -64.,   38.],       [   4.,  -85.,   36.],       [  56.,  -59.,   41.],       [  87.,   -1.,   43.],       [  66.,   67.,   38.],       [   3.,   93.,   41.],       [ -69.,   67.,   36.],       [ -93.,   -5.,   43.],       [ -64.,  -68.,   35.],       [   2.,  -89.,   40.],       [  69.,  -66.,   36.],       [ 103.,   -5.,   36.],       [  74.,   73.,   35.],       [  -2.,  100.,   43.],       [ -75.,   72.,   43.],       [ -97.,   -2.,   42.],       [ -72.,  -73.,   39.],       [   3.,  -96.,   36.],       [  71.,  -74.,   36.]])
        basis0 = BSplineBasis(7, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2. ,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  4.4]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.6,  3.3,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.9,  2.8,  3.7,  4.7,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 9.5,  0.3,  9.6])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 9.500000
        pt2[...,1] -= 0.300000
        pt2[...,2] -= 9.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p675_C0_periodic(self):
        controlpoints = np.array([[  52.,   -3.,    2.],       [  37.,   28.,   -4.],       [  10.,   46.,   -3.],       [ -30.,   45.,    3.],       [ -50.,   18.,   -5.],       [ -47.,  -20.,    4.],       [ -29.,  -46.,   -1.],       [   6.,  -51.,   -3.],       [  35.,  -34.,    3.],       [  54.,   -4.,    3.],       [  45.,   34.,    0.],       [   7.,   56.,   -4.],       [ -31.,   45.,   -2.],       [ -51.,   18.,    2.],       [ -58.,  -17.,    4.],       [ -32.,  -48.,    3.],       [   7.,  -56.,    4.],       [  43.,  -38.,   -4.],       [  63.,    0.,    4.],       [  45.,   44.,    0.],       [  13.,   67.,    3.],       [ -36.,   54.,   -1.],       [ -56.,   18.,   -1.],       [ -63.,  -27.,   -5.],       [ -31.,  -53.,   -1.],       [  14.,  -61.,   -1.],       [  52.,  -37.,   -1.],       [  75.,   -5.,    0.],       [  57.,   48.,    2.],       [  17.,   70.,    4.],       [ -36.,   61.,   -3.],       [ -69.,   21.,   -2.],       [ -67.,  -24.,    2.],       [ -32.,  -65.,    0.],       [   9.,  -66.,   -3.],       [  58.,  -43.,   -2.],       [  77.,   -4.,    2.],       [  60.,   51.,   -4.],       [  13.,   76.,    1.],       [ -39.,   70.,    4.],       [ -71.,   23.,   -5.],       [ -74.,  -32.,    4.],       [ -40.,  -73.,    3.],       [   9.,  -81.,    2.],       [  58.,  -47.,    2.],       [  81.,    2.,    0.],       [  61.,   57.,   -4.],       [  16.,   82.,    2.],       [ -45.,   76.,   -1.],       [ -83.,   26.,    3.],       [ -81.,  -25.,   -2.],       [ -42.,  -79.,    1.],       [  11.,  -84.,   -2.],       [  66.,  -57.,   -1.],       [  96.,    4.,    0.],       [  70.,   58.,   -1.],       [  19.,   87.,   -4.],       [ -48.,   84.,   -2.],       [ -87.,   29.,    4.],       [ -87.,  -34.,    2.],       [ -51.,  -86.,   -4.],       [  12.,  -87.,   -5.],       [  67.,  -64.,   -5.],       [ 100.,    1.,    3.],       [  72.,   63.,   -1.],       [  13.,   94.,   -5.],       [ -47.,   84.,    4.],       [ -93.,   37.,   -5.],       [ -97.,  -34.,   -5.],       [ -47.,  -86.,   -2.],       [  17.,  -98.,   -2.],       [  72.,  -61.,   -5.],       [  53.,   -1.,    0.],       [  33.,   35.,    2.],       [  11.,   48.,    5.],       [ -27.,   38.,    7.],       [ -47.,   13.,    7.],       [ -49.,  -14.,    7.],       [ -21.,  -49.,    1.],       [  11.,  -52.,    6.],       [  35.,  -32.,    5.],       [  61.,   -1.,    2.],       [  43.,   35.,    8.],       [   6.,   56.,    0.],       [ -31.,   47.,    6.],       [ -49.,   18.,    4.],       [ -54.,  -20.,    3.],       [ -27.,  -50.,    3.],       [   6.,  -53.,    6.],       [  40.,  -36.,    2.],       [  64.,    4.,    0.],       [  47.,   45.,    3.],       [  10.,   65.,    0.],       [ -34.,   57.,    8.],       [ -66.,   24.,    4.],       [ -59.,  -21.,    1.],       [ -36.,  -51.,    6.],       [  11.,  -68.,    5.],       [  47.,  -42.,   -1.],       [  71.,   -1.,    1.],       [  53.,   44.,    4.],       [  13.,   70.,    1.],       [ -35.,   66.,    2.],       [ -63.,   20.,    8.],       [ -63.,  -27.,    2.],       [ -36.,  -59.,    3.],       [  14.,  -71.,    5.],       [  52.,  -44.,    0.],       [  76.,   -5.,    1.],       [  60.,   50.,    8.],       [  13.,   77.,    2.],       [ -36.,   64.,    5.],       [ -73.,   30.,    1.],       [ -76.,  -24.,    4.],       [ -41.,  -67.,    8.],       [  16.,  -76.,    1.],       [  64.,  -50.,    5.],       [  86.,   -1.,    1.],       [  69.,   53.,    8.],       [  13.,   82.,    1.],       [ -44.,   70.,    7.],       [ -85.,   25.,    7.],       [ -85.,  -27.,    0.],       [ -41.,  -75.,    2.],       [  15.,  -88.,    4.],       [  61.,  -53.,    5.],       [  93.,    2.,    7.],       [  68.,   63.,    4.],       [  18.,   95.,    0.],       [ -49.,   76.,    7.],       [ -92.,   35.,    7.],       [ -87.,  -37.,    6.],       [ -49.,  -78.,    5.],       [  13.,  -96.,    4.],       [  73.,  -65.,    1.],       [  95.,    1.,    8.],       [  77.,   67.,    4.],       [  12.,   97.,    6.],       [ -46.,   85.,    4.],       [ -96.,   39.,    1.],       [ -99.,  -35.,    1.],       [ -46.,  -89.,    3.],       [  21.,  -97.,    3.],       [  73.,  -66.,    4.],       [  52.,    1.,    5.],       [  35.,   31.,    5.],       [   8.,   45.,   12.],       [ -30.,   46.,   10.],       [ -47.,   13.,   10.],       [ -52.,  -19.,    9.],       [ -26.,  -41.,   11.],       [   5.,  -50.,    7.],       [  36.,  -28.,   10.],       [  55.,   -1.,   12.],       [  46.,   34.,    7.],       [  13.,   54.,    7.],       [ -27.,   46.,    8.],       [ -54.,   23.,    8.],       [ -50.,  -24.,    6.],       [ -28.,  -47.,    7.],       [   6.,  -55.,   10.],       [  46.,  -40.,    9.],       [  62.,    1.,   11.],       [  53.,   45.,   13.],       [  12.,   59.,   10.],       [ -36.,   59.,    9.],       [ -58.,   17.,    7.],       [ -58.,  -22.,   11.],       [ -30.,  -60.,   12.],       [  10.,  -68.,    8.],       [  46.,  -44.,    7.],       [  72.,   -2.,   12.],       [  54.,   47.,   10.],       [  12.,   67.,   13.],       [ -33.,   59.,    8.],       [ -64.,   26.,    7.],       [ -64.,  -26.,    8.],       [ -35.,  -59.,   11.],       [  15.,  -69.,   11.],       [  59.,  -44.,    7.],       [  75.,   -3.,    5.],       [  64.,   49.,    4.],       [  15.,   76.,   13.],       [ -41.,   69.,   12.],       [ -74.,   29.,   13.],       [ -75.,  -30.,    8.],       [ -35.,  -72.,    6.],       [  18.,  -76.,    9.],       [  63.,  -53.,   12.],       [  84.,    0.,   13.],       [  66.,   54.,    7.],       [  13.,   84.,    7.],       [ -43.,   72.,    5.],       [ -76.,   32.,    9.],       [ -86.,  -35.,   12.],       [ -41.,  -74.,    7.],       [  17.,  -81.,    6.],       [  69.,  -60.,    8.],       [  94.,    1.,    8.],       [  73.,   56.,    4.],       [  17.,   87.,   11.],       [ -45.,   82.,    5.],       [ -84.,   32.,    8.],       [ -85.,  -35.,   10.],       [ -47.,  -79.,   12.],       [  13.,  -97.,    9.],       [  75.,  -61.,    8.],       [ 103.,    1.,   11.],       [  80.,   66.,    5.],       [  21.,   97.,   11.],       [ -53.,   89.,    6.],       [ -96.,   39.,   10.],       [ -90.,  -33.,   12.],       [ -48.,  -83.,    5.],       [  20.,  -97.,    5.],       [  72.,  -67.,    6.],       [  53.,   -2.,   16.],       [  42.,   35.,   12.],       [   5.,   46.,   14.],       [ -29.,   39.,   16.],       [ -50.,   21.,    8.],       [ -52.,  -15.,   11.],       [ -26.,  -39.,   13.],       [   9.,  -53.,    8.],       [  42.,  -35.,   10.],       [  61.,   -5.,   13.],       [  43.,   40.,    9.],       [  10.,   52.,    9.],       [ -30.,   50.,   12.],       [ -50.,   23.,    8.],       [ -56.,  -23.,    8.],       [ -27.,  -46.,   16.],       [   6.,  -57.,   11.],       [  48.,  -36.,    8.],       [  69.,   -4.,   11.],       [  45.,   45.,   14.],       [  12.,   58.,   13.],       [ -29.,   55.,   16.],       [ -61.,   24.,   11.],       [ -65.,  -20.,   16.],       [ -35.,  -59.,   17.],       [  11.,  -65.,   15.],       [  53.,  -46.,   15.],       [  70.,    0.,   10.],       [  52.,   45.,   15.],       [  15.,   74.,   12.],       [ -35.,   58.,   15.],       [ -72.,   29.,   13.],       [ -65.,  -24.,   17.],       [ -40.,  -61.,   15.],       [  16.,  -67.,   10.],       [  54.,  -49.,   13.],       [  77.,    3.,   14.],       [  56.,   48.,   16.],       [   8.,   79.,   14.],       [ -40.,   68.,   16.],       [ -76.,   27.,   14.],       [ -75.,  -30.,   10.],       [ -36.,  -67.,   13.],       [  14.,  -77.,   14.],       [  61.,  -56.,   16.],       [  80.,    4.,    8.],       [  63.,   60.,   13.],       [  16.,   84.,   16.],       [ -45.,   77.,   17.],       [ -85.,   33.,   14.],       [ -81.,  -27.,   13.],       [ -44.,  -78.,   10.],       [  12.,  -81.,   11.],       [  67.,  -54.,   16.],       [  89.,    3.,    9.],       [  70.,   62.,   17.],       [  19.,   87.,   11.],       [ -45.,   81.,   16.],       [ -86.,   29.,   16.],       [ -83.,  -35.,   17.],       [ -51.,  -85.,   14.],       [  15.,  -97.,   13.],       [  70.,  -63.,   10.],       [  98.,    0.,   10.],       [  74.,   63.,   16.],       [  17.,  103.,   14.],       [ -55.,   83.,   10.],       [ -93.,   38.,   15.],       [ -99.,  -38.,   12.],       [ -50.,  -90.,   13.],       [  14., -103.,   14.],       [  72.,  -64.,   14.],       [  52.,   -5.,   19.],       [  39.,   32.,   15.],       [  13.,   47.,   21.],       [ -21.,   43.,   20.],       [ -47.,   12.,   14.],       [ -51.,  -15.,   21.],       [ -25.,  -41.,   18.],       [  12.,  -47.,   19.],       [  42.,  -33.,   13.],       [  52.,   -2.,   16.],       [  41.,   34.,   20.],       [  14.,   56.,   13.],       [ -29.,   46.,   14.],       [ -54.,   23.,   13.],       [ -57.,  -17.,   21.],       [ -25.,  -54.,   14.],       [   5.,  -56.,   15.],       [  48.,  -33.,   19.],       [  59.,    2.,   12.],       [  45.,   41.,   17.],       [  15.,   60.,   20.],       [ -29.,   55.,   13.],       [ -60.,   24.,   21.],       [ -61.,  -24.,   18.],       [ -37.,  -58.,   13.],       [  15.,  -62.,   20.],       [  45.,  -39.,   21.],       [  67.,   -2.,   21.],       [  50.,   49.,   20.],       [  16.,   75.,   19.],       [ -40.,   58.,   13.],       [ -66.,   21.,   17.],       [ -68.,  -28.,   16.],       [ -40.,  -65.,   22.],       [  10.,  -74.,   17.],       [  51.,  -47.,   19.],       [  75.,    2.,   18.],       [  57.,   48.,   17.],       [  15.,   79.,   17.],       [ -44.,   67.,   18.],       [ -75.,   25.,   16.],       [ -78.,  -28.,   18.],       [ -36.,  -66.,   20.],       [  14.,  -82.,   21.],       [  61.,  -52.,   20.],       [  85.,    4.,   15.],       [  66.,   51.,   19.],       [  12.,   88.,   14.],       [ -43.,   72.,   18.],       [ -78.,   32.,   16.],       [ -77.,  -26.,   16.],       [ -48.,  -71.,   15.],       [  17.,  -90.,   20.],       [  61.,  -52.,   14.],       [  88.,   -4.,   15.],       [  67.,   57.,   16.],       [  17.,   91.,   17.],       [ -47.,   82.,   20.],       [ -87.,   27.,   20.],       [ -87.,  -27.,   14.],       [ -45.,  -85.,   16.],       [  16.,  -89.,   22.],       [  69.,  -63.,   21.],       [ 103.,    0.,   20.],       [  79.,   68.,   17.],       [  20.,   96.,   17.],       [ -46.,   83.,   19.],       [ -91.,   36.,   14.],       [ -96.,  -32.,   17.],       [ -47.,  -84.,   21.],       [  14.,  -97.,   21.],       [  81.,  -69.,   18.],       [  53.,   -5.,   19.],       [  40.,   29.,   26.],       [   6.,   46.,   21.],       [ -30.,   48.,   23.],       [ -46.,   12.,   22.],       [ -47.,  -17.,   24.],       [ -27.,  -41.,   26.],       [   5.,  -48.,   20.],       [  38.,  -28.,   21.],       [  60.,   -5.,   23.],       [  47.,   35.,   18.],       [   5.,   60.,   26.],       [ -27.,   48.,   18.],       [ -59.,   20.,   26.],       [ -55.,  -22.,   19.],       [ -28.,  -53.,   24.],       [   9.,  -54.,   26.],       [  45.,  -33.,   18.],       [  64.,    0.,   23.],       [  47.,   44.,   22.],       [  10.,   65.,   21.],       [ -37.,   53.,   24.],       [ -65.,   23.,   27.],       [ -65.,  -25.,   22.],       [ -31.,  -56.,   19.],       [   6.,  -59.,   17.],       [  50.,  -42.,   21.],       [  73.,   -5.,   21.],       [  57.,   45.,   26.],       [   8.,   73.,   22.],       [ -31.,   63.,   22.],       [ -70.,   19.,   18.],       [ -69.,  -27.,   19.],       [ -33.,  -65.,   22.],       [  11.,  -73.,   20.],       [  50.,  -51.,   20.],       [  83.,    2.,   24.],       [  58.,   52.,   18.],       [  15.,   78.,   22.],       [ -35.,   69.,   19.],       [ -75.,   30.,   24.],       [ -71.,  -28.,   22.],       [ -38.,  -71.,   25.],       [  12.,  -79.,   22.],       [  61.,  -47.,   23.],       [  88.,   -4.,   20.],       [  69.,   56.,   19.],       [  15.,   84.,   20.],       [ -41.,   70.,   26.],       [ -80.,   25.,   19.],       [ -84.,  -33.,   20.],       [ -42.,  -75.,   25.],       [  17.,  -83.,   26.],       [  66.,  -52.,   18.],       [  91.,   -2.,   19.],       [  68.,   55.,   26.],       [  11.,   94.,   24.],       [ -46.,   83.,   17.],       [ -89.,   29.,   26.],       [ -89.,  -30.,   18.],       [ -43.,  -77.,   24.],       [  15.,  -96.,   27.],       [  70.,  -60.,   24.],       [ 101.,   -2.,   19.],       [  80.,   62.,   25.],       [  16.,  100.,   17.],       [ -47.,   91.,   27.],       [ -94.,   32.,   22.],       [ -97.,  -36.,   22.],       [ -49.,  -88.,   22.],       [  20.,  -99.,   26.],       [  74.,  -61.,   23.],       [  49.,    0.,   28.],       [  37.,   29.,   22.],       [  13.,   53.,   30.],       [ -26.,   43.,   26.],       [ -49.,   14.,   31.],       [ -48.,  -13.,   23.],       [ -24.,  -44.,   29.],       [   7.,  -51.,   25.],       [  34.,  -32.,   24.],       [  54.,    3.,   27.],       [  40.,   33.,   28.],       [  10.,   54.,   22.],       [ -31.,   53.,   21.],       [ -57.,   17.,   30.],       [ -52.,  -21.,   24.],       [ -28.,  -49.,   24.],       [   5.,  -54.,   21.],       [  38.,  -41.,   26.],       [  59.,   -5.,   24.],       [  51.,   37.,   29.],       [  15.,   59.,   24.],       [ -33.,   51.,   23.],       [ -58.,   22.,   27.],       [ -60.,  -27.,   23.],       [ -28.,  -58.,   25.],       [  10.,  -65.,   24.],       [  53.,  -37.,   25.],       [  67.,   -1.,   23.],       [  57.,   48.,   28.],       [  11.,   71.,   26.],       [ -38.,   62.,   26.],       [ -71.,   28.,   25.],       [ -71.,  -24.,   31.],       [ -37.,  -66.,   26.],       [  15.,  -72.,   28.],       [  53.,  -50.,   29.],       [  82.,    0.,   27.],       [  58.,   50.,   23.],       [  16.,   75.,   24.],       [ -38.,   67.,   30.],       [ -69.,   28.,   22.],       [ -74.,  -29.,   23.],       [ -43.,  -66.,   28.],       [  10.,  -79.,   31.],       [  64.,  -47.,   23.],       [  86.,   -2.,   30.],       [  62.,   51.,   27.],       [  10.,   88.,   24.],       [ -43.,   73.,   31.],       [ -82.,   32.,   22.],       [ -85.,  -35.,   24.],       [ -47.,  -76.,   26.],       [  17.,  -88.,   23.],       [  67.,  -52.,   21.],       [  92.,    3.,   30.],       [  72.,   62.,   28.],       [  17.,   88.,   30.],       [ -42.,   83.,   28.],       [ -88.,   33.,   29.],       [ -90.,  -37.,   24.],       [ -48.,  -82.,   31.],       [  18.,  -93.,   27.],       [  68.,  -59.,   21.],       [  95.,   -1.,   22.],       [  75.,   59.,   26.],       [  14.,   98.,   30.],       [ -50.,   90.,   27.],       [ -94.,   34.,   28.],       [ -93.,  -30.,   22.],       [ -54.,  -84.,   30.],       [  21., -103.,   30.],       [  78.,  -61.,   31.],       [  52.,    1.,   27.],       [  34.,   31.,   32.],       [   9.,   53.,   26.],       [ -25.,   43.,   35.],       [ -48.,   19.,   32.],       [ -48.,  -21.,   28.],       [ -29.,  -47.,   28.],       [  11.,  -50.,   32.],       [  39.,  -29.,   29.],       [  52.,   -5.,   27.],       [  42.,   41.,   29.],       [   6.,   54.,   33.],       [ -28.,   52.,   29.],       [ -54.,   22.,   35.],       [ -49.,  -24.,   34.],       [ -25.,  -50.,   31.],       [  12.,  -59.,   27.],       [  47.,  -33.,   35.],       [  61.,   -4.,   32.],       [  45.,   37.,   27.],       [  15.,   63.,   34.],       [ -36.,   59.,   35.],       [ -60.,   20.,   35.],       [ -58.,  -18.,   27.],       [ -30.,  -57.,   34.],       [   8.,  -61.,   35.],       [  52.,  -46.,   26.],       [  71.,    0.,   27.],       [  53.,   48.,   29.],       [  16.,   65.,   35.],       [ -38.,   61.,   34.],       [ -67.,   21.,   27.],       [ -63.,  -23.,   26.],       [ -36.,  -64.,   28.],       [  16.,  -70.,   30.],       [  50.,  -45.,   30.],       [  82.,   -4.,   33.],       [  64.,   47.,   34.],       [  13.,   73.,   35.],       [ -36.,   71.,   34.],       [ -70.,   28.,   33.],       [ -70.,  -24.,   36.],       [ -36.,  -64.,   29.],       [  13.,  -82.,   28.],       [  58.,  -51.,   29.],       [  85.,   -2.,   32.],       [  67.,   50.,   31.],       [  14.,   88.,   30.],       [ -46.,   78.,   26.],       [ -83.,   25.,   27.],       [ -84.,  -28.,   32.],       [ -46.,  -71.,   35.],       [  16.,  -86.,   32.],       [  67.,  -56.,   34.],       [  92.,    1.,   31.],       [  75.,   63.,   35.],       [  20.,   92.,   30.],       [ -51.,   78.,   33.],       [ -87.,   30.,   32.],       [ -92.,  -28.,   32.],       [ -43.,  -81.,   29.],       [  17.,  -87.,   32.],       [  72.,  -55.,   33.],       [  96.,   -3.,   29.],       [  80.,   60.,   29.],       [  16.,   99.,   28.],       [ -55.,   89.,   35.],       [ -97.,   30.,   29.],       [ -97.,  -37.,   32.],       [ -46.,  -88.,   33.],       [  16.,  -95.,   34.],       [  76.,  -61.,   32.],       [  54.,    3.,   39.],       [  40.,   36.,   34.],       [   4.,   51.,   34.],       [ -27.,   43.,   37.],       [ -48.,   14.,   37.],       [ -43.,  -19.,   31.],       [ -26.,  -46.,   34.],       [   4.,  -54.,   39.],       [  41.,  -38.,   37.],       [  53.,   -1.,   36.],       [  42.,   37.,   37.],       [  11.,   55.,   30.],       [ -27.,   49.,   40.],       [ -51.,   19.,   40.],       [ -49.,  -22.,   38.],       [ -27.,  -54.,   38.],       [   7.,  -53.,   32.],       [  38.,  -37.,   40.],       [  64.,   -2.,   37.],       [  52.,   44.,   40.],       [  12.,   64.,   31.],       [ -30.,   58.,   38.],       [ -65.,   21.,   35.],       [ -62.,  -18.,   38.],       [ -32.,  -56.,   31.],       [  10.,  -61.,   32.],       [  52.,  -45.,   32.],       [  71.,    2.,   33.],       [  54.,   48.,   33.],       [  12.,   72.,   31.],       [ -38.,   65.,   33.],       [ -69.,   28.,   37.],       [ -66.,  -23.,   39.],       [ -35.,  -63.,   39.],       [   9.,  -68.,   36.],       [  50.,  -46.,   34.],       [  79.,   -3.,   32.],       [  60.,   53.,   32.],       [  17.,   74.,   40.],       [ -40.,   70.,   39.],       [ -77.,   22.,   31.],       [ -74.,  -26.,   31.],       [ -40.,  -67.,   39.],       [  10.,  -79.,   35.],       [  60.,  -49.,   35.],       [  84.,    4.,   34.],       [  62.,   54.,   30.],       [  13.,   82.,   38.],       [ -39.,   70.,   32.],       [ -82.,   25.,   36.],       [ -86.,  -35.,   32.],       [ -40.,  -79.,   40.],       [  16.,  -89.,   39.],       [  64.,  -55.,   35.],       [  96.,   -5.,   39.],       [  75.,   64.,   33.],       [  14.,   94.,   33.],       [ -51.,   82.,   37.],       [ -90.,   32.,   34.],       [ -88.,  -37.,   36.],       [ -47.,  -78.,   34.],       [  17.,  -96.,   39.],       [  70.,  -62.,   38.],       [  95.,    2.,   36.],       [  79.,   64.,   40.],       [  20.,   96.,   33.],       [ -53.,   90.,   33.],       [ -97.,   31.,   30.],       [ -93.,  -39.,   39.],       [ -53.,  -90.,   39.],       [  16.,  -96.,   36.],       [  73.,  -66.,   37.],       [  50.,   -3.,   38.],       [  41.,   31.,   44.],       [   9.,   50.,   43.],       [ -24.,   40.,   36.],       [ -45.,   16.,   39.],       [ -47.,  -18.,   44.],       [ -23.,  -43.,   37.],       [   9.,  -47.,   36.],       [  36.,  -31.,   38.],       [  57.,    1.,   42.],       [  39.,   38.,   37.],       [  14.,   51.,   38.],       [ -25.,   47.,   38.],       [ -50.,   18.,   44.],       [ -55.,  -15.,   39.],       [ -24.,  -50.,   35.],       [  11.,  -59.,   43.],       [  42.,  -40.,   38.],       [  66.,    0.,   41.],       [  50.,   39.,   44.],       [   7.,   67.,   44.],       [ -35.,   56.,   42.],       [ -60.,   22.,   39.],       [ -58.,  -27.,   40.],       [ -35.,  -52.,   39.],       [  11.,  -60.,   41.],       [  44.,  -46.,   39.],       [  69.,    1.,   35.],       [  59.,   46.,   44.],       [  10.,   74.,   38.],       [ -38.,   65.,   36.],       [ -70.,   27.,   40.],       [ -67.,  -24.,   37.],       [ -38.,  -58.,   40.],       [  15.,  -66.,   40.],       [  51.,  -46.,   35.],       [  80.,    2.,   37.],       [  64.,   52.,   38.],       [  11.,   79.,   43.],       [ -40.,   72.,   37.],       [ -71.,   30.,   39.],       [ -70.,  -27.,   44.],       [ -42.,  -72.,   42.],       [  11.,  -78.,   39.],       [  59.,  -52.,   38.],       [  88.,   -3.,   37.],       [  62.,   51.,   43.],       [  14.,   84.,   40.],       [ -39.,   78.,   41.],       [ -86.,   31.,   41.],       [ -82.,  -27.,   39.],       [ -47.,  -80.,   38.],       [  18.,  -82.,   40.],       [  66.,  -60.,   44.],       [  94.,    1.,   41.],       [  76.,   56.,   41.],       [  16.,   89.,   44.],       [ -49.,   83.,   41.],       [ -89.,   32.,   43.],       [ -88.,  -32.,   44.],       [ -43.,  -82.,   39.],       [  18.,  -87.,   38.],       [  68.,  -59.,   38.],       [  95.,    2.,   43.],       [  77.,   61.,   43.],       [  12.,   99.,   35.],       [ -48.,   82.,   37.],       [ -98.,   29.,   37.],       [ -93.,  -37.,   39.],       [ -47.,  -86.,   39.],       [  17.,  -94.,   43.],       [  74.,  -68.,   39.]])
        basis0 = BSplineBasis(6, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.1,  3. ,  4.3,  5. ,
        5. ,  5. ,  5. ,  5. ,  5.8]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.2,  2.9,  3.9,  5.4,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([  9.2,   7.1,  10.6])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 9.200000
        pt2[...,1] /= 7.100000
        pt2[...,2] /= 10.600000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p755_C0_periodic(self):
        controlpoints = np.array([[  46.,   -1.,   -2.],       [  37.,   37.,   -4.],       [  -3.,   45.,   -3.],       [ -35.,   38.,   -4.],       [ -49.,    0.,    1.],       [ -35.,  -36.,   -1.],       [  -5.,  -55.,    0.],       [  39.,  -35.,   -2.],       [  55.,   -5.,    2.],       [  44.,   44.,    0.],       [   0.,   60.,   -2.],       [ -46.,   38.,   -5.],       [ -54.,    1.,   -2.],       [ -39.,  -46.,    4.],       [  -4.,  -58.,   -5.],       [  45.,  -37.,   -4.],       [  68.,    1.,   -4.],       [  49.,   50.,    4.],       [  -2.,   69.,    2.],       [ -49.,   47.,    0.],       [ -63.,    4.,    4.],       [ -48.,  -51.,    1.],       [  -1.,  -63.,    2.],       [  48.,  -48.,   -2.],       [  75.,    0.,   -2.],       [  51.,   54.,   -1.],       [  -3.,   74.,   -3.],       [ -49.,   56.,   -2.],       [ -77.,   -1.,   -1.],       [ -53.,  -54.,    1.],       [   4.,  -75.,    3.],       [  57.,  -55.,   -5.],       [  78.,   -3.,   -2.],       [  57.,   63.,   -4.],       [  -4.,   82.,   -2.],       [ -59.,   55.,   -5.],       [ -80.,    2.,    2.],       [ -63.,  -63.,    3.],       [  -4.,  -87.,    4.],       [  54.,  -61.,   -2.],       [  89.,   -3.,    4.],       [  63.,   62.,   -5.],       [   3.,   96.,    3.],       [ -64.,   66.,   -4.],       [ -94.,    4.,    2.],       [ -67.,  -64.,    4.],       [   1.,  -91.,    4.],       [  64.,  -69.,    1.],       [ 100.,    0.,   -5.],       [  69.,   72.,   -1.],       [  -1.,   99.,   -1.],       [ -66.,   69.,    4.],       [ -96.,    4.,    2.],       [ -72.,  -75.,    3.],       [  -5., -103.,    3.],       [  66.,  -76.,   -2.],       [  51.,   -3.,    0.],       [  31.,   40.,    2.],       [  -3.,   48.,    6.],       [ -37.,   39.,    5.],       [ -54.,    1.,    8.],       [ -37.,  -38.,    3.],       [  -4.,  -55.,    4.],       [  32.,  -33.,    8.],       [  61.,   -5.,    0.],       [  44.,   45.,    1.],       [  -5.,   55.,    4.],       [ -46.,   37.,    7.],       [ -54.,   -5.,    7.],       [ -42.,  -41.,    3.],       [  -1.,  -57.,    3.],       [  43.,  -39.,    9.],       [  63.,    3.,    7.],       [  46.,   51.,    0.],       [   2.,   66.,    9.],       [ -51.,   47.,    8.],       [ -70.,   -3.,    2.],       [ -44.,  -49.,    7.],       [   1.,  -68.,    6.],       [  49.,  -51.,    9.],       [  78.,    0.,    9.],       [  51.,   54.,    6.],       [   4.,   74.,    1.],       [ -50.,   53.,    0.],       [ -76.,    0.,    1.],       [ -49.,  -55.,    1.],       [  -2.,  -77.,    3.],       [  55.,  -49.,    9.],       [  83.,   -4.,    7.],       [  55.,   55.,    7.],       [  -4.,   83.,    7.],       [ -56.,   60.,    8.],       [ -84.,   -5.,    4.],       [ -61.,  -62.,    8.],       [  -2.,  -83.,    0.],       [  62.,  -60.,    9.],       [  93.,    1.,    7.],       [  62.,   67.,    0.],       [  -2.,   93.,    5.],       [ -66.,   66.,    9.],       [ -91.,   -4.,    4.],       [ -61.,  -68.,    0.],       [  -5.,  -95.,    0.],       [  61.,  -61.,    9.],       [  97.,    0.,    8.],       [  66.,   70.,    5.],       [   4.,   99.,    3.],       [ -70.,   71.,    4.],       [-101.,    1.,    4.],       [ -74.,  -69.,    2.],       [  -2., -105.,    2.],       [  68.,  -70.,    4.],       [  49.,   -5.,    7.],       [  39.,   33.,    7.],       [  -1.,   52.,    7.],       [ -32.,   35.,    7.],       [ -54.,   -3.,    7.],       [ -39.,  -38.,   11.],       [   3.,  -47.,    6.],       [  39.,  -33.,   14.],       [  55.,   -4.,   10.],       [  45.,   44.,    8.],       [  -1.,   59.,    9.],       [ -37.,   45.,   10.],       [ -61.,    2.,    7.],       [ -38.,  -45.,   13.],       [  -4.,  -62.,   13.],       [  38.,  -46.,   12.],       [  63.,    3.,    7.],       [  45.,   48.,   12.],       [   3.,   67.,   13.],       [ -47.,   46.,    8.],       [ -63.,    1.,    5.],       [ -49.,  -49.,    5.],       [   4.,  -66.,    5.],       [  43.,  -47.,    7.],       [  76.,    4.,    7.],       [  53.,   52.,    5.],       [   1.,   76.,   14.],       [ -56.,   57.,   13.],       [ -79.,    1.,   11.],       [ -52.,  -49.,    8.],       [   0.,  -78.,   14.],       [  51.,  -50.,   13.],       [  80.,    1.,    9.],       [  58.,   63.,   13.],       [   0.,   86.,   10.],       [ -56.,   62.,    6.],       [ -83.,    1.,    9.],       [ -55.,  -56.,    9.],       [   2.,  -84.,   12.],       [  61.,  -55.,    9.],       [  87.,    4.,    5.],       [  64.,   60.,   10.],       [  -4.,   87.,    9.],       [ -61.,   60.,   11.],       [ -97.,    4.,   12.],       [ -64.,  -66.,   10.],       [   0.,  -91.,    8.],       [  63.,  -68.,   14.],       [ 101.,   -3.,   13.],       [  67.,   71.,   12.],       [  -1.,  100.,   10.],       [ -76.,   71.,   14.],       [ -99.,   -3.,   11.],       [ -75.,  -76.,   11.],       [  -5.,  -98.,    9.],       [  70.,  -73.,   10.],       [  45.,    1.,   15.],       [  37.,   33.,   12.],       [   1.,   45.,   12.],       [ -35.,   39.,   15.],       [ -46.,   -1.,   16.],       [ -40.,  -40.,   13.],       [  -1.,  -48.,   14.],       [  33.,  -38.,   13.],       [  56.,   -1.,   17.],       [  42.,   41.,   18.],       [  -5.,   57.,   17.],       [ -43.,   38.,   12.],       [ -59.,   -4.,   18.],       [ -39.,  -40.,   10.],       [  -1.,  -54.,   18.],       [  38.,  -41.,   13.],       [  64.,    1.,   16.],       [  51.,   42.,   16.],       [   4.,   64.,   12.],       [ -48.,   44.,   10.],       [ -68.,    3.,   11.],       [ -48.,  -46.,   12.],       [  -4.,  -71.,   18.],       [  49.,  -48.,   10.],       [  76.,    2.,   11.],       [  50.,   48.,   15.],       [   3.,   71.,   15.],       [ -54.,   55.,   13.],       [ -76.,   -1.,   13.],       [ -53.,  -55.,   19.],       [  -5.,  -80.,   18.],       [  53.,  -50.,   14.],       [  87.,   -4.,   11.],       [  62.,   55.,   19.],       [  -4.,   83.,   16.],       [ -62.,   58.,   19.],       [ -79.,   -5.,   16.],       [ -57.,  -57.,   18.],       [  -2.,  -84.,   13.],       [  63.,  -55.,   13.],       [  91.,    0.,   19.],       [  61.,   63.,   10.],       [  -5.,   96.,   10.],       [ -69.,   68.,   14.],       [ -92.,    0.,   15.],       [ -67.,  -68.,   11.],       [   4.,  -90.,   14.],       [  68.,  -62.,   16.],       [ 102.,   -2.,   19.],       [  75.,   69.,   11.],       [   0.,  102.,   13.],       [ -68.,   68.,   11.],       [-105.,   -4.,   14.],       [ -73.,  -67.,   10.],       [   1., -100.,   10.],       [  72.,  -71.,   15.],       [  53.,    0.,   23.],       [  35.,   34.,   20.],       [   0.,   52.,   20.],       [ -32.,   38.,   24.],       [ -49.,   -2.,   18.],       [ -40.,  -38.,   19.],       [   2.,  -52.,   24.],       [  36.,  -36.,   18.],       [  57.,   -2.,   21.],       [  45.,   38.,   23.],       [   3.,   58.,   16.],       [ -41.,   36.,   18.],       [ -61.,    2.,   16.],       [ -45.,  -40.,   24.],       [   4.,  -63.,   18.],       [  42.,  -37.,   19.],       [  70.,    2.,   20.],       [  46.,   49.,   15.],       [  -4.,   61.,   21.],       [ -51.,   44.,   20.],       [ -62.,   -5.,   18.],       [ -51.,  -43.,   22.],       [   0.,  -66.,   18.],       [  51.,  -48.,   21.],       [  72.,   -4.,   17.],       [  55.,   49.,   19.],       [  -1.,   77.,   22.],       [ -58.,   49.,   24.],       [ -80.,   -5.,   15.],       [ -51.,  -53.,   19.],       [   3.,  -76.,   16.],       [  48.,  -55.,   16.],       [  88.,   -2.,   15.],       [  60.,   57.,   22.],       [   4.,   87.,   16.],       [ -64.,   55.,   22.],       [ -83.,   -2.,   22.],       [ -61.,  -62.,   22.],       [  -3.,  -84.,   22.],       [  55.,  -56.,   24.],       [  92.,   -5.,   24.],       [  62.,   60.,   23.],       [   1.,   88.,   17.],       [ -63.,   66.,   23.],       [ -93.,    4.,   20.],       [ -68.,  -69.,   18.],       [  -3.,  -95.,   21.],       [  62.,  -61.,   18.],       [  98.,   -4.,   21.],       [  75.,   75.,   17.],       [   3.,  103.,   15.],       [ -67.,   75.,   16.],       [ -96.,   -5.,   23.],       [ -72.,  -73.,   23.],       [   1.,  -96.,   16.],       [  69.,  -69.,   22.],       [  46.,    3.,   28.],       [  39.,   37.,   25.],       [  -2.,   51.,   24.],       [ -36.,   31.,   28.],       [ -49.,    3.,   21.],       [ -40.,  -39.,   24.],       [  -5.,  -52.,   22.],       [  31.,  -34.,   21.],       [  60.,    3.,   22.],       [  39.,   41.,   29.],       [   0.,   58.,   29.],       [ -40.,   42.,   24.],       [ -57.,   -1.,   23.],       [ -41.,  -38.,   29.],       [   3.,  -58.,   28.],       [  37.,  -45.,   22.],       [  65.,    4.,   22.],       [  50.,   43.,   20.],       [   4.,   64.,   21.],       [ -48.,   49.,   26.],       [ -67.,   -1.,   23.],       [ -50.,  -47.,   21.],       [  -2.,  -63.,   21.],       [  45.,  -48.,   21.],       [  76.,   -2.,   21.],       [  53.,   55.,   23.],       [  -4.,   71.,   20.],       [ -51.,   50.,   26.],       [ -79.,   -1.,   20.],       [ -49.,  -52.,   27.],       [   1.,  -73.,   26.],       [  54.,  -56.,   24.],       [  79.,   -4.,   22.],       [  62.,   54.,   25.],       [  -3.,   83.,   22.],       [ -56.,   56.,   29.],       [ -89.,    2.,   21.],       [ -55.,  -59.,   29.],       [  -5.,  -86.,   24.],       [  59.,  -57.,   27.],       [  88.,    3.,   28.],       [  64.,   67.,   21.],       [  -5.,   86.,   29.],       [ -66.,   66.,   21.],       [ -90.,   -5.,   20.],       [ -62.,  -67.,   27.],       [  -2.,  -94.,   24.],       [  68.,  -62.,   24.],       [  99.,    0.,   21.],       [  71.,   66.,   24.],       [   3.,   98.,   27.],       [ -68.,   67.,   25.],       [-101.,   -5.,   28.],       [ -68.,  -70.,   25.],       [   0.,  -99.,   29.],       [  65.,  -70.,   21.],       [  51.,    0.,   32.],       [  34.,   38.,   34.],       [  -2.,   54.,   32.],       [ -32.,   31.,   26.],       [ -46.,    3.,   25.],       [ -38.,  -40.,   29.],       [  -4.,  -54.,   28.],       [  34.,  -32.,   28.],       [  59.,   -4.,   30.],       [  39.,   39.,   26.],       [   4.,   61.,   32.],       [ -41.,   40.,   33.],       [ -61.,   -3.,   28.],       [ -38.,  -37.,   25.],       [  -1.,  -63.,   32.],       [  40.,  -38.,   29.],       [  62.,    0.,   25.],       [  46.,   48.,   30.],       [   2.,   62.,   31.],       [ -43.,   50.,   27.],       [ -67.,   -4.,   27.],       [ -52.,  -52.,   26.],       [  -1.,  -63.,   29.],       [  51.,  -51.,   25.],       [  74.,    1.,   34.],       [  56.,   50.,   26.],       [   4.,   71.,   25.],       [ -54.,   53.,   34.],       [ -80.,   -3.,   30.],       [ -56.,  -54.,   34.],       [  -1.,  -71.,   25.],       [  49.,  -53.,   25.],       [  85.,    3.,   25.],       [  54.,   57.,   31.],       [   3.,   85.,   29.],       [ -61.,   61.,   27.],       [ -83.,    0.,   34.],       [ -55.,  -62.,   30.],       [  -1.,  -89.,   29.],       [  54.,  -56.,   29.],       [  87.,   -4.,   31.],       [  66.,   65.,   25.],       [  -4.,   89.,   29.],       [ -70.,   65.,   31.],       [ -94.,    4.,   33.],       [ -67.,  -63.,   31.],       [   1.,  -90.,   27.],       [  68.,  -64.,   32.],       [ 103.,    0.,   27.],       [  70.,   66.,   32.],       [   2.,  100.,   25.],       [ -67.,   74.,   28.],       [-102.,    0.,   30.],       [ -70.,  -74.,   27.],       [   4.,  -98.,   28.],       [  73.,  -73.,   27.],       [  48.,   -3.,   37.],       [  38.,   31.,   38.],       [  -2.,   45.,   34.],       [ -33.,   40.,   38.],       [ -48.,   -4.,   30.],       [ -34.,  -38.,   34.],       [  -1.,  -53.,   37.],       [  31.,  -34.,   39.],       [  60.,   -5.,   30.],       [  39.,   42.,   36.],       [   1.,   58.,   36.],       [ -40.,   41.,   33.],       [ -56.,   -1.,   31.],       [ -42.,  -44.,   31.],       [  -1.,  -59.,   36.],       [  42.,  -40.,   34.],       [  65.,   -5.,   33.],       [  44.,   48.,   33.],       [  -5.,   68.,   31.],       [ -51.,   46.,   32.],       [ -71.,    0.,   34.],       [ -46.,  -51.,   32.],       [   0.,  -72.,   31.],       [  47.,  -45.,   33.],       [  75.,    2.,   32.],       [  53.,   50.,   32.],       [   3.,   75.,   30.],       [ -51.,   50.,   38.],       [ -72.,   -3.,   31.],       [ -51.,  -57.,   39.],       [  -3.,  -74.,   32.],       [  52.,  -51.,   32.],       [  78.,   -2.,   32.],       [  54.,   56.,   32.],       [  -1.,   80.,   32.],       [ -64.,   58.,   35.],       [ -81.,   -2.,   34.],       [ -60.,  -57.,   33.],       [   0.,  -82.,   34.],       [  54.,  -57.,   35.],       [  91.,   -5.,   30.],       [  63.,   68.,   33.],       [  -4.,   90.,   35.],       [ -67.,   64.,   36.],       [ -93.,   -1.,   34.],       [ -67.,  -64.,   38.],       [   4.,  -94.,   34.],       [  68.,  -68.,   30.],       [  98.,   -4.,   30.],       [  74.,   70.,   31.],       [   1.,   95.,   31.],       [ -72.,   69.,   34.],       [ -98.,   -3.,   33.],       [ -71.,  -70.,   33.],       [   2.,  -97.,   30.],       [  69.,  -76.,   37.],       [  51.,   -1.,   43.],       [  37.,   32.,   37.],       [  -5.,   47.,   37.],       [ -31.,   33.,   42.],       [ -51.,    0.,   35.],       [ -38.,  -41.,   43.],       [  -3.,  -48.,   41.],       [  30.,  -39.,   40.],       [  62.,   -4.,   36.],       [  37.,   38.,   39.],       [  -2.,   54.,   36.],       [ -45.,   45.,   38.],       [ -58.,   -3.,   44.],       [ -43.,  -43.,   35.],       [  -3.,  -62.,   36.],       [  41.,  -38.,   37.],       [  66.,    1.,   41.],       [  52.,   45.,   44.],       [  -1.,   65.,   41.],       [ -43.,   50.,   38.],       [ -63.,   -1.,   43.],       [ -46.,  -51.,   44.],       [   1.,  -67.,   41.],       [  50.,  -52.,   35.],       [  77.,    2.,   40.],       [  55.,   54.,   35.],       [   3.,   72.,   35.],       [ -58.,   49.,   39.],       [ -74.,   -5.,   43.],       [ -56.,  -55.,   39.],       [  -1.,  -72.,   37.],       [  56.,  -53.,   44.],       [  84.,   -1.,   40.],       [  60.,   58.,   41.],       [   4.,   79.,   43.],       [ -55.,   63.,   44.],       [ -85.,   -5.,   36.],       [ -60.,  -58.,   39.],       [  -3.,  -87.,   35.],       [  56.,  -62.,   35.],       [  95.,    3.,   38.],       [  59.,   67.,   44.],       [   0.,   90.,   42.],       [ -65.,   60.,   37.],       [ -93.,   -4.,   41.],       [ -69.,  -66.,   40.],       [   1.,  -93.,   44.],       [  61.,  -68.,   42.],       [ 102.,    0.,   41.],       [  72.,   66.,   44.],       [  -1.,   97.,   36.],       [ -69.,   65.,   36.],       [-103.,    2.,   40.],       [ -71.,  -69.,   43.],       [   0.,  -99.,   35.],       [  71.,  -70.,   43.]])
        basis0 = BSplineBasis(7, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.9,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  4.3]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.2,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2.1,  3.3,  4.3,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.mirror([0, 0, 2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_curve_3D_p5_C1_periodic(self):
        controlpoints = np.array([[  98.,   -2.,   -2.],
       [  65.,   80.,    3.],
       [ -20.,  101.,    1.],
       [ -95.,   47.,    4.],
       [ -89.,  -44.,   -4.],
       [ -20., -103.,   -3.],
       [  59.,  -74.,   -5.]])
        basis0 = BSplineBasis(5, np.array([-1.9, -1.3,  0. ,  0. ,  0. ,  1.4,  1.9,  3.1,  3.7,  5. ,  5. ,
        5. ,  6.4,  6.9]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 3.4,  0.2,  4.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 3.400000
        pt2[...,1] -= 0.200000
        pt2[...,2] -= 4.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_curve_3D_p7_C1_periodic(self):
        controlpoints = np.array([[ 103.,    4.,   -3.],
       [  78.,   64.,    3.],
       [  20.,   98.,   -2.],
       [ -46.,   82.,   -3.],
       [ -96.,   37.,   -5.],
       [ -92.,  -39.,   -5.],
       [ -55.,  -86.,    4.],
       [  17., -101.,    3.],
       [  77.,  -67.,   -3.]])
        basis0 = BSplineBasis(7, np.array([-2.1, -1.2,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  1.9,  2.9,  3.8,
        5. ,  5. ,  5. ,  5. ,  5. ,  5.6,  6.9]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 6.2,  9.4,  6.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 6.200000
        pt2[...,1] /= 9.400000
        pt2[...,2] /= 6.900000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_curve_3D_p7_C1_periodic(self):
        controlpoints = np.array([[  99.,    2.,   -1.],
       [  66.,   73.,    2.],
       [  -2.,  102.,    1.],
       [ -68.,   67.,    4.],
       [-105.,    4.,    2.],
       [ -71.,  -68.,   -2.],
       [  -2., -103.,    1.],
       [  65.,  -75.,    1.]])
        basis0 = BSplineBasis(7, np.array([-2. , -1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  3. ,  4. ,
        4. ,  4. ,  4. ,  4. ,  5.1,  6. ]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.mirror([3, 0, 0])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_surface_3D_p67_C1_periodic(self):
        controlpoints = np.array([[  55.,    4.,    1.],       [  34.,   43.,    0.],       [ -12.,   54.,   -3.],       [ -53.,   31.,    2.],       [ -50.,  -23.,   -3.],       [  -9.,  -59.,   -3.],       [  33.,  -52.,   -4.],       [  63.,    4.,    1.],       [  41.,   47.,   -5.],       [ -17.,   58.,   -2.],       [ -63.,   31.,    1.],       [ -55.,  -27.,   -4.],       [ -18.,  -65.,    2.],       [  42.,  -47.,   -5.],       [  69.,   -4.,    2.],       [  42.,   59.,    1.],       [ -18.,   68.,    1.],       [ -65.,   32.,    3.],       [ -61.,  -27.,    1.],       [ -18.,  -67.,    0.],       [  47.,  -59.,    4.],       [  74.,   -2.,   -1.],       [  50.,   57.,    0.],       [ -21.,   68.,   -3.],       [ -72.,   36.,    3.],       [ -67.,  -31.,   -5.],       [ -18.,  -75.,    4.],       [  42.,  -60.,    2.],       [  83.,   -2.,    1.],       [  52.,   62.,    1.],       [ -20.,   76.,   -1.],       [ -76.,   37.,   -5.],       [ -76.,  -34.,   -1.],       [ -18.,  -76.,   -2.],       [  50.,  -59.,    3.],       [  82.,   -4.,    1.],       [  57.,   63.,   -4.],       [ -17.,   82.,    3.],       [ -73.,   36.,    4.],       [ -77.,  -39.,   -2.],       [ -18.,  -88.,   -4.],       [  54.,  -67.,   -5.],       [  86.,    0.,   -2.],       [  57.,   75.,    2.],       [ -25.,   86.,   -2.],       [ -82.,   36.,   -5.],       [ -77.,  -41.,   -2.],       [ -19.,  -84.,    4.],       [  60.,  -70.,   -3.],       [  91.,   -4.,   -1.],       [  59.,   76.,    2.],       [ -20.,   89.,    1.],       [ -81.,   45.,    2.],       [ -81.,  -38.,    0.],       [ -19.,  -95.,    1.],       [  58.,  -74.,    2.],       [ 103.,   -5.,   -1.],       [  61.,   79.,    0.],       [ -27.,  102.,    2.],       [ -94.,   39.,   -1.],       [ -88.,  -44.,    0.],       [ -22.,  -95.,    2.],       [  63.,  -80.,    4.]])
        basis0 = BSplineBasis(6, np.array([-1.8, -0.8,  0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  3.2,  4. ,  4. ,
        4. ,  4. ,  5.2,  6.2]),1)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.6,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 6.2,  4.5,  9.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 6.200000
        pt2[...,1] -= 4.500000
        pt2[...,2] -= 9.800000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_surface_3D_p55_C1_periodic(self):
        controlpoints = np.array([[  60.,   -2.,    4.],       [  45.,   40.,   -1.],       [   2.,   58.,   -5.],       [ -42.,   40.,    2.],       [ -58.,    4.,   -1.],       [ -43.,  -39.,    0.],       [  -1.,  -59.,    1.],       [  37.,  -48.,   -2.],       [  66.,   -3.,   -3.],       [  45.,   51.,    1.],       [   3.,   69.,   -1.],       [ -52.,   50.,   -1.],       [ -69.,    3.,   -2.],       [ -42.,  -48.,    2.],       [   4.,  -63.,   -4.],       [  45.,  -52.,    2.],       [  74.,   -5.,   -5.],       [  48.,   53.,    0.],       [   0.,   68.,    4.],       [ -47.,   48.,   -4.],       [ -74.,   -5.,   -1.],       [ -56.,  -49.,   -5.],       [  -5.,  -74.,   -5.],       [  46.,  -52.,    1.],       [  76.,    4.,   -5.],       [  49.,   57.,    1.],       [  -1.,   77.,    0.],       [ -53.,   51.,   -3.],       [ -80.,   -5.,    2.],       [ -53.,  -57.,   -2.],       [  -1.,  -78.,   -4.],       [  58.,  -58.,   -2.],       [  82.,   -5.,    2.],       [  57.,   55.,    0.],       [  -2.,   85.,   -4.],       [ -62.,   53.,   -3.],       [ -79.,    4.,    4.],       [ -63.,  -63.,    4.],       [  -3.,  -84.,   -3.],       [  58.,  -59.,   -4.],       [  89.,    1.,   -4.],       [  60.,   60.,    4.],       [   3.,   93.,   -3.],       [ -67.,   62.,   -2.],       [ -89.,   -2.,    2.],       [ -66.,  -62.,   -5.],       [  -4.,  -88.,   -2.],       [  67.,  -67.,    2.],       [  96.,    4.,    0.],       [  68.,   68.,   -1.],       [  -3.,   90.,    2.],       [ -66.,   70.,   -4.],       [ -91.,    4.,   -4.],       [ -69.,  -69.,    2.],       [  -4.,  -96.,    4.],       [  68.,  -70.,    0.],       [  96.,    0.,   -3.],       [  68.,   67.,   -3.],       [   4.,   95.,   -2.],       [ -66.,   70.,   -4.],       [-102.,   -2.,   -4.],       [ -75.,  -75.,    0.],       [  -3., -100.,   -3.],       [  66.,  -72.,    0.]])
        basis0 = BSplineBasis(5, np.array([-1.7, -0.8,  0. ,  0. ,  0. ,  0.8,  2.2,  2.9,  4.3,  5.2,  6. ,
        6. ,  6. ,  6.8,  8.2]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.6,  3. ,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 4. ,  9.7,  2.7])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.000000
        pt2[...,1] /= 9.700000
        pt2[...,2] /= 2.700000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_surface_3D_p66_C1_periodic(self):
        controlpoints = np.array([[ 58.,   2.,  -4.],       [ 49.,  36.,   4.],       [ 12.,  62.,   1.],       [-30.,  52.,   4.],       [-59.,  18.,  -3.],       [-55., -19.,   0.],       [-30., -53.,  -1.],       [ 13., -61.,   0.],       [ 47., -35.,   0.],       [ 68.,   1.,  -3.],       [ 54.,  40.,  -4.],       [ 15.,  60.,  -5.],       [-37.,  52.,   2.],       [-60.,  22.,  -3.],       [-62., -21.,   1.],       [-29., -59.,  -2.],       [ 15., -61.,   2.],       [ 50., -43.,  -3.],       [ 72.,   0.,  -2.],       [ 48.,  42.,   2.],       [ 13.,  71.,  -3.],       [-35.,  61.,   0.],       [-70.,  26.,   4.],       [-66., -26.,   0.],       [-32., -60.,  -1.],       [ 15., -65.,  -4.],       [ 52., -42.,   3.],       [ 72.,  -3.,  -1.],       [ 53.,  52.,  -3.],       [ 13.,  77.,  -5.],       [-39.,  62.,  -3.],       [-75.,  26.,  -1.],       [-70., -31.,   2.],       [-35., -65.,   3.],       [ 14., -75.,   3.],       [ 53., -47.,   4.],       [ 80.,  -1.,   2.],       [ 59.,  54.,   1.],       [ 11.,  82.,  -5.],       [-40.,  69.,   1.],       [-78.,  29.,  -3.],       [-75., -33.,  -1.],       [-39., -74.,  -5.],       [ 11., -81.,   2.],       [ 61., -57.,  -2.],       [ 89.,  -3.,   1.],       [ 61.,  54.,   3.],       [ 12.,  83.,   2.],       [-42.,  71.,  -4.],       [-81.,  31.,   0.],       [-79., -32.,   2.],       [-43., -73.,  -4.],       [ 12., -85.,   2.],       [ 64., -52.,   3.],       [ 90.,   4.,   4.],       [ 70.,  61.,  -3.],       [ 11.,  84.,   4.],       [-42.,  77.,  -1.],       [-83.,  29.,   2.],       [-90., -27.,  -2.],       [-46., -83.,  -4.],       [ 12., -88.,  -5.],       [ 66., -63.,  -4.],       [ 91.,   4.,  -3.],       [ 73.,  56.,  -5.],       [ 15.,  96.,   0.],       [-51.,  79.,   4.],       [-92.,  36.,  -1.],       [-86., -33.,   4.],       [-49., -81.,  -5.],       [ 20., -97.,  -1.],       [ 77., -60.,   3.],       [ 95.,  -2.,   2.],       [ 79.,  62.,  -4.],       [ 21.,  97.,   3.],       [-50.,  88.,  -3.],       [-97.,  33.,  -5.],       [-90., -30.,  -2.],       [-50., -84.,  -3.],       [ 15., -94.,   1.],       [ 73., -60.,  -4.]])
        basis0 = BSplineBasis(6, np.array([-1.8, -0.7,  0. ,  0. ,  0. ,  0. ,  0.7,  2.2,  2.9,  4.2,  5.3,
        6. ,  6. ,  6. ,  6. ,  6.7,  8.2]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.6,  3.4,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.mirror([3, 0, 0])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] = -pt2[...,0]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_translate_volume_3D_p655_C1_periodic(self):
        controlpoints = np.array([[  47.,   -5.,    2.],       [  39.,   32.,   -3.],       [  11.,   50.,   -2.],       [ -13.,   49.,   -2.],       [ -42.,   32.,    2.],       [ -49.,    4.,   -3.],       [ -43.,  -32.,    0.],       [ -18.,  -44.,   -4.],       [  13.,  -45.,    4.],       [  39.,  -26.,   -3.],       [  52.,    2.,   -3.],       [  40.,   36.,   -3.],       [  16.,   52.,   -5.],       [ -13.,   55.,   -4.],       [ -42.,   30.,    2.],       [ -54.,    1.,    1.],       [ -46.,  -29.,    3.],       [ -17.,  -54.,   -5.],       [  16.,  -55.,    1.],       [  45.,  -30.,   -3.],       [  61.,    4.,   -4.],       [  45.,   39.,    3.],       [  15.,   56.,    1.],       [ -15.,   62.,    3.],       [ -52.,   40.,    4.],       [ -57.,   -5.,    4.],       [ -46.,  -41.,   -5.],       [ -22.,  -56.,    3.],       [  14.,  -59.,    3.],       [  50.,  -40.,   -3.],       [  63.,    1.,    2.],       [  50.,   37.,    4.],       [  23.,   63.,    4.],       [ -24.,   63.,    2.],       [ -57.,   39.,    2.],       [ -67.,   -4.,   -1.],       [ -50.,  -43.,   -4.],       [ -24.,  -67.,   -4.],       [  19.,  -69.,    3.],       [  50.,  -44.,   -3.],       [  71.,    4.,   -4.],       [  55.,   37.,   -2.],       [  22.,   64.,    4.],       [ -27.,   64.,    0.],       [ -60.,   38.,    0.],       [ -71.,    1.,    2.],       [ -64.,  -42.,   -3.],       [ -20.,  -71.,    1.],       [  19.,  -67.,   -5.],       [  55.,  -44.,   -1.],       [  74.,   -4.,    1.],       [  60.,   45.,    3.],       [  22.,   75.,   -4.],       [ -21.,   71.,    0.],       [ -64.,   48.,   -2.],       [ -76.,   -5.,    2.],       [ -59.,  -44.,    4.],       [ -20.,  -77.,   -3.],       [  25.,  -71.,    3.],       [  61.,  -51.,    4.],       [  83.,   -3.,    4.],       [  70.,   48.,    0.],       [  22.,   80.,   -2.],       [ -27.,   84.,   -1.],       [ -68.,   51.,   -4.],       [ -82.,   -4.,    0.],       [ -70.,  -45.,   -1.],       [ -31.,  -77.,   -3.],       [  24.,  -76.,    0.],       [  68.,  -46.,    0.],       [  91.,    4.,   -3.],       [  68.,   56.,    0.],       [  30.,   88.,   -3.],       [ -30.,   86.,    4.],       [ -74.,   49.,   -1.],       [ -88.,    0.,    0.],       [ -68.,  -56.,    0.],       [ -32.,  -89.,   -4.],       [  27.,  -89.,   -5.],       [  68.,  -48.,   -3.],       [  97.,    0.,   -4.],       [  76.,   53.,    3.],       [  25.,   89.,    3.],       [ -33.,   87.,   -3.],       [ -73.,   53.,    0.],       [ -95.,   -1.,   -4.],       [ -72.,  -51.,   -5.],       [ -26.,  -92.,   -4.],       [  25.,  -86.,    4.],       [  77.,  -52.,    3.],       [  95.,   -3.,   -5.],       [  79.,   61.,    1.],       [  33.,   93.,    1.],       [ -31.,   92.,    0.],       [ -83.,   56.,   -3.],       [ -96.,    4.,    3.],       [ -78.,  -58.,    1.],       [ -32.,  -97.,    4.],       [  26.,  -93.,   -5.],       [  77.,  -56.,   -2.],       [  49.,    2.,    9.],       [  41.,   33.,    9.],       [  18.,   47.,    8.],       [ -18.,   51.,   10.],       [ -38.,   28.,    4.],       [ -49.,    1.,    4.],       [ -43.,  -32.,    8.],       [ -12.,  -49.,    3.],       [  13.,  -46.,    8.],       [  44.,  -33.,    5.],       [  55.,   -2.,   11.],       [  48.,   36.,    5.],       [  18.,   48.,    5.],       [ -15.,   50.,    8.],       [ -43.,   33.,   12.],       [ -57.,   -5.,    6.],       [ -45.,  -34.,    7.],       [ -21.,  -57.,    3.],       [  18.,  -49.,    7.],       [  49.,  -38.,    9.],       [  60.,    2.,    7.],       [  44.,   33.,    8.],       [  21.,   54.,    3.],       [ -16.,   53.,    7.],       [ -54.,   36.,    5.],       [ -57.,   -3.,    5.],       [ -50.,  -39.,   10.],       [ -16.,  -57.,    7.],       [  23.,  -62.,    3.],       [  52.,  -35.,    6.],       [  63.,   -2.,    6.],       [  51.,   41.,    6.],       [  18.,   66.,    5.],       [ -19.,   66.,    3.],       [ -58.,   34.,    4.],       [ -67.,    1.,   11.],       [ -57.,  -42.,    7.],       [ -18.,  -61.,   10.],       [  20.,  -68.,    3.],       [  55.,  -44.,    3.],       [  72.,    2.,    8.],       [  55.,   38.,    4.],       [  26.,   69.,    5.],       [ -19.,   65.,   12.],       [ -59.,   41.,    6.],       [ -77.,   -4.,    8.],       [ -57.,  -43.,    7.],       [ -25.,  -72.,   10.],       [  19.,  -70.,    3.],       [  55.,  -42.,    7.],       [  82.,   -3.,   11.],       [  61.,   45.,    9.],       [  19.,   75.,    8.],       [ -27.,   78.,    6.],       [ -59.,   46.,    7.],       [ -80.,    2.,    5.],       [ -60.,  -42.,    8.],       [ -25.,  -70.,   10.],       [  25.,  -72.,    5.],       [  62.,  -50.,    3.],       [  87.,   -4.,    4.],       [  71.,   45.,    5.],       [  28.,   79.,    9.],       [ -23.,   82.,    7.],       [ -64.,   48.,    4.],       [ -86.,    3.,    3.],       [ -65.,  -47.,   12.],       [ -26.,  -75.,    3.],       [  21.,  -76.,    7.],       [  64.,  -54.,    3.],       [  86.,    3.,    9.],       [  72.,   50.,    5.],       [  27.,   87.,    9.],       [ -30.,   82.,   12.],       [ -73.,   56.,   12.],       [ -86.,    0.,    6.],       [ -77.,  -51.,    3.],       [ -33.,  -86.,    4.],       [  29.,  -90.,    9.],       [  68.,  -57.,    6.],       [  99.,    3.,    8.],       [  72.,   52.,    9.],       [  28.,   91.,    3.],       [ -33.,   89.,    9.],       [ -80.,   59.,    3.],       [ -95.,   -4.,    6.],       [ -77.,  -59.,    3.],       [ -33.,  -91.,    7.],       [  31.,  -90.,    3.],       [  77.,  -56.,    4.],       [ 100.,    3.,   11.],       [  81.,   61.,    8.],       [  29.,   97.,   10.],       [ -31.,   95.,   10.],       [ -78.,   57.,   11.],       [-103.,   -1.,   10.],       [ -78.,  -56.,   11.],       [ -27.,  -96.,    5.],       [  33.,  -94.,    9.],       [  75.,  -57.,    3.],       [  48.,    1.,   11.],       [  41.,   27.,   17.],       [  19.,   50.,   20.],       [ -16.,   50.,   12.],       [ -40.,   25.,   17.],       [ -46.,    1.,   20.],       [ -40.,  -30.,   19.],       [ -17.,  -44.,   20.],       [  13.,  -50.,   12.],       [  44.,  -26.,   13.],       [  57.,   -5.,   15.],       [  49.,   27.,   14.],       [  20.,   48.,   12.],       [ -17.,   56.,   13.],       [ -43.,   28.,   20.],       [ -51.,    1.,   20.],       [ -44.,  -31.,   17.],       [ -16.,  -50.,   19.],       [  16.,  -49.,   12.],       [  41.,  -33.,   11.],       [  59.,    4.,   14.],       [  45.,   40.,   16.],       [  21.,   56.,   12.],       [ -15.,   60.,   20.],       [ -50.,   37.,   16.],       [ -59.,    2.,   17.],       [ -47.,  -39.,   18.],       [ -18.,  -61.,   16.],       [  15.,  -54.,   17.],       [  53.,  -35.,   16.],       [  67.,    2.,   13.],       [  53.,   36.,   14.],       [  23.,   64.,   18.],       [ -24.,   66.,   13.],       [ -54.,   36.,   17.],       [ -69.,    4.,   12.],       [ -59.,  -41.,   11.],       [ -19.,  -64.,   19.],       [  16.,  -60.,   20.],       [  51.,  -38.,   17.],       [  68.,    0.,   14.],       [  54.,   39.,   13.],       [  24.,   71.,   16.],       [ -18.,   72.,   12.],       [ -58.,   42.,   11.],       [ -74.,   -2.,   19.],       [ -60.,  -40.,   12.],       [ -25.,  -67.,   15.],       [  21.,  -66.,   16.],       [  54.,  -43.,   20.],       [  75.,    0.,   19.],       [  65.,   50.,   17.],       [  19.,   73.,   19.],       [ -27.,   78.,   13.],       [ -67.,   41.,   17.],       [ -74.,   -3.,   18.],       [ -66.,  -43.,   18.],       [ -21.,  -78.,   16.],       [  22.,  -75.,   18.],       [  61.,  -44.,   20.],       [  80.,   -2.,   13.],       [  70.,   52.,   20.],       [  27.,   82.,   15.],       [ -25.,   81.,   14.],       [ -66.,   51.,   12.],       [ -85.,   -5.,   17.],       [ -66.,  -48.,   15.],       [ -30.,  -76.,   11.],       [  27.,  -83.,   12.],       [  63.,  -54.,   13.],       [  83.,   -2.,   13.],       [  67.,   47.,   20.],       [  30.,   84.,   11.],       [ -24.,   80.,   13.],       [ -76.,   49.,   15.],       [ -91.,    3.,   18.],       [ -72.,  -51.,   15.],       [ -31.,  -88.,   18.],       [  26.,  -84.,   15.],       [  72.,  -50.,   14.],       [  94.,   -1.,   11.],       [  80.,   59.,   15.],       [  31.,   90.,   13.],       [ -26.,   86.,   11.],       [ -77.,   55.,   20.],       [ -90.,    4.,   20.],       [ -74.,  -60.,   14.],       [ -34.,  -93.,   15.],       [  26.,  -88.,   13.],       [  74.,  -56.,   20.],       [  95.,   -3.,   16.],       [  78.,   54.,   17.],       [  28.,   99.,   18.],       [ -36.,   94.,   13.],       [ -77.,   59.,   13.],       [-100.,   -1.,   20.],       [ -79.,  -58.,   17.],       [ -32.,  -96.,   18.],       [  29., -100.,   18.],       [  78.,  -57.,   18.],       [  52.,   -2.,   26.],       [  41.,   33.,   26.],       [  10.,   43.,   25.],       [ -15.,   44.,   26.],       [ -42.,   31.,   20.],       [ -48.,    2.,   24.],       [ -42.,  -32.,   24.],       [ -16.,  -52.,   24.],       [  14.,  -45.,   22.],       [  45.,  -33.,   22.],       [  53.,    4.,   27.],       [  45.,   29.,   25.],       [  13.,   54.,   19.],       [ -19.,   50.,   25.],       [ -44.,   31.,   28.],       [ -56.,    1.,   20.],       [ -43.,  -31.,   27.],       [ -16.,  -51.,   28.],       [  20.,  -53.,   26.],       [  41.,  -34.,   19.],       [  57.,    4.,   24.],       [  48.,   40.,   27.],       [  21.,   62.,   24.],       [ -23.,   57.,   23.],       [ -54.,   39.,   19.],       [ -64.,    3.,   28.],       [ -52.,  -38.,   26.],       [ -16.,  -58.,   20.],       [  17.,  -59.,   24.],       [  50.,  -36.,   23.],       [  65.,    4.,   21.],       [  51.,   40.,   20.],       [  17.,   66.,   24.],       [ -23.,   60.,   28.],       [ -55.,   40.,   28.],       [ -64.,    1.,   23.],       [ -50.,  -42.,   22.],       [ -21.,  -59.,   20.],       [  23.,  -59.,   25.],       [  58.,  -39.,   22.],       [  76.,    1.,   28.],       [  59.,   38.,   23.],       [  22.,   70.,   23.],       [ -25.,   67.,   24.],       [ -62.,   37.,   26.],       [ -77.,    0.,   19.],       [ -61.,  -44.,   23.],       [ -21.,  -69.,   25.],       [  18.,  -64.,   24.],       [  62.,  -46.,   24.],       [  81.,   -2.,   20.],       [  62.,   42.,   22.],       [  27.,   71.,   20.],       [ -24.,   70.,   25.],       [ -61.,   47.,   26.],       [ -83.,    2.,   27.],       [ -59.,  -41.,   26.],       [ -23.,  -78.,   20.],       [  27.,  -76.,   20.],       [  66.,  -44.,   19.],       [  82.,   -4.,   26.],       [  71.,   47.,   26.],       [  23.,   79.,   19.],       [ -27.,   80.,   19.],       [ -70.,   47.,   19.],       [ -81.,    3.,   27.],       [ -68.,  -48.,   28.],       [ -27.,  -79.,   21.],       [  30.,  -77.,   23.],       [  71.,  -49.,   22.],       [  85.,   -4.,   26.],       [  74.,   53.,   21.],       [  26.,   83.,   26.],       [ -25.,   89.,   27.],       [ -73.,   50.,   28.],       [ -85.,   -2.,   26.],       [ -72.,  -55.,   24.],       [ -33.,  -87.,   22.],       [  26.,  -84.,   22.],       [  76.,  -51.,   28.],       [  90.,   -1.,   28.],       [  80.,   56.,   23.],       [  25.,   87.,   22.],       [ -25.,   89.,   28.],       [ -82.,   50.,   19.],       [ -92.,   -5.,   21.],       [ -77.,  -53.,   23.],       [ -33.,  -86.,   21.],       [  28.,  -95.,   26.],       [  75.,  -57.,   20.],       [  98.,   -1.,   24.],       [  85.,   57.,   20.],       [  26.,  100.,   27.],       [ -29.,   96.,   27.],       [ -79.,   60.,   25.],       [-102.,    1.,   23.],       [ -85.,  -63.,   28.],       [ -33.,  -92.,   21.],       [  31.,  -97.,   20.],       [  77.,  -60.,   23.],       [  50.,   -3.,   28.],       [  44.,   30.,   29.],       [  18.,   44.,   27.],       [ -13.,   44.,   33.],       [ -45.,   27.,   31.],       [ -47.,    4.,   36.],       [ -38.,  -32.,   27.],       [ -17.,  -45.,   32.],       [  20.,  -50.,   27.],       [  40.,  -29.,   31.],       [  52.,   -3.,   34.],       [  40.,   36.,   33.],       [  21.,   54.,   36.],       [ -20.,   48.,   27.],       [ -44.,   33.,   31.],       [ -59.,   -3.,   33.],       [ -47.,  -35.,   36.],       [ -20.,  -57.,   28.],       [  16.,  -56.,   31.],       [  49.,  -30.,   32.],       [  59.,    0.,   30.],       [  46.,   38.,   27.],       [  22.,   53.,   27.],       [ -18.,   59.,   33.],       [ -52.,   36.,   28.],       [ -63.,   -5.,   30.],       [ -47.,  -36.,   27.],       [ -24.,  -63.,   30.],       [  16.,  -63.,   32.],       [  50.,  -33.,   35.],       [  66.,   -2.,   33.],       [  52.,   43.,   33.],       [  15.,   67.,   36.],       [ -17.,   59.,   35.],       [ -52.,   42.,   28.],       [ -64.,    2.,   36.],       [ -55.,  -35.,   29.],       [ -24.,  -59.,   34.],       [  20.,  -67.,   27.],       [  52.,  -37.,   32.],       [  75.,    0.,   29.],       [  57.,   41.,   32.],       [  21.,   70.,   34.],       [ -24.,   71.,   27.],       [ -61.,   39.,   27.],       [ -71.,    0.,   34.],       [ -58.,  -46.,   36.],       [ -23.,  -70.,   36.],       [  19.,  -73.,   34.],       [  57.,  -44.,   27.],       [  75.,   -2.,   33.],       [  61.,   49.,   30.],       [  22.,   74.,   30.],       [ -26.,   69.,   27.],       [ -61.,   41.,   36.],       [ -75.,    4.,   36.],       [ -60.,  -42.,   29.],       [ -21.,  -71.,   27.],       [  26.,  -77.,   34.],       [  67.,  -47.,   27.],       [  85.,    4.,   36.],       [  65.,   53.,   28.],       [  28.,   78.,   34.],       [ -27.,   78.,   35.],       [ -68.,   51.,   29.],       [ -88.,   -5.,   33.],       [ -67.,  -44.,   33.],       [ -23.,  -78.,   31.],       [  27.,  -79.,   31.],       [  68.,  -54.,   30.],       [  87.,    2.,   28.],       [  68.,   49.,   27.],       [  30.,   80.,   31.],       [ -26.,   87.,   34.],       [ -75.,   56.,   32.],       [ -87.,    0.,   33.],       [ -77.,  -53.,   34.],       [ -31.,  -81.,   27.],       [  28.,  -83.,   29.],       [  68.,  -56.,   36.],       [  96.,   -1.,   36.],       [  81.,   56.,   33.],       [  30.,   92.,   28.],       [ -31.,   93.,   36.],       [ -73.,   59.,   35.],       [ -97.,   -5.,   35.],       [ -78.,  -61.,   36.],       [ -32.,  -89.,   30.],       [  31.,  -94.,   36.],       [  71.,  -55.,   30.],       [  96.,    0.,   36.],       [  82.,   59.,   34.],       [  25.,   91.,   29.],       [ -36.,   97.,   28.],       [ -82.,   59.,   29.],       [ -97.,    4.,   27.],       [ -83.,  -60.,   32.],       [ -34.,  -96.,   27.],       [  28.,  -96.,   35.],       [  85.,  -59.,   34.],       [  46.,    4.,   40.],       [  39.,   33.,   43.],       [  13.,   44.,   42.],       [ -17.,   49.,   43.],       [ -45.,   29.,   37.],       [ -46.,    4.,   42.],       [ -40.,  -35.,   37.],       [ -14.,  -51.,   37.],       [  16.,  -49.,   41.],       [  37.,  -27.,   41.],       [  51.,    1.,   40.],       [  41.,   28.,   42.],       [  18.,   54.,   43.],       [ -17.,   52.,   41.],       [ -46.,   34.,   37.],       [ -60.,    0.,   37.],       [ -50.,  -31.,   36.],       [ -21.,  -53.,   36.],       [  12.,  -54.,   42.],       [  42.,  -32.,   42.],       [  58.,   -2.,   37.],       [  53.,   36.,   40.],       [  14.,   55.,   36.],       [ -20.,   62.,   43.],       [ -46.,   36.,   38.],       [ -65.,    1.,   38.],       [ -48.,  -35.,   44.],       [ -16.,  -62.,   43.],       [  17.,  -63.,   42.],       [  53.,  -40.,   43.],       [  64.,   -4.,   36.],       [  50.,   40.,   40.],       [  18.,   59.,   35.],       [ -18.,   59.,   43.],       [ -58.,   40.,   39.],       [ -70.,   -4.,   39.],       [ -58.,  -37.,   37.],       [ -24.,  -61.,   39.],       [  23.,  -62.,   36.],       [  58.,  -43.,   40.],       [  68.,    3.,   37.],       [  62.,   42.,   42.],       [  19.,   65.,   35.],       [ -26.,   65.,   42.],       [ -59.,   41.,   37.],       [ -77.,   -2.,   44.],       [ -58.,  -45.,   38.],       [ -26.,  -69.,   39.],       [  21.,  -64.,   37.],       [  60.,  -41.,   44.],       [  81.,   -1.,   44.],       [  59.,   46.,   36.],       [  22.,   73.,   43.],       [ -26.,   71.,   36.],       [ -65.,   43.,   40.],       [ -82.,   -4.,   38.],       [ -60.,  -49.,   43.],       [ -25.,  -75.,   39.],       [  26.,  -73.,   42.],       [  66.,  -43.,   43.],       [  78.,    3.,   36.],       [  71.,   46.,   36.],       [  26.,   76.,   39.],       [ -25.,   78.,   38.],       [ -66.,   50.,   38.],       [ -84.,    0.,   43.],       [ -63.,  -49.,   39.],       [ -30.,  -83.,   35.],       [  24.,  -84.,   42.],       [  66.,  -51.,   39.],       [  89.,    2.,   42.],       [  68.,   55.,   41.],       [  30.,   82.,   43.],       [ -28.,   87.,   38.],       [ -72.,   50.,   38.],       [ -93.,   -1.,   42.],       [ -77.,  -56.,   41.],       [ -27.,  -83.,   38.],       [  26.,  -88.,   39.],       [  69.,  -52.,   39.],       [  95.,    3.,   41.],       [  77.,   53.,   42.],       [  29.,   86.,   44.],       [ -25.,   92.,   36.],       [ -80.,   57.,   44.],       [ -91.,   -3.,   44.],       [ -72.,  -57.,   44.],       [ -28.,  -87.,   37.],       [  24.,  -86.,   44.],       [  78.,  -55.,   43.],       [  99.,   -2.,   36.],       [  83.,   61.,   39.],       [  31.,   91.,   41.],       [ -29.,   98.,   35.],       [ -79.,   59.,   42.],       [-101.,   -5.,   38.],       [ -81.,  -63.,   36.],       [ -29.,  -93.,   36.],       [  30.,  -94.,   43.],       [  80.,  -57.,   42.]])
        basis0 = BSplineBasis(6, np.array([-2.2, -0.8,  0. ,  0. ,  0. ,  0. ,  0.8,  1.9,  2.9,  4.3,  4.8,
        6.2,  7. ,  7. ,  7. ,  7. ,  7.8,  8.9]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.1,  3.2,  4.3,  5. ,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2. ,  2. ,  2. ,  2. ,  2. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 4.6,  2. ,  3.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 4.600000
        pt2[...,1] -= 2.000000
        pt2[...,2] -= 3.100000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_scale_volume_3D_p577_C1_periodic(self):
        controlpoints = np.array([[  48.,   -4.,   -2.],       [  38.,   36.,   -3.],       [  -2.,   54.,   -3.],       [ -34.,   34.,    3.],       [ -49.,    2.,   -4.],       [ -34.,  -34.,    0.],       [  -1.,  -48.,   -3.],       [  31.,  -34.,    3.],       [  56.,   -2.,   -3.],       [  43.,   42.,    3.],       [  -2.,   57.,    2.],       [ -43.,   36.,    1.],       [ -58.,   -3.,   -4.],       [ -41.,  -41.,   -1.],       [  -3.,  -57.,    2.],       [  41.,  -39.,    1.],       [  60.,   -4.,    1.],       [  49.,   49.,   -2.],       [   0.,   66.,   -2.],       [ -44.,   47.,    2.],       [ -65.,    2.,   -4.],       [ -48.,  -44.,    0.],       [   2.,  -67.,   -4.],       [  39.,  -48.,    1.],       [  67.,    4.,    1.],       [  45.,   46.,   -3.],       [  -4.,   73.,    0.],       [ -52.,   53.,   -2.],       [ -72.,    0.,   -3.],       [ -51.,  -54.,    3.],       [   1.,  -66.,    3.],       [  43.,  -44.,    2.],       [  71.,    1.,   -3.],       [  49.,   56.,   -3.],       [  -2.,   79.,   -2.],       [ -57.,   49.,   -4.],       [ -77.,    0.,    1.],       [ -50.,  -51.,   -4.],       [  -5.,  -71.,    0.],       [  53.,  -54.,    0.],       [  81.,    1.,   -2.],       [  54.,   59.,   -3.],       [   0.,   79.,   -3.],       [ -54.,   53.,   -4.],       [ -77.,    2.,    0.],       [ -53.,  -63.,    4.],       [  -1.,  -85.,    3.],       [  56.,  -53.,    4.],       [  84.,    4.,   -1.],       [  59.,   63.,    4.],       [  -2.,   89.,    0.],       [ -60.,   63.,    2.],       [ -84.,    4.,    3.],       [ -58.,  -59.,    4.],       [  -1.,  -90.,   -3.],       [  59.,  -63.,   -3.],       [  90.,    4.,    1.],       [  70.,   67.,    1.],       [  -5.,   94.,    3.],       [ -63.,   66.,    3.],       [ -95.,   -4.,   -1.],       [ -64.,  -65.,    0.],       [  -1.,  -91.,   -5.],       [  70.,  -67.,    2.],       [  97.,   -3.,   -3.],       [  71.,   74.,    4.],       [  -5.,   95.,    1.],       [ -73.,   70.,    1.],       [ -96.,   -2.,    0.],       [ -76.,  -74.,    0.],       [   3.,  -97.,    0.],       [  70.,  -71.,   -3.],       [  45.,    1.,    6.],       [  33.,   40.,   -1.],       [  -5.,   46.,    5.],       [ -35.,   39.,    2.],       [ -52.,    4.,    1.],       [ -37.,  -36.,   -1.],       [  -1.,  -46.,    4.],       [  36.,  -32.,    5.],       [  53.,   -2.,    1.],       [  42.,   43.,    5.],       [   1.,   57.,    0.],       [ -45.,   41.,    2.],       [ -52.,    3.,   -1.],       [ -40.,  -35.,    0.],       [   2.,  -57.,    3.],       [  40.,  -45.,    5.],       [  59.,    3.,    7.],       [  45.,   46.,    7.],       [  -5.,   64.,    4.],       [ -48.,   42.,    1.],       [ -63.,   -4.,   -2.],       [ -48.,  -48.,    6.],       [  -1.,  -63.,    3.],       [  45.,  -43.,   -1.],       [  65.,   -1.,    0.],       [  44.,   48.,    1.],       [  -1.,   70.,    6.],       [ -48.,   53.,    4.],       [ -70.,   -1.,    7.],       [ -54.,  -49.,    3.],       [  -3.,  -70.,   -1.],       [  52.,  -46.,    1.],       [  74.,    1.,    8.],       [  57.,   51.,    5.],       [  -4.,   75.,    2.],       [ -52.,   54.,    2.],       [ -72.,   -5.,    6.],       [ -51.,  -51.,   -2.],       [   2.,  -76.,    0.],       [  50.,  -52.,    7.],       [  79.,   -2.,    0.],       [  55.,   62.,    6.],       [   4.,   83.,    5.],       [ -59.,   55.,    2.],       [ -81.,   -3.,    0.],       [ -55.,  -61.,    5.],       [   0.,  -82.,    0.],       [  55.,  -60.,    6.],       [  83.,    3.,    3.],       [  65.,   60.,    3.],       [  -3.,   86.,    3.],       [ -67.,   65.,    2.],       [ -90.,    1.,    8.],       [ -62.,  -66.,    5.],       [  -5.,  -85.,   -1.],       [  61.,  -65.,    0.],       [  89.,   -1.,    6.],       [  64.,   62.,    2.],       [   4.,   93.,    7.],       [ -66.,   61.,    8.],       [ -92.,   -5.,    1.],       [ -70.,  -68.,    2.],       [  -3.,  -94.,    1.],       [  66.,  -67.,    1.],       [ 102.,   -1.,    8.],       [  66.,   70.,    6.],       [  -2.,   99.,    3.],       [ -68.,   67.,    2.],       [-104.,   -1.,    1.],       [ -74.,  -72.,    7.],       [  -4.,  -98.,    6.],       [  70.,  -66.,    7.],       [  50.,   -4.,    2.],       [  37.,   37.,    7.],       [   0.,   50.,   11.],       [ -32.,   38.,    7.],       [ -52.,   -4.,    9.],       [ -38.,  -37.,    3.],       [  -4.,  -51.,    7.],       [  35.,  -33.,    7.],       [  59.,   -3.,    4.],       [  44.,   36.,    8.],       [   1.,   54.,    3.],       [ -37.,   38.,    2.],       [ -61.,   -5.,    4.],       [ -43.,  -42.,    2.],       [  -3.,  -60.,    5.],       [  36.,  -40.,   12.],       [  66.,    1.,    9.],       [  46.,   40.,    7.],       [   2.,   61.,    3.],       [ -48.,   41.,    4.],       [ -63.,   -5.,    2.],       [ -40.,  -44.,    8.],       [   3.,  -62.,    8.],       [  46.,  -43.,    3.],       [  65.,    1.,    3.],       [  49.,   44.,   10.],       [   1.,   72.,    9.],       [ -49.,   47.,    3.],       [ -72.,   -2.,    3.],       [ -49.,  -50.,    8.],       [  -4.,  -68.,    3.],       [  45.,  -47.,    6.],       [  71.,    2.,    2.],       [  50.,   55.,    8.],       [  -1.,   71.,    8.],       [ -56.,   53.,    3.],       [ -73.,   -3.,    8.],       [ -51.,  -51.,    7.],       [   3.,  -72.,    6.],       [  53.,  -51.,    8.],       [  85.,   -1.,   10.],       [  57.,   55.,   11.],       [   1.,   80.,    7.],       [ -62.,   60.,    8.],       [ -84.,   -2.,    5.],       [ -57.,  -57.,   10.],       [  -2.,  -83.,    9.],       [  57.,  -63.,    4.],       [  87.,    2.,   11.],       [  59.,   58.,   10.],       [  -3.,   82.,    4.],       [ -64.,   60.,   10.],       [ -85.,    4.,   10.],       [ -60.,  -64.,    2.],       [  -4.,  -87.,    5.],       [  57.,  -62.,    3.],       [  92.,    3.,   10.],       [  68.,   64.,    3.],       [  -1.,   92.,    3.],       [ -63.,   61.,    6.],       [ -96.,   -5.,    6.],       [ -66.,  -70.,   11.],       [   4.,  -90.,   11.],       [  61.,  -71.,    3.],       [ 102.,   -5.,    7.],       [  74.,   75.,    3.],       [  -2.,   98.,   11.],       [ -70.,   75.,    7.],       [-100.,    1.,    9.],       [ -66.,  -74.,    3.],       [  -1.,  -99.,    8.],       [  72.,  -67.,   10.],       [  53.,    3.,    8.],       [  34.,   34.,   12.],       [   1.,   49.,   12.],       [ -33.,   35.,   10.],       [ -48.,   -1.,   15.],       [ -34.,  -39.,   10.],       [  -1.,  -54.,   12.],       [  31.,  -33.,   13.],       [  56.,   -2.,   11.],       [  39.,   37.,    6.],       [   4.,   52.,   13.],       [ -44.,   43.,   14.],       [ -55.,   -2.,   14.],       [ -40.,  -44.,    7.],       [   0.,  -62.,   15.],       [  37.,  -38.,   10.],       [  60.,    2.,    9.],       [  43.,   42.,   14.],       [   1.,   62.,   14.],       [ -42.,   45.,    8.],       [ -61.,    0.,    8.],       [ -40.,  -44.,    6.],       [  -4.,  -65.,    8.],       [  47.,  -47.,   10.],       [  72.,   -4.,    8.],       [  51.,   44.,   14.],       [  -1.,   69.,   10.],       [ -48.,   48.,   14.],       [ -64.,   -4.,    8.],       [ -53.,  -52.,   12.],       [  -1.,  -70.,   13.],       [  50.,  -49.,   15.],       [  70.,   -4.,   15.],       [  56.,   55.,   14.],       [  -1.,   73.,   15.],       [ -57.,   57.,    7.],       [ -79.,   -4.,   13.],       [ -50.,  -49.,    7.],       [  -4.,  -73.,    9.],       [  53.,  -52.,    6.],       [  81.,   -5.,   15.],       [  57.,   53.,    6.],       [   2.,   80.,   15.],       [ -57.,   61.,    9.],       [ -85.,    4.,    8.],       [ -63.,  -56.,    7.],       [   3.,  -81.,    6.],       [  59.,  -55.,   12.],       [  88.,   -4.,   12.],       [  66.,   63.,   14.],       [   4.,   83.,    6.],       [ -60.,   57.,   14.],       [ -88.,   -5.,   13.],       [ -59.,  -64.,   15.],       [   2.,  -92.,   10.],       [  57.,  -66.,   12.],       [  94.,   -4.,   12.],       [  67.,   70.,   11.],       [  -2.,   91.,   14.],       [ -67.,   64.,    6.],       [ -93.,    2.,    6.],       [ -62.,  -64.,   10.],       [  -1.,  -94.,   10.],       [  66.,  -71.,    9.],       [ 104.,    2.,   15.],       [  68.,   67.,   10.],       [   3.,   98.,    8.],       [ -74.,   71.,    8.],       [-101.,   -2.,    7.],       [ -69.,  -70.,    6.],       [  -2.,  -99.,   15.],       [  66.,  -72.,   10.],       [  52.,    1.,   13.],       [  33.,   38.,   12.],       [  -3.,   53.,   16.],       [ -33.,   30.,   16.],       [ -49.,   -4.,   17.],       [ -31.,  -41.,   14.],       [   0.,  -54.,   15.],       [  33.,  -40.,   14.],       [  51.,    1.,   15.],       [  40.,   38.,   11.],       [  -4.,   53.,   11.],       [ -45.,   36.,   15.],       [ -60.,   -4.,   14.],       [ -38.,  -37.,   10.],       [  -4.,  -59.,   16.],       [  40.,  -39.,   14.],       [  60.,   -1.,   17.],       [  39.,   48.,   16.],       [  -4.,   63.,   14.],       [ -48.,   44.,   16.],       [ -61.,   -1.,   17.],       [ -49.,  -47.,   18.],       [   0.,  -64.,   14.],       [  49.,  -49.,   10.],       [  72.,   -2.,   10.],       [  51.,   51.,   19.],       [  -4.,   72.,   15.],       [ -44.,   43.,   11.],       [ -73.,    4.,   11.],       [ -51.,  -46.,   13.],       [   1.,  -71.,   12.],       [  52.,  -52.,   16.],       [  77.,   -2.,   15.],       [  54.,   57.,   17.],       [   1.,   75.,   15.],       [ -52.,   52.,   14.],       [ -73.,   -5.,   13.],       [ -56.,  -55.,   10.],       [  -2.,  -76.,   13.],       [  56.,  -50.,   17.],       [  82.,   -4.,   11.],       [  62.,   53.,   15.],       [  -2.,   81.,   12.],       [ -54.,   61.,   11.],       [ -83.,    0.,   10.],       [ -62.,  -61.,   18.],       [  -1.,  -83.,   13.],       [  58.,  -59.,   10.],       [  89.,    2.,   12.],       [  66.,   65.,   14.],       [  -3.,   88.,   14.],       [ -59.,   62.,   19.],       [ -84.,    0.,   11.],       [ -66.,  -61.,   19.],       [  -5.,  -89.,   14.],       [  65.,  -61.,   17.],       [  96.,   -4.,   13.],       [  63.,   63.,   11.],       [  -4.,   93.,   10.],       [ -62.,   63.,   17.],       [ -94.,    1.,   16.],       [ -70.,  -65.,   16.],       [  -5.,  -92.,   16.],       [  71.,  -70.,   18.],       [ 100.,   -4.,   10.],       [  73.,   72.,   11.],       [  -4.,   95.,   10.],       [ -69.,   66.,   14.],       [ -96.,    3.,   18.],       [ -75.,  -69.,   10.],       [  -2., -102.,   13.],       [  74.,  -70.,   12.],       [  54.,   -1.,   13.],       [  34.,   30.,   19.],       [   1.,   46.,   21.],       [ -38.,   31.,   14.],       [ -55.,    3.,   21.],       [ -35.,  -36.,   16.],       [   3.,  -46.,   18.],       [  37.,  -33.,   20.],       [  57.,    2.,   16.],       [  35.,   43.,   20.],       [  -5.,   54.,   17.],       [ -39.,   35.,   17.],       [ -54.,    3.,   17.],       [ -41.,  -43.,   13.],       [  -3.,  -61.,   17.],       [  43.,  -40.,   20.],       [  61.,   -1.,   21.],       [  48.,   45.,   16.],       [   1.,   64.,   17.],       [ -44.,   45.,   19.],       [ -61.,    3.,   17.],       [ -41.,  -40.,   22.],       [  -4.,  -68.,   14.],       [  43.,  -46.,   20.],       [  65.,   -3.,   13.],       [  50.,   47.,   17.],       [   3.,   64.,   16.],       [ -50.,   46.,   16.],       [ -72.,    1.,   16.],       [ -49.,  -51.,   13.],       [  -2.,  -68.,   22.],       [  53.,  -49.,   18.],       [  76.,   -3.,   21.],       [  50.,   50.,   15.],       [   0.,   74.,   14.],       [ -52.,   51.,   18.],       [ -74.,   -2.,   14.],       [ -53.,  -54.,   22.],       [   1.,  -73.,   21.],       [  54.,  -54.,   16.],       [  80.,    4.,   18.],       [  57.,   58.,   14.],       [   4.,   84.,   18.],       [ -54.,   55.,   14.],       [ -82.,    1.,   14.],       [ -61.,  -54.,   22.],       [  -4.,  -78.,   22.],       [  59.,  -55.,   22.],       [  89.,    3.,   16.],       [  58.,   58.,   14.],       [   4.,   90.,   16.],       [ -59.,   64.,   16.],       [ -90.,    2.,   22.],       [ -65.,  -58.,   17.],       [   4.,  -86.,   17.],       [  62.,  -63.,   15.],       [  98.,    4.,   20.],       [  70.,   66.,   19.],       [   0.,   88.,   19.],       [ -71.,   70.,   23.],       [ -92.,    0.,   17.],       [ -63.,  -68.,   15.],       [   4.,  -95.,   22.],       [  65.,  -70.,   19.],       [  98.,    1.,   17.],       [  73.,   71.,   20.],       [   1.,   97.,   13.],       [ -68.,   72.,   17.],       [-101.,    3.,   14.],       [ -70.,  -67.,   16.],       [   2.,  -97.,   14.],       [  67.,  -73.,   21.],       [  51.,   -5.,   18.],       [  32.,   31.,   25.],       [  -1.,   46.,   22.],       [ -33.,   33.,   24.],       [ -47.,   -1.,   20.],       [ -40.,  -40.,   18.],       [  -4.,  -48.,   17.],       [  37.,  -33.,   25.],       [  53.,    1.,   24.],       [  38.,   44.,   23.],       [  -4.,   52.,   21.],       [ -41.,   36.,   22.],       [ -60.,    4.,   20.],       [ -39.,  -39.,   26.],       [  -1.,  -57.,   19.],       [  42.,  -45.,   17.],       [  58.,    4.,   26.],       [  41.,   47.,   24.],       [   3.,   58.,   25.],       [ -48.,   42.,   26.],       [ -64.,   -4.,   17.],       [ -43.,  -43.,   21.],       [   1.,  -65.,   20.],       [  40.,  -43.,   25.],       [  70.,    2.,   23.],       [  50.,   45.,   16.],       [  -2.,   69.,   21.],       [ -52.,   53.,   23.],       [ -68.,    2.,   18.],       [ -47.,  -53.,   19.],       [  -5.,  -69.,   21.],       [  49.,  -51.,   24.],       [  76.,    2.,   20.],       [  50.,   56.,   23.],       [  -5.,   78.,   18.],       [ -56.,   56.,   18.],       [ -77.,   -3.,   17.],       [ -58.,  -58.,   18.],       [  -4.,  -74.,   18.],       [  56.,  -59.,   17.],       [  76.,    4.,   26.],       [  61.,   57.,   16.],       [   0.,   85.,   25.],       [ -60.,   58.,   24.],       [ -86.,    1.,   23.],       [ -60.,  -56.,   20.],       [  -2.,  -82.,   23.],       [  59.,  -57.,   20.],       [  91.,    4.,   18.],       [  60.,   64.,   23.],       [  -1.,   90.,   23.],       [ -60.,   63.,   24.],       [ -84.,   -3.,   19.],       [ -65.,  -66.,   17.],       [   0.,  -92.,   21.],       [  65.,  -65.,   26.],       [  91.,   -1.,   24.],       [  63.,   71.,   19.],       [  -4.,   89.,   25.],       [ -68.,   67.,   26.],       [ -92.,   -3.,   25.],       [ -65.,  -72.,   22.],       [  -2.,  -99.,   21.],       [  69.,  -62.,   19.],       [  98.,    2.,   19.],       [  71.,   74.,   25.],       [   4.,   97.,   20.],       [ -74.,   68.,   23.],       [-104.,    4.,   17.],       [ -76.,  -70.,   24.],       [  -1., -104.,   21.],       [  72.,  -73.,   19.],       [  46.,   -3.,   23.],       [  30.,   33.,   26.],       [   4.,   54.,   26.],       [ -41.,   32.,   27.],       [ -50.,    0.,   20.],       [ -38.,  -36.,   26.],       [  -1.,  -50.,   26.],       [  36.,  -33.,   25.],       [  60.,   -4.,   30.],       [  44.,   42.,   29.],       [   3.,   54.,   28.],       [ -42.,   35.,   22.],       [ -54.,    0.,   22.],       [ -42.,  -44.,   22.],       [  -4.,  -58.,   25.],       [  40.,  -40.,   25.],       [  61.,    1.,   23.],       [  47.,   43.,   24.],       [  -1.,   61.,   28.],       [ -47.,   48.,   23.],       [ -66.,    4.,   25.],       [ -48.,  -47.,   20.],       [   4.,  -64.,   24.],       [  48.,  -47.,   21.],       [  64.,   -5.,   28.],       [  47.,   50.,   26.],       [  -4.,   70.,   24.],       [ -47.,   52.,   22.],       [ -72.,   -4.,   23.],       [ -51.,  -48.,   24.],       [  -3.,  -70.,   25.],       [  53.,  -50.,   27.],       [  71.,   -2.,   30.],       [  57.,   54.,   29.],       [  -5.,   74.,   21.],       [ -57.,   53.,   30.],       [ -71.,   -3.,   23.],       [ -58.,  -50.,   26.],       [   3.,  -75.,   21.],       [  51.,  -57.,   26.],       [  85.,   -5.,   21.],       [  52.,   61.,   26.],       [  -5.,   82.,   21.],       [ -59.,   60.,   23.],       [ -80.,    4.,   27.],       [ -53.,  -56.,   27.],       [  -2.,  -86.,   20.],       [  61.,  -58.,   23.],       [  82.,    4.,   23.],       [  63.,   59.,   28.],       [  -5.,   90.,   21.],       [ -66.,   58.,   25.],       [ -89.,    3.,   24.],       [ -66.,  -61.,   26.],       [  -2.,  -92.,   28.],       [  62.,  -62.,   22.],       [  92.,    4.,   21.],       [  67.,   66.,   28.],       [   2.,   97.,   30.],       [ -70.,   67.,   28.],       [ -98.,   -4.,   20.],       [ -63.,  -62.,   24.],       [  -3.,  -89.,   29.],       [  66.,  -69.,   20.],       [  99.,   -2.,   25.],       [  72.,   72.,   24.],       [  -2.,  103.,   27.],       [ -72.,   68.,   25.],       [ -97.,    0.,   27.],       [ -70.,  -70.,   25.],       [  -2.,  -96.,   25.],       [  74.,  -76.,   30.],       [  52.,   -1.,   29.],       [  30.,   32.,   31.],       [  -2.,   49.,   32.],       [ -39.,   37.,   31.],       [ -52.,   -5.,   25.],       [ -39.,  -39.,   25.],       [  -5.,  -46.,   25.],       [  31.,  -31.,   28.],       [  54.,   -4.,   32.],       [  42.,   42.,   34.],       [  -2.,   55.,   33.],       [ -44.,   38.,   29.],       [ -56.,   -2.,   27.],       [ -43.,  -45.,   32.],       [  -5.,  -61.,   24.],       [  39.,  -44.,   33.],       [  63.,    1.,   25.],       [  48.,   40.,   30.],       [  -1.,   64.,   33.],       [ -46.,   46.,   25.],       [ -59.,    2.,   29.],       [ -47.,  -46.,   26.],       [  -4.,  -62.,   31.],       [  47.,  -43.,   28.],       [  70.,   -2.,   27.],       [  44.,   51.,   26.],       [   0.,   67.,   34.],       [ -53.,   46.,   27.],       [ -71.,    2.,   32.],       [ -53.,  -53.,   32.],       [  -3.,  -65.,   30.],       [  52.,  -48.,   31.],       [  75.,    3.,   32.],       [  53.,   50.,   26.],       [   4.,   77.,   33.],       [ -53.,   49.,   30.],       [ -72.,    3.,   30.],       [ -53.,  -55.,   30.],       [   4.,  -76.,   29.],       [  56.,  -53.,   32.],       [  77.,    0.,   26.],       [  59.,   52.,   33.],       [   1.,   82.,   25.],       [ -58.,   52.,   31.],       [ -86.,    0.,   25.],       [ -61.,  -57.,   27.],       [   3.,  -82.,   31.],       [  61.,  -58.,   32.],       [  84.,   -5.,   26.],       [  57.,   59.,   28.],       [  -2.,   88.,   33.],       [ -59.,   66.,   31.],       [ -91.,   -4.,   30.],       [ -67.,  -62.,   31.],       [  -1.,  -87.,   24.],       [  64.,  -63.,   24.],       [  97.,    0.,   33.],       [  71.,   63.,   28.],       [   0.,   90.,   33.],       [ -70.,   70.,   27.],       [ -95.,    1.,   32.],       [ -62.,  -65.,   27.],       [   4.,  -93.,   32.],       [  62.,  -64.,   26.],       [ 102.,    0.,   30.],       [  70.,   73.,   28.],       [   3.,   96.,   28.],       [ -67.,   69.,   27.],       [-104.,    4.,   28.],       [ -74.,  -76.,   28.],       [   2.,  -97.,   31.],       [  71.,  -75.,   32.],       [  47.,   -5.,   33.],       [  36.,   32.,   28.],       [  -4.,   50.,   37.],       [ -32.,   30.,   28.],       [ -55.,    2.,   30.],       [ -36.,  -32.,   37.],       [  -4.,  -48.,   32.],       [  35.,  -36.,   37.],       [  51.,    2.,   28.],       [  36.,   41.,   33.],       [   3.,   52.,   29.],       [ -36.,   42.,   36.],       [ -55.,    3.,   37.],       [ -39.,  -45.,   34.],       [   2.,  -53.,   32.],       [  39.,  -36.,   33.],       [  57.,   -2.,   29.],       [  44.,   44.,   28.],       [   3.,   65.,   34.],       [ -42.,   45.,   30.],       [ -63.,   -5.,   28.],       [ -46.,  -44.,   27.],       [  -5.,  -65.,   29.],       [  46.,  -43.,   36.],       [  73.,    0.,   32.],       [  43.,   46.,   37.],       [   0.,   72.,   34.],       [ -51.,   53.,   34.],       [ -69.,   -3.,   33.],       [ -52.,  -50.,   29.],       [   0.,  -71.,   31.],       [  45.,  -54.,   35.],       [  72.,    1.,   32.],       [  51.,   54.,   34.],       [   1.,   76.,   33.],       [ -52.,   55.,   35.],       [ -76.,    3.,   28.],       [ -55.,  -58.,   31.],       [  -5.,  -73.,   28.],       [  48.,  -49.,   31.],       [  79.,    1.,   28.],       [  61.,   52.,   34.],       [   1.,   81.,   34.],       [ -61.,   56.,   37.],       [ -85.,    1.,   36.],       [ -61.,  -55.,   31.],       [  -3.,  -80.,   30.],       [  60.,  -58.,   33.],       [  88.,    4.,   29.],       [  65.,   65.,   27.],       [  -3.,   86.,   29.],       [ -67.,   62.,   31.],       [ -86.,    0.,   35.],       [ -61.,  -60.,   29.],       [   3.,  -84.,   34.],       [  59.,  -60.,   34.],       [  95.,   -3.,   28.],       [  63.,   68.,   29.],       [  -1.,   88.,   28.],       [ -63.,   62.,   33.],       [ -97.,   -2.,   34.],       [ -72.,  -68.,   32.],       [   1.,  -95.,   28.],       [  63.,  -70.,   28.],       [  97.,   -5.,   29.],       [  67.,   75.,   33.],       [  -2.,  101.,   33.],       [ -68.,   71.,   32.],       [ -98.,   -2.,   34.],       [ -67.,  -67.,   32.],       [  -4., -102.,   34.],       [  67.,  -71.,   36.],       [  54.,   -2.,   33.],       [  37.,   30.,   33.],       [  -3.,   51.,   36.],       [ -34.,   31.,   35.],       [ -52.,    1.,   34.],       [ -38.,  -34.,   35.],       [  -2.,  -51.,   39.],       [  32.,  -35.,   32.],       [  60.,   -1.,   38.],       [  43.,   39.,   33.],       [   0.,   56.,   39.],       [ -44.,   41.,   34.],       [ -60.,    4.,   33.],       [ -37.,  -39.,   37.],       [  -5.,  -54.,   41.],       [  40.,  -40.,   37.],       [  60.,    4.,   34.],       [  39.,   39.,   39.],       [  -3.,   62.,   37.],       [ -45.,   42.,   36.],       [ -59.,    0.,   35.],       [ -41.,  -44.,   38.],       [  -4.,  -60.,   39.],       [  47.,  -49.,   36.],       [  68.,   -2.,   37.],       [  48.,   49.,   39.],       [  -1.,   72.,   40.],       [ -48.,   48.,   36.],       [ -73.,   -3.,   32.],       [ -48.,  -48.,   33.],       [  -2.,  -68.,   41.],       [  50.,  -52.,   39.],       [  77.,    0.,   38.],       [  53.,   51.,   39.],       [  -5.,   74.,   36.],       [ -53.,   56.,   40.],       [ -80.,   -5.,   35.],       [ -50.,  -55.,   40.],       [   4.,  -74.,   36.],       [  49.,  -54.,   36.],       [  76.,    3.,   40.],       [  53.,   57.,   35.],       [  -1.,   77.,   38.],       [ -60.,   60.,   40.],       [ -78.,   -2.,   33.],       [ -54.,  -58.,   40.],       [  -5.,  -84.,   34.],       [  55.,  -54.,   31.],       [  87.,    1.,   40.],       [  62.,   60.,   36.],       [   2.,   84.,   33.],       [ -65.,   65.,   38.],       [ -87.,   -2.,   40.],       [ -58.,  -66.,   39.],       [   3.,  -92.,   35.],       [  62.,  -59.,   36.],       [  96.,    3.,   38.],       [  65.,   62.,   32.],       [   3.,   90.,   39.],       [ -71.,   67.,   41.],       [ -93.,   -1.,   39.],       [ -63.,  -70.,   34.],       [  -1.,  -91.,   34.],       [  66.,  -67.,   31.],       [ 102.,    3.,   38.],       [  75.,   68.,   40.],       [  -2.,   97.,   35.],       [ -69.,   67.,   39.],       [-101.,   -2.,   33.],       [ -73.,  -73.,   37.],       [   2., -102.,   38.],       [  70.,  -67.,   34.],       [  52.,   -3.,   44.],       [  33.,   35.,   38.],       [   0.,   45.,   42.],       [ -35.,   40.,   36.],       [ -49.,   -3.,   42.],       [ -34.,  -34.,   41.],       [  -2.,  -55.,   43.],       [  34.,  -40.,   40.],       [  52.,   -1.,   42.],       [  42.,   40.,   42.],       [   2.,   55.,   36.],       [ -41.,   40.,   40.],       [ -52.,    0.,   37.],       [ -40.,  -42.,   37.],       [   2.,  -59.,   38.],       [  37.,  -45.,   37.],       [  63.,    2.,   39.],       [  48.,   48.,   36.],       [   3.,   64.,   37.],       [ -45.,   41.,   42.],       [ -61.,   -4.,   43.],       [ -46.,  -43.,   38.],       [  -4.,  -62.,   44.],       [  45.,  -45.,   39.],       [  71.,   -5.,   43.],       [  48.,   46.,   38.],       [   4.,   67.,   36.],       [ -49.,   52.,   35.],       [ -70.,    3.,   38.],       [ -53.,  -44.,   36.],       [  -3.,  -68.,   37.],       [  46.,  -52.,   41.],       [  76.,    3.,   44.],       [  56.,   49.,   35.],       [  -2.,   72.,   41.],       [ -52.,   56.,   41.],       [ -80.,   -4.,   43.],       [ -54.,  -57.,   42.],       [  -3.,  -78.,   40.],       [  48.,  -56.,   38.],       [  81.,   -1.,   42.],       [  56.,   52.,   43.],       [   2.,   85.,   37.],       [ -58.,   58.,   38.],       [ -84.,    2.,   39.],       [ -56.,  -57.,   35.],       [   2.,  -83.,   42.],       [  53.,  -55.,   37.],       [  88.,    0.,   41.],       [  59.,   62.,   38.],       [   0.,   85.,   44.],       [ -58.,   64.,   37.],       [ -90.,   -3.,   38.],       [ -61.,  -67.,   40.],       [  -5.,  -90.,   43.],       [  66.,  -59.,   35.],       [  89.,   -4.,   36.],       [  66.,   63.,   43.],       [  -1.,   90.,   41.],       [ -67.,   62.,   38.],       [ -93.,   -4.,   44.],       [ -70.,  -65.,   36.],       [   4.,  -89.,   35.],       [  68.,  -62.,   43.],       [  97.,    2.,   36.],       [  70.,   68.,   40.],       [   1.,   99.,   40.],       [ -73.,   72.,   40.],       [-100.,   -1.,   35.],       [ -68.,  -67.,   42.],       [   0., -100.,   42.],       [  72.,  -75.,   35.]])
        basis0 = BSplineBasis(5, np.array([-2.4, -1.3,  0. ,  0. ,  0. ,  1. ,  1.8,  3.1,  3.6,  4.7,  6. ,
        6. ,  6. ,  7. ,  7.8]),1)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2.3,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2. ,  3.2,  3.9,
        5.2,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([  9.7,   6.9,  11.4])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 9.700000
        pt2[...,1] /= 6.900000
        pt2[...,2] /= 11.400000
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_mirror_volume_3D_p667_C1_periodic(self):
        controlpoints = np.array([[  50.,   -1.,    3.],       [  36.,   38.,    4.],       [  -5.,   46.,    4.],       [ -39.,   33.,    4.],       [ -46.,    3.,   -1.],       [ -32.,  -38.,   -4.],       [  -3.,  -47.,   -5.],       [  36.,  -38.,    2.],       [  58.,    0.,   -1.],       [  45.,   44.,    1.],       [  -5.,   60.,   -3.],       [ -45.,   44.,    0.],       [ -55.,    4.,   -5.],       [ -40.,  -43.,   -4.],       [  -5.,  -58.,   -5.],       [  45.,  -41.,   -4.],       [  62.,    4.,    4.],       [  45.,   50.,    0.],       [  -1.,   64.,   -1.],       [ -46.,   44.,    1.],       [ -65.,    0.,   -1.],       [ -49.,  -43.,   -1.],       [  -1.,  -71.,   -2.],       [  43.,  -46.,   -5.],       [  76.,    4.,    3.],       [  50.,   56.,    2.],       [   0.,   72.,   -4.],       [ -54.,   57.,   -2.],       [ -72.,   -5.,   -3.],       [ -55.,  -58.,    2.],       [  -2.,  -72.,   -4.],       [  49.,  -49.,   -2.],       [  82.,   -2.,    3.],       [  57.,   54.,    3.],       [  -2.,   87.,    4.],       [ -62.,   55.,    4.],       [ -86.,   -5.,    3.],       [ -63.,  -64.,    1.],       [  -2.,  -85.,   -3.],       [  60.,  -62.,    0.],       [  95.,    4.,    2.],       [  63.,   64.,    0.],       [   2.,   92.,    2.],       [ -67.,   59.,    4.],       [ -91.,    1.,    4.],       [ -69.,  -64.,   -2.],       [   4.,  -95.,    0.],       [  68.,  -62.,   -1.],       [  99.,    3.,    0.],       [  72.,   69.,    0.],       [   0.,  104.,   -3.],       [ -71.,   69.,   -2.],       [-105.,   -1.,   -5.],       [ -71.,  -69.,   -4.],       [   0., -104.,    1.],       [  68.,  -71.,   -2.],       [  48.,    0.,    2.],       [  30.,   30.,    1.],       [   2.,   49.,    2.],       [ -37.,   37.,    5.],       [ -52.,    2.,    8.],       [ -37.,  -37.,    1.],       [   4.,  -48.,    1.],       [  35.,  -35.,    0.],       [  59.,   -5.,    1.],       [  40.,   43.,    7.],       [  -2.,   57.,    4.],       [ -39.,   45.,    1.],       [ -59.,   -4.,    3.],       [ -43.,  -37.,    3.],       [   1.,  -61.,    1.],       [  40.,  -46.,    4.],       [  67.,   -5.,    2.],       [  44.,   43.,    6.],       [   1.,   64.,    2.],       [ -49.,   46.,    6.],       [ -69.,   -3.,    0.],       [ -49.,  -45.,    7.],       [   0.,  -71.,    7.],       [  51.,  -43.,    3.],       [  73.,   -1.,    4.],       [  52.,   48.,    7.],       [   3.,   70.,    4.],       [ -50.,   51.,    7.],       [ -74.,   -4.,   -1.],       [ -52.,  -52.,    3.],       [  -3.,  -71.,    7.],       [  50.,  -55.,    6.],       [  88.,    3.,   -1.],       [  58.,   58.,    7.],       [   0.,   82.,    6.],       [ -57.,   62.,   -2.],       [ -88.,    2.,    0.],       [ -58.,  -57.,    5.],       [  -2.,  -80.,    4.],       [  56.,  -58.,    1.],       [  89.,    2.,    7.],       [  60.,   66.,    3.],       [   3.,   95.,    0.],       [ -69.,   64.,    0.],       [ -93.,   -3.,    3.],       [ -69.,  -64.,    6.],       [   2.,  -95.,    6.],       [  63.,  -70.,    5.],       [  96.,   -1.,    6.],       [  69.,   71.,   -1.],       [  -2.,  104.,    1.],       [ -76.,   66.,   -1.],       [-103.,   -2.,    0.],       [ -68.,  -75.,    3.],       [   2., -101.,    6.],       [  66.,  -70.,    6.],       [  47.,   -4.,   12.],       [  36.,   35.,    9.],       [  -1.,   47.,   10.],       [ -31.,   37.,   10.],       [ -50.,    1.,    3.],       [ -34.,  -33.,    3.],       [   2.,  -46.,    4.],       [  34.,  -38.,    5.],       [  57.,    2.,   11.],       [  45.,   41.,    4.],       [   3.,   58.,    2.],       [ -40.,   43.,   11.],       [ -62.,    4.,    4.],       [ -40.,  -43.,    7.],       [   0.,  -57.,    6.],       [  44.,  -44.,    5.],       [  66.,    4.,    7.],       [  47.,   47.,    9.],       [   2.,   67.,    6.],       [ -45.,   45.,    6.],       [ -64.,    4.,   10.],       [ -45.,  -50.,    7.],       [  -1.,  -67.,    2.],       [  46.,  -50.,    9.],       [  71.,    0.,    9.],       [  53.,   50.,   12.],       [   0.,   77.,    3.],       [ -50.,   57.,    4.],       [ -72.,    0.,    4.],       [ -57.,  -58.,   10.],       [  -5.,  -80.,    8.],       [  55.,  -52.,   11.],       [  87.,   -2.,    2.],       [  62.,   56.,    6.],       [  -4.,   86.,    8.],       [ -57.,   55.,    6.],       [ -83.,   -5.,    5.],       [ -59.,  -58.,    5.],       [   4.,  -79.,   10.],       [  61.,  -62.,    2.],       [  89.,    1.,    6.],       [  68.,   61.,   10.],       [  -2.,   90.,    3.],       [ -64.,   68.,    2.],       [ -97.,    2.,   11.],       [ -68.,  -69.,    7.],       [  -1.,  -96.,    7.],       [  62.,  -69.,    7.],       [  98.,    2.,    9.],       [  69.,   74.,   10.],       [  -3.,  103.,    4.],       [ -71.,   70.,    6.],       [ -99.,   -1.,    7.],       [ -75.,  -72.,    8.],       [   0.,  -97.,    7.],       [  65.,  -75.,    3.],       [  45.,    2.,   13.],       [  35.,   39.,    9.],       [   4.,   46.,    7.],       [ -35.,   32.,   12.],       [ -46.,   -5.,   14.],       [ -35.,  -36.,    6.],       [  -5.,  -54.,    8.],       [  36.,  -41.,   10.],       [  56.,    2.,    8.],       [  44.,   45.,    6.],       [  -5.,   55.,   10.],       [ -44.,   46.,   15.],       [ -64.,   -5.,    9.],       [ -42.,  -43.,    8.],       [  -4.,  -60.,   10.],       [  41.,  -41.,   13.],       [  67.,    3.,   11.],       [  47.,   43.,    8.],       [   2.,   70.,   10.],       [ -51.,   50.,   11.],       [ -64.,   -2.,    8.],       [ -48.,  -43.,   10.],       [  -3.,  -66.,   12.],       [  44.,  -51.,    8.],       [  70.,   -3.,   12.],       [  57.,   57.,   10.],       [  -1.,   72.,   14.],       [ -57.,   57.,    6.],       [ -76.,   -1.,   15.],       [ -58.,  -56.,   10.],       [   2.,  -73.,   15.],       [  55.,  -53.,    6.],       [  86.,    0.,   11.],       [  62.,   63.,    8.],       [   4.,   81.,   15.],       [ -62.,   56.,   11.],       [ -81.,    1.,    6.],       [ -64.,  -57.,    8.],       [   2.,  -84.,   12.],       [  60.,  -55.,   11.],       [  96.,    4.,   14.],       [  61.,   59.,   14.],       [   0.,   95.,    9.],       [ -66.,   62.,   12.],       [ -89.,   -4.,   11.],       [ -70.,  -64.,    8.],       [  -3.,  -90.,   15.],       [  60.,  -68.,   14.],       [  96.,   -4.,    6.],       [  68.,   68.,   11.],       [  -1.,  101.,   15.],       [ -72.,   66.,    6.],       [-101.,    4.,    9.],       [ -68.,  -74.,    8.],       [  -3.,  -98.,   14.],       [  65.,  -76.,   12.],       [  48.,    1.,   15.],       [  32.,   35.,   16.],       [  -2.,   52.,   15.],       [ -32.,   32.,   11.],       [ -49.,   -1.,   12.],       [ -39.,  -39.,   12.],       [   4.,  -52.,   15.],       [  34.,  -39.,   12.],       [  55.,   -1.,   15.],       [  40.,   37.,   13.],       [   1.,   60.,   18.],       [ -37.,   43.,   10.],       [ -64.,    1.,    9.],       [ -45.,  -39.,   11.],       [  -4.,  -62.,   13.],       [  37.,  -40.,   17.],       [  65.,   -1.,   10.],       [  48.,   50.,   11.],       [   1.,   69.,   10.],       [ -45.,   43.,   15.],       [ -69.,   -5.,   16.],       [ -47.,  -52.,   12.],       [  -3.,  -69.,   15.],       [  46.,  -47.,   16.],       [  78.,   -2.,   12.],       [  48.,   53.,   13.],       [  -5.,   78.,   14.],       [ -54.,   49.,   12.],       [ -80.,    4.,   14.],       [ -54.,  -56.,   15.],       [  -2.,  -79.,   11.],       [  53.,  -56.,   10.],       [  80.,    1.,   14.],       [  57.,   54.,   17.],       [  -4.,   84.,   18.],       [ -61.,   59.,   12.],       [ -87.,   -5.,   11.],       [ -63.,  -58.,   14.],       [  -3.,  -79.,   13.],       [  56.,  -60.,   12.],       [  96.,    2.,   19.],       [  60.,   67.,   10.],       [  -4.,   88.,   17.],       [ -67.,   68.,   19.],       [ -92.,    0.,   17.],       [ -61.,  -63.,   17.],       [  -1.,  -91.,   10.],       [  66.,  -65.,   15.],       [ 103.,    4.,   10.],       [  74.,   72.,   18.],       [  -1.,  102.,   11.],       [ -67.,   68.,   16.],       [-103.,   -3.,   14.],       [ -76.,  -70.,   14.],       [  -1.,  -99.,   17.],       [  72.,  -71.,   16.],       [  51.,    4.,   19.],       [  35.,   32.,   21.],       [   2.,   46.,   20.],       [ -38.,   40.,   15.],       [ -55.,   -2.,   20.],       [ -35.,  -32.,   17.],       [  -5.,  -51.,   22.],       [  30.,  -40.,   20.],       [  59.,   -1.,   16.],       [  40.,   38.,   17.],       [   3.,   54.,   14.],       [ -42.,   44.,   17.],       [ -57.,    3.,   15.],       [ -46.,  -46.,   13.],       [  -4.,  -64.,   15.],       [  44.,  -40.,   16.],       [  71.,   -2.,   21.],       [  49.,   45.,   21.],       [  -2.,   65.,   14.],       [ -47.,   46.,   16.],       [ -69.,   -2.,   19.],       [ -46.,  -45.,   18.],       [  -2.,  -68.,   19.],       [  43.,  -47.,   22.],       [  74.,   -3.,   22.],       [  56.,   53.,   13.],       [  -5.,   71.,   18.],       [ -53.,   56.,   14.],       [ -77.,    2.,   17.],       [ -58.,  -56.,   13.],       [  -5.,  -77.,   17.],       [  48.,  -58.,   14.],       [  79.,   -3.,   17.],       [  56.,   56.,   14.],       [  -5.,   83.,   19.],       [ -55.,   59.,   21.],       [ -79.,    2.,   17.],       [ -62.,  -58.,   19.],       [   1.,  -87.,   13.],       [  59.,  -59.,   19.],       [  90.,    3.,   17.],       [  67.,   62.,   13.],       [  -2.,   87.,   15.],       [ -64.,   67.,   19.],       [ -87.,   -2.,   13.],       [ -63.,  -67.,   23.],       [   3.,  -89.,   22.],       [  69.,  -64.,   15.],       [ 103.,    2.,   21.],       [  74.,   66.,   21.],       [   2.,   98.,   15.],       [ -73.,   68.,   19.],       [-100.,   -1.,   22.],       [ -76.,  -70.,   13.],       [  -3., -105.,   19.],       [  70.,  -67.,   17.],       [  47.,   -1.,   17.],       [  37.,   34.,   19.],       [  -4.,   50.,   18.],       [ -36.,   35.,   24.],       [ -51.,    0.,   24.],       [ -37.,  -34.,   21.],       [   1.,  -54.,   26.],       [  32.,  -33.,   21.],       [  54.,   -1.,   24.],       [  46.,   45.,   24.],       [   3.,   62.,   22.],       [ -37.,   41.,   25.],       [ -57.,    3.,   19.],       [ -38.,  -47.,   22.],       [  -4.,  -60.,   23.],       [  45.,  -41.,   18.],       [  66.,   -3.,   23.],       [  43.,   44.,   21.],       [  -1.,   63.,   21.],       [ -44.,   50.,   18.],       [ -68.,    0.,   19.],       [ -46.,  -47.,   19.],       [   1.,  -63.,   23.],       [  44.,  -50.,   22.],       [  77.,   -4.,   19.],       [  55.,   48.,   21.],       [  -2.,   73.,   21.],       [ -55.,   50.,   24.],       [ -75.,    3.,   23.],       [ -50.,  -50.,   24.],       [   3.,  -80.,   17.],       [  54.,  -51.,   18.],       [  88.,   -3.,   19.],       [  59.,   55.,   26.],       [   2.,   87.,   19.],       [ -56.,   63.,   20.],       [ -80.,    0.,   26.],       [ -63.,  -64.,   19.],       [   1.,  -88.,   23.],       [  59.,  -63.,   21.],       [  86.,   -1.,   24.],       [  69.,   64.,   20.],       [  -3.,   88.,   18.],       [ -67.,   62.,   23.],       [ -92.,    1.,   18.],       [ -60.,  -69.,   24.],       [  -4.,  -90.,   17.],       [  63.,  -64.,   24.],       [  95.,    0.,   23.],       [  70.,   74.,   26.],       [   2.,  101.,   17.],       [ -76.,   68.,   17.],       [ -98.,   -4.,   20.],       [ -74.,  -71.,   17.],       [  -2., -101.,   20.],       [  75.,  -68.,   25.],       [  46.,   -3.,   24.],       [  36.,   32.,   24.],       [   0.,   47.,   26.],       [ -40.,   32.,   26.],       [ -55.,    3.,   24.],       [ -37.,  -40.,   22.],       [   0.,  -55.,   23.],       [  39.,  -40.,   22.],       [  55.,   -4.,   24.],       [  43.,   37.,   29.],       [   2.,   56.,   27.],       [ -43.,   44.,   27.],       [ -55.,    3.,   26.],       [ -37.,  -46.,   29.],       [   1.,  -59.,   30.],       [  45.,  -44.,   26.],       [  68.,    4.,   30.],       [  47.,   42.,   24.],       [  -4.,   68.,   29.],       [ -48.,   48.,   21.],       [ -69.,   -2.,   23.],       [ -44.,  -49.,   29.],       [   4.,  -62.,   27.],       [  45.,  -48.,   30.],       [  71.,    3.,   26.],       [  49.,   53.,   22.],       [   3.,   78.,   21.],       [ -57.,   56.,   23.],       [ -76.,    4.,   24.],       [ -51.,  -51.,   27.],       [  -4.,  -74.,   30.],       [  57.,  -54.,   24.],       [  83.,    1.,   26.],       [  56.,   60.,   21.],       [  -4.,   80.,   23.],       [ -55.,   57.,   29.],       [ -88.,   -4.,   21.],       [ -57.,  -64.,   22.],       [  -5.,  -86.,   26.],       [  57.,  -59.,   23.],       [  92.,    2.,   24.],       [  62.,   60.,   24.],       [   1.,   87.,   21.],       [ -68.,   64.,   26.],       [ -93.,    4.,   30.],       [ -64.,  -63.,   22.],       [  -1.,  -88.,   26.],       [  62.,  -62.,   23.],       [  99.,    1.,   25.],       [  67.,   68.,   29.],       [  -4.,  104.,   23.],       [ -69.,   74.,   25.],       [-100.,    2.,   22.],       [ -75.,  -75.,   22.],       [  -3.,  -96.,   28.],       [  74.,  -71.,   28.],       [  54.,    0.,   24.],       [  38.,   36.,   25.],       [   2.,   48.,   31.],       [ -41.,   38.,   25.],       [ -50.,   -5.,   33.],       [ -32.,  -40.,   30.],       [  -1.,  -46.,   25.],       [  40.,  -38.,   33.],       [  59.,   -5.,   25.],       [  44.,   41.,   27.],       [  -5.,   60.,   33.],       [ -40.,   36.,   32.],       [ -58.,    4.,   24.],       [ -40.,  -38.,   31.],       [   3.,  -61.,   33.],       [  41.,  -46.,   26.],       [  62.,   -5.,   32.],       [  43.,   46.,   33.],       [  -3.,   68.,   32.],       [ -44.,   50.,   25.],       [ -69.,   -1.,   25.],       [ -52.,  -48.,   30.],       [   4.,  -72.,   24.],       [  46.,  -50.,   25.],       [  78.,   -2.,   29.],       [  57.,   57.,   24.],       [  -1.,   73.,   30.],       [ -52.,   54.,   30.],       [ -74.,    4.,   28.],       [ -57.,  -51.,   31.],       [  -4.,  -80.,   26.],       [  56.,  -56.,   29.],       [  84.,   -4.,   24.],       [  56.,   54.,   33.],       [   2.,   86.,   26.],       [ -62.,   60.,   24.],       [ -86.,    1.,   28.],       [ -58.,  -57.,   31.],       [  -2.,  -80.,   25.],       [  58.,  -62.,   32.],       [  94.,   -4.,   28.],       [  63.,   65.,   24.],       [   2.,   90.,   32.],       [ -60.,   63.,   24.],       [ -95.,   -4.,   26.],       [ -67.,  -61.,   31.],       [  -2.,  -96.,   24.],       [  68.,  -62.,   25.],       [ 100.,    3.,   27.],       [  67.,   75.,   28.],       [  -5.,   97.,   33.],       [ -73.,   68.,   29.],       [ -96.,    0.,   28.],       [ -72.,  -71.,   32.],       [   4.,  -99.,   32.],       [  73.,  -67.,   33.],       [  45.,   -4.,   36.],       [  40.,   36.,   29.],       [  -3.,   47.,   28.],       [ -36.,   33.,   33.],       [ -53.,   -3.,   34.],       [ -35.,  -38.,   34.],       [   2.,  -48.,   37.],       [  39.,  -36.,   31.],       [  59.,   -4.,   34.],       [  40.,   40.,   30.],       [   0.,   60.,   31.],       [ -38.,   43.,   33.],       [ -63.,   -1.,   36.],       [ -45.,  -38.,   29.],       [  -4.,  -61.,   32.],       [  36.,  -45.,   29.],       [  67.,   -3.,   34.],       [  51.,   51.,   36.],       [   3.,   63.,   28.],       [ -52.,   50.,   34.],       [ -67.,   -1.,   29.],       [ -45.,  -51.,   32.],       [   1.,  -66.,   33.],       [  47.,  -50.,   35.],       [  74.,    0.,   34.],       [  50.,   52.,   30.],       [  -4.,   74.,   32.],       [ -50.,   52.,   32.],       [ -73.,   -5.,   28.],       [ -50.,  -54.,   34.],       [   2.,  -72.,   35.],       [  52.,  -50.,   31.],       [  78.,    1.,   31.],       [  58.,   54.,   33.],       [   0.,   80.,   34.],       [ -58.,   54.,   36.],       [ -86.,    1.,   35.],       [ -59.,  -60.,   32.],       [   3.,  -80.,   31.],       [  55.,  -57.,   30.],       [  95.,    1.,   28.],       [  61.,   64.,   36.],       [   1.,   92.,   32.],       [ -65.,   69.,   35.],       [ -96.,    3.,   28.],       [ -70.,  -65.,   35.],       [   3.,  -91.,   28.],       [  60.,  -67.,   34.],       [ 101.,   -5.,   34.],       [  73.,   70.,   37.],       [  -1.,   96.,   32.],       [ -73.,   69.,   35.],       [ -98.,   -3.,   37.],       [ -68.,  -71.,   32.],       [  -5.,  -99.,   35.],       [  70.,  -68.,   33.],       [  45.,    0.,   38.],       [  34.,   34.,   34.],       [   1.,   45.,   32.],       [ -35.,   32.,   38.],       [ -54.,    4.,   38.],       [ -36.,  -35.,   35.],       [   3.,  -49.,   39.],       [  39.,  -35.,   33.],       [  53.,    3.,   33.],       [  36.,   42.,   40.],       [   0.,   60.,   38.],       [ -38.,   39.,   34.],       [ -64.,   -3.,   39.],       [ -38.,  -45.,   38.],       [   0.,  -59.,   35.],       [  37.,  -44.,   39.],       [  65.,   -5.,   37.],       [  48.,   45.,   35.],       [  -1.,   63.,   38.],       [ -44.,   45.,   35.],       [ -63.,    2.,   40.],       [ -45.,  -45.,   34.],       [  -3.,  -67.,   35.],       [  51.,  -51.,   33.],       [  75.,    1.,   34.],       [  50.,   53.,   38.],       [  -2.,   76.,   34.],       [ -54.,   48.,   34.],       [ -72.,    2.,   36.],       [ -57.,  -53.,   34.],       [  -2.,  -72.,   38.],       [  53.,  -57.,   40.],       [  87.,   -4.,   34.],       [  57.,   60.,   33.],       [   3.,   80.,   36.],       [ -60.,   59.,   35.],       [ -82.,   -1.,   40.],       [ -58.,  -58.,   38.],       [   4.,  -83.,   33.],       [  60.,  -60.,   32.],       [  94.,   -4.,   35.],       [  61.,   63.,   38.],       [  -3.,   94.,   40.],       [ -67.,   65.,   35.],       [ -90.,   -2.,   38.],       [ -64.,  -62.,   32.],       [  -4.,  -92.,   34.],       [  65.,  -66.,   35.],       [ 101.,    3.,   35.],       [  73.,   71.,   31.],       [   2.,  100.,   35.],       [ -76.,   65.,   34.],       [ -97.,   -2.,   38.],       [ -74.,  -75.,   41.],       [   2., -105.,   38.],       [  70.,  -71.,   33.],       [  52.,   -2.,   43.],       [  30.,   38.,   40.],       [  -2.,   50.,   37.],       [ -33.,   34.,   44.],       [ -52.,    2.,   42.],       [ -36.,  -34.,   41.],       [   0.,  -52.,   35.],       [  32.,  -41.,   40.],       [  60.,    4.,   40.],       [  37.,   45.,   41.],       [  -2.,   57.,   38.],       [ -46.,   46.,   44.],       [ -59.,   -1.,   44.],       [ -37.,  -46.,   42.],       [  -3.,  -56.,   43.],       [  41.,  -43.,   42.],       [  66.,   -4.,   36.],       [  44.,   42.,   41.],       [  -3.,   69.,   38.],       [ -47.,   43.,   44.],       [ -64.,   -5.,   36.],       [ -49.,  -46.,   39.],       [  -3.,  -68.,   43.],       [  42.,  -45.,   36.],       [  73.,   -4.,   35.],       [  57.,   53.,   38.],       [  -3.,   77.,   39.],       [ -49.,   52.,   41.],       [ -72.,    0.,   37.],       [ -54.,  -53.,   41.],       [  -2.,  -76.,   40.],       [  51.,  -50.,   43.],       [  86.,    2.,   41.],       [  63.,   62.,   38.],       [   0.,   86.,   36.],       [ -56.,   54.,   43.],       [ -86.,    1.,   42.],       [ -56.,  -56.,   39.],       [  -5.,  -87.,   37.],       [  54.,  -56.,   36.],       [  91.,    4.,   35.],       [  62.,   67.,   36.],       [   1.,   91.,   38.],       [ -63.,   64.,   40.],       [ -97.,    1.,   36.],       [ -61.,  -61.,   43.],       [   4.,  -92.,   36.],       [  64.,  -66.,   42.],       [  97.,    0.,   39.],       [  69.,   71.,   41.],       [  -4.,   96.,   40.],       [ -69.,   74.,   35.],       [-101.,    4.,   41.],       [ -72.,  -67.,   41.],       [  -5.,  -99.,   42.],       [  75.,  -69.,   41.]])
        basis0 = BSplineBasis(6, np.array([-2.2, -1.2,  0. ,  0. ,  0. ,  0. ,  1. ,  2.3,  2.8,  3.8,  5. ,
        5. ,  5. ,  5. ,  6. ,  7.3]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.4,  3.2,  4.4,
        5.1,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.mirror([0, 0, 1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,2] = -pt2[...,2]
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)


if __name__ == '__main__':
    unittest.main()
