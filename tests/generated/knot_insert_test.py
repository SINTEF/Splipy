# --- Automatic generated test file  ---
# Generator    : generate_knot_insert.py
# Date         : 2016-02-02
# Git revision : 9eb98bf1c6d7c273d5b4302d66f914f3f5e994bf

import numpy as np
from splipy import Volume, Surface, Curve, BSplineBasis
from math import sqrt
import unittest


class TestInsertKnot(unittest.TestCase):
    def test_curve_2D_p3_rational(self):
        controlpoints = np.array([[ -5. ,   0. ,   1.4],
       [ 36. ,  -4. ,   1.3],
       [ 64. ,  -4. ,   0.8],
       [ 99. ,  -3. ,   0.7]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.8,  2. ,  2. ,  2. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([0.800]*1) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 8)
        crv2.insert_knot([0.800]*2) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 10)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p23_rational(self):
        controlpoints = np.array([[  -3. ,    3. ,    1. ],
       [  45. ,   -1. ,    1.1],
       [  95. ,    3. ,    1.1],
       [  -3. ,   11. ,    1.4],
       [  49. ,   17. ,    0.6],
       [  98. ,   14. ,    1. ],
       [  -2. ,   34. ,    0.9],
       [  47. ,   28. ,    1.2],
       [  96. ,   28. ,    1.3],
       [  -1. ,   51. ,    1.5],
       [  49. ,   52. ,    0.7],
       [ 100. ,   51. ,    0.7],
       [   1. ,   69. ,    1. ],
       [  51. ,   67. ,    1.4],
       [ 103. ,   69. ,    1.2],
       [  -3. ,   78. ,    1. ],
       [  45. ,   87. ,    0.6],
       [  99. ,   79. ,    0.7],
       [   0. ,   98. ,    1.3],
       [  45. ,  104. ,    0.7],
       [ 102. ,   96. ,    1.1]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  2. ,  2. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  1.9,  3.4,  4.2,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([0.900]*1, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 6)
        surf2.insert_knot([1.836]*1, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 11)
        surf2.insert_knot([2.955]*2, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 13)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p4_rational_C0_periodic(self):
        controlpoints = np.array([[ 98. ,   1. ,   0.6],
       [ 67. ,  75. ,   1.5],
       [ -3. ,  99. ,   0.9],
       [-73. ,  74. ,   0.7],
       [-96. ,  -2. ,   0.6],
       [-66. , -72. ,   1.5],
       [ -2. , -96. ,   0.6],
       [ 66. , -67. ,   0.8]])
        basis0 = BSplineBasis(4, np.array([-0.9,  0. ,  0. ,  0. ,  1.1,  1.8,  2.9,  4.3,  5.1,  6. ,  6. ,  6. ,  7.1]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([1.979]*1) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 14)
        crv2.insert_knot([1.609]*2) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 16)
        crv2.insert_knot([2.722]*3) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 19)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p32_rational_C0_periodic(self):
        controlpoints = np.array([[  55. ,    0. ,    1.4],       [  30. ,   50. ,    1.4],       [ -26. ,   47. ,    0.8],       [ -57. ,   -5. ,    1.4],       [ -32. ,  -48. ,    1. ],       [  31. ,  -52. ,    1.1],       [  72. ,   -1. ,    0.8],       [  37. ,   58. ,    1.3],       [ -39. ,   63. ,    0.8],       [ -67. ,   -2. ,    0.5],       [ -39. ,  -59. ,    1.3],       [  38. ,  -58. ,    1.3],       [  78. ,   -3. ,    0.8],       [  38. ,   63. ,    1.3],       [ -36. ,   68. ,    0.8],       [ -80. ,   -1. ,    1.1],       [ -37. ,  -61. ,    1.4],       [  37. ,  -64. ,    1.3],       [  80. ,    4. ,    1.5],       [  44. ,   76. ,    0.5],       [ -44. ,   73. ,    1.3],       [ -86. ,   -5. ,    1. ],       [ -47. ,  -70. ,    1. ],       [  39. ,  -69. ,    1. ],       [  93. ,    3. ,    1.2],       [  42. ,   77. ,    1.2],       [ -42. ,   84. ,    0.8],       [ -97. ,   -1. ,    0.7],       [ -42. ,  -83. ,    1.4],       [  48. ,  -82. ,    0.9],       [ 103. ,   -3. ,    0.6],       [  47. ,   88. ,    0.7],       [ -49. ,   86. ,    1.3],       [ -97. ,   -1. ,    1.3],       [ -55. ,  -87. ,    1.1],       [  54. ,  -88. ,    0.8]])
        basis0 = BSplineBasis(3, np.array([-1.1,  0. ,  0. ,  0.7,  1.8,  2.7,  3.9,  5. ,  5. ,  5.7]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.8,  1.9,  3.2,  4.4,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([0.830]*1, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 11)
        surf2.insert_knot([3.760]*2, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 13)
        surf2.insert_knot([1.786]*1, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 9)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p4_rational_C2_periodic(self):
        controlpoints = np.array([[  99. ,    4. ,    1.1],
       [  86. ,   49. ,    1.2],
       [  54. ,   87. ,    1.1],
       [  -2. ,   99. ,    1.1],
       [ -52. ,   83. ,    0.6],
       [ -84. ,   46. ,    1.2],
       [ -98. ,    2. ,    1.2],
       [ -92. ,  -50. ,    1.3],
       [ -49. ,  -87. ,    0.7],
       [  -5. , -102. ,    1.3],
       [  53. ,  -84. ,    0.7],
       [  85. ,  -52. ,    0.6]])
        basis0 = BSplineBasis(4, np.array([ -3.2,  -2.1,  -1. ,   0. ,   1.3,   2.3,   3.2,   3.9,   4.7,   5.7,   7.2,   8.2,   8.8,
         9.9,  11. ,  12. ,  13.3,  14.3,  15.2]),2)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([2.654]*1) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 20)
        crv2.insert_knot([10.454]*2) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 22)
        crv2.insert_knot([8.312]*3) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p4(self):
        controlpoints = np.array([[   2.,   -5.],
       [  10.,    4.],
       [  26.,    3.],
       [  41.,    4.],
       [  56.,    1.],
       [  74.,   -2.],
       [  87.,    0.],
       [ 103.,   -5.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.8,  2.1,  2.6,  3.6,  5. ,  5. ,  5. ,  5. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([1.274]*1) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 13)
        crv2.insert_knot([2.265]*2) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 15)
        crv2.insert_knot([2.638]*3) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 18)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p22(self):
        controlpoints = np.array([[  -5.,   -1.],
       [  29.,   -5.],
       [  65.,   -1.],
       [ 104.,   -3.],
       [  -4.,   22.],
       [  31.,   18.],
       [  68.,   15.],
       [  97.,   24.],
       [   4.,   37.],
       [  29.,   35.],
       [  65.,   40.],
       [ 103.,   42.],
       [   2.,   63.],
       [  37.,   64.],
       [  64.,   62.],
       [ 104.,   61.],
       [   3.,   78.],
       [  35.,   75.],
       [  68.,   77.],
       [ 101.,   82.],
       [   0.,  100.],
       [  30.,   99.],
       [  64.,  104.],
       [  96.,   99.]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  2.3,  3. ,  3. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.3,  1.8,  3.3,  3.9,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([1.940]*1, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 7)
        surf2.insert_knot([1.329]*1, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 9)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p3_C0_periodic(self):
        controlpoints = np.array([[ 104.,   -4.],
       [  50.,   90.],
       [ -54.,   90.],
       [ -97.,    0.],
       [ -52.,  -85.],
       [  54.,  -90.]])
        basis0 = BSplineBasis(3, np.array([-0.9,  0. ,  0. ,  0.9,  2.2,  2.7,  4.1,  5. ,  5. ,  5.9]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([1.961]*1) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 11)
        crv2.insert_knot([1.699]*2) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 13)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p32_C0_periodic(self):
        controlpoints = np.array([[  61.,    0.],
       [  38.,   40.],
       [   0.,   58.],
       [ -41.,   43.],
       [ -64.,   -4.],
       [ -47.,  -47.],
       [   1.,  -58.],
       [  41.,  -44.],
       [  78.,   -5.],
       [  58.,   51.],
       [   3.,   77.],
       [ -61.,   59.],
       [ -82.,    1.],
       [ -62.,  -55.],
       [   3.,  -85.],
       [  57.,  -55.],
       [  97.,   -4.],
       [  70.,   75.],
       [  -3.,  104.],
       [ -76.,   74.],
       [-105.,    1.],
       [ -75.,  -71.],
       [   1.,  -98.],
       [  66.,  -68.]])
        basis0 = BSplineBasis(3, np.array([-1.3,  0. ,  0. ,  1. ,  1.6,  3.2,  4.1,  4.7,  5.7,  7. ,  7. ,  8. ]),0)
        basis1 = BSplineBasis(2, np.array([ 0.,  0.,  1.,  2.,  2.]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([3.083]*1, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 13)
        surf2.insert_knot([3.209]*2, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 15)
        surf2.insert_knot([1.000]*1, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 6)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p3_C1_periodic(self):
        controlpoints = np.array([[ 104.,    3.],
       [  74.,   70.],
       [   1.,   98.],
       [ -76.,   70.],
       [ -99.,   -3.],
       [ -73.,  -73.],
       [   4., -102.],
       [  68.,  -67.]])
        basis0 = BSplineBasis(3, np.array([ -1.9,  -0.9,   0. ,   1.2,   2.1,   2.8,   4.2,   4.9,   6.1,   7.1,   8. ,   9.2,  10.1]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([2.693]*1) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 14)
        crv2.insert_knot([1.271]*2) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 16)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p32_C1_periodic(self):
        controlpoints = np.array([[  62.,   -5.],
       [  44.,   41.],
       [   4.,   58.],
       [ -46.,   41.],
       [ -57.,   -5.],
       [ -44.,  -46.],
       [  -4.,  -56.],
       [  47.,  -44.],
       [  77.,    2.],
       [  54.,   58.],
       [   1.,   84.],
       [ -55.,   54.],
       [ -82.,   -5.],
       [ -54.,  -55.],
       [  -5.,  -80.],
       [  57.,  -53.],
       [ 104.,    1.],
       [  70.,   74.],
       [  -2.,  103.],
       [ -74.,   66.],
       [ -98.,    0.],
       [ -68.,  -71.],
       [   4., -103.],
       [  74.,  -75.]])
        basis0 = BSplineBasis(3, np.array([-2. , -1.1,  0. ,  0.6,  1.7,  2.7,  3.6,  5.1,  6. ,  6.9,  8. ,  8.6,  9.7]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.7,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([6.895]*1, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 14)
        surf2.insert_knot([6.493]*2, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 16)
        surf2.insert_knot([0.700]*1, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 6)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p42_C2_periodic(self):
        controlpoints = np.array([[  58.,    1.],       [  56.,   27.],       [  30.,   52.],       [  -5.,   58.],       [ -27.,   54.],       [ -48.,   33.],       [ -61.,    4.],       [ -49.,  -31.],       [ -27.,  -53.],       [   1.,  -60.],       [  26.,  -57.],       [  53.,  -27.],       [  69.,   -2.],       [  63.,   32.],       [  32.,   59.],       [   0.,   68.],       [ -36.,   57.],       [ -61.,   35.],       [ -71.,   -3.],       [ -58.,  -36.],       [ -38.,  -59.],       [  -4.,  -69.],       [  38.,  -58.],       [  60.,  -30.],       [  71.,    0.],       [  62.,   40.],       [  33.,   61.],       [  -2.,   76.],       [ -38.,   65.],       [ -66.,   38.],       [ -73.,    2.],       [ -66.,  -38.],       [ -41.,  -63.],       [   1.,  -74.],       [  33.,  -69.],       [  66.,  -38.],       [  84.,   -2.],       [  69.,   39.],       [  46.,   71.],       [  -2.,   79.],       [ -39.,   68.],       [ -69.,   45.],       [ -83.,    1.],       [ -76.,  -44.],       [ -44.,  -78.],       [   2.,  -88.],       [  46.,  -69.],       [  76.,  -47.],       [  96.,    1.],       [  77.,   41.],       [  50.,   77.],       [  -5.,   90.],       [ -46.,   78.],       [ -78.,   43.],       [ -95.,   -1.],       [ -77.,  -50.],       [ -45.,  -76.],       [  -4.,  -89.],       [  45.,  -85.],       [  77.,  -49.],       [ 101.,   -1.],       [  84.,   47.],       [  45.,   87.],       [   1.,  100.],       [ -50.,   83.],       [ -85.,   50.],       [ -98.,    2.],       [ -90.,  -48.],       [ -47.,  -91.],       [  -4.,  -99.],       [  52.,  -90.],       [  91.,  -50.]])
        basis0 = BSplineBasis(4, np.array([ -3. ,  -2.4,  -1.1,   0. ,   0.9,   2.1,   3.1,   3.8,   5.4,   6.3,   7.3,   8. ,   9. ,
         9.6,  10.9,  12. ,  12.9,  14.1,  15.1]),2)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.8,  2. ,  3.1,  3.9,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([8.885]*1, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([2.919]*2, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([9.268]*3, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([3.117]*1, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 9)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p3_rational(self):
        controlpoints = np.array([[   0. ,    3. ,    2. ,    1.1],
       [  17. ,   -4. ,   -1. ,    0.6],
       [  31. ,   -3. ,   -3. ,    1. ],
       [  41. ,    0. ,    2. ,    0.5],
       [  61. ,   -1. ,    2. ,    0.7],
       [  67. ,    1. ,   -3. ,    0.6],
       [  90. ,    1. ,   -4. ,    1.5],
       [ 102. ,    2. ,   -3. ,    1.3]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  1.8,  2.7,  3.9,  4.9,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([3.461]*1) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 12)
        crv2.insert_knot([3.248]*2) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 14)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p23_rational(self):
        controlpoints = np.array([[   2. ,    4. ,    4. ,    0.8],
       [  51. ,   -4. ,   -2. ,    1.2],
       [  96. ,    3. ,    3. ,    0.5],
       [  -3. ,   29. ,    4. ,    1.4],
       [  51. ,   32. ,   -3. ,    0.7],
       [  97. ,   29. ,    4. ,    1.4],
       [  -3. ,   67. ,   -3. ,    1. ],
       [  47. ,   62. ,    4. ,    0.7],
       [  98. ,   71. ,   -1. ,    0.8],
       [   0. ,  102. ,    3. ,    1.3],
       [  45. ,  100. ,    3. ,    1.4],
       [ 102. ,  101. ,    3. ,    1. ]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  2. ,  2. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([0.900]*1, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 6)
        surf2.insert_knot([1.200]*1, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 8)
        surf2.insert_knot([1.200]*2, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 10)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p324_rational(self):
        controlpoints = np.array([[  -5. ,    0. ,    0. ,    0.6],       [  21. ,   -5. ,   -1. ,    0.6],       [  41. ,    3. ,   -5. ,    1.4],       [  56. ,    2. ,   -3. ,    0.6],       [  81. ,   -5. ,    3. ,    1.3],       [ 102. ,    2. ,   -5. ,    0.9],       [  -2. ,   20. ,   -1. ,    1.1],       [  24. ,   17. ,   -1. ,    1.1],       [  40. ,   16. ,    4. ,    1.2],       [  60. ,   24. ,   -4. ,    0.9],       [  81. ,   24. ,   -2. ,    0.9],       [ 103. ,   21. ,    0. ,    1.4],       [  -1. ,   42. ,   -4. ,    1.3],       [  17. ,   43. ,   -4. ,    1.5],       [  39. ,   41. ,    0. ,    1.1],       [  57. ,   38. ,    0. ,    1.2],       [  81. ,   43. ,   -5. ,    0.5],       [ 104. ,   42. ,   -5. ,    0.9],       [   2. ,   56. ,    0. ,    1.3],       [  18. ,   55. ,   -5. ,    1.5],       [  38. ,   61. ,   -3. ,    0.8],       [  63. ,   62. ,    0. ,    1.4],       [  77. ,   60. ,    3. ,    0.7],       [ 101. ,   57. ,    0. ,    1.4],       [  -4. ,   78. ,    4. ,    1.5],       [  22. ,   76. ,   -3. ,    1.5],       [  42. ,   84. ,    0. ,    1.4],       [  55. ,   76. ,    3. ,    1.2],       [  77. ,   78. ,   -2. ,    1.4],       [ 103. ,   76. ,    0. ,    0.9],       [  -3. ,   95. ,    0. ,    0.6],       [  19. ,  101. ,    2. ,    1.3],       [  37. ,  100. ,   -5. ,    1. ],       [  62. ,  102. ,   -5. ,    1.4],       [  84. ,  104. ,   -5. ,    0.9],       [  97. ,  102. ,    3. ,    1.3],       [   4. ,    4. ,   20. ,    0.9],       [  21. ,   -5. ,   18. ,    0.6],       [  36. ,   -4. ,   15. ,    0.7],       [  63. ,    2. ,   17. ,    0.9],       [  83. ,    3. ,   21. ,    1.1],       [  97. ,    0. ,   17. ,    1.4],       [  -2. ,   16. ,   19. ,    1. ],       [  15. ,   16. ,   21. ,    0.6],       [  35. ,   18. ,   22. ,    0.5],       [  64. ,   19. ,   18. ,    0.9],       [  77. ,   23. ,   16. ,    0.9],       [  99. ,   20. ,   20. ,    1.2],       [   3. ,   38. ,   22. ,    0.7],       [  20. ,   39. ,   20. ,    1.4],       [  39. ,   38. ,   17. ,    0.9],       [  61. ,   37. ,   16. ,    1. ],       [  78. ,   42. ,   21. ,    0.8],       [  98. ,   37. ,   16. ,    1.2],       [   2. ,   60. ,   24. ,    1.1],       [  20. ,   59. ,   24. ,    1. ],       [  36. ,   63. ,   20. ,    1. ],       [  64. ,   55. ,   21. ,    1. ],       [  78. ,   57. ,   17. ,    0.7],       [ 104. ,   58. ,   23. ,    1. ],       [  -2. ,   78. ,   24. ,    0.6],       [  21. ,   76. ,   18. ,    0.6],       [  39. ,   75. ,   16. ,    0.7],       [  64. ,   83. ,   23. ,    1.3],       [  83. ,   75. ,   20. ,    0.7],       [ 101. ,   76. ,   24. ,    0.8],       [   3. ,   96. ,   20. ,    1.4],       [  17. ,   97. ,   23. ,    1.3],       [  35. ,  104. ,   20. ,    0.9],       [  56. ,   96. ,   19. ,    1. ],       [  80. ,   96. ,   23. ,    1.1],       [  96. ,  100. ,   24. ,    1.4],       [  -2. ,    0. ,   41. ,    1.5],       [  17. ,   -5. ,   38. ,    1.5],       [  37. ,   -3. ,   36. ,    0.7],       [  64. ,    1. ,   43. ,    1. ],       [  78. ,   -3. ,   35. ,    1.4],       [ 102. ,    4. ,   35. ,    1.4],       [   2. ,   16. ,   44. ,    0.8],       [  17. ,   18. ,   36. ,    1.2],       [  38. ,   19. ,   40. ,    0.5],       [  62. ,   15. ,   43. ,    1.2],       [  75. ,   16. ,   41. ,    0.8],       [  99. ,   21. ,   40. ,    0.6],       [   1. ,   42. ,   39. ,    1.5],       [  22. ,   36. ,   43. ,    0.9],       [  42. ,   44. ,   41. ,    1.2],       [  61. ,   38. ,   41. ,    1.1],       [  82. ,   39. ,   35. ,    0.8],       [  96. ,   42. ,   40. ,    0.9],       [  -5. ,   55. ,   44. ,    0.8],       [  21. ,   60. ,   35. ,    1.5],       [  35. ,   64. ,   44. ,    0.8],       [  56. ,   59. ,   40. ,    0.7],       [  81. ,   64. ,   40. ,    1.3],       [ 103. ,   58. ,   36. ,    1.3],       [   2. ,   83. ,   41. ,    1.2],       [  19. ,   84. ,   38. ,    1. ],       [  41. ,   76. ,   43. ,    0.8],       [  59. ,   77. ,   43. ,    1.3],       [  80. ,   83. ,   35. ,    1.2],       [ 100. ,   78. ,   37. ,    0.9],       [   3. ,   99. ,   44. ,    0.6],       [  16. ,   95. ,   38. ,    0.7],       [  42. ,  101. ,   41. ,    1.5],       [  60. ,  101. ,   42. ,    1.5],       [  84. ,   96. ,   37. ,    0.6],       [ 102. ,  102. ,   40. ,    1. ],       [  -4. ,   -5. ,   58. ,    0.7],       [  18. ,    0. ,   57. ,    0.5],       [  43. ,    2. ,   63. ,    0.9],       [  57. ,    1. ,   59. ,    0.6],       [  76. ,   -1. ,   58. ,    1. ],       [ 102. ,   -3. ,   64. ,    1.2],       [  -1. ,   16. ,   56. ,    0.7],       [  17. ,   17. ,   59. ,    1.3],       [  36. ,   16. ,   57. ,    1.4],       [  55. ,   24. ,   59. ,    0.7],       [  75. ,   18. ,   59. ,    1.2],       [ 104. ,   24. ,   58. ,    1.2],       [   0. ,   41. ,   57. ,    1.1],       [  16. ,   38. ,   56. ,    0.9],       [  42. ,   35. ,   64. ,    0.8],       [  58. ,   35. ,   58. ,    0.8],       [  81. ,   40. ,   62. ,    1.3],       [  98. ,   35. ,   56. ,    0.6],       [  -2. ,   58. ,   58. ,    1.3],       [  19. ,   57. ,   58. ,    1.1],       [  41. ,   57. ,   61. ,    1.2],       [  58. ,   59. ,   57. ,    0.7],       [  84. ,   63. ,   62. ,    0.7],       [  96. ,   63. ,   63. ,    0.7],       [  -4. ,   80. ,   64. ,    0.7],       [  19. ,   84. ,   57. ,    1.4],       [  40. ,   81. ,   58. ,    1.2],       [  57. ,   76. ,   56. ,    1. ],       [  75. ,   84. ,   58. ,    0.6],       [ 101. ,   81. ,   55. ,    1.1],       [   1. ,   95. ,   61. ,    1.3],       [  20. ,  104. ,   64. ,    0.7],       [  42. ,   99. ,   56. ,    1.3],       [  64. ,  103. ,   55. ,    1. ],       [  75. ,   95. ,   63. ,    0.5],       [ 100. ,   98. ,   62. ,    1.1],       [   4. ,   -2. ,   77. ,    0.9],       [  18. ,   -4. ,   81. ,    1. ],       [  36. ,   -2. ,   77. ,    1. ],       [  63. ,    3. ,   82. ,    1.2],       [  80. ,   -3. ,   83. ,    1. ],       [ 101. ,    0. ,   78. ,    1.3],       [   3. ,   24. ,   84. ,    1.1],       [  18. ,   18. ,   83. ,    1.2],       [  41. ,   19. ,   78. ,    0.9],       [  58. ,   16. ,   76. ,    0.5],       [  77. ,   18. ,   84. ,    1.3],       [ 102. ,   15. ,   78. ,    0.9],       [   4. ,   42. ,   81. ,    1.1],       [  24. ,   40. ,   76. ,    1. ],       [  39. ,   36. ,   84. ,    1.3],       [  63. ,   39. ,   77. ,    1.4],       [  81. ,   40. ,   80. ,    1.2],       [  97. ,   40. ,   78. ,    0.8],       [  -4. ,   58. ,   83. ,    1.4],       [  15. ,   61. ,   82. ,    1.2],       [  36. ,   61. ,   84. ,    1.5],       [  64. ,   58. ,   75. ,    0.7],       [  79. ,   57. ,   83. ,    1.3],       [  99. ,   59. ,   82. ,    1. ],       [   0. ,   76. ,   75. ,    1. ],       [  23. ,   79. ,   75. ,    0.5],       [  39. ,   77. ,   78. ,    1. ],       [  61. ,   76. ,   77. ,    1. ],       [  75. ,   84. ,   77. ,    1.5],       [  99. ,   81. ,   80. ,    0.8],       [  -3. ,   95. ,   83. ,    1.2],       [  24. ,  104. ,   82. ,    1.3],       [  44. ,  104. ,   82. ,    0.5],       [  62. ,  104. ,   76. ,    1.2],       [  81. ,  102. ,   75. ,    0.6],       [  97. ,  104. ,   80. ,    1. ],       [  -2. ,    4. ,  102. ,    1.1],       [  17. ,   -4. ,   96. ,    1. ],       [  37. ,    2. ,  103. ,    1. ],       [  59. ,    4. ,  103. ,    1. ],       [  75. ,   -2. ,   97. ,    1. ],       [ 103. ,   -4. ,  100. ,    0.7],       [  -2. ,   20. ,  102. ,    1.3],       [  23. ,   15. ,  103. ,    0.9],       [  39. ,   24. ,  103. ,    0.8],       [  58. ,   24. ,  102. ,    1.2],       [  83. ,   16. ,  102. ,    1. ],       [ 104. ,   21. ,   96. ,    1.4],       [   2. ,   44. ,   97. ,    0.7],       [  22. ,   41. ,   99. ,    1.2],       [  40. ,   44. ,  101. ,    1.3],       [  64. ,   40. ,   97. ,    1.3],       [  81. ,   43. ,   96. ,    1.4],       [  98. ,   36. ,  104. ,    1. ],       [   4. ,   60. ,   97. ,    1.3],       [  20. ,   61. ,  100. ,    0.5],       [  37. ,   64. ,  104. ,    0.6],       [  57. ,   56. ,   95. ,    0.6],       [  83. ,   64. ,  101. ,    0.7],       [ 103. ,   56. ,  103. ,    1.4],       [  -4. ,   84. ,  104. ,    1.3],       [  19. ,   82. ,   98. ,    1.1],       [  36. ,   76. ,  104. ,    1. ],       [  62. ,   83. ,   96. ,    0.8],       [  83. ,   82. ,   98. ,    1.4],       [  96. ,   82. ,   96. ,    0.8],       [   2. ,  103. ,   96. ,    1.1],       [  24. ,  104. ,  101. ,    1.1],       [  35. ,  102. ,  103. ,    0.5],       [  60. ,  100. ,   99. ,    1.1],       [  82. ,   97. ,  101. ,    0.9],       [ 100. ,   99. ,  102. ,    0.8]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1. ,  1.7,  3.1,  4. ,  4. ,  4. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.6,  2.2,  3.4,  3.7,  5. ,  5. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.insert_knot([1.574]*1, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 10)
        vol2.insert_knot([2.927]*2, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 12)
        vol2.insert_knot([3.078]*1, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 9)
        vol2.insert_knot([1.647]*1, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 11)
        vol2.insert_knot([1.446]*2, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 13)
        vol2.insert_knot([1.996]*3, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 16)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p3_rational_C0_periodic(self):
        controlpoints = np.array([[ 103. ,    3. ,    0. ,    1.1],
       [  45. ,   86. ,    3. ,    0.9],
       [ -54. ,   81. ,    1. ,    1. ],
       [-101. ,   -1. ,   -4. ,    0.5],
       [ -53. ,  -88. ,    1. ,    0.8],
       [  52. ,  -85. ,   -1. ,    1. ]])
        basis0 = BSplineBasis(3, np.array([-0.7,  0. ,  0. ,  1. ,  2.3,  3.2,  4.3,  5. ,  5. ,  6. ]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([1.881]*1) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 11)
        crv2.insert_knot([2.768]*2) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 13)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p22_rational_C0_periodic(self):
        controlpoints = np.array([[  60. ,   -1. ,    0. ,    1. ],
       [  -3. ,   58. ,   -4. ,    1.4],
       [ -58. ,   -4. ,   -2. ,    1.5],
       [  -3. ,  -59. ,    3. ,    0.5],
       [  74. ,    2. ,    3. ,    1. ],
       [   3. ,   78. ,   -3. ,    1.3],
       [ -76. ,    4. ,    4. ,    0.8],
       [   4. ,  -71. ,    0. ,    1.4],
       [  83. ,   -5. ,   -4. ,    0.9],
       [  -2. ,   91. ,   -4. ,    0.6],
       [ -83. ,    2. ,   -4. ,    1.3],
       [   2. ,  -87. ,   -4. ,    1.2],
       [ 102. ,    4. ,    3. ,    0.8],
       [   1. ,  103. ,   -5. ,    1.4],
       [-105. ,   -4. ,   -5. ,    1.4],
       [  -3. ,  -97. ,    3. ,    1.2]])
        basis0 = BSplineBasis(2, np.array([-1. ,  0. ,  0.9,  2.3,  3. ,  4. ,  4.9]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  1.8,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([1.974]*1, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 8)
        surf2.insert_knot([1.367]*1, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 7)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p323_rational_C0_periodic(self):
        controlpoints = np.array([[  48. ,    2. ,    2. ,    1.2],       [  35. ,   42. ,   -1. ,    1.4],       [ -15. ,   44. ,    1. ,    1. ],       [ -44. ,   23. ,   -5. ,    1. ],       [ -43. ,  -23. ,    2. ,    1.1],       [ -13. ,  -52. ,    0. ,    0.9],       [  36. ,  -37. ,   -3. ,    0.7],       [  66. ,   -1. ,   -3. ,    0.8],       [  38. ,   47. ,   -3. ,    1.3],       [ -18. ,   67. ,   -3. ,    1.1],       [ -61. ,   32. ,   -1. ,    1.4],       [ -57. ,  -28. ,    4. ,    1.5],       [ -13. ,  -63. ,   -4. ,    0.9],       [  43. ,  -53. ,   -5. ,    0.8],       [  82. ,   -1. ,    3. ,    1.2],       [  47. ,   68. ,   -4. ,    1.1],       [ -18. ,   77. ,   -5. ,    1.1],       [ -75. ,   35. ,    2. ,    1.3],       [ -79. ,  -39. ,    2. ,    1.3],       [ -15. ,  -86. ,    0. ,    1.5],       [  49. ,  -66. ,    0. ,    1.2],       [  99. ,    0. ,   -3. ,    1.1],       [  67. ,   75. ,    3. ,    0.9],       [ -19. ,   94. ,   -4. ,    0.6],       [ -86. ,   40. ,    1. ,    0.5],       [ -90. ,  -45. ,   -2. ,    1. ],       [ -24. ,  -94. ,    2. ,    0.9],       [  65. ,  -79. ,    3. ,    1.2],       [  49. ,    2. ,    4. ,    1.3],       [  35. ,   41. ,    7. ,    0.6],       [ -11. ,   46. ,    6. ,    0.6],       [ -46. ,   20. ,    1. ,    1.3],       [ -50. ,  -19. ,    5. ,    0.8],       [ -16. ,  -46. ,    9. ,    0.6],       [  27. ,  -43. ,    1. ,    1.2],       [  69. ,   -5. ,    9. ,    1.4],       [  37. ,   47. ,    7. ,    0.9],       [ -12. ,   68. ,    3. ,    0.6],       [ -61. ,   25. ,   11. ,    1.4],       [ -65. ,  -34. ,    2. ,    1.3],       [ -16. ,  -69. ,    7. ,    0.7],       [  43. ,  -53. ,    2. ,    1.4],       [  78. ,    3. ,    5. ,    0.8],       [  52. ,   65. ,   10. ,    1.2],       [ -21. ,   78. ,    5. ,    1.4],       [ -73. ,   36. ,    6. ,    0.8],       [ -77. ,  -41. ,   10. ,    1. ],       [ -17. ,  -86. ,    3. ,    1. ],       [  47. ,  -68. ,    3. ,    1.3],       [ 100. ,    0. ,    4. ,    1.3],       [  58. ,   78. ,    7. ,    0.5],       [ -25. ,   99. ,    9. ,    1.1],       [ -95. ,   45. ,    6. ,    1.5],       [ -93. ,  -40. ,    5. ,    0.8],       [ -21. , -103. ,   11. ,    1.2],       [  65. ,  -75. ,    6. ,    1.1],       [  46. ,    2. ,   12. ,    1.1],       [  33. ,   40. ,   14. ,    1.3],       [ -16. ,   47. ,   16. ,    0.6],       [ -44. ,   25. ,   12. ,    0.6],       [ -44. ,  -27. ,   18. ,    0.6],       [ -14. ,  -51. ,   11. ,    1.1],       [  34. ,  -42. ,   17. ,    1.1],       [  68. ,   -1. ,   14. ,    1. ],       [  43. ,   56. ,   12. ,    1. ],       [ -19. ,   62. ,   14. ,    0.6],       [ -58. ,   25. ,   17. ,    0.5],       [ -65. ,  -30. ,   16. ,    0.8],       [ -11. ,  -70. ,   11. ,    0.6],       [  44. ,  -51. ,   15. ,    1. ],       [  86. ,    2. ,   16. ,    0.9],       [  49. ,   62. ,   13. ,    1.4],       [ -14. ,   78. ,   12. ,    0.9],       [ -73. ,   33. ,    9. ,    1.4],       [ -78. ,  -38. ,   15. ,    0.7],       [ -18. ,  -80. ,   10. ,    0.9],       [  54. ,  -70. ,    9. ,    0.7],       [  99. ,    2. ,   13. ,    1.2],       [  64. ,   74. ,   14. ,    0.6],       [ -25. ,  102. ,   14. ,    1.4],       [ -86. ,   39. ,    8. ,    1. ],       [ -92. ,  -42. ,   13. ,    0.9],       [ -20. , -101. ,   14. ,    1.2],       [  58. ,  -80. ,    8. ,    0.6],       [  47. ,   -3. ,   18. ,    0.7],       [  26. ,   36. ,   16. ,    1.4],       [  -7. ,   44. ,   20. ,    1.1],       [ -48. ,   17. ,   19. ,    1.4],       [ -48. ,  -21. ,   15. ,    1.1],       [  -9. ,  -50. ,   23. ,    0.6],       [  30. ,  -38. ,   24. ,    1.3],       [  70. ,    2. ,   16. ,    0.7],       [  39. ,   50. ,   21. ,    0.9],       [ -12. ,   62. ,   15. ,    0.9],       [ -63. ,   33. ,   22. ,    1.5],       [ -58. ,  -28. ,   18. ,    1.3],       [ -20. ,  -67. ,   16. ,    0.7],       [  43. ,  -56. ,   17. ,    1. ],       [  84. ,   -3. ,   23. ,    0.9],       [  48. ,   65. ,   16. ,    0.7],       [ -16. ,   85. ,   16. ,    1. ],       [ -72. ,   38. ,   19. ,    1.2],       [ -71. ,  -41. ,   20. ,    1.3],       [ -18. ,  -82. ,   24. ,    0.8],       [  54. ,  -67. ,   24. ,    0.9],       [ 100. ,   -4. ,   24. ,    0.5],       [  58. ,   80. ,   18. ,    0.8],       [ -27. ,   99. ,   15. ,    1. ],       [ -89. ,   46. ,   24. ,    1.2],       [ -90. ,  -43. ,   24. ,    1.1],       [ -21. ,  -98. ,   18. ,    1. ],       [  66. ,  -78. ,   17. ,    0.9],       [  45. ,    4. ,   27. ,    1.4],       [  29. ,   38. ,   25. ,    1. ],       [  -9. ,   44. ,   28. ,    1.4],       [ -42. ,   22. ,   25. ,    1.3],       [ -49. ,  -21. ,   29. ,    0.8],       [ -11. ,  -46. ,   28. ,    0.9],       [  28. ,  -39. ,   22. ,    0.7],       [  70. ,    1. ,   30. ,    1.2],       [  40. ,   54. ,   29. ,    1.3],       [ -19. ,   60. ,   28. ,    0.9],       [ -58. ,   27. ,   31. ,    0.8],       [ -65. ,  -27. ,   26. ,    0.8],       [ -20. ,  -68. ,   30. ,    1.4],       [  46. ,  -55. ,   25. ,    1.3],       [  82. ,   -1. ,   23. ,    0.9],       [  49. ,   60. ,   30. ,    0.5],       [ -15. ,   84. ,   30. ,    1. ],       [ -78. ,   39. ,   28. ,    0.7],       [ -77. ,  -39. ,   21. ,    0.7],       [ -24. ,  -83. ,   23. ,    1. ],       [  53. ,  -62. ,   27. ,    0.6],       [  97. ,   -3. ,   24. ,    1. ],       [  60. ,   80. ,   29. ,    0.8],       [ -28. ,  100. ,   24. ,    1. ],       [ -90. ,   41. ,   30. ,    1.4],       [ -90. ,  -43. ,   28. ,    1.5],       [ -26. , -100. ,   25. ,    1.3],       [  60. ,  -74. ,   21. ,    0.9],       [  52. ,    3. ,   32. ,    1.2],       [  34. ,   41. ,   31. ,    1.1],       [ -15. ,   48. ,   35. ,    1.1],       [ -44. ,   23. ,   29. ,    1.2],       [ -48. ,  -24. ,   35. ,    0.5],       [  -7. ,  -49. ,   28. ,    0.9],       [  34. ,  -39. ,   30. ,    0.6],       [  61. ,   -3. ,   31. ,    1.1],       [  38. ,   48. ,   35. ,    0.7],       [ -13. ,   66. ,   32. ,    0.7],       [ -60. ,   26. ,   28. ,    1.2],       [ -60. ,  -27. ,   29. ,    0.5],       [ -12. ,  -70. ,   28. ,    1.3],       [  41. ,  -53. ,   30. ,    1.2],       [  81. ,   -3. ,   30. ,    1. ],       [  49. ,   63. ,   31. ,    1.1],       [ -14. ,   85. ,   32. ,    1.1],       [ -74. ,   35. ,   36. ,    1.2],       [ -79. ,  -36. ,   28. ,    1.2],       [ -17. ,  -85. ,   36. ,    1.5],       [  48. ,  -65. ,   29. ,    1.1],       [ 103. ,   -2. ,   34. ,    0.9],       [  57. ,   79. ,   36. ,    0.9],       [ -24. ,   95. ,   37. ,    1.1],       [ -95. ,   43. ,   34. ,    0.9],       [ -87. ,  -40. ,   31. ,    0.9],       [ -24. , -102. ,   31. ,    0.8],       [  61. ,  -74. ,   30. ,    0.5],       [  49. ,    0. ,   40. ,    1.3],       [  28. ,   41. ,   44. ,    1.4],       [  -8. ,   50. ,   41. ,    0.6],       [ -50. ,   22. ,   35. ,    0.6],       [ -45. ,  -19. ,   35. ,    1.2],       [  -9. ,  -46. ,   44. ,    1. ],       [  28. ,  -40. ,   43. ,    0.7],       [  71. ,   -5. ,   42. ,    0.8],       [  45. ,   50. ,   36. ,    0.5],       [ -19. ,   67. ,   41. ,    0.6],       [ -61. ,   29. ,   37. ,    0.7],       [ -63. ,  -32. ,   41. ,    0.7],       [ -20. ,  -65. ,   40. ,    0.7],       [  39. ,  -56. ,   42. ,    0.5],       [  80. ,    2. ,   41. ,    0.7],       [  51. ,   69. ,   35. ,    1. ],       [ -19. ,   83. ,   35. ,    1.1],       [ -76. ,   33. ,   35. ,    0.7],       [ -75. ,  -41. ,   44. ,    0.7],       [ -21. ,  -80. ,   44. ,    0.6],       [  54. ,  -66. ,   39. ,    1.3],       [ 100. ,   -4. ,   40. ,    0.9],       [  57. ,   77. ,   35. ,    1.1],       [ -27. ,   95. ,   40. ,    0.5],       [ -88. ,   45. ,   41. ,    0.5],       [ -88. ,  -48. ,   37. ,    0.7],       [ -22. ,  -96. ,   37. ,    1. ],       [  64. ,  -78. ,   40. ,    0.5]])
        basis0 = BSplineBasis(3, np.array([-1.2,  0. ,  0. ,  1. ,  2.1,  3.3,  4.2,  4.8,  6. ,  6. ,  7. ]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  2. ,  3. ,  3. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  1.9,  3.1,  3.7,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.insert_knot([2.544]*1, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 12)
        vol2.insert_knot([2.960]*2, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 14)
        vol2.insert_knot([1.259]*1, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 7)
        vol2.insert_knot([2.111]*1, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 11)
        vol2.insert_knot([1.190]*2, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 13)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p43_rational_C1_periodic(self):
        controlpoints = np.array([[  63. ,   -1. ,    4. ,    1.3],       [  46. ,   36. ,   -5. ,    0.6],       [  21. ,   61. ,   -3. ,    0.7],       [ -16. ,   61. ,   -3. ,    1.1],       [ -47. ,   34. ,    3. ,    1. ],       [ -57. ,    0. ,   -4. ,    0.6],       [ -52. ,  -34. ,    1. ,    1.4],       [ -19. ,  -59. ,    4. ,    1.2],       [  20. ,  -61. ,   -3. ,    0.7],       [  48. ,  -35. ,   -2. ,    0.6],       [  69. ,    0. ,   -4. ,    1.1],       [  55. ,   43. ,    3. ,    1.1],       [  23. ,   61. ,   -4. ,    0.6],       [ -23. ,   57. ,   -3. ,    0.9],       [ -54. ,   42. ,   -3. ,    1.1],       [ -68. ,   -4. ,   -1. ,    1.3],       [ -55. ,  -43. ,    4. ,    1.1],       [ -18. ,  -66. ,    0. ,    0.8],       [  18. ,  -60. ,    0. ,    0.8],       [  49. ,  -39. ,   -3. ,    1.3],       [  73. ,    1. ,   -5. ,    0.8],       [  60. ,   43. ,    0. ,    1.1],       [  26. ,   69. ,    2. ,    0.9],       [ -23. ,   65. ,    3. ,    1.3],       [ -60. ,   45. ,    0. ,    0.6],       [ -72. ,   -4. ,    2. ,    1.3],       [ -56. ,  -45. ,    2. ,    0.6],       [ -19. ,  -68. ,   -4. ,    0.9],       [  22. ,  -69. ,    1. ,    0.5],       [  59. ,  -42. ,   -3. ,    1.2],       [  77. ,    0. ,   -2. ,    1.5],       [  67. ,   47. ,    3. ,    1.2],       [  21. ,   77. ,   -4. ,    1.3],       [ -28. ,   77. ,   -2. ,    1.2],       [ -66. ,   48. ,   -1. ,    0.7],       [ -78. ,   -4. ,   -3. ,    1.1],       [ -63. ,  -44. ,    3. ,    1.2],       [ -26. ,  -75. ,   -5. ,    1.2],       [  26. ,  -69. ,   -5. ,    0.6],       [  65. ,  -46. ,   -2. ,    1. ],       [  78. ,    2. ,    1. ,    1.3],       [  71. ,   49. ,    0. ,    1.2],       [  24. ,   80. ,    0. ,    1.3],       [ -31. ,   79. ,    3. ,    0.7],       [ -65. ,   48. ,    0. ,    1.3],       [ -83. ,    1. ,   -1. ,    1.5],       [ -68. ,  -52. ,   -1. ,    0.6],       [ -30. ,  -76. ,   -1. ,    1.1],       [  24. ,  -79. ,    2. ,    1.4],       [  63. ,  -53. ,    4. ,    0.8],       [  92. ,    3. ,    4. ,    1.3],       [  69. ,   49. ,   -3. ,    1.3],       [  30. ,   84. ,    2. ,    1.1],       [ -29. ,   85. ,    1. ,    0.9],       [ -70. ,   51. ,    2. ,    1.3],       [ -85. ,    2. ,    0. ,    1.2],       [ -70. ,  -51. ,   -4. ,    1.2],       [ -32. ,  -87. ,    3. ,    1. ],       [  24. ,  -86. ,    1. ,    1.1],       [  76. ,  -56. ,   -1. ,    0.8],       [  98. ,    2. ,   -5. ,    1.5],       [  71. ,   57. ,    0. ,    1. ],       [  27. ,   84. ,   -4. ,    1.3],       [ -26. ,   92. ,   -4. ,    1. ],       [ -72. ,   57. ,    2. ,    1.2],       [ -94. ,    3. ,   -4. ,    0.9],       [ -78. ,  -57. ,   -5. ,    1.1],       [ -29. ,  -91. ,   -5. ,    0.6],       [  27. ,  -85. ,    2. ,    1.3],       [  79. ,  -54. ,   -5. ,    1.2],       [ 103. ,    0. ,   -1. ,    1.3],       [  75. ,   58. ,    0. ,    1.3],       [  29. ,   91. ,   -3. ,    0.7],       [ -27. ,   96. ,   -2. ,    1. ],       [ -77. ,   57. ,    2. ,    0.7],       [ -97. ,   -3. ,   -2. ,    1. ],       [ -84. ,  -58. ,    0. ,    1.1],       [ -28. ,  -97. ,    4. ,    1. ],       [  29. ,  -91. ,    0. ,    0.9],       [  85. ,  -57. ,    4. ,    0.5]])
        basis0 = BSplineBasis(4, np.array([ -2. ,  -1. ,   0. ,   0. ,   0.9,   2. ,   2.9,   4.1,   4.7,   5.9,   7. ,   8. ,   9. ,
         9. ,   9.9,  11. ]),1)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  1.9,  3. ,  4.3,  5. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([6.568]*1, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 17)
        surf2.insert_knot([3.138]*2, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 19)
        surf2.insert_knot([3.163]*3, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([2.573]*1, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 12)
        surf2.insert_knot([3.352]*2, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 14)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p422_rational_C2_periodic(self):
        controlpoints = np.array([[  45. ,    4. ,   -5. ,    0.9],       [  42. ,   28. ,    0. ,    1.5],       [  20. ,   38. ,    0. ,    0.9],       [  -5. ,   49. ,    2. ,    1. ],       [ -28. ,   43. ,    3. ,    1.2],       [ -44. ,   29. ,    3. ,    1.4],       [ -51. ,    1. ,   -4. ,    1.1],       [ -46. ,  -24. ,    3. ,    1. ],       [ -27. ,  -45. ,    3. ,    0.7],       [   1. ,  -54. ,   -4. ,    1.2],       [  26. ,  -42. ,   -2. ,    1. ],       [  39. ,  -21. ,    0. ,    0.6],       [  55. ,    3. ,   -1. ,    0.5],       [  52. ,   29. ,    1. ,    1.1],       [  29. ,   46. ,    1. ,    1.4],       [  -5. ,   55. ,    0. ,    1. ],       [ -26. ,   52. ,   -3. ,    0.6],       [ -50. ,   25. ,   -4. ,    1.3],       [ -63. ,    1. ,   -3. ,    0.7],       [ -49. ,  -31. ,    3. ,    0.6],       [ -26. ,  -52. ,    2. ,    1.5],       [  -2. ,  -55. ,    3. ,    1.3],       [  30. ,  -48. ,    1. ,    0.5],       [  47. ,  -30. ,    4. ,    1.5],       [  62. ,    2. ,   -5. ,    1. ],       [  61. ,   32. ,    1. ,    0.6],       [  32. ,   56. ,   -5. ,    0.7],       [  -4. ,   62. ,   -2. ,    0.7],       [ -31. ,   59. ,   -3. ,    0.8],       [ -54. ,   32. ,   -4. ,    1. ],       [ -71. ,    2. ,    3. ,    0.6],       [ -60. ,  -35. ,    0. ,    1.1],       [ -36. ,  -62. ,    1. ,    0.6],       [   0. ,  -66. ,   -3. ,    0.7],       [  38. ,  -63. ,   -2. ,    0.9],       [  56. ,  -32. ,    2. ,    0.7],       [  70. ,    0. ,    3. ,    1.1],       [  63. ,   40. ,    1. ,    1.3],       [  40. ,   64. ,   -4. ,    1.4],       [  -5. ,   79. ,    4. ,    1.2],       [ -41. ,   66. ,    3. ,    0.7],       [ -66. ,   34. ,    4. ,    0.7],       [ -77. ,   -1. ,    2. ,    0.6],       [ -65. ,  -36. ,    1. ,    0.8],       [ -41. ,  -62. ,    0. ,    1.3],       [   3. ,  -75. ,   -4. ,    0.7],       [  41. ,  -68. ,   -4. ,    0.8],       [  68. ,  -42. ,   -1. ,    0.6],       [  83. ,   -2. ,    0. ,    1. ],       [  72. ,   42. ,    4. ,    0.7],       [  45. ,   72. ,    0. ,    1.4],       [   0. ,   85. ,   -4. ,    1.1],       [ -46. ,   74. ,    1. ,    1.5],       [ -76. ,   41. ,   -4. ,    1.4],       [ -85. ,    4. ,    0. ,    1.3],       [ -72. ,  -39. ,   -1. ,    1.3],       [ -39. ,  -71. ,    3. ,    0.7],       [   4. ,  -83. ,   -5. ,    1.4],       [  41. ,  -77. ,   -3. ,    0.5],       [  71. ,  -45. ,   -1. ,    1.2],       [  95. ,    3. ,   -5. ,    1.1],       [  77. ,   47. ,    4. ,    1.2],       [  43. ,   74. ,    3. ,    1. ],       [   3. ,   93. ,   -3. ,    0.9],       [ -49. ,   79. ,   -1. ,    0.9],       [ -78. ,   50. ,   -4. ,    1.1],       [ -94. ,    3. ,   -1. ,    1.1],       [ -75. ,  -46. ,   -3. ,    0.5],       [ -42. ,  -83. ,    2. ,    1.1],       [   3. ,  -87. ,   -5. ,    0.6],       [  40. ,  -76. ,    0. ,    1.1],       [  80. ,  -46. ,    0. ,    1. ],       [ 102. ,    2. ,   -5. ,    0.6],       [  84. ,   47. ,   -4. ,    1.4],       [  52. ,   86. ,    1. ,    0.9],       [   3. ,  103. ,    1. ,    0.6],       [ -53. ,   88. ,   -5. ,    1.1],       [ -92. ,   54. ,   -5. ,    0.9],       [ -98. ,    2. ,   -3. ,    1.1],       [ -88. ,  -46. ,    0. ,    0.9],       [ -50. ,  -87. ,   -5. ,    1.4],       [  -4. , -100. ,    3. ,    0.7],       [  48. ,  -86. ,   -3. ,    1.2],       [  87. ,  -52. ,    2. ,    1.3],       [  52. ,   -3. ,    4. ,    0.5],       [  44. ,   28. ,    3. ,    0.9],       [  25. ,   46. ,   10. ,    0.6],       [  -5. ,   49. ,   12. ,    1.2],       [ -27. ,   45. ,   12. ,    1. ],       [ -45. ,   27. ,    4. ,    1.3],       [ -53. ,    4. ,    7. ,    1.2],       [ -48. ,  -27. ,   11. ,    1. ],       [ -22. ,  -48. ,    6. ,    0.6],       [   2. ,  -53. ,    6. ,    1.2],       [  20. ,  -41. ,    6. ,    1.4],       [  47. ,  -24. ,   12. ,    1.1],       [  60. ,   -1. ,    9. ,    0.7],       [  53. ,   28. ,    9. ,    1.1],       [  28. ,   45. ,   12. ,    0.8],       [  -3. ,   61. ,    8. ,    1.1],       [ -26. ,   45. ,    8. ,    0.8],       [ -49. ,   25. ,    4. ,    0.7],       [ -61. ,   -1. ,    6. ,    1. ],       [ -51. ,  -31. ,    6. ,    0.9],       [ -28. ,  -56. ,    8. ,    0.8],       [  -3. ,  -58. ,   11. ,    1.1],       [  32. ,  -54. ,    5. ,    0.6],       [  49. ,  -34. ,   11. ,    0.9],       [  62. ,    4. ,    9. ,    0.9],       [  54. ,   30. ,   11. ,    1.3],       [  36. ,   62. ,    3. ,    1.5],       [   3. ,   63. ,   11. ,    1.3],       [ -30. ,   59. ,   11. ,    0.8],       [ -53. ,   32. ,    8. ,    1.4],       [ -71. ,   -3. ,   11. ,    1. ],       [ -63. ,  -30. ,    5. ,    1.4],       [ -38. ,  -54. ,   10. ,    0.6],       [  -4. ,  -70. ,    3. ,    0.7],       [  31. ,  -56. ,    9. ,    1. ],       [  61. ,  -31. ,    8. ,    1.5],       [  77. ,    1. ,   10. ,    1.1],       [  67. ,   33. ,    8. ,    1.1],       [  38. ,   60. ,    5. ,    1.1],       [   3. ,   72. ,   12. ,    1. ],       [ -41. ,   62. ,    9. ,    1.4],       [ -63. ,   32. ,    4. ,    1.4],       [ -71. ,   -2. ,    3. ,    1.3],       [ -61. ,  -40. ,    6. ,    1. ],       [ -35. ,  -67. ,    5. ,    0.8],       [  -1. ,  -73. ,    5. ,    1.3],       [  32. ,  -64. ,    4. ,    0.8],       [  68. ,  -34. ,    4. ,    0.7],       [  84. ,   -3. ,    5. ,    1.1],       [  73. ,   45. ,    6. ,    1.4],       [  39. ,   72. ,   11. ,    0.7],       [  -2. ,   83. ,    7. ,    1.2],       [ -42. ,   70. ,    9. ,    0.8],       [ -68. ,   41. ,    5. ,    0.6],       [ -88. ,   -1. ,    4. ,    1. ],       [ -72. ,  -43. ,    5. ,    0.8],       [ -42. ,  -76. ,   11. ,    1.2],       [   2. ,  -85. ,    3. ,    0.8],       [  38. ,  -75. ,   12. ,    1.4],       [  69. ,  -44. ,    4. ,    1.1],       [  95. ,   -5. ,   10. ,    1.1],       [  76. ,   48. ,    6. ,    1.2],       [  41. ,   77. ,   11. ,    0.6],       [  -1. ,   92. ,   10. ,    1. ],       [ -43. ,   75. ,    9. ,    1. ],       [ -85. ,   50. ,    3. ,    0.9],       [ -97. ,    0. ,    3. ,    0.7],       [ -78. ,  -45. ,    7. ,    0.8],       [ -45. ,  -82. ,    9. ,    1.4],       [  -2. ,  -94. ,    9. ,    0.8],       [  45. ,  -85. ,    4. ,    1.5],       [  80. ,  -51. ,    8. ,    1.2],       [  97. ,   -4. ,    8. ,    0.6],       [  82. ,   53. ,    9. ,    1.2],       [  52. ,   89. ,   12. ,    0.5],       [  -2. ,   95. ,    7. ,    1.3],       [ -47. ,   84. ,    3. ,    0.5],       [ -83. ,   49. ,    5. ,    1.3],       [-103. ,   -1. ,   12. ,    1.4],       [ -85. ,  -52. ,    8. ,    1.1],       [ -54. ,  -82. ,   10. ,    1.3],       [   2. ,  -98. ,    5. ,    1. ],       [  45. ,  -86. ,    6. ,    1.4],       [  89. ,  -51. ,   11. ,    1.2],       [  51. ,   -3. ,   16. ,    1.3],       [  47. ,   28. ,   19. ,    1.3],       [  25. ,   42. ,   18. ,    1.3],       [  -2. ,   51. ,   13. ,    1.5],       [ -29. ,   42. ,   14. ,    1.1],       [ -44. ,   26. ,   13. ,    0.7],       [ -50. ,    2. ,   18. ,    1.1],       [ -46. ,  -22. ,   19. ,    1. ],       [ -27. ,  -45. ,   19. ,    0.7],       [  -4. ,  -47. ,   13. ,    1.4],       [  22. ,  -49. ,   16. ,    0.8],       [  46. ,  -21. ,   19. ,    0.7],       [  56. ,   -1. ,   14. ,    1. ],       [  46. ,   31. ,   15. ,    0.8],       [  28. ,   52. ,   17. ,    1.2],       [   2. ,   60. ,   13. ,    0.9],       [ -28. ,   45. ,   15. ,    1. ],       [ -54. ,   31. ,   12. ,    1.2],       [ -60. ,   -3. ,   18. ,    0.8],       [ -55. ,  -33. ,   16. ,    0.9],       [ -28. ,  -47. ,   16. ,    1.3],       [   0. ,  -62. ,   11. ,    1. ],       [  30. ,  -48. ,   15. ,    1.2],       [  49. ,  -29. ,   11. ,    0.7],       [  62. ,    1. ,   17. ,    1. ],       [  55. ,   36. ,   18. ,    1.4],       [  30. ,   56. ,   17. ,    0.9],       [  -5. ,   61. ,   18. ,    1.1],       [ -30. ,   57. ,   19. ,    1.3],       [ -57. ,   34. ,   15. ,    1.3],       [ -67. ,    0. ,   12. ,    0.7],       [ -55. ,  -33. ,   18. ,    0.8],       [ -36. ,  -58. ,   18. ,    1.1],       [  -2. ,  -62. ,   11. ,    0.9],       [  33. ,  -55. ,   11. ,    1.5],       [  57. ,  -31. ,   16. ,    1.3],       [  72. ,    3. ,   13. ,    0.9],       [  61. ,   36. ,   11. ,    1.1],       [  32. ,   62. ,   15. ,    1.2],       [   2. ,   74. ,   11. ,    1.4],       [ -34. ,   63. ,   11. ,    0.8],       [ -61. ,   42. ,   16. ,    0.8],       [ -77. ,   -3. ,   13. ,    1.1],       [ -70. ,  -42. ,   19. ,    0.7],       [ -37. ,  -64. ,   20. ,    1. ],       [   1. ,  -78. ,   18. ,    1. ],       [  33. ,  -63. ,   11. ,    1.3],       [  68. ,  -36. ,   15. ,    1. ],       [  80. ,    0. ,   18. ,    0.5],       [  69. ,   36. ,   20. ,    1.4],       [  42. ,   70. ,   15. ,    1.4],       [  -3. ,   81. ,   13. ,    1.2],       [ -40. ,   71. ,   14. ,    0.5],       [ -73. ,   36. ,   16. ,    0.8],       [ -84. ,    0. ,   15. ,    1.5],       [ -70. ,  -39. ,   12. ,    1.4],       [ -39. ,  -76. ,   15. ,    0.8],       [   3. ,  -81. ,   15. ,    1. ],       [  42. ,  -73. ,   20. ,    1.1],       [  69. ,  -42. ,   11. ,    1.4],       [  87. ,    0. ,   13. ,    1.1],       [  78. ,   47. ,   12. ,    1.1],       [  43. ,   81. ,   14. ,    1.2],       [   3. ,   95. ,   12. ,    1.2],       [ -51. ,   75. ,   12. ,    1. ],       [ -79. ,   41. ,   15. ,    0.7],       [ -94. ,    0. ,   13. ,    0.9],       [ -76. ,  -51. ,   15. ,    0.6],       [ -43. ,  -78. ,   16. ,    0.6],       [  -4. ,  -90. ,   18. ,    0.5],       [  40. ,  -79. ,   12. ,    1.1],       [  80. ,  -44. ,   16. ,    1.5],       [ 103. ,   -5. ,   20. ,    1. ],       [  87. ,   51. ,   15. ,    0.8],       [  47. ,   82. ,   16. ,    0.5],       [  -1. ,   97. ,   15. ,    1.1],       [ -52. ,   91. ,   16. ,    1. ],       [ -89. ,   50. ,   12. ,    0.7],       [-103. ,    4. ,   19. ,    1. ],       [ -84. ,  -51. ,   16. ,    1.2],       [ -55. ,  -83. ,   20. ,    1.1],       [  -1. ,  -96. ,   17. ,    0.6],       [  46. ,  -84. ,   11. ,    1.3],       [  81. ,  -49. ,   19. ,    1. ],       [  47. ,    4. ,   21. ,    1.3],       [  43. ,   21. ,   24. ,    0.6],       [  25. ,   38. ,   24. ,    0.6],       [  -4. ,   52. ,   27. ,    0.9],       [ -25. ,   43. ,   26. ,    0.7],       [ -47. ,   21. ,   27. ,    0.7],       [ -47. ,   -5. ,   21. ,    1.3],       [ -44. ,  -26. ,   27. ,    0.9],       [ -23. ,  -45. ,   22. ,    1.1],       [  -2. ,  -50. ,   19. ,    1. ],       [  29. ,  -47. ,   26. ,    1.4],       [  46. ,  -24. ,   26. ,    0.9],       [  60. ,   -3. ,   19. ,    0.8],       [  54. ,   30. ,   23. ,    1.1],       [  31. ,   52. ,   23. ,    0.6],       [   4. ,   59. ,   23. ,    1.5],       [ -28. ,   50. ,   20. ,    1.3],       [ -55. ,   31. ,   28. ,    1.3],       [ -63. ,   -1. ,   24. ,    1.4],       [ -55. ,  -33. ,   25. ,    1.2],       [ -31. ,  -55. ,   23. ,    1.4],       [  -4. ,  -58. ,   23. ,    1. ],       [  24. ,  -48. ,   28. ,    0.5],       [  45. ,  -25. ,   25. ,    1.4],       [  65. ,    0. ,   21. ,    1.3],       [  53. ,   35. ,   28. ,    1. ],       [  35. ,   61. ,   20. ,    1.4],       [   1. ,   65. ,   23. ,    0.5],       [ -35. ,   58. ,   28. ,    0.8],       [ -54. ,   34. ,   20. ,    0.5],       [ -66. ,   -2. ,   19. ,    1.2],       [ -58. ,  -37. ,   22. ,    1.2],       [ -30. ,  -62. ,   22. ,    0.8],       [   2. ,  -66. ,   26. ,    1.2],       [  38. ,  -61. ,   28. ,    0.9],       [  61. ,  -36. ,   28. ,    1.1],       [  72. ,   -4. ,   28. ,    0.5],       [  61. ,   34. ,   24. ,    0.8],       [  38. ,   65. ,   24. ,    0.8],       [  -4. ,   71. ,   23. ,    1.1],       [ -34. ,   68. ,   26. ,    1.5],       [ -63. ,   36. ,   26. ,    0.7],       [ -78. ,   -2. ,   20. ,    1.5],       [ -67. ,  -35. ,   19. ,    1. ],       [ -42. ,  -66. ,   23. ,    1.3],       [  -5. ,  -78. ,   22. ,    0.7],       [  33. ,  -62. ,   27. ,    0.8],       [  64. ,  -36. ,   22. ,    1.2],       [  83. ,    1. ,   25. ,    1.2],       [  76. ,   39. ,   28. ,    0.9],       [  39. ,   75. ,   20. ,    0.8],       [  -2. ,   85. ,   22. ,    1. ],       [ -38. ,   68. ,   19. ,    0.7],       [ -75. ,   36. ,   23. ,    0.9],       [ -81. ,    1. ,   19. ,    0.7],       [ -68. ,  -41. ,   25. ,    1.3],       [ -44. ,  -70. ,   19. ,    0.7],       [  -4. ,  -79. ,   26. ,    1.4],       [  42. ,  -78. ,   19. ,    1.4],       [  72. ,  -38. ,   28. ,    1.1],       [  91. ,    3. ,   23. ,    0.5],       [  83. ,   50. ,   25. ,    0.8],       [  43. ,   82. ,   24. ,    1.3],       [   4. ,   92. ,   24. ,    0.5],       [ -48. ,   76. ,   22. ,    0.9],       [ -77. ,   49. ,   21. ,    1.4],       [ -95. ,    4. ,   27. ,    1.3],       [ -78. ,  -46. ,   26. ,    0.7],       [ -43. ,  -76. ,   28. ,    0.6],       [  -2. ,  -88. ,   26. ,    1.4],       [  41. ,  -85. ,   22. ,    0.6],       [  76. ,  -42. ,   26. ,    1.5],       [ 102. ,    2. ,   28. ,    0.8],       [  84. ,   46. ,   26. ,    1.5],       [  52. ,   85. ,   21. ,    1.1],       [   0. ,   95. ,   20. ,    0.7],       [ -51. ,   86. ,   28. ,    0.6],       [ -90. ,   51. ,   27. ,    1.4],       [-100. ,   -5. ,   19. ,    0.8],       [ -91. ,  -49. ,   19. ,    1.3],       [ -54. ,  -88. ,   20. ,    1.5],       [  -2. ,  -97. ,   21. ,    0.7],       [  53. ,  -86. ,   24. ,    1.3],       [  84. ,  -47. ,   22. ,    1.5],       [  47. ,    1. ,   33. ,    1.4],       [  45. ,   28. ,   34. ,    1.5],       [  29. ,   47. ,   36. ,    1.3],       [   2. ,   47. ,   31. ,    0.7],       [ -22. ,   46. ,   35. ,    0.5],       [ -40. ,   21. ,   32. ,    1.2],       [ -48. ,   -3. ,   33. ,    0.5],       [ -45. ,  -28. ,   36. ,    0.7],       [ -21. ,  -42. ,   30. ,    1.5],       [   1. ,  -54. ,   30. ,    1.3],       [  21. ,  -47. ,   28. ,    1.4],       [  46. ,  -24. ,   31. ,    1. ],       [  61. ,   -2. ,   31. ,    1.2],       [  48. ,   29. ,   36. ,    0.9],       [  25. ,   53. ,   32. ,    1. ],       [   3. ,   61. ,   33. ,    0.5],       [ -26. ,   53. ,   33. ,    1.4],       [ -52. ,   28. ,   27. ,    1.4],       [ -63. ,   -4. ,   31. ,    0.7],       [ -47. ,  -28. ,   29. ,    1.4],       [ -34. ,  -47. ,   35. ,    1.2],       [   3. ,  -57. ,   27. ,    1. ],       [  31. ,  -55. ,   36. ,    1.2],       [  53. ,  -34. ,   34. ,    0.8],       [  69. ,    4. ,   36. ,    0.6],       [  57. ,   30. ,   33. ,    0.9],       [  30. ,   58. ,   33. ,    1.2],       [  -3. ,   68. ,   35. ,    0.8],       [ -31. ,   53. ,   27. ,    1. ],       [ -55. ,   28. ,   36. ,    1.2],       [ -68. ,   -2. ,   33. ,    0.9],       [ -61. ,  -31. ,   33. ,    0.9],       [ -31. ,  -62. ,   32. ,    1.3],       [   0. ,  -64. ,   33. ,    1.1],       [  34. ,  -54. ,   32. ,    0.9],       [  56. ,  -37. ,   35. ,    1.2],       [  72. ,   -5. ,   34. ,    1.1],       [  67. ,   33. ,   33. ,    0.6],       [  40. ,   67. ,   30. ,    0.6],       [   2. ,   76. ,   35. ,    1.5],       [ -35. ,   63. ,   28. ,    1. ],       [ -65. ,   40. ,   28. ,    0.8],       [ -79. ,    0. ,   33. ,    1.4],       [ -63. ,  -35. ,   30. ,    0.8],       [ -33. ,  -66. ,   31. ,    1.5],       [  -2. ,  -76. ,   33. ,    1.2],       [  41. ,  -67. ,   34. ,    0.7],       [  64. ,  -36. ,   28. ,    0.6],       [  80. ,   -2. ,   35. ,    1.3],       [  68. ,   44. ,   27. ,    1. ],       [  39. ,   69. ,   34. ,    1.2],       [   2. ,   87. ,   28. ,    1.3],       [ -43. ,   68. ,   35. ,    1.2],       [ -70. ,   38. ,   28. ,    0.6],       [ -83. ,    0. ,   34. ,    0.5],       [ -75. ,  -44. ,   30. ,    0.7],       [ -46. ,  -73. ,   27. ,    0.6],       [  -3. ,  -81. ,   34. ,    0.7],       [  45. ,  -73. ,   30. ,    0.6],       [  72. ,  -39. ,   33. ,    0.9],       [  86. ,   -5. ,   31. ,    0.7],       [  80. ,   45. ,   30. ,    1. ],       [  47. ,   74. ,   27. ,    0.8],       [   1. ,   96. ,   28. ,    1.2],       [ -44. ,   82. ,   31. ,    0.8],       [ -84. ,   41. ,   36. ,    0.9],       [ -92. ,   -2. ,   33. ,    0.7],       [ -78. ,  -48. ,   31. ,    1.1],       [ -49. ,  -75. ,   29. ,    0.5],       [  -2. ,  -92. ,   27. ,    1.1],       [  50. ,  -80. ,   29. ,    0.6],       [  76. ,  -47. ,   33. ,    1.2],       [ 104. ,    2. ,   27. ,    1.5],       [  83. ,   51. ,   29. ,    0.8],       [  53. ,   84. ,   35. ,    1.4],       [  -4. ,   99. ,   27. ,    0.6],       [ -52. ,   85. ,   31. ,    1.4],       [ -90. ,   49. ,   28. ,    0.9],       [ -98. ,    0. ,   31. ,    1.4],       [ -86. ,  -50. ,   27. ,    1. ],       [ -51. ,  -87. ,   34. ,    1.4],       [   2. , -100. ,   33. ,    0.9],       [  52. ,  -84. ,   27. ,    1. ],       [  90. ,  -53. ,   29. ,    1.4],       [  53. ,   -3. ,   35. ,    1.2],       [  42. ,   21. ,   39. ,    0.6],       [  22. ,   43. ,   40. ,    1.1],       [  -1. ,   51. ,   42. ,    1.2],       [ -28. ,   46. ,   42. ,    0.8],       [ -40. ,   20. ,   41. ,    0.7],       [ -54. ,   -4. ,   37. ,    1.4],       [ -41. ,  -27. ,   42. ,    0.5],       [ -25. ,  -42. ,   36. ,    0.8],       [   2. ,  -47. ,   43. ,    0.8],       [  23. ,  -44. ,   40. ,    0.5],       [  45. ,  -24. ,   40. ,    1.5],       [  60. ,    3. ,   41. ,    1.3],       [  51. ,   31. ,   40. ,    0.9],       [  26. ,   52. ,   38. ,    1.3],       [   3. ,   55. ,   37. ,    0.8],       [ -33. ,   47. ,   35. ,    1.4],       [ -56. ,   28. ,   39. ,    1.5],       [ -61. ,    1. ,   35. ,    0.8],       [ -48. ,  -33. ,   44. ,    0.6],       [ -33. ,  -51. ,   40. ,    0.9],       [   4. ,  -63. ,   37. ,    0.8],       [  29. ,  -55. ,   44. ,    1.4],       [  50. ,  -27. ,   40. ,    1. ],       [  68. ,    0. ,   37. ,    1.4],       [  60. ,   32. ,   44. ,    0.8],       [  29. ,   57. ,   35. ,    0.7],       [   3. ,   65. ,   39. ,    1. ],       [ -35. ,   55. ,   42. ,    0.7],       [ -62. ,   29. ,   43. ,    1. ],       [ -64. ,   -1. ,   36. ,    1.2],       [ -54. ,  -32. ,   43. ,    1.4],       [ -33. ,  -59. ,   37. ,    0.5],       [   3. ,  -71. ,   36. ,    0.6],       [  33. ,  -61. ,   42. ,    1.3],       [  60. ,  -33. ,   38. ,    1.2],       [  76. ,    1. ,   42. ,    0.7],       [  63. ,   33. ,   43. ,    0.9],       [  39. ,   63. ,   40. ,    1.1],       [  -1. ,   74. ,   40. ,    1. ],       [ -40. ,   68. ,   44. ,    1.1],       [ -67. ,   38. ,   36. ,    1.4],       [ -78. ,   -4. ,   38. ,    1.1],       [ -66. ,  -41. ,   37. ,    1.4],       [ -41. ,  -62. ,   42. ,    1.3],       [   1. ,  -71. ,   38. ,    0.9],       [  39. ,  -69. ,   37. ,    1.4],       [  66. ,  -42. ,   44. ,    0.6],       [  86. ,   -3. ,   42. ,    0.7],       [  71. ,   39. ,   44. ,    0.9],       [  38. ,   77. ,   44. ,    0.7],       [   3. ,   79. ,   38. ,    1.4],       [ -45. ,   72. ,   43. ,    0.6],       [ -68. ,   46. ,   44. ,    0.7],       [ -85. ,   -2. ,   35. ,    1. ],       [ -68. ,  -46. ,   40. ,    1.1],       [ -38. ,  -72. ,   35. ,    1.2],       [   0. ,  -85. ,   41. ,    1.4],       [  38. ,  -74. ,   43. ,    1. ],       [  72. ,  -47. ,   43. ,    1. ],       [  94. ,   -1. ,   44. ,    0.8],       [  75. ,   46. ,   35. ,    0.9],       [  48. ,   76. ,   39. ,    0.9],       [   0. ,   86. ,   38. ,    1. ],       [ -50. ,   81. ,   44. ,    0.8],       [ -79. ,   42. ,   42. ,    1. ],       [ -89. ,   -1. ,   44. ,    0.7],       [ -81. ,  -46. ,   42. ,    0.6],       [ -44. ,  -80. ,   41. ,    0.7],       [  -3. ,  -93. ,   37. ,    0.9],       [  44. ,  -77. ,   41. ,    0.8],       [  78. ,  -47. ,   37. ,    1. ],       [  99. ,    1. ,   41. ,    1. ],       [  86. ,   50. ,   42. ,    1.3],       [  53. ,   90. ,   38. ,    1.2],       [   3. ,  102. ,   39. ,    1.4],       [ -47. ,   88. ,   43. ,    1.5],       [ -91. ,   49. ,   35. ,    1.4],       [-103. ,   -1. ,   40. ,    1.2],       [ -90. ,  -51. ,   43. ,    0.5],       [ -55. ,  -89. ,   41. ,    1.4],       [  -3. ,  -99. ,   38. ,    1.4],       [  53. ,  -84. ,   38. ,    1.2],       [  81. ,  -49. ,   37. ,    0.5]])
        basis0 = BSplineBasis(4, np.array([ -3.2,  -1.6,  -1.2,   0. ,   1.4,   1.9,   2.7,   3.9,   5.3,   6.3,   6.6,   8.3,   8.8,
        10.4,  10.8,  12. ,  13.4,  13.9,  14.7]),2)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.3,  2.1,  3. ,  4.3,  5.4,  6. ,  6. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1. ,  1.9,  2.8,  4.2,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.insert_knot([2.666]*1, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 20)
        vol2.insert_knot([9.542]*2, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 22)
        vol2.insert_knot([9.741]*3, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 25)
        vol2.insert_knot([3.787]*1, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 10)
        vol2.insert_knot([3.331]*1, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 9)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p2(self):
        controlpoints = np.array([[  4.,  -4.,  -2.],
       [ 20.,  -5.,   4.],
       [ 48.,  -1.,  -2.],
       [ 72.,  -4.,  -4.],
       [ 98.,   3.,   1.]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  2.4,  3.1,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([2.106]*1) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 8)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p44(self):
        controlpoints = np.array([[   4.,    2.,    3.],       [  10.,    1.,   -5.],       [  24.,   -3.,   -4.],       [  45.,    3.,   -4.],       [  59.,   -3.,    1.],       [  76.,    0.,   -4.],       [  82.,   -1.,    1.],       [  98.,    3.,   -2.],       [   3.,   20.,   -1.],       [  14.,   19.,   -1.],       [  30.,   21.,   -3.],       [  41.,   16.,    4.],       [  57.,   20.,   -2.],       [  70.,   13.,    3.],       [  86.,   19.,   -5.],       [  98.,   12.,    4.],       [   3.,   32.,   -3.],       [  12.,   31.,   -1.],       [  33.,   36.,    4.],       [  44.,   35.,    0.],       [  52.,   33.,    2.],       [  70.,   33.,    4.],       [  85.,   29.,    0.],       [ 103.,   37.,   -2.],       [   3.,   48.,    1.],       [  18.,   45.,    1.],       [  28.,   50.,   -4.],       [  38.,   52.,   -4.],       [  59.,   50.,    2.],       [  67.,   50.,   -1.],       [  83.,   46.,    4.],       [  96.,   50.,   -2.],       [  -3.,   64.,   -5.],       [  11.,   63.,   -4.],       [  32.,   70.,   -1.],       [  40.,   70.,   -2.],       [  61.,   69.,   -5.],       [  74.,   65.,    2.],       [  82.,   70.,    0.],       [  99.,   68.,    3.],       [   2.,   84.,    3.],       [  15.,   78.,   -3.],       [  32.,   80.,   -1.],       [  47.,   82.,    1.],       [  61.,   86.,    0.],       [  72.,   82.,   -2.],       [  87.,   85.,   -3.],       [ 102.,   87.,    4.],       [  -4.,   97.,   -1.],       [  19.,   98.,   -4.],       [  25.,   97.,    0.],       [  39.,   98.,   -2.],       [  59.,  100.,    1.],       [  73.,  101.,   -2.],       [  85.,  104.,   -1.],       [ 102.,   95.,   -5.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  2. ,  3. ,  3.8,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  2.7,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([1.637]*1, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 13)
        surf2.insert_knot([3.313]*2, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 15)
        surf2.insert_knot([2.346]*3, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 18)
        surf2.insert_knot([2.129]*1, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 12)
        surf2.insert_knot([1.384]*2, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 14)
        surf2.insert_knot([2.304]*3, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 17)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p322(self):
        controlpoints = np.array([[  -3.,    4.,   -1.],       [  13.,   -3.,   -2.],       [  31.,    0.,    3.],       [  46.,    2.,   -3.],       [  65.,    3.,    1.],       [  85.,   -5.,    1.],       [  99.,   -3.,   -1.],       [  -1.,   13.,    4.],       [  20.,   14.,   -4.],       [  35.,   18.,   -4.],       [  49.,   20.,   -1.],       [  62.,   14.,    2.],       [  80.,   15.,    0.],       [  98.,   12.,    3.],       [  -1.,   31.,   -4.],       [  12.,   29.,    1.],       [  34.,   35.,   -1.],       [  49.,   32.,    0.],       [  67.,   29.,    4.],       [  87.,   37.,    4.],       [ 101.,   29.,    0.],       [   0.,   49.,   -4.],       [  12.,   48.,   -3.],       [  33.,   47.,    1.],       [  54.,   54.,    3.],       [  61.,   46.,   -2.],       [  84.,   51.,    0.],       [ 102.,   50.,   -2.],       [  -1.,   62.,   -4.],       [  12.,   63.,    0.],       [  34.,   68.,    4.],       [  51.,   63.,    0.],       [  64.,   63.,    4.],       [  83.,   63.,    1.],       [ 101.,   61.,   -2.],       [  -5.,   80.,    3.],       [  18.,   82.,    0.],       [  29.,   83.,    4.],       [  50.,   84.,   -1.],       [  66.,   86.,   -1.],       [  78.,   86.,   -4.],       [ 101.,   87.,   -4.],       [   2.,  104.,    3.],       [  19.,  100.,    2.],       [  31.,  104.,    4.],       [  53.,   96.,    0.],       [  63.,   99.,    2.],       [  80.,   97.,   -3.],       [  98.,   96.,    3.],       [   3.,    2.,   12.],       [  19.,    1.,   18.],       [  34.,    3.,   12.],       [  53.,    3.,   17.],       [  68.,    2.,   11.],       [  82.,    1.,   13.],       [  95.,   -2.,   14.],       [   1.,   12.,   20.],       [  21.,   18.,   15.],       [  31.,   12.,   19.],       [  52.,   13.,   13.],       [  63.,   15.,   14.],       [  86.,   20.,   20.],       [ 104.,   16.,   15.],       [  -3.,   28.,   16.],       [  14.,   31.,   12.],       [  37.,   36.,   13.],       [  54.,   34.,   14.],       [  70.,   28.,   13.],       [  87.,   30.,   13.],       [  98.,   31.,   15.],       [   2.,   51.,   14.],       [  14.,   46.,   19.],       [  36.,   45.,   17.],       [  48.,   52.,   17.],       [  69.,   45.,   12.],       [  86.,   47.,   12.],       [ 102.,   46.,   15.],       [  -3.,   62.,   20.],       [  19.,   66.,   11.],       [  33.,   62.,   13.],       [  48.,   71.,   16.],       [  69.,   67.,   18.],       [  83.,   62.,   12.],       [  95.,   65.,   16.],       [  -4.,   80.,   15.],       [  13.,   87.,   16.],       [  29.,   86.,   11.],       [  46.,   87.,   16.],       [  70.,   88.,   18.],       [  79.,   83.,   13.],       [  96.,   84.,   16.],       [  -4.,  103.,   14.],       [  19.,   95.,   12.],       [  37.,  103.,   14.],       [  54.,   96.,   12.],       [  71.,  104.,   12.],       [  85.,  102.,   20.],       [  95.,  104.,   18.],       [   2.,    2.,   37.],       [  16.,   -2.,   31.],       [  37.,   -2.,   33.],       [  46.,   -2.,   34.],       [  63.,   -1.,   34.],       [  79.,   -2.,   34.],       [ 103.,    2.,   33.],       [   0.,   16.,   35.],       [  12.,   14.,   37.],       [  35.,   20.,   33.],       [  52.,   20.,   38.],       [  62.,   19.,   30.],       [  81.,   18.,   32.],       [  99.,   18.,   34.],       [  -4.,   31.,   29.],       [  11.,   37.,   33.],       [  32.,   37.,   30.],       [  45.,   35.,   33.],       [  61.,   30.,   36.],       [  84.,   29.,   34.],       [  97.,   30.,   36.],       [   3.,   52.,   33.],       [  19.,   52.,   28.],       [  35.,   49.,   28.],       [  45.,   52.,   38.],       [  65.,   53.,   35.],       [  85.,   47.,   30.],       [ 102.,   50.,   35.],       [  -1.,   65.,   31.],       [  21.,   68.,   36.],       [  37.,   64.,   30.],       [  49.,   71.,   29.],       [  64.,   63.,   37.],       [  81.,   69.,   32.],       [  97.,   63.,   31.],       [   4.,   80.,   34.],       [  19.,   88.,   36.],       [  29.,   82.,   28.],       [  47.,   82.,   36.],       [  69.,   84.,   35.],       [  87.,   84.,   36.],       [ 103.,   81.,   31.],       [   2.,   97.,   37.],       [  20.,   95.,   33.],       [  36.,  101.,   35.],       [  46.,  103.,   31.],       [  62.,  103.,   37.],       [  82.,  102.,   32.],       [  98.,   98.,   30.],       [   4.,   -1.,   52.],       [  21.,    1.,   49.],       [  34.,   -3.,   54.],       [  54.,   -5.,   45.],       [  64.,   -5.,   49.],       [  82.,    2.,   45.],       [  95.,    2.,   51.],       [  -1.,   16.,   51.],       [  21.,   16.,   47.],       [  37.,   12.,   45.],       [  45.,   21.,   45.],       [  61.,   20.,   51.],       [  80.,   19.,   50.],       [  97.,   16.,   50.],       [   2.,   35.,   48.],       [  21.,   33.,   52.],       [  33.,   38.,   45.],       [  51.,   36.,   45.],       [  62.,   34.,   45.],       [  82.,   31.,   46.],       [ 102.,   36.,   48.],       [  -4.,   45.,   49.],       [  20.,   53.,   46.],       [  32.,   54.,   46.],       [  50.,   54.,   50.],       [  69.,   54.,   48.],       [  78.,   53.,   46.],       [ 100.,   53.,   51.],       [   0.,   63.,   53.],       [  18.,   62.,   48.],       [  37.,   70.,   49.],       [  54.,   71.,   52.],       [  61.,   62.,   48.],       [  82.,   67.,   52.],       [  99.,   71.,   46.],       [   2.,   86.,   47.],       [  16.,   80.,   45.],       [  31.,   84.,   52.],       [  52.,   84.,   48.],       [  70.,   79.,   51.],       [  80.,   78.,   48.],       [  97.,   80.,   45.],       [   2.,  104.,   49.],       [  19.,   95.,   54.],       [  31.,  104.,   53.],       [  45.,  100.,   52.],       [  69.,  104.,   54.],       [  79.,  102.,   49.],       [ 101.,   97.,   49.],       [  -5.,   -5.,   69.],       [  18.,    0.,   62.],       [  36.,    0.,   63.],       [  54.,    3.,   70.],       [  70.,   -1.,   61.],       [  86.,   -2.,   70.],       [  95.,    0.,   71.],       [   0.,   18.,   69.],       [  21.,   11.,   69.],       [  33.,   18.,   71.],       [  45.,   18.,   67.],       [  70.,   12.,   64.],       [  79.,   11.,   65.],       [  95.,   17.,   66.],       [  -5.,   35.,   62.],       [  16.,   29.,   70.],       [  32.,   33.,   70.],       [  54.,   35.,   69.],       [  64.,   30.,   64.],       [  85.,   30.,   63.],       [ 104.,   34.,   63.],       [  -4.,   54.,   66.],       [  13.,   46.,   63.],       [  38.,   47.,   68.],       [  52.,   46.,   66.],       [  63.,   48.,   62.],       [  84.,   51.,   70.],       [ 104.,   53.,   62.],       [   0.,   69.,   67.],       [  17.,   67.,   64.],       [  31.,   62.,   66.],       [  50.,   64.,   61.],       [  63.,   70.,   68.],       [  82.,   68.,   65.],       [ 104.,   71.,   68.],       [   0.,   85.,   66.],       [  14.,   80.,   66.],       [  37.,   80.,   63.],       [  50.,   84.,   68.],       [  64.,   81.,   67.],       [  87.,   84.,   65.],       [  95.,   78.,   69.],       [  -3.,  100.,   68.],       [  19.,   97.,   65.],       [  33.,   99.,   70.],       [  47.,   97.,   69.],       [  67.,   98.,   67.],       [  83.,   98.,   69.],       [  97.,   96.,   68.],       [  -1.,   -1.,   87.],       [  14.,    2.,   83.],       [  33.,   -2.,   84.],       [  52.,    3.,   84.],       [  62.,   -4.,   82.],       [  84.,    2.,   85.],       [  99.,   -5.,   85.],       [  -4.,   20.,   80.],       [  15.,   15.,   79.],       [  35.,   14.,   79.],       [  49.,   18.,   83.],       [  63.,   12.,   83.],       [  87.,   20.,   86.],       [ 103.,   21.,   80.],       [   0.,   36.,   88.],       [  16.,   31.,   83.],       [  35.,   31.,   81.],       [  45.,   34.,   81.],       [  66.,   30.,   86.],       [  84.,   34.,   79.],       [ 102.,   30.,   86.],       [  -3.,   48.,   83.],       [  12.,   45.,   80.],       [  34.,   49.,   81.],       [  45.,   45.,   86.],       [  63.,   47.,   86.],       [  82.,   51.,   81.],       [  99.,   48.,   87.],       [  -4.,   64.,   80.],       [  13.,   71.,   87.],       [  35.,   65.,   85.],       [  49.,   68.,   78.],       [  63.,   62.,   85.],       [  81.,   62.,   83.],       [ 104.,   66.,   81.],       [  -5.,   85.,   83.],       [  13.,   82.,   87.],       [  29.,   87.,   84.],       [  52.,   84.,   87.],       [  68.,   81.,   85.],       [  80.,   80.,   81.],       [  99.,   82.,   80.],       [   4.,  100.,   81.],       [  19.,   98.,   84.],       [  32.,  104.,   79.],       [  45.,   97.,   81.],       [  65.,   98.,   79.],       [  79.,   95.,   86.],       [ 100.,   96.,   84.],       [  -5.,   -4.,  102.],       [  21.,    4.,   95.],       [  30.,    4.,  100.],       [  54.,   -3.,  101.],       [  67.,   -5.,   98.],       [  81.,    1.,  101.],       [  97.,    2.,  102.],       [   3.,   19.,  103.],       [  13.,   17.,   99.],       [  38.,   16.,  101.],       [  46.,   15.,  102.],       [  64.,   17.,   98.],       [  86.,   12.,   98.],       [  96.,   16.,  102.],       [   0.,   38.,   96.],       [  13.,   33.,   99.],       [  31.,   35.,  103.],       [  48.,   29.,  102.],       [  67.,   33.,   97.],       [  85.,   33.,   96.],       [  97.,   37.,   99.],       [   2.,   47.,   97.],       [  16.,   50.,   98.],       [  30.,   53.,   98.],       [  53.,   47.,  100.],       [  66.,   48.,  102.],       [  78.,   48.,  102.],       [  97.,   52.,  103.],       [   4.,   71.,   96.],       [  16.,   65.,   97.],       [  32.,   66.,  100.],       [  47.,   70.,  101.],       [  68.,   64.,   97.],       [  81.,   64.,  104.],       [  98.,   67.,   99.],       [   1.,   78.,  103.],       [  17.,   87.,  104.],       [  29.,   80.,  103.],       [  47.,   79.,  101.],       [  63.,   81.,  102.],       [  83.,   81.,  102.],       [  99.,   84.,  102.],       [  -2.,   97.,   99.],       [  16.,  103.,  100.],       [  29.,  104.,  102.],       [  51.,  104.,   99.],       [  65.,  100.,  102.],       [  78.,   96.,  103.],       [  95.,  102.,   96.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.8,  2.3,  2.8,  3.8,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.7,  2. ,  3.1,  3.9,  5.2,  6. ,  6. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1. ,  2.1,  3. ,  4.2,  5. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.insert_knot([1.124]*1, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 11)
        vol2.insert_knot([2.543]*2, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 13)
        vol2.insert_knot([1.642]*1, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 10)
        vol2.insert_knot([1.214]*1, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 10)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p3_C0_periodic(self):
        controlpoints = np.array([[ 101.,   -1.,    3.],
       [  47.,   82.,    2.],
       [ -49.,   87.,    2.],
       [ -97.,    4.,    1.],
       [ -53.,  -89.,    0.],
       [  53.,  -92.,   -3.]])
        basis0 = BSplineBasis(3, np.array([-1.3,  0. ,  0. ,  1.2,  2.3,  3.3,  3.7,  5. ,  5. ,  6.2]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([3.184]*1) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 11)
        crv2.insert_knot([2.610]*2) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 13)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p34_C0_periodic(self):
        controlpoints = np.array([[  61.,   -3.,   -4.],       [  31.,   55.,    0.],       [ -34.,   49.,   -1.],       [ -65.,   -4.,   -3.],       [ -28.,  -54.,    0.],       [  30.,  -51.,    3.],       [  61.,    3.,    3.],       [  28.,   55.,    4.],       [ -33.,   52.,    1.],       [ -63.,    1.,   -5.],       [ -30.,  -56.,   -3.],       [  35.,  -52.,   -1.],       [  66.,   -4.,   -4.],       [  38.,   61.,   -3.],       [ -32.,   59.,    1.],       [ -74.,    4.,    0.],       [ -31.,  -63.,   -5.],       [  32.,  -60.,   -5.],       [  74.,   -4.,   -4.],       [  36.,   67.,    0.],       [ -42.,   66.,   -2.],       [ -76.,    4.,    4.],       [ -39.,  -61.,    1.],       [  40.,  -63.,    2.],       [  82.,   -3.,    2.],       [  38.,   70.,   -2.],       [ -41.,   65.,   -5.],       [ -82.,   -5.,   -5.],       [ -37.,  -73.,    2.],       [  36.,  -66.,    3.],       [  82.,   -5.,    3.],       [  38.,   76.,    4.],       [ -42.,   75.,   -5.],       [ -81.,   -2.,   -1.],       [ -39.,  -76.,   -2.],       [  47.,  -72.,   -4.],       [  86.,   -5.,    2.],       [  47.,   73.,   -5.],       [ -49.,   79.,   -3.],       [ -89.,   -3.,    1.],       [ -44.,  -76.,    1.],       [  41.,  -75.,    2.],       [  95.,   -4.,    2.],       [  50.,   82.,   -3.],       [ -48.,   77.,   -4.],       [ -95.,   -4.,   -4.],       [ -50.,  -87.,    2.],       [  49.,  -81.,   -5.],       [  96.,    2.,   -2.],       [  49.,   81.,    4.],       [ -49.,   89.,   -1.],       [-105.,   -3.,   -1.],       [ -52.,  -83.,   -2.],       [  50.,  -86.,    2.]])
        basis0 = BSplineBasis(3, np.array([-1.2,  0. ,  0. ,  0.8,  2.1,  2.6,  3.8,  5. ,  5. ,  5.8]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  1.9,  3.2,  3.9,  5. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([1.534]*1, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 11)
        surf2.insert_knot([1.992]*2, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 13)
        surf2.insert_knot([4.546]*1, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 14)
        surf2.insert_knot([3.941]*2, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([3.328]*3, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 19)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p344_C0_periodic(self):
        controlpoints = np.array([[  49.,    1.,   -1.],       [  25.,   41.,    1.],       [ -25.,   38.,    2.],       [ -50.,    2.,   -1.],       [ -26.,  -41.,   -3.],       [  20.,  -44.,    2.],       [  56.,    4.,   -5.],       [  34.,   56.,   -1.],       [ -30.,   51.,   -1.],       [ -56.,    4.,   -5.],       [ -28.,  -50.,    1.],       [  30.,  -48.,    2.],       [  72.,    0.,    0.],       [  38.,   64.,   -3.],       [ -32.,   60.,   -5.],       [ -72.,   -1.,   -5.],       [ -33.,  -59.,   -1.],       [  30.,  -66.,    0.],       [  82.,   -4.,   -5.],       [  36.,   65.,   -1.],       [ -44.,   71.,   -1.],       [ -85.,   -1.,   -5.],       [ -43.,  -73.,    3.],       [  40.,  -67.,   -3.],       [  89.,    1.,   -1.],       [  40.,   82.,    3.],       [ -41.,   79.,    0.],       [ -93.,    3.,    0.],       [ -50.,  -80.,   -1.],       [  48.,  -77.,   -5.],       [  96.,    3.,   -1.],       [  46.,   86.,    1.],       [ -52.,   85.,   -3.],       [-102.,    0.,   -4.],       [ -50.,  -84.,   -3.],       [  49.,  -82.,   -2.],       [  48.,    0.,    5.],       [  21.,   43.,    7.],       [ -27.,   39.,    4.],       [ -48.,    0.,    3.],       [ -22.,  -45.,    2.],       [  27.,  -42.,    5.],       [  56.,    2.,   10.],       [  31.,   49.,    3.],       [ -34.,   54.,    8.],       [ -64.,   -3.,    9.],       [ -31.,  -48.,    7.],       [  29.,  -55.,    9.],       [  69.,   -3.,    7.],       [  34.,   56.,    7.],       [ -38.,   61.,    9.],       [ -72.,    2.,    6.],       [ -31.,  -64.,    7.],       [  35.,  -58.,    2.],       [  79.,   -5.,    2.],       [  38.,   70.,    6.],       [ -37.,   64.,    6.],       [ -80.,   -4.,    2.],       [ -39.,  -69.,    7.],       [  43.,  -72.,    9.],       [  87.,   -2.,    1.],       [  45.,   77.,    7.],       [ -43.,   74.,    8.],       [ -95.,   -4.,    5.],       [ -46.,  -74.,    5.],       [  42.,  -78.,    8.],       [ 104.,   -3.,    1.],       [  50.,   87.,    3.],       [ -49.,   84.,    3.],       [ -99.,    4.,    0.],       [ -54.,  -91.,    0.],       [  49.,  -84.,    5.],       [  47.,   -5.,   15.],       [  24.,   44.,    8.],       [ -24.,   47.,    7.],       [ -52.,    4.,    7.],       [ -21.,  -43.,   15.],       [  21.,  -41.,   11.],       [  62.,    0.,   13.],       [  34.,   51.,   14.],       [ -35.,   54.,   15.],       [ -58.,    4.,   11.],       [ -32.,  -50.,   12.],       [  29.,  -57.,   15.],       [  67.,    1.,    6.],       [  33.,   65.,   16.],       [ -40.,   58.,   11.],       [ -73.,    2.,   10.],       [ -31.,  -64.,   15.],       [  33.,  -62.,   12.],       [  79.,   -1.,   14.],       [  37.,   66.,   16.],       [ -40.,   68.,   10.],       [ -84.,   -2.,   12.],       [ -43.,  -66.,   15.],       [  42.,  -69.,   15.],       [  89.,    1.,    7.],       [  45.,   77.,   12.],       [ -45.,   76.,   13.],       [ -88.,    3.,   16.],       [ -43.,  -79.,    7.],       [  41.,  -75.,    9.],       [ 100.,    1.,    7.],       [  53.,   82.,    9.],       [ -53.,   83.,   12.],       [ -97.,   -2.,   10.],       [ -55.,  -87.,   12.],       [  50.,  -84.,    9.],       [  49.,    4.,   18.],       [  23.,   44.,   12.],       [ -24.,   44.,   16.],       [ -47.,   -2.,   20.],       [ -23.,  -48.,   18.],       [  28.,  -43.,   14.],       [  60.,   -4.,   19.],       [  33.,   53.,   13.],       [ -26.,   47.,   20.],       [ -61.,   -3.,   13.],       [ -34.,  -49.,   18.],       [  33.,  -57.,   22.],       [  70.,   -4.,   20.],       [  34.,   64.,   16.],       [ -35.,   62.,   14.],       [ -67.,    1.,   13.],       [ -31.,  -60.,   21.],       [  37.,  -59.,   14.],       [  82.,   -1.,   21.],       [  38.,   73.,   16.],       [ -43.,   68.,   18.],       [ -82.,   -2.,   14.],       [ -39.,  -73.,   16.],       [  44.,  -68.,   16.],       [  85.,   -3.,   20.],       [  41.,   76.,   15.],       [ -50.,   75.,   22.],       [ -89.,   -3.,   17.],       [ -43.,  -74.,   20.],       [  49.,  -75.,   14.],       [ 101.,   -2.,   14.],       [  45.,   81.,   14.],       [ -47.,   91.,   21.],       [-104.,   -1.,   13.],       [ -53.,  -82.,   13.],       [  52.,  -86.,   12.],       [  47.,   -3.,   27.],       [  28.,   43.,   18.],       [ -23.,   47.,   20.],       [ -50.,   -1.,   18.],       [ -28.,  -44.,   19.],       [  22.,  -44.,   23.],       [  60.,    2.,   22.],       [  34.,   50.,   21.],       [ -32.,   48.,   22.],       [ -60.,   -2.,   18.],       [ -27.,  -55.,   20.],       [  30.,  -52.,   25.],       [  65.,    4.,   20.],       [  38.,   61.,   24.],       [ -40.,   61.,   25.],       [ -69.,    0.,   18.],       [ -31.,  -58.,   24.],       [  39.,  -60.,   25.],       [  75.,   -2.,   23.],       [  42.,   70.,   21.],       [ -38.,   72.,   25.],       [ -79.,    2.,   27.],       [ -42.,  -68.,   20.],       [  43.,  -69.,   22.],       [  89.,    0.,   26.],       [  44.,   73.,   24.],       [ -45.,   80.,   23.],       [ -86.,    1.,   18.],       [ -43.,  -82.,   22.],       [  49.,  -78.,   23.],       [ 103.,    2.,   27.],       [  47.,   87.,   21.],       [ -48.,   84.,   20.],       [-103.,    0.,   19.],       [ -50.,  -83.,   19.],       [  47.,  -83.,   25.],       [  50.,   -3.,   26.],       [  21.,   43.,   32.],       [ -22.,   45.,   31.],       [ -55.,   -2.,   24.],       [ -27.,  -47.,   26.],       [  25.,  -41.,   23.],       [  58.,   -3.,   29.],       [  29.,   56.,   25.],       [ -35.,   55.,   27.],       [ -64.,   -2.,   24.],       [ -28.,  -56.,   32.],       [  25.,  -54.,   31.],       [  69.,    1.,   30.],       [  30.,   60.,   28.],       [ -40.,   56.,   25.],       [ -70.,    4.,   25.],       [ -40.,  -62.,   25.],       [  30.,  -64.,   30.],       [  78.,    4.,   33.],       [  39.,   71.,   30.],       [ -42.,   64.,   27.],       [ -81.,   -3.,   25.],       [ -45.,  -69.,   27.],       [  42.,  -69.,   30.],       [  90.,    3.,   33.],       [  46.,   79.,   25.],       [ -46.,   82.,   32.],       [ -91.,    3.,   29.],       [ -46.,  -82.,   29.],       [  44.,  -82.,   29.],       [ 102.,   -4.,   26.],       [  52.,   81.,   29.],       [ -51.,   90.,   26.],       [-101.,    4.,   24.],       [ -48.,  -84.,   32.],       [  47.,  -87.,   30.],       [  48.,    0.,   30.],       [  28.,   40.,   31.],       [ -28.,   47.,   32.],       [ -53.,    2.,   37.],       [ -24.,  -39.,   37.],       [  26.,  -43.,   36.],       [  55.,   -5.,   34.],       [  28.,   48.,   36.],       [ -31.,   47.,   32.],       [ -63.,    2.,   34.],       [ -26.,  -52.,   31.],       [  26.,  -51.,   30.],       [  71.,   -3.,   30.],       [  31.,   58.,   32.],       [ -34.,   59.,   38.],       [ -75.,    4.,   33.],       [ -34.,  -64.,   38.],       [  30.,  -60.,   35.],       [  84.,    1.,   38.],       [  39.,   69.,   39.],       [ -43.,   68.,   36.],       [ -84.,   -2.,   29.],       [ -41.,  -72.,   32.],       [  36.,  -72.,   30.],       [  88.,    1.,   32.],       [  43.,   78.,   35.],       [ -42.,   78.,   32.],       [ -87.,   -4.,   33.],       [ -48.,  -79.,   36.],       [  48.,  -75.,   30.],       [ 102.,    0.,   37.],       [  47.,   90.,   38.],       [ -47.,   88.,   30.],       [-103.,    0.,   36.],       [ -47.,  -91.,   38.],       [  49.,  -90.,   36.],       [  49.,   -5.,   35.],       [  29.,   45.,   44.],       [ -22.,   43.,   39.],       [ -48.,   -5.,   39.],       [ -22.,  -39.,   41.],       [  26.,  -40.,   37.],       [  58.,   -1.,   38.],       [  28.,   47.,   40.],       [ -27.,   56.,   42.],       [ -65.,   -3.,   37.],       [ -27.,  -51.,   35.],       [  30.,  -57.,   40.],       [  72.,   -1.,   37.],       [  32.,   65.,   36.],       [ -33.,   61.,   40.],       [ -70.,   -5.,   40.],       [ -38.,  -62.,   42.],       [  31.,  -66.,   43.],       [  80.,    4.,   39.],       [  41.,   69.,   39.],       [ -37.,   66.,   38.],       [ -82.,    3.,   42.],       [ -40.,  -69.,   39.],       [  40.,  -71.,   41.],       [  90.,    1.,   42.],       [  47.,   80.,   44.],       [ -41.,   77.,   35.],       [ -89.,    4.,   39.],       [ -45.,  -79.,   36.],       [  41.,  -77.,   42.],       [  97.,    4.,   42.],       [  51.,   86.,   43.],       [ -47.,   84.,   36.],       [ -96.,   -3.,   38.],       [ -55.,  -89.,   41.],       [  48.,  -85.,   44.]])
        basis0 = BSplineBasis(3, np.array([-1.2,  0. ,  0. ,  1.2,  2. ,  2.9,  3.8,  5. ,  5. ,  6.2]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  2.1,  3. ,  3. ,  3. ,  3. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.8,  2.2,  2.7,  3.8,  5. ,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.insert_knot([3.622]*1, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 11)
        vol2.insert_knot([2.252]*2, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 13)
        vol2.insert_knot([1.199]*1, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 11)
        vol2.insert_knot([1.162]*2, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 13)
        vol2.insert_knot([1.812]*3, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 16)
        vol2.insert_knot([2.633]*1, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 13)
        vol2.insert_knot([3.089]*2, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 15)
        vol2.insert_knot([2.177]*3, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 18)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p4_C2_periodic(self):
        controlpoints = np.array([[  95.,    4.,   -4.],
       [  90.,   51.,   -4.],
       [  53.,   87.,   -4.],
       [   3.,  102.,   -2.],
       [ -51.,   83.,    3.],
       [ -87.,   48.,   -2.],
       [-104.,   -3.,    3.],
       [ -91.,  -49.,    2.],
       [ -52.,  -90.,    3.],
       [   4.,  -96.,   -1.],
       [  51.,  -87.,   -3.],
       [  85.,  -48.,   -3.]])
        basis0 = BSplineBasis(4, np.array([ -3.2,  -2.3,  -1. ,   0. ,   0.8,   2.3,   2.9,   4. ,   4.9,   6. ,   6.7,   7.9,   8.8,
         9.7,  11. ,  12. ,  12.8,  14.3,  14.9]),2)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([10.841]*1) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 20)
        crv2.insert_knot([8.357]*2) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 22)
        crv2.insert_knot([3.874]*3) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p5_rational(self):
        controlpoints = np.array([[  -2. ,   -3. ,    1.2],
       [   9. ,   -2. ,    1.3],
       [  24. ,   -2. ,    0.5],
       [  33. ,    3. ,    1.1],
       [  44. ,    1. ,    1.5],
       [  57. ,    1. ,    1.2],
       [  67. ,   -2. ,    0.5],
       [  81. ,    1. ,    0.5],
       [  90. ,    3. ,    0.9],
       [ 104. ,   -2. ,    1.5]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  3.3,  3.7,  5. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([3.738]*1) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 16)
        crv2.insert_knot([1.142]*2) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 18)
        crv2.insert_knot([1.721]*3) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 21)
        crv2.insert_knot([2.334]*4) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p76_rational(self):
        controlpoints = np.array([[  -2. ,    2. ,    0.9],       [  12. ,    1. ,    1.4],       [  19. ,    2. ,    1.3],       [  31. ,    0. ,    0.7],       [  37. ,   -2. ,    1. ],       [  48. ,    0. ,    1.4],       [  58. ,    1. ,    0.7],       [  64. ,   -4. ,    1. ],       [  75. ,    2. ,    1.4],       [  82. ,    3. ,    0.6],       [  86. ,   -3. ,    0.5],       [  96. ,    0. ,    0.9],       [   0. ,   17. ,    0.6],       [  11. ,   21. ,    0.9],       [  17. ,   19. ,    0.8],       [  29. ,   13. ,    1.4],       [  32. ,   15. ,    1.4],       [  42. ,   21. ,    1.4],       [  53. ,   15. ,    0.8],       [  61. ,   16. ,    1.3],       [  76. ,   14. ,    1.5],       [  82. ,   15. ,    1.5],       [  86. ,   16. ,    1.4],       [  97. ,   18. ,    0.7],       [   2. ,   31. ,    0.7],       [   5. ,   31. ,    1.4],       [  20. ,   37. ,    1. ],       [  22. ,   37. ,    0.6],       [  34. ,   37. ,    1.4],       [  48. ,   35. ,    1. ],       [  50. ,   32. ,    1.1],       [  67. ,   35. ,    1.1],       [  71. ,   37. ,    1.3],       [  82. ,   30. ,    1.2],       [  91. ,   31. ,    1.2],       [  96. ,   35. ,    0.6],       [   0. ,   50. ,    0.6],       [  13. ,   46. ,    1.4],       [  17. ,   49. ,    1.1],       [  27. ,   46. ,    1.2],       [  33. ,   51. ,    0.9],       [  46. ,   46. ,    1.4],       [  53. ,   47. ,    1. ],       [  63. ,   48. ,    1.4],       [  73. ,   50. ,    1.1],       [  82. ,   51. ,    1.2],       [  88. ,   49. ,    1.1],       [ 102. ,   53. ,    1.2],       [  -2. ,   62. ,    1.3],       [   8. ,   69. ,    1.1],       [  15. ,   66. ,    1.5],       [  23. ,   71. ,    0.7],       [  38. ,   69. ,    1.1],       [  47. ,   66. ,    1.3],       [  54. ,   65. ,    0.6],       [  62. ,   69. ,    0.7],       [  75. ,   63. ,    0.9],       [  81. ,   65. ,    0.6],       [  90. ,   62. ,    0.9],       [  97. ,   63. ,    1.3],       [  -4. ,   82. ,    0.5],       [   4. ,   83. ,    1.2],       [  16. ,   87. ,    1.4],       [  23. ,   85. ,    1.1],       [  33. ,   78. ,    1.3],       [  44. ,   81. ,    1.5],       [  54. ,   87. ,    1.2],       [  62. ,   86. ,    0.8],       [  74. ,   82. ,    1.3],       [  81. ,   78. ,    1.1],       [  93. ,   88. ,    0.9],       [ 103. ,   78. ,    1.5],       [  -1. ,   95. ,    0.7],       [  10. ,   99. ,    1.4],       [  13. ,   99. ,    1.4],       [  23. ,  103. ,    0.8],       [  37. ,   95. ,    0.8],       [  49. ,   98. ,    1.3],       [  50. ,  102. ,    1.2],       [  66. ,   96. ,    0.9],       [  76. ,   96. ,    1.4],       [  81. ,  100. ,    0.8],       [  90. ,  102. ,    1.4],       [ 101. ,   97. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.9,  3.3,  4. ,  4.9,  6. ,  6. ,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([3.317]*1, 0) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([2.125]*2, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([2.469]*3, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([2.725]*4, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([3.627]*5, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 34)
        surf2.insert_knot([1.762]*6, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 40)
        surf2.insert_knot([1.100]*1, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 14)
        surf2.insert_knot([1.100]*2, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([1.100]*3, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 19)
        surf2.insert_knot([1.100]*4, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 23)
        surf2.insert_knot([1.100]*5, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 28)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p5_rational_C0_periodic(self):
        controlpoints = np.array([[ 101. ,    1. ,    1.5],
       [  82. ,   61. ,    1.1],
       [  28. ,   98. ,    0.8],
       [ -35. ,   93. ,    1.3],
       [ -83. ,   56. ,    0.9],
       [-101. ,   -5. ,    1.2],
       [ -86. ,  -55. ,    0.6],
       [ -31. ,  -99. ,    1.1],
       [  35. ,  -98. ,    1. ],
       [  84. ,  -64. ,    1.3]])
        basis0 = BSplineBasis(5, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  1.1,  2.2,  3.1,  4.2,  4.7,  5.9,  7. ,  7. ,  7. ,  7. ,
        8.1]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([1.776]*1) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 17)
        crv2.insert_knot([4.518]*2) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 19)
        crv2.insert_knot([1.195]*3) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 22)
        crv2.insert_knot([2.802]*4) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 26)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p76_rational_C0_periodic(self):
        controlpoints = np.array([[  56. ,   -4. ,    1.3],       [  51. ,   27. ,    1.3],       [  41. ,   43. ,    0.8],       [  12. ,   62. ,    1.3],       [ -15. ,   57. ,    1.2],       [ -33. ,   48. ,    0.8],       [ -57. ,   21. ,    0.6],       [ -64. ,   -4. ,    1.4],       [ -50. ,  -24. ,    0.6],       [ -38. ,  -47. ,    1.4],       [ -10. ,  -61. ,    1. ],       [  16. ,  -55. ,    0.5],       [  40. ,  -47. ,    1.5],       [  58. ,  -26. ,    1.3],       [  65. ,    0. ,    1.3],       [  57. ,   30. ,    0.5],       [  40. ,   54. ,    0.8],       [  11. ,   66. ,    0.6],       [ -12. ,   63. ,    1.1],       [ -45. ,   52. ,    1.1],       [ -63. ,   25. ,    0.9],       [ -66. ,    1. ,    0.7],       [ -62. ,  -24. ,    1.5],       [ -39. ,  -53. ,    0.9],       [ -18. ,  -60. ,    1.4],       [  11. ,  -64. ,    0.6],       [  38. ,  -50. ,    0.6],       [  54. ,  -27. ,    1.2],       [  65. ,   -1. ,    0.6],       [  62. ,   29. ,    0.8],       [  47. ,   50. ,    1. ],       [  12. ,   68. ,    1.4],       [ -18. ,   66. ,    0.9],       [ -47. ,   56. ,    1.4],       [ -67. ,   28. ,    0.8],       [ -69. ,    1. ,    1.1],       [ -68. ,  -29. ,    1.1],       [ -40. ,  -54. ,    0.9],       [ -19. ,  -66. ,    1.2],       [  13. ,  -65. ,    0.7],       [  45. ,  -59. ,    1. ],       [  60. ,  -36. ,    0.6],       [  72. ,   -4. ,    1.2],       [  71. ,   33. ,    0.9],       [  42. ,   62. ,    0.8],       [  20. ,   73. ,    1.2],       [ -16. ,   68. ,    0.6],       [ -47. ,   58. ,    1.3],       [ -71. ,   35. ,    1. ],       [ -72. ,   -4. ,    1.3],       [ -66. ,  -32. ,    0.9],       [ -52. ,  -61. ,    0.9],       [ -16. ,  -71. ,    1.4],       [  19. ,  -78. ,    1.4],       [  46. ,  -56. ,    0.5],       [  62. ,  -37. ,    0.8],       [  78. ,    2. ,    1.3],       [  68. ,   32. ,    1.1],       [  46. ,   65. ,    1.3],       [  20. ,   82. ,    1.4],       [ -23. ,   74. ,    0.7],       [ -46. ,   60. ,    1.1],       [ -68. ,   34. ,    1.2],       [ -82. ,   -4. ,    1.3],       [ -73. ,  -39. ,    1.4],       [ -54. ,  -67. ,    1.3],       [ -21. ,  -74. ,    0.6],       [  20. ,  -81. ,    1.5],       [  49. ,  -66. ,    1.2],       [  75. ,  -33. ,    0.9],       [  88. ,    0. ,    0.8],       [  81. ,   33. ,    1. ],       [  51. ,   64. ,    1.2],       [  23. ,   83. ,    0.9],       [ -22. ,   84. ,    1.2],       [ -57. ,   68. ,    1. ],       [ -74. ,   32. ,    1.2],       [ -86. ,    0. ,    1.5],       [ -79. ,  -42. ,    0.9],       [ -58. ,  -65. ,    0.8],       [ -16. ,  -81. ,    0.8],       [  18. ,  -86. ,    0.6],       [  51. ,  -67. ,    1.3],       [  76. ,  -35. ,    0.5],       [  90. ,    3. ,    0.8],       [  85. ,   43. ,    1.4],       [  54. ,   70. ,    0.6],       [  16. ,   85. ,    0.6],       [ -25. ,   90. ,    1.3],       [ -59. ,   70. ,    0.7],       [ -86. ,   37. ,    1.1],       [ -90. ,    3. ,    1.2],       [ -84. ,  -35. ,    0.9],       [ -57. ,  -72. ,    0.5],       [ -22. ,  -89. ,    1.1],       [  16. ,  -83. ,    0.9],       [  56. ,  -71. ,    1. ],       [  77. ,  -43. ,    1.2],       [  93. ,   -2. ,    0.6],       [  81. ,   37. ,    1.2],       [  59. ,   76. ,    1.4],       [  26. ,   92. ,    1. ],       [ -25. ,   90. ,    1.4],       [ -65. ,   71. ,    1. ],       [ -82. ,   42. ,    0.8],       [ -95. ,   -2. ,    1.2],       [ -84. ,  -45. ,    0.8],       [ -55. ,  -74. ,    1. ],       [ -25. ,  -91. ,    1.4],       [  20. ,  -88. ,    1.3],       [  60. ,  -72. ,    1. ],       [  82. ,  -45. ,    1.2],       [ 104. ,   -4. ,    0.8],       [  90. ,   40. ,    1.5],       [  62. ,   83. ,    0.6],       [  19. ,   97. ,    1.5],       [ -21. ,   96. ,    1.2],       [ -65. ,   77. ,    1.2],       [ -86. ,   44. ,    1.2],       [-102. ,    2. ,    0.9],       [ -94. ,  -45. ,    1.3],       [ -68. ,  -75. ,    1.3],       [ -24. ,  -95. ,    0.6],       [  23. ,  -98. ,    0.9],       [  61. ,  -78. ,    1. ],       [  92. ,  -42. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([ -1. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   1.3,   2.3,   2.6,   4. ,   4.9,   6. ,
         7.2,   8. ,   9. ,   9. ,   9. ,   9. ,   9. ,   9. ,  10.3]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.1,  3. ,  4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([2.848]*1, 0) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 23)
        surf2.insert_knot([3.544]*2, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([1.923]*3, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 28)
        surf2.insert_knot([5.060]*4, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 32)
        surf2.insert_knot([6.261]*5, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 37)
        surf2.insert_knot([5.381]*6, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 43)
        surf2.insert_knot([1.766]*1, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([1.708]*2, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([1.615]*3, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([2.780]*4, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)
        surf2.insert_knot([1.329]*5, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 30)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p7_rational_C1_periodic(self):
        controlpoints = np.array([[ 102. ,   -5. ,    1. ],
       [  95. ,   33. ,    0.6],
       [  72. ,   74. ,    0.7],
       [  40. ,   92. ,    0.9],
       [   1. ,  100. ,    0.7],
       [ -37. ,   94. ,    1.4],
       [ -68. ,   73. ,    0.7],
       [ -89. ,   34. ,    1.2],
       [ -98. ,   -3. ,    1.2],
       [ -88. ,  -38. ,    0.8],
       [ -71. ,  -73. ,    0.7],
       [ -38. ,  -91. ,    1.2],
       [   4. , -100. ,    0.9],
       [  36. ,  -91. ,    0.7],
       [  73. ,  -71. ,    0.6],
       [  87. ,  -36. ,    0.9]])
        basis0 = BSplineBasis(7, np.array([ -2. ,  -1.1,   0. ,   0. ,   0. ,   0. ,   0. ,   0.7,   2.3,   2.7,   3.7,   5.3,   5.7,
         6.8,   8.3,   8.9,  10. ,  10.9,  12. ,  12. ,  12. ,  12. ,  12. ,  12.7,  14.3]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([7.084]*1) # insert C5-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 26)
        crv2.insert_knot([9.227]*2) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([10.777]*3) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 31)
        crv2.insert_knot([9.634]*4) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 35)
        crv2.insert_knot([1.373]*5) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 40)
        crv2.insert_knot([3.311]*6) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 46)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p67_rational_C1_periodic(self):
        controlpoints = np.array([[ 59. ,  -2. ,   0.7],       [ 53. ,  22. ,   1.2],       [ 36. ,  47. ,   1. ],       [ 16. ,  56. ,   1.1],       [-19. ,  54. ,   0.9],       [-38. ,  42. ,   1.3],       [-59. ,  28. ,   0.9],       [-57. ,  -5. ,   0.9],       [-56. , -29. ,   1.5],       [-42. , -43. ,   1.1],       [-12. , -64. ,   1.3],       [ 13. , -56. ,   1.1],       [ 38. , -48. ,   0.5],       [ 53. , -25. ,   0.8],       [ 69. ,   0. ,   0.8],       [ 60. ,  23. ,   1.3],       [ 36. ,  48. ,   1.1],       [ 16. ,  66. ,   0.7],       [-16. ,  63. ,   1.4],       [-44. ,  54. ,   0.6],       [-56. ,  31. ,   1.4],       [-66. ,   1. ,   1.4],       [-64. , -27. ,   1.4],       [-41. , -53. ,   0.8],       [-14. , -68. ,   0.9],       [ 16. , -68. ,   1.4],       [ 36. , -53. ,   1.1],       [ 55. , -24. ,   0.9],       [ 74. ,   4. ,   1. ],       [ 60. ,  27. ,   1.1],       [ 47. ,  55. ,   1.3],       [ 14. ,  68. ,   0.9],       [-15. ,  66. ,   1. ],       [-40. ,  50. ,   0.8],       [-61. ,  29. ,   0.7],       [-71. ,   0. ,   1.1],       [-65. , -34. ,   1.3],       [-40. , -59. ,   0.6],       [-17. , -65. ,   0.5],       [ 16. , -66. ,   1.3],       [ 38. , -51. ,   0.8],       [ 63. , -32. ,   1.3],       [ 79. ,  -1. ,   0.8],       [ 67. ,  37. ,   0.6],       [ 50. ,  61. ,   0.7],       [ 17. ,  73. ,   1. ],       [-19. ,  75. ,   0.9],       [-43. ,  57. ,   1.4],       [-69. ,  30. ,   0.6],       [-80. ,   1. ,   0.5],       [-71. , -33. ,   0.7],       [-46. , -59. ,   1. ],       [-14. , -74. ,   1. ],       [ 18. , -72. ,   0.7],       [ 46. , -55. ,   0.6],       [ 70. , -36. ,   0.8],       [ 76. ,   3. ,   0.8],       [ 71. ,  31. ,   0.6],       [ 50. ,  65. ,   1.3],       [ 22. ,  74. ,   1.2],       [-15. ,  76. ,   1. ],       [-52. ,  62. ,   0.8],       [-77. ,  31. ,   1. ],       [-77. ,  -2. ,   0.7],       [-71. , -40. ,   1.4],       [-51. , -62. ,   1.1],       [-22. , -75. ,   1.4],       [ 21. , -80. ,   0.8],       [ 47. , -64. ,   1.1],       [ 69. , -40. ,   0.8],       [ 85. ,  -4. ,   0.8],       [ 78. ,  32. ,   0.5],       [ 48. ,  68. ,   1.3],       [ 14. ,  81. ,   1.1],       [-23. ,  78. ,   0.6],       [-56. ,  63. ,   0.7],       [-78. ,  33. ,   1. ],       [-85. ,   4. ,   1.4],       [-81. , -42. ,   1. ],       [-52. , -66. ,   1.1],       [-20. , -88. ,   0.7],       [ 21. , -84. ,   1.1],       [ 54. , -66. ,   1.5],       [ 78. , -40. ,   1.1],       [ 94. ,   4. ,   0.5],       [ 80. ,  35. ,   1.3],       [ 53. ,  66. ,   1.4],       [ 24. ,  85. ,   1. ],       [-21. ,  92. ,   1.1],       [-58. ,  71. ,   0.7],       [-77. ,  39. ,   1.1],       [-94. ,   4. ,   1.5],       [-87. , -35. ,   1.2],       [-55. , -72. ,   0.5],       [-24. , -86. ,   1. ],       [ 24. , -87. ,   1.5],       [ 54. , -69. ,   0.8],       [ 81. , -41. ,   0.8],       [ 99. ,  -4. ,   1.4],       [ 88. ,  43. ,   0.9],       [ 59. ,  76. ,   1.4],       [ 23. ,  92. ,   0.7],       [-26. ,  87. ,   0.9],       [-58. ,  70. ,   1.4],       [-88. ,  38. ,   1.4],       [-97. ,   3. ,   0.7],       [-90. , -40. ,   0.9],       [-56. , -71. ,   1.5],       [-24. , -90. ,   1.4],       [ 25. , -89. ,   1.3],       [ 57. , -75. ,   0.9],       [ 82. , -46. ,   1.4],       [ 97. ,  -4. ,   1.4],       [ 94. ,  41. ,   0.7],       [ 58. ,  77. ,   1. ],       [ 18. ,  93. ,   1.2],       [-22. ,  96. ,   0.6],       [-66. ,  77. ,   1.1],       [-92. ,  46. ,   0.9],       [-96. ,  -3. ,   0.7],       [-86. , -41. ,   1.2],       [-66. , -79. ,   1. ],       [-25. , -98. ,   1.5],       [ 20. , -96. ,   0.8],       [ 67. , -81. ,   1. ],       [ 88. , -48. ,   1. ]])
        basis0 = BSplineBasis(6, np.array([ -1.9,  -1.1,   0. ,   0. ,   0. ,   0. ,   1.3,   1.9,   2.9,   4.2,   5.2,   5.7,   6.7,
         8.4,   9.1,   9.9,  11. ,  11. ,  11. ,  11. ,  12.3,  12.9]),1)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.2,  3. ,  3. ,  3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([9.786]*1, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 23)
        surf2.insert_knot([1.544]*2, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([2.329]*3, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 28)
        surf2.insert_knot([2.516]*4, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 32)
        surf2.insert_knot([2.319]*5, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 37)
        surf2.insert_knot([1.079]*1, 1) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 17)
        surf2.insert_knot([1.367]*2, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 19)
        surf2.insert_knot([2.084]*3, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 22)
        surf2.insert_knot([2.081]*4, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 26)
        surf2.insert_knot([1.401]*5, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 31)
        surf2.insert_knot([1.748]*6, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 37)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p6_rational_C2_periodic(self):
        controlpoints = np.array([[ 104. ,   -4. ,    0.7],
       [  94. ,   35. ,    1.4],
       [  73. ,   74. ,    1. ],
       [  42. ,   96. ,    0.9],
       [  -4. ,  100. ,    1. ],
       [ -40. ,   96. ,    0.9],
       [ -67. ,   70. ,    1.4],
       [ -88. ,   42. ,    0.9],
       [ -96. ,   -3. ,    0.9],
       [ -97. ,  -34. ,    1.2],
       [ -66. ,  -72. ,    1. ],
       [ -35. ,  -91. ,    1. ],
       [   3. ,  -97. ,    1.4],
       [  37. ,  -88. ,    0.6],
       [  73. ,  -74. ,    1.5],
       [  88. ,  -39. ,    0.6]])
        basis0 = BSplineBasis(6, np.array([ -3.3,  -2.3,  -0.8,   0. ,   0. ,   0. ,   0.9,   2.3,   3.3,   4.1,   5.4,   6.2,   6.8,
         8. ,   9.2,  10.3,  10.7,  11.7,  13.2,  14. ,  14. ,  14. ,  14.9,  16.3,  17.3]),2)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([8.511]*1) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 26)
        crv2.insert_knot([4.345]*2) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([2.969]*3) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 31)
        crv2.insert_knot([3.522]*4) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 35)
        crv2.insert_knot([12.931]*5) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 40)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p57_rational_C2_periodic(self):
        controlpoints = np.array([[  58. ,   -4. ,    1.4],       [  58. ,   21. ,    0.9],       [  38. ,   45. ,    0.6],       [  18. ,   61. ,    1. ],       [ -12. ,   55. ,    1.1],       [ -37. ,   46. ,    1.3],       [ -51. ,   21. ,    1.5],       [ -65. ,   -2. ,    0.9],       [ -52. ,  -23. ,    0.9],       [ -33. ,  -44. ,    0.7],       [ -11. ,  -57. ,    1.5],       [  16. ,  -56. ,    1. ],       [  41. ,  -46. ,    0.6],       [  54. ,  -28. ,    1.2],       [  68. ,    4. ,    1.3],       [  57. ,   31. ,    1.3],       [  44. ,   47. ,    0.5],       [  13. ,   65. ,    1.2],       [ -10. ,   65. ,    0.7],       [ -41. ,   51. ,    1.3],       [ -61. ,   24. ,    0.6],       [ -66. ,    2. ,    1. ],       [ -57. ,  -33. ,    0.6],       [ -38. ,  -49. ,    0.6],       [ -14. ,  -67. ,    1.4],       [  11. ,  -68. ,    1.3],       [  38. ,  -54. ,    1.4],       [  56. ,  -28. ,    0.5],       [  68. ,   -3. ,    1.2],       [  67. ,   34. ,    1.5],       [  47. ,   60. ,    1.5],       [  17. ,   74. ,    0.8],       [ -16. ,   74. ,    1.3],       [ -42. ,   56. ,    1.3],       [ -69. ,   29. ,    1. ],       [ -76. ,   -4. ,    0.6],       [ -68. ,  -32. ,    1.4],       [ -48. ,  -55. ,    0.7],       [ -20. ,  -71. ,    1.1],       [  19. ,  -71. ,    1.5],       [  44. ,  -54. ,    1.3],       [  69. ,  -34. ,    0.6],       [  77. ,   -5. ,    1.3],       [  73. ,   28. ,    1.3],       [  46. ,   62. ,    0.6],       [  22. ,   76. ,    1.3],       [ -15. ,   71. ,    1.4],       [ -51. ,   58. ,    1.5],       [ -71. ,   31. ,    0.9],       [ -81. ,    0. ,    1. ],       [ -67. ,  -36. ,    1.1],       [ -44. ,  -59. ,    1.3],       [ -18. ,  -71. ,    0.9],       [  19. ,  -72. ,    0.6],       [  51. ,  -64. ,    1.1],       [  66. ,  -31. ,    0.6],       [  83. ,   -4. ,    0.9],       [  71. ,   34. ,    0.6],       [  49. ,   63. ,    1.4],       [  18. ,   80. ,    1.1],       [ -19. ,   85. ,    0.9],       [ -54. ,   61. ,    1.3],       [ -74. ,   34. ,    1.1],       [ -88. ,   -1. ,    0.6],       [ -74. ,  -40. ,    1.3],       [ -55. ,  -63. ,    1.4],       [ -16. ,  -80. ,    1. ],       [  14. ,  -84. ,    1.3],       [  55. ,  -61. ,    0.8],       [  76. ,  -34. ,    1.2],       [  85. ,    0. ,    0.8],       [  82. ,   42. ,    0.9],       [  55. ,   64. ,    0.9],       [  16. ,   85. ,    0.6],       [ -17. ,   90. ,    0.7],       [ -59. ,   66. ,    0.8],       [ -77. ,   33. ,    1.3],       [ -93. ,    0. ,    1. ],       [ -83. ,  -42. ,    1.4],       [ -51. ,  -67. ,    1.3],       [ -16. ,  -85. ,    1.3],       [  24. ,  -85. ,    1.2],       [  50. ,  -66. ,    1.4],       [  75. ,  -41. ,    0.7],       [  95. ,    3. ,    0.5],       [  85. ,   38. ,    1.3],       [  57. ,   73. ,    1.4],       [  17. ,   92. ,    1.3],       [ -18. ,   92. ,    0.8],       [ -59. ,   71. ,    1. ],       [ -81. ,   43. ,    1.3],       [ -96. ,    4. ,    0.5],       [ -81. ,  -46. ,    1.1],       [ -61. ,  -70. ,    1.2],       [ -21. ,  -88. ,    1.3],       [  23. ,  -95. ,    0.8],       [  57. ,  -78. ,    0.9],       [  81. ,  -46. ,    1.4],       [  98. ,   -5. ,    1.2],       [  91. ,   40. ,    1.3],       [  58. ,   77. ,    0.9],       [  25. ,   96. ,    1. ],       [ -22. ,   98. ,    1.3],       [ -62. ,   75. ,    0.6],       [ -92. ,   46. ,    1. ],       [ -96. ,    2. ,    1. ],       [ -89. ,  -41. ,    0.9],       [ -64. ,  -77. ,    0.7],       [ -18. ,  -99. ,    1. ],       [  20. , -103. ,    1.3],       [  65. ,  -83. ,    1.1],       [  92. ,  -45. ,    1.3]])
        basis0 = BSplineBasis(5, np.array([ -3.3,  -1.6,  -1. ,   0. ,   0. ,   1.4,   1.7,   2.7,   4.2,   4.6,   5.9,   7.4,   8. ,
         8.6,   9.7,  11.4,  12. ,  13. ,  13. ,  14.4,  14.7,  15.7]),2)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([3.019]*1, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 23)
        surf2.insert_knot([4.745]*2, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([4.335]*3, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 28)
        surf2.insert_knot([5.665]*4, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 32)
        surf2.insert_knot([0.900]*1, 1) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([0.900]*2, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([0.900]*3, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([0.900]*4, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)
        surf2.insert_knot([0.900]*5, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 30)
        surf2.insert_knot([0.900]*6, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 36)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p5(self):
        controlpoints = np.array([[ -4.,  -5.],
       [ 11.,  -3.],
       [ 31.,  -5.],
       [ 43.,  -3.],
       [ 57.,  -2.],
       [ 73.,   1.],
       [ 86.,  -2.],
       [ 99.,   2.]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.1,  3.3,  4. ,  4. ,  4. ,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([1.251]*1) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 14)
        crv2.insert_knot([2.990]*2) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 16)
        crv2.insert_knot([2.428]*3) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 19)
        crv2.insert_knot([2.036]*4) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p77(self):
        controlpoints = np.array([[   2.,    2.],       [   8.,    3.],       [  19.,   -3.],       [  27.,    0.],       [  38.,    0.],       [  42.,   -5.],       [  51.,   -5.],       [  60.,   -2.],       [  74.,    3.],       [  81.,    2.],       [  86.,    0.],       [ 100.,   -1.],       [   3.,   12.],       [  10.,    8.],       [  16.,   11.],       [  29.,    8.],       [  38.,   15.],       [  49.,    8.],       [  56.,    7.],       [  59.,    7.],       [  70.,    8.],       [  81.,   14.],       [  92.,   15.],       [ 102.,    8.],       [  -1.,   21.],       [   8.,   22.],       [  22.,   21.],       [  23.,   28.],       [  40.,   28.],       [  46.,   26.],       [  51.,   22.],       [  64.,   28.],       [  71.,   23.],       [  81.,   29.],       [  94.,   21.],       [  97.,   25.],       [   2.,   37.],       [   6.,   33.],       [  17.,   33.],       [  26.,   42.],       [  39.,   38.],       [  42.,   40.],       [  55.,   34.],       [  67.,   41.],       [  69.,   35.],       [  80.,   36.],       [  92.,   39.],       [  98.,   38.],       [   2.,   53.],       [  14.,   48.],       [  18.,   45.],       [  31.,   50.],       [  37.,   52.],       [  43.,   45.],       [  50.,   52.],       [  60.,   51.],       [  76.,   49.],       [  78.,   47.],       [  92.,   47.],       [ 101.,   52.],       [   0.,   60.],       [  11.,   66.],       [  16.,   62.],       [  29.,   67.],       [  37.,   67.],       [  46.,   63.],       [  52.,   60.],       [  68.,   61.],       [  74.,   62.],       [  82.,   60.],       [  88.,   59.],       [ 101.,   64.],       [  -3.,   73.],       [   7.,   76.],       [  14.,   76.],       [  25.,   77.],       [  32.,   70.],       [  46.,   72.],       [  52.,   74.],       [  64.,   70.],       [  70.,   70.],       [  77.,   71.],       [  91.,   78.],       [  97.,   71.],       [   0.,   92.],       [  11.,   83.],       [  13.,   86.],       [  26.,   86.],       [  31.,   86.],       [  43.,   83.],       [  56.,   92.],       [  60.,   90.],       [  69.,   88.],       [  79.,   83.],       [  88.,   91.],       [  96.,   83.],       [   2.,  100.],       [  14.,  103.],       [  15.,  104.],       [  26.,  103.],       [  33.,   97.],       [  49.,  104.],       [  53.,  101.],       [  65.,  100.],       [  71.,   96.],       [  77.,   98.],       [  95.,   97.],       [  95.,   98.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.9,  3.3,  3.9,  5.3,  6. ,  6. ,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.8,  3. ,  3. ,  3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([2.447]*1, 0) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([3.992]*2, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([4.580]*3, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([1.223]*4, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([2.287]*5, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 34)
        surf2.insert_knot([4.441]*6, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 40)
        surf2.insert_knot([1.758]*1, 1) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 17)
        surf2.insert_knot([1.640]*2, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 19)
        surf2.insert_knot([1.489]*3, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 22)
        surf2.insert_knot([1.459]*4, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 26)
        surf2.insert_knot([1.549]*5, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 31)
        surf2.insert_knot([1.305]*6, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 37)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p7_C0_periodic(self):
        controlpoints = np.array([[  99.,    2.],
       [  90.,   47.],
       [  59.,   76.],
       [  26.,   98.],
       [ -22.,   94.],
       [ -62.,   78.],
       [ -86.,   40.],
       [-100.,   -5.],
       [ -90.,  -46.],
       [ -62.,  -80.],
       [ -22., -100.],
       [  18.,  -97.],
       [  60.,  -84.],
       [  85.,  -44.]])
        basis0 = BSplineBasis(7, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.9,  3.3,  4.1,  5. ,  6.1,  7.3,  8. ,
        9. ,  9. ,  9. ,  9. ,  9. ,  9. ,  9.9]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([5.797]*1) # insert C5-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)
        crv2.insert_knot([2.196]*2) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)
        crv2.insert_knot([2.343]*3) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([1.793]*4) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 32)
        crv2.insert_knot([6.026]*5) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 37)
        crv2.insert_knot([2.112]*6) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 43)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p75_C0_periodic(self):
        controlpoints = np.array([[  57.,    0.],       [  49.,   27.],       [  34.,   44.],       [  17.,   58.],       [ -10.,   63.],       [ -35.,   42.],       [ -57.,   23.],       [ -57.,   -2.],       [ -55.,  -22.],       [ -38.,  -48.],       [ -13.,  -61.],       [  17.,  -62.],       [  33.,  -46.],       [  57.,  -24.],       [  67.,    4.],       [  55.,   32.],       [  39.,   49.],       [  11.,   64.],       [ -18.,   68.],       [ -44.,   51.],       [ -61.,   24.],       [ -68.,    0.],       [ -59.,  -31.],       [ -44.,  -51.],       [ -20.,  -62.],       [  13.,  -63.],       [  42.,  -55.],       [  59.,  -32.],       [  77.,   -3.],       [  65.,   28.],       [  44.,   57.],       [  18.,   74.],       [ -15.,   70.],       [ -45.,   57.],       [ -67.,   27.],       [ -74.,   -1.],       [ -64.,  -29.],       [ -41.,  -57.],       [ -21.,  -71.],       [  12.,  -74.],       [  44.,  -62.],       [  65.,  -28.],       [  81.,   -3.],       [  71.,   32.],       [  49.,   66.],       [  21.,   82.],       [ -18.,   81.],       [ -49.,   64.],       [ -76.,   35.],       [ -84.,    4.],       [ -71.,  -40.],       [ -49.,  -66.],       [ -20.,  -79.],       [  16.,  -76.],       [  52.,  -65.],       [  73.,  -34.],       [  82.,   -3.],       [  73.,   40.],       [  50.,   67.],       [  21.,   86.],       [ -18.,   84.],       [ -50.,   65.],       [ -75.,   33.],       [ -87.,    3.],       [ -82.,  -33.],       [ -54.,  -64.],       [ -20.,  -84.],       [  16.,  -89.],       [  56.,  -64.],       [  79.,  -40.],       [  91.,    1.],       [  88.,   41.],       [  63.,   69.],       [  23.,   91.],       [ -24.,   95.],       [ -56.,   70.],       [ -81.,   35.],       [ -98.,   -3.],       [ -80.,  -44.],       [ -55.,  -74.],       [ -25.,  -91.],       [  15.,  -92.],       [  57.,  -76.],       [  82.,  -41.],       [  95.,    2.],       [  87.,   45.],       [  58.,   80.],       [  18.,  101.],       [ -23.,   95.],       [ -66.,   73.],       [ -91.,   41.],       [-101.,   -2.],       [ -94.,  -49.],       [ -58.,  -80.],       [ -23.,  -97.],       [  24.,  -98.],       [  60.,  -77.],       [  89.,  -43.]])
        basis0 = BSplineBasis(7, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3.2,  3.6,  5. ,  6.2,  6.6,  8. ,
        9. ,  9. ,  9. ,  9. ,  9. ,  9. ,  9.8]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([4.890]*1, 0) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 23)
        surf2.insert_knot([2.222]*2, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([5.402]*3, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 28)
        surf2.insert_knot([3.185]*4, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 32)
        surf2.insert_knot([1.632]*5, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 37)
        surf2.insert_knot([5.151]*6, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 43)
        surf2.insert_knot([1.442]*1, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 13)
        surf2.insert_knot([1.254]*2, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 15)
        surf2.insert_knot([1.208]*3, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([1.231]*4, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 22)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p6_C1_periodic(self):
        controlpoints = np.array([[ 103.,   -2.],
       [  93.,   47.],
       [  61.,   75.],
       [  18.,   95.],
       [ -19.,  102.],
       [ -60.,   80.],
       [ -92.,   44.],
       [ -98.,    1.],
       [ -88.,  -43.],
       [ -60.,  -75.],
       [ -23., -100.],
       [  23.,  -96.],
       [  64.,  -81.],
       [  89.,  -41.]])
        basis0 = BSplineBasis(6, np.array([ -1.7,  -1.2,   0. ,   0. ,   0. ,   0. ,   0.7,   1.7,   2.7,   4. ,   4.7,   6.4,   7.2,
         7.8,   9.3,   9.8,  11. ,  11. ,  11. ,  11. ,  11.7,  12.7]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([6.892]*1) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)
        crv2.insert_knot([4.668]*2) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)
        crv2.insert_knot([7.163]*3) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([4.476]*4) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 32)
        crv2.insert_knot([1.524]*5) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 37)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p56_C1_periodic(self):
        controlpoints = np.array([[  57.,    0.],       [  47.,   34.],       [  29.,   50.],       [  -2.,   58.],       [ -28.,   51.],       [ -51.,   31.],       [ -65.,   -5.],       [ -54.,  -33.],       [ -35.,  -50.],       [  -1.,  -63.],       [  28.,  -51.],       [  50.,  -27.],       [  62.,   -2.],       [  52.,   32.],       [  27.,   55.],       [   0.,   68.],       [ -34.,   54.],       [ -56.,   32.],       [ -64.,   -2.],       [ -55.,  -29.],       [ -37.,  -59.],       [  -2.,  -63.],       [  28.,  -57.],       [  51.,  -36.],       [  65.,    2.],       [  58.,   32.],       [  38.,   64.],       [   1.,   67.],       [ -38.,   62.],       [ -60.,   31.],       [ -74.,    4.],       [ -63.,  -35.],       [ -39.,  -62.],       [  -3.,  -69.],       [  33.,  -57.],       [  63.,  -31.],       [  71.,   -1.],       [  63.,   34.],       [  37.,   66.],       [  -2.,   74.],       [ -39.,   62.],       [ -64.,   35.],       [ -79.,   -1.],       [ -68.,  -33.],       [ -36.,  -62.],       [   2.,  -80.],       [  34.,  -68.],       [  68.,  -37.],       [  83.,    3.],       [  70.,   36.],       [  38.,   71.],       [   0.,   84.],       [ -43.,   68.],       [ -69.,   37.],       [ -78.,   -1.],       [ -70.,  -44.],       [ -43.,  -70.],       [  -1.,  -76.],       [  43.,  -69.],       [  71.,  -37.],       [  89.,   -5.],       [  76.,   37.],       [  44.,   71.],       [   4.,   88.],       [ -48.,   72.],       [ -76.,   46.],       [ -88.,    2.],       [ -72.,  -40.],       [ -41.,  -71.],       [   3.,  -84.],       [  45.,  -76.],       [  77.,  -41.],       [  90.,   -2.],       [  75.,   43.],       [  43.,   77.],       [  -4.,   89.],       [ -48.,   81.],       [ -77.,   44.],       [ -88.,    3.],       [ -80.,  -45.],       [ -42.,  -78.],       [  -5.,  -91.],       [  45.,  -83.],       [  74.,  -49.],       [  92.,    0.],       [  80.,   52.],       [  44.,   79.],       [   4.,   91.],       [ -45.,   78.],       [ -79.,   45.],       [ -96.,   -1.],       [ -78.,  -47.],       [ -50.,  -80.],       [   1.,  -96.],       [  46.,  -85.],       [  80.,  -44.],       [  97.,    4.],       [  81.,   50.],       [  46.,   83.],       [   1.,  102.],       [ -53.,   89.],       [ -88.,   54.],       [-104.,    1.],       [ -83.,  -46.],       [ -47.,  -85.],       [  -1., -103.],       [  51.,  -88.],       [  89.,  -49.]])
        basis0 = BSplineBasis(5, np.array([ -2.3,  -0.8,   0. ,   0. ,   0. ,   1.1,   2.2,   3.1,   4. ,   5.2,   6. ,   7. ,   7.7,
         9.2,  10. ,  10. ,  10. ,  11.1,  12.2]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  3.3,  4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([4.571]*1, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([1.305]*2, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([4.661]*3, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([6.177]*4, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([2.728]*1, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([2.997]*2, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([1.715]*3, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([1.293]*4, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)
        surf2.insert_knot([1.562]*5, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 30)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_2D_p5_C2_periodic(self):
        controlpoints = np.array([[ 95.,  -3.],
       [ 86.,  48.],
       [ 59.,  81.],
       [ 20.,  94.],
       [-27.,  98.],
       [-62.,  79.],
       [-87.,  45.],
       [-98.,   1.],
       [-87., -47.],
       [-61., -75.],
       [-22., -95.],
       [ 26., -96.],
       [ 59., -78.],
       [ 86., -45.]])
        basis0 = BSplineBasis(5, np.array([ -2.7,  -2.1,  -0.9,   0. ,   0. ,   1.2,   2.2,   3.2,   4.3,   5.4,   6.2,   6.9,   7.9,
         8.9,  10.3,  10.9,  12.1,  13. ,  13. ,  14.2,  15.2,  16.2]),2)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([1.679]*1) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)
        crv2.insert_knot([7.134]*2) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)
        crv2.insert_knot([4.075]*3) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([11.422]*4) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 32)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_2D_p55_C2_periodic(self):
        controlpoints = np.array([[  64.,   -1.],       [  58.,   24.],       [  33.,   51.],       [  13.,   61.],       [ -15.,   56.],       [ -34.,   44.],       [ -58.,   23.],       [ -56.,    2.],       [ -50.,  -28.],       [ -42.,  -49.],       [ -16.,  -62.],       [  16.,  -63.],       [  33.,  -44.],       [  52.,  -22.],       [  60.,   -2.],       [  55.,   31.],       [  39.,   45.],       [  14.,   66.],       [ -14.,   67.],       [ -45.,   47.],       [ -57.,   23.],       [ -69.,   -2.],       [ -63.,  -32.],       [ -40.,  -47.],       [ -16.,  -68.],       [  19.,  -64.],       [  38.,  -51.],       [  54.,  -32.],       [  68.,    2.],       [  57.,   33.],       [  45.,   49.],       [  15.,   65.],       [ -13.,   64.],       [ -40.,   49.],       [ -64.,   34.],       [ -72.,   -1.],       [ -66.,  -27.],       [ -44.,  -53.],       [ -16.,  -66.],       [  12.,  -72.],       [  43.,  -59.],       [  62.,  -31.],       [  72.,   -4.],       [  64.,   35.],       [  49.,   54.],       [  13.,   67.],       [ -12.,   68.],       [ -45.,   55.],       [ -70.,   35.],       [ -72.,    4.],       [ -62.,  -35.],       [ -46.,  -53.],       [ -21.,  -68.],       [  14.,  -73.],       [  42.,  -53.],       [  67.,  -28.],       [  82.,    3.],       [  66.,   36.],       [  51.,   61.],       [  13.,   78.],       [ -15.,   71.],       [ -47.,   60.],       [ -72.,   34.],       [ -75.,   -3.],       [ -71.,  -31.],       [ -45.,  -57.],       [ -19.,  -71.],       [  16.,  -77.],       [  49.,  -59.],       [  74.,  -38.],       [  82.,    2.],       [  78.,   37.],       [  52.,   67.],       [  21.,   82.],       [ -22.,   83.],       [ -49.,   59.],       [ -77.,   31.],       [ -85.,    3.],       [ -74.,  -41.],       [ -50.,  -68.],       [ -17.,  -84.],       [  22.,  -80.],       [  53.,  -68.],       [  77.,  -39.],       [  85.,   -3.],       [  78.,   34.],       [  50.,   65.],       [  19.,   89.],       [ -18.,   82.],       [ -53.,   63.],       [ -74.,   39.],       [ -88.,   -5.],       [ -81.,  -42.],       [ -59.,  -69.],       [ -19.,  -87.],       [  21.,  -81.],       [  55.,  -67.],       [  73.,  -35.],       [  93.,   -4.],       [  85.,   41.],       [  56.,   68.],       [  18.,   86.],       [ -22.,   89.],       [ -56.,   70.],       [ -86.,   39.],       [ -94.,    3.],       [ -87.,  -39.],       [ -61.,  -73.],       [ -17.,  -89.],       [  23.,  -85.],       [  54.,  -75.],       [  84.,  -41.],       [  92.,    2.],       [  88.,   41.],       [  56.,   76.],       [  25.,   91.],       [ -24.,   89.],       [ -57.,   76.],       [ -88.,   42.],       [ -94.,    2.],       [ -82.,  -42.],       [ -63.,  -79.],       [ -21.,  -97.],       [  16.,  -97.],       [  64.,  -80.],       [  89.,  -42.],       [ 101.,    4.],       [  93.,   38.],       [  63.,   78.],       [  23.,   94.],       [ -19.,   99.],       [ -68.,   79.],       [ -95.,   44.],       [-100.,   -5.],       [ -87.,  -48.],       [ -60.,  -78.],       [ -27., -103.],       [  18., -101.],       [  63.,  -77.],       [  93.,  -48.]])
        basis0 = BSplineBasis(5, np.array([ -3.3,  -1.9,  -1.2,   0. ,   0. ,   1.4,   2.1,   2.8,   4. ,   5.1,   6.4,   6.8,   8.4,
         8.6,   9.7,  11.1,  11.8,  13. ,  13. ,  14.4,  15.1,  15.8]),2)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2.4,  3.1,  4.3,  5.3,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([9.898]*1, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 23)
        surf2.insert_knot([10.314]*2, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([7.918]*3, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 28)
        surf2.insert_knot([5.605]*4, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 32)
        surf2.insert_knot([1.507]*1, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([3.631]*2, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([0.801]*3, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([2.615]*4, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p7_rational(self):
        controlpoints = np.array([[   2. ,   -2. ,   -3. ,    0.8],
       [   9. ,    0. ,   -5. ,    1.3],
       [  23. ,    0. ,    3. ,    0.6],
       [  31. ,   -3. ,    2. ,    1.2],
       [  35. ,    3. ,    0. ,    0.9],
       [  48. ,   -1. ,    2. ,    0.6],
       [  50. ,   -4. ,    2. ,    1.2],
       [  66. ,    0. ,    0. ,    1.2],
       [  76. ,    1. ,   -2. ,    0.6],
       [  80. ,   -1. ,   -4. ,    0.8],
       [  91. ,    4. ,   -4. ,    1. ],
       [ 100. ,    0. ,    0. ,    1.2]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.2,  2.7,  3.8,  5. ,  6. ,  6. ,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([3.998]*1) # insert C5-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 20)
        crv2.insert_knot([4.584]*2) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 22)
        crv2.insert_knot([3.639]*3) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)
        crv2.insert_knot([1.719]*4) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 29)
        crv2.insert_knot([4.531]*5) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 34)
        crv2.insert_knot([2.577]*6) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 40)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p76_rational(self):
        controlpoints = np.array([[   4. ,   -5. ,    4. ,    0.7],       [   6. ,   -3. ,    1. ,    0.8],       [  13. ,    4. ,   -3. ,    0.9],       [  25. ,    2. ,   -5. ,    1.1],       [  40. ,   -2. ,    4. ,    0.5],       [  40. ,   -4. ,    0. ,    0.5],       [  54. ,    4. ,    4. ,    0.7],       [  63. ,   -2. ,   -1. ,    1. ],       [  76. ,    4. ,    2. ,    1. ],       [  84. ,    4. ,    4. ,    1. ],       [  95. ,   -3. ,   -1. ,    1. ],       [  99. ,   -1. ,    4. ,    1.4],       [   2. ,   13. ,   -5. ,    0.8],       [   5. ,   12. ,   -1. ,    1. ],       [  13. ,   12. ,   -4. ,    0.5],       [  29. ,   20. ,    0. ,    0.8],       [  31. ,   15. ,    0. ,    1. ],       [  43. ,   20. ,   -5. ,    0.5],       [  52. ,   21. ,    4. ,    1. ],       [  60. ,   15. ,    0. ,    0.9],       [  74. ,   18. ,    3. ,    1.3],       [  79. ,   14. ,   -1. ,    1.5],       [  91. ,   17. ,   -3. ,    1.4],       [ 101. ,   20. ,   -2. ,    1.1],       [  -3. ,   35. ,    2. ,    1.3],       [   5. ,   28. ,   -5. ,    0.6],       [  17. ,   31. ,   -3. ,    0.6],       [  22. ,   29. ,    4. ,    0.8],       [  39. ,   34. ,    0. ,    1.2],       [  45. ,   28. ,    0. ,    0.5],       [  52. ,   34. ,    4. ,    0.7],       [  66. ,   30. ,    0. ,    1.1],       [  69. ,   31. ,   -5. ,    0.6],       [  77. ,   30. ,   -5. ,    0.5],       [  90. ,   29. ,   -4. ,    1.1],       [  98. ,   34. ,    3. ,    1.1],       [  -3. ,   45. ,   -2. ,    1. ],       [   9. ,   48. ,    3. ,    1. ],       [  17. ,   53. ,   -1. ,    1.2],       [  23. ,   50. ,   -4. ,    0.9],       [  32. ,   46. ,   -5. ,    1. ],       [  44. ,   51. ,    3. ,    1.1],       [  50. ,   52. ,   -5. ,    1.1],       [  61. ,   54. ,    0. ,    1. ],       [  70. ,   47. ,   -1. ,    0.6],       [  79. ,   49. ,   -3. ,    0.8],       [  91. ,   52. ,    4. ,    1.4],       [ 104. ,   49. ,   -4. ,    1.1],       [   4. ,   71. ,   -2. ,    1.2],       [  10. ,   68. ,   -5. ,    1.2],       [  20. ,   65. ,    4. ,    1.2],       [  31. ,   62. ,    3. ,    1. ],       [  40. ,   67. ,   -2. ,    1. ],       [  47. ,   66. ,    3. ,    1.1],       [  51. ,   63. ,   -1. ,    0.8],       [  62. ,   62. ,    1. ,    0.6],       [  76. ,   63. ,   -5. ,    1.4],       [  77. ,   67. ,    0. ,    1.4],       [  87. ,   64. ,    4. ,    0.7],       [  99. ,   67. ,   -1. ,    1.4],       [  -3. ,   88. ,    4. ,    1.5],       [   8. ,   80. ,    4. ,    0.6],       [  18. ,   80. ,   -5. ,    0.9],       [  24. ,   87. ,   -2. ,    0.6],       [  34. ,   81. ,    1. ,    1.3],       [  42. ,   79. ,    2. ,    1.1],       [  51. ,   81. ,   -5. ,    1.2],       [  64. ,   83. ,    1. ,    1. ],       [  73. ,   88. ,    2. ,    0.9],       [  77. ,   84. ,   -5. ,    1.5],       [  95. ,   86. ,   -5. ,    1. ],       [ 104. ,   86. ,    1. ,    1.4],       [  -5. ,  101. ,   -5. ,    0.6],       [   8. ,  103. ,    1. ,    0.9],       [  20. ,  100. ,    0. ,    1.4],       [  27. ,   96. ,    0. ,    1.1],       [  39. ,   99. ,    2. ,    1.3],       [  49. ,   99. ,    0. ,    0.5],       [  52. ,   96. ,    3. ,    0.8],       [  68. ,   95. ,    4. ,    1. ],       [  75. ,  100. ,   -1. ,    1.1],       [  84. ,   95. ,   -1. ,    0.9],       [  92. ,  101. ,   -1. ,    1. ],       [ 102. ,   97. ,   -1. ,    1.1]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.6,  3. ,  4. ,  4.8,  6. ,  6. ,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([3.941]*1, 0) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([2.768]*2, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([3.313]*3, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([4.207]*4, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([1.078]*5, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 34)
        surf2.insert_knot([2.325]*6, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 40)
        surf2.insert_knot([0.800]*1, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 14)
        surf2.insert_knot([0.800]*2, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([0.800]*3, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 19)
        surf2.insert_knot([0.800]*4, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 23)
        surf2.insert_knot([0.800]*5, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 28)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p676_rational(self):
        controlpoints = np.array([[  -4. ,    1. ,   -5. ,    0.7],       [  10. ,    0. ,   -3. ,    1. ],       [  23. ,    2. ,    1. ,    0.6],       [  32. ,   -4. ,    4. ,    0.6],       [  40. ,    3. ,   -2. ,    0.9],       [  55. ,    3. ,   -3. ,    1.3],       [  65. ,   -5. ,    4. ,    1.2],       [  78. ,   -4. ,    1. ,    1. ],       [  88. ,   -2. ,   -4. ,    1.3],       [  99. ,    4. ,    1. ,    1. ],       [  -4. ,   12. ,   -4. ,    0.7],       [   6. ,   16. ,   -4. ,    1.2],       [  19. ,   14. ,    1. ,    1.3],       [  35. ,    9. ,    4. ,    0.6],       [  48. ,   18. ,   -1. ,    0.7],       [  57. ,   11. ,    2. ,    0.7],       [  70. ,   16. ,   -1. ,    1.2],       [  75. ,   13. ,    2. ,    1.5],       [  92. ,   10. ,   -5. ,    0.7],       [  96. ,   14. ,    2. ,    1.4],       [   1. ,   30. ,    4. ,    0.8],       [   8. ,   33. ,    3. ,    1. ],       [  21. ,   31. ,   -2. ,    0.7],       [  31. ,   32. ,   -5. ,    0.9],       [  40. ,   33. ,    2. ,    0.6],       [  55. ,   24. ,   -2. ,    0.8],       [  64. ,   32. ,    4. ,    0.8],       [  81. ,   32. ,    2. ,    1.1],       [  90. ,   24. ,   -2. ,    1.1],       [  95. ,   31. ,    3. ,    1. ],       [  -2. ,   44. ,   -4. ,    1.1],       [  13. ,   46. ,   -2. ,    1.5],       [  23. ,   38. ,   -5. ,    1.4],       [  29. ,   44. ,   -2. ,    0.9],       [  44. ,   47. ,   -5. ,    0.9],       [  54. ,   43. ,   -4. ,    1.2],       [  64. ,   46. ,    3. ,    0.6],       [  75. ,   43. ,    0. ,    1. ],       [  89. ,   42. ,   -5. ,    0.9],       [  97. ,   39. ,    3. ,    0.7],       [   4. ,   58. ,    1. ,    0.6],       [  11. ,   57. ,   -3. ,    1.3],       [  23. ,   52. ,    0. ,    0.6],       [  29. ,   53. ,   -3. ,    1.3],       [  48. ,   56. ,   -2. ,    1.1],       [  56. ,   60. ,   -1. ,    1.1],       [  70. ,   59. ,   -1. ,    1.5],       [  75. ,   53. ,   -2. ,    1.3],       [  92. ,   56. ,    3. ,    1. ],       [ 103. ,   55. ,   -4. ,    1.2],       [  -2. ,   69. ,    2. ,    0.6],       [  12. ,   69. ,    2. ,    1. ],       [  21. ,   71. ,   -3. ,    0.8],       [  28. ,   73. ,   -1. ,    0.8],       [  48. ,   70. ,   -5. ,    1.3],       [  59. ,   76. ,    4. ,    1.3],       [  65. ,   69. ,   -1. ,    1.4],       [  78. ,   68. ,   -3. ,    1.4],       [  87. ,   73. ,   -3. ,    0.5],       [  97. ,   68. ,    4. ,    0.7],       [  -2. ,   82. ,    4. ,    0.7],       [   8. ,   86. ,   -2. ,    1.1],       [  17. ,   83. ,    3. ,    0.9],       [  31. ,   83. ,   -2. ,    0.8],       [  43. ,   88. ,    4. ,    1.4],       [  59. ,   84. ,   -3. ,    0.5],       [  66. ,   86. ,   -5. ,    1.1],       [  81. ,   87. ,   -4. ,    0.6],       [  85. ,   85. ,   -4. ,    0.6],       [  98. ,   83. ,   -2. ,    1.4],       [   0. ,  104. ,   -1. ,    0.5],       [   9. ,   96. ,    1. ,    0.7],       [  25. ,   98. ,    4. ,    0.6],       [  28. ,  103. ,   -2. ,    1.3],       [  39. ,   97. ,   -4. ,    0.9],       [  56. ,   98. ,   -1. ,    0.6],       [  64. ,  100. ,    1. ,    1. ],       [  73. ,  103. ,   -5. ,    1.1],       [  89. ,  102. ,    2. ,    0.8],       [  98. ,   99. ,    1. ,    0.6],       [   0. ,   -3. ,    9. ,    0.8],       [  10. ,    2. ,   11. ,    0.8],       [  22. ,    2. ,   11. ,    0.6],       [  36. ,    0. ,   14. ,    1.3],       [  46. ,    1. ,   13. ,    1.5],       [  54. ,    0. ,   11. ,    0.6],       [  64. ,   -2. ,    8. ,    1.3],       [  75. ,   -2. ,   14. ,    0.5],       [  89. ,    3. ,   11. ,    0.6],       [ 103. ,    4. ,   14. ,    0.6],       [  -4. ,    9. ,   10. ,    0.6],       [   7. ,   11. ,   12. ,    1.4],       [  18. ,   14. ,   14. ,    0.8],       [  29. ,   15. ,    6. ,    0.9],       [  48. ,   16. ,   14. ,    0.8],       [  52. ,   19. ,   12. ,    0.7],       [  67. ,   19. ,   14. ,    0.9],       [  73. ,   15. ,    9. ,    0.6],       [  85. ,   17. ,   10. ,    1.1],       [ 103. ,   11. ,   13. ,    1. ],       [  -5. ,   24. ,   10. ,    1. ],       [   8. ,   25. ,   15. ,    1.1],       [  21. ,   25. ,    6. ,    0.6],       [  35. ,   24. ,   13. ,    0.5],       [  47. ,   31. ,   15. ,    1.3],       [  53. ,   27. ,   12. ,    1.5],       [  65. ,   29. ,    8. ,    0.7],       [  73. ,   24. ,   12. ,    0.6],       [  93. ,   24. ,    7. ,    1.2],       [ 103. ,   25. ,   13. ,    0.9],       [   1. ,   46. ,    6. ,    0.8],       [  13. ,   42. ,    8. ,    0.5],       [  20. ,   40. ,   15. ,    1.4],       [  29. ,   41. ,   11. ,    0.9],       [  47. ,   39. ,    9. ,    1.3],       [  57. ,   43. ,   11. ,    0.6],       [  65. ,   41. ,    9. ,    0.6],       [  75. ,   38. ,    6. ,    1.1],       [  90. ,   39. ,   14. ,    0.9],       [ 102. ,   44. ,    8. ,    1.1],       [   2. ,   57. ,   11. ,    1.4],       [   6. ,   53. ,   11. ,    1.2],       [  18. ,   61. ,   13. ,    1.1],       [  29. ,   53. ,   15. ,    0.7],       [  43. ,   54. ,   11. ,    0.9],       [  52. ,   56. ,    7. ,    1.3],       [  68. ,   61. ,   16. ,    0.8],       [  72. ,   56. ,   14. ,    0.9],       [  84. ,   57. ,   14. ,    0.6],       [ 102. ,   54. ,    9. ,    1.2],       [  -4. ,   67. ,    7. ,    0.8],       [   8. ,   70. ,   10. ,    0.6],       [  25. ,   75. ,   10. ,    0.7],       [  34. ,   71. ,    6. ,    0.6],       [  49. ,   69. ,   15. ,    0.9],       [  52. ,   71. ,   12. ,    1.3],       [  63. ,   67. ,    6. ,    0.9],       [  81. ,   73. ,    7. ,    1. ],       [  90. ,   74. ,   10. ,    0.9],       [ 100. ,   68. ,   14. ,    1.5],       [   4. ,   86. ,   11. ,    1.3],       [  15. ,   82. ,    7. ,    1.5],       [  21. ,   89. ,   10. ,    0.7],       [  34. ,   87. ,    8. ,    1.4],       [  40. ,   87. ,   11. ,    0.7],       [  58. ,   86. ,   12. ,    0.5],       [  66. ,   84. ,   13. ,    0.6],       [  78. ,   81. ,   11. ,    0.6],       [  90. ,   88. ,   15. ,    1.4],       [  99. ,   90. ,   15. ,    0.6],       [   2. ,  103. ,    6. ,    0.8],       [  12. ,  103. ,   12. ,    0.7],       [  20. ,   98. ,    9. ,    0.8],       [  31. ,  102. ,   10. ,    0.6],       [  40. ,  100. ,   13. ,    1. ],       [  57. ,  101. ,   14. ,    1.4],       [  66. ,   99. ,   15. ,    1.4],       [  82. ,  101. ,   15. ,    1.1],       [  89. ,   98. ,   13. ,    0.6],       [  95. ,   99. ,    9. ,    0.9],       [   3. ,   -3. ,   20. ,    1.5],       [  11. ,   -4. ,   20. ,    1.3],       [  22. ,   -5. ,   23. ,    1.2],       [  31. ,   -1. ,   24. ,    0.8],       [  43. ,   -1. ,   25. ,    0.9],       [  58. ,    2. ,   23. ,    1.5],       [  70. ,    4. ,   20. ,    1.2],       [  73. ,    3. ,   24. ,    1.1],       [  84. ,    2. ,   21. ,    0.7],       [  97. ,   -1. ,   22. ,    1.3],       [  -3. ,   17. ,   23. ,    1.3],       [   6. ,   15. ,   17. ,    0.8],       [  22. ,   19. ,   26. ,    0.5],       [  35. ,   13. ,   26. ,    0.6],       [  43. ,   17. ,   24. ,    1.1],       [  51. ,   13. ,   17. ,    1.1],       [  66. ,   11. ,   21. ,    0.7],       [  81. ,   15. ,   26. ,    1. ],       [  92. ,   15. ,   18. ,    0.6],       [ 102. ,   16. ,   26. ,    1.5],       [   2. ,   24. ,   19. ,    0.9],       [  10. ,   29. ,   26. ,    0.9],       [  21. ,   27. ,   20. ,    1.5],       [  30. ,   25. ,   26. ,    1. ],       [  47. ,   25. ,   23. ,    1.4],       [  60. ,   28. ,   23. ,    0.8],       [  67. ,   29. ,   23. ,    1.1],       [  75. ,   28. ,   17. ,    0.6],       [  93. ,   32. ,   19. ,    1. ],       [ 100. ,   25. ,   25. ,    1.1],       [   1. ,   39. ,   21. ,    0.7],       [   8. ,   38. ,   26. ,    1.5],       [  25. ,   44. ,   21. ,    1.5],       [  29. ,   38. ,   26. ,    1. ],       [  42. ,   41. ,   21. ,    0.8],       [  57. ,   47. ,   21. ,    1. ],       [  63. ,   39. ,   25. ,    0.5],       [  75. ,   44. ,   20. ,    0.6],       [  89. ,   47. ,   21. ,    1.2],       [  97. ,   47. ,   18. ,    1.3],       [  -4. ,   59. ,   25. ,    1.4],       [  15. ,   59. ,   22. ,    0.6],       [  20. ,   59. ,   26. ,    1.2],       [  34. ,   54. ,   25. ,    0.6],       [  40. ,   59. ,   26. ,    1.4],       [  52. ,   53. ,   26. ,    0.9],       [  67. ,   54. ,   18. ,    0.9],       [  80. ,   53. ,   21. ,    1.2],       [  88. ,   54. ,   19. ,    1.3],       [  96. ,   56. ,   17. ,    1.3],       [   3. ,   71. ,   25. ,    0.5],       [   6. ,   72. ,   22. ,    1.2],       [  22. ,   68. ,   27. ,    1.4],       [  30. ,   66. ,   17. ,    1.3],       [  44. ,   74. ,   23. ,    0.8],       [  55. ,   71. ,   21. ,    1.3],       [  66. ,   75. ,   19. ,    0.8],       [  80. ,   69. ,   20. ,    0.9],       [  84. ,   75. ,   27. ,    0.8],       [ 102. ,   67. ,   25. ,    0.7],       [   2. ,   85. ,   20. ,    0.9],       [  15. ,   85. ,   18. ,    1.5],       [  21. ,   86. ,   23. ,    0.9],       [  33. ,   87. ,   19. ,    0.6],       [  45. ,   84. ,   21. ,    0.6],       [  60. ,   87. ,   19. ,    1.3],       [  70. ,   85. ,   26. ,    1.5],       [  79. ,   86. ,   19. ,    0.6],       [  93. ,   90. ,   24. ,    0.7],       [ 101. ,   85. ,   24. ,    0.9],       [   3. ,   95. ,   21. ,    1.1],       [  12. ,  103. ,   25. ,    0.7],       [  22. ,   99. ,   24. ,    0.6],       [  32. ,  100. ,   26. ,    1.3],       [  48. ,  100. ,   26. ,    1. ],       [  60. ,  101. ,   24. ,    0.8],       [  71. ,  102. ,   23. ,    0.6],       [  79. ,  101. ,   20. ,    1.3],       [  91. ,   99. ,   21. ,    0.9],       [  95. ,   95. ,   19. ,    1. ],       [  -4. ,    4. ,   28. ,    0.8],       [   8. ,   -1. ,   34. ,    0.7],       [  24. ,    2. ,   32. ,    1.4],       [  30. ,   -4. ,   34. ,    1.2],       [  42. ,   -4. ,   35. ,    1.2],       [  54. ,    4. ,   31. ,    0.8],       [  67. ,   -4. ,   31. ,    0.9],       [  79. ,   -3. ,   32. ,    1. ],       [  88. ,   -4. ,   31. ,    0.9],       [ 103. ,    1. ,   34. ,    1. ],       [   3. ,   13. ,   30. ,    1. ],       [   9. ,   17. ,   32. ,    0.5],       [  26. ,   12. ,   28. ,    1.4],       [  37. ,   14. ,   29. ,    0.6],       [  40. ,   13. ,   35. ,    0.5],       [  51. ,   19. ,   35. ,    0.8],       [  62. ,   17. ,   37. ,    1.3],       [  82. ,   19. ,   30. ,    1. ],       [  87. ,   17. ,   32. ,    0.8],       [ 104. ,   10. ,   34. ,    0.7],       [  -2. ,   33. ,   30. ,    0.6],       [  12. ,   33. ,   32. ,    1.4],       [  20. ,   28. ,   33. ,    1. ],       [  35. ,   31. ,   37. ,    1.4],       [  40. ,   24. ,   38. ,    0.5],       [  58. ,   24. ,   28. ,    1.4],       [  61. ,   31. ,   36. ,    1.5],       [  78. ,   31. ,   34. ,    1.3],       [  91. ,   24. ,   34. ,    1.2],       [  98. ,   32. ,   33. ,    1.3],       [   3. ,   38. ,   30. ,    1.3],       [  13. ,   46. ,   38. ,    1.2],       [  22. ,   44. ,   30. ,    0.6],       [  34. ,   46. ,   37. ,    1.3],       [  41. ,   41. ,   31. ,    0.7],       [  53. ,   42. ,   29. ,    0.6],       [  62. ,   38. ,   33. ,    0.6],       [  76. ,   42. ,   32. ,    0.9],       [  84. ,   45. ,   36. ,    0.9],       [  95. ,   42. ,   37. ,    0.8],       [   4. ,   61. ,   33. ,    0.6],       [   8. ,   60. ,   37. ,    1.1],       [  21. ,   60. ,   30. ,    0.7],       [  31. ,   60. ,   34. ,    1.1],       [  41. ,   56. ,   35. ,    0.8],       [  51. ,   52. ,   29. ,    1.3],       [  61. ,   58. ,   28. ,    1.4],       [  76. ,   58. ,   36. ,    1.2],       [  91. ,   57. ,   35. ,    0.7],       [  97. ,   54. ,   28. ,    1.4],       [   4. ,   71. ,   28. ,    0.7],       [  12. ,   66. ,   31. ,    0.8],       [  19. ,   73. ,   35. ,    1. ],       [  36. ,   67. ,   31. ,    1.3],       [  42. ,   66. ,   32. ,    0.9],       [  60. ,   72. ,   35. ,    0.9],       [  67. ,   74. ,   34. ,    1.2],       [  73. ,   66. ,   32. ,    0.5],       [  89. ,   74. ,   28. ,    0.5],       [ 100. ,   72. ,   31. ,    1.1],       [  -5. ,   80. ,   28. ,    1. ],       [   8. ,   88. ,   35. ,    1. ],       [  26. ,   83. ,   36. ,    0.7],       [  34. ,   87. ,   36. ,    0.5],       [  40. ,   87. ,   35. ,    1.4],       [  60. ,   83. ,   29. ,    0.9],       [  70. ,   88. ,   28. ,    1. ],       [  78. ,   82. ,   37. ,    1.2],       [  89. ,   87. ,   35. ,    1.5],       [  95. ,   84. ,   32. ,    0.7],       [   3. ,   97. ,   30. ,    1.3],       [   7. ,  103. ,   31. ,    1.2],       [  22. ,  101. ,   36. ,    1. ],       [  37. ,  102. ,   28. ,    0.5],       [  43. ,  103. ,   34. ,    0.8],       [  54. ,   97. ,   36. ,    1.4],       [  67. ,  103. ,   32. ,    1.2],       [  79. ,  102. ,   31. ,    1.1],       [  86. ,   99. ,   35. ,    0.8],       [  95. ,   95. ,   34. ,    0.7],       [   0. ,    1. ,   42. ,    0.8],       [   7. ,   -1. ,   41. ,    1. ],       [  27. ,    0. ,   40. ,    1.3],       [  37. ,    4. ,   49. ,    1.3],       [  48. ,   -2. ,   44. ,    1. ],       [  58. ,   -5. ,   41. ,    1.1],       [  70. ,   -4. ,   46. ,    1. ],       [  81. ,   -1. ,   47. ,    0.9],       [  85. ,   -5. ,   45. ,    0.7],       [  98. ,    0. ,   46. ,    0.6],       [  -4. ,   15. ,   48. ,    1.2],       [  11. ,   19. ,   49. ,    0.6],       [  23. ,   17. ,   46. ,    1.1],       [  29. ,   17. ,   48. ,    0.6],       [  41. ,   14. ,   45. ,    1.3],       [  57. ,   12. ,   42. ,    0.7],       [  69. ,   13. ,   42. ,    1.4],       [  80. ,   13. ,   48. ,    1.3],       [  90. ,    9. ,   44. ,    0.6],       [  98. ,   14. ,   44. ,    1.1],       [  -4. ,   26. ,   40. ,    1.3],       [   9. ,   31. ,   47. ,    0.8],       [  22. ,   31. ,   42. ,    0.5],       [  33. ,   28. ,   47. ,    1. ],       [  45. ,   26. ,   41. ,    0.5],       [  59. ,   27. ,   44. ,    0.7],       [  71. ,   23. ,   45. ,    1.3],       [  80. ,   26. ,   47. ,    1.4],       [  87. ,   26. ,   43. ,    0.8],       [ 101. ,   30. ,   46. ,    1.4],       [   0. ,   47. ,   40. ,    0.8],       [   6. ,   47. ,   42. ,    0.6],       [  17. ,   45. ,   43. ,    0.9],       [  32. ,   44. ,   46. ,    0.6],       [  44. ,   42. ,   49. ,    1.4],       [  52. ,   43. ,   40. ,    0.5],       [  70. ,   46. ,   45. ,    1. ],       [  77. ,   43. ,   39. ,    1.1],       [  89. ,   45. ,   47. ,    0.7],       [  98. ,   41. ,   48. ,    0.9],       [   3. ,   57. ,   39. ,    1. ],       [   9. ,   59. ,   45. ,    0.9],       [  17. ,   53. ,   43. ,    1.2],       [  36. ,   57. ,   41. ,    0.9],       [  42. ,   56. ,   44. ,    1. ],       [  59. ,   54. ,   46. ,    1. ],       [  62. ,   53. ,   42. ,    1.1],       [  76. ,   56. ,   44. ,    1.3],       [  90. ,   58. ,   41. ,    1.2],       [  97. ,   61. ,   41. ,    1.2],       [  -1. ,   74. ,   43. ,    0.5],       [  11. ,   73. ,   47. ,    1.3],       [  25. ,   75. ,   40. ,    1.1],       [  35. ,   74. ,   44. ,    1.4],       [  46. ,   74. ,   49. ,    0.7],       [  52. ,   71. ,   44. ,    0.8],       [  63. ,   71. ,   47. ,    0.7],       [  81. ,   68. ,   46. ,    0.8],       [  88. ,   69. ,   47. ,    0.6],       [  95. ,   71. ,   46. ,    1.1],       [  -3. ,   83. ,   47. ,    1. ],       [   9. ,   86. ,   44. ,    0.6],       [  20. ,   90. ,   43. ,    1.3],       [  31. ,   82. ,   42. ,    1.1],       [  45. ,   86. ,   47. ,    1.3],       [  51. ,   84. ,   45. ,    1.1],       [  69. ,   81. ,   44. ,    0.8],       [  79. ,   82. ,   45. ,    1.4],       [  91. ,   86. ,   45. ,    0.5],       [ 102. ,   87. ,   43. ,    1.4],       [  -4. ,  101. ,   40. ,    1.1],       [  13. ,  104. ,   47. ,    1.2],       [  21. ,   99. ,   47. ,    0.9],       [  30. ,   98. ,   43. ,    1. ],       [  47. ,   98. ,   43. ,    1.3],       [  59. ,  100. ,   42. ,    1.2],       [  68. ,  104. ,   47. ,    0.7],       [  80. ,  103. ,   48. ,    0.9],       [  89. ,   96. ,   47. ,    1.4],       [  96. ,  104. ,   41. ,    1.2],       [   0. ,   -3. ,   56. ,    1. ],       [  12. ,    2. ,   55. ,    1.1],       [  24. ,   -5. ,   51. ,    1.4],       [  29. ,   -4. ,   57. ,    1. ],       [  43. ,   -4. ,   52. ,    1.4],       [  55. ,    0. ,   53. ,    0.8],       [  70. ,    1. ,   51. ,    1.4],       [  76. ,    4. ,   54. ,    1.2],       [  91. ,   -4. ,   56. ,    1.3],       [  99. ,    1. ,   59. ,    0.6],       [   3. ,   15. ,   58. ,    0.9],       [   6. ,   15. ,   60. ,    1.3],       [  22. ,   10. ,   52. ,    1.3],       [  35. ,   14. ,   51. ,    1.1],       [  46. ,   18. ,   56. ,    1.4],       [  55. ,   18. ,   59. ,    0.6],       [  64. ,   17. ,   59. ,    1. ],       [  75. ,   18. ,   58. ,    0.9],       [  88. ,   16. ,   53. ,    1.1],       [ 102. ,   12. ,   51. ,    0.8],       [  -4. ,   29. ,   55. ,    0.9],       [  12. ,   25. ,   60. ,    1.4],       [  22. ,   23. ,   57. ,    0.6],       [  32. ,   31. ,   56. ,    1.4],       [  43. ,   33. ,   54. ,    0.7],       [  51. ,   31. ,   51. ,    1.4],       [  63. ,   25. ,   57. ,    1.4],       [  77. ,   24. ,   58. ,    1.3],       [  91. ,   26. ,   57. ,    1.2],       [  99. ,   28. ,   54. ,    1.1],       [   0. ,   43. ,   59. ,    0.7],       [   9. ,   43. ,   57. ,    1.1],       [  24. ,   47. ,   53. ,    0.7],       [  35. ,   44. ,   54. ,    1.4],       [  47. ,   45. ,   56. ,    1.1],       [  56. ,   47. ,   54. ,    1.3],       [  68. ,   39. ,   58. ,    0.7],       [  79. ,   46. ,   55. ,    1.2],       [  92. ,   46. ,   51. ,    1.2],       [  95. ,   39. ,   59. ,    0.6],       [   4. ,   53. ,   52. ,    0.6],       [   8. ,   59. ,   51. ,    1.4],       [  21. ,   57. ,   53. ,    0.9],       [  33. ,   58. ,   56. ,    0.7],       [  40. ,   60. ,   54. ,    1.3],       [  54. ,   61. ,   54. ,    1. ],       [  62. ,   55. ,   52. ,    1.2],       [  77. ,   58. ,   54. ,    0.7],       [  85. ,   52. ,   53. ,    0.6],       [  97. ,   60. ,   50. ,    0.8],       [   1. ,   70. ,   55. ,    1.4],       [   7. ,   74. ,   57. ,    1.4],       [  24. ,   74. ,   58. ,    1.1],       [  30. ,   71. ,   53. ,    1.2],       [  42. ,   71. ,   56. ,    1.3],       [  57. ,   75. ,   51. ,    1.4],       [  70. ,   66. ,   51. ,    1.4],       [  74. ,   70. ,   54. ,    0.7],       [  90. ,   71. ,   59. ,    1.2],       [ 101. ,   69. ,   54. ,    0.6],       [  -5. ,   84. ,   54. ,    0.8],       [  14. ,   82. ,   57. ,    1.4],       [  20. ,   85. ,   56. ,    0.9],       [  31. ,   82. ,   54. ,    1. ],       [  44. ,   89. ,   52. ,    1.2],       [  58. ,   90. ,   60. ,    1.1],       [  70. ,   89. ,   54. ,    0.8],       [  77. ,   84. ,   52. ,    0.6],       [  85. ,   85. ,   52. ,    0.8],       [  98. ,   87. ,   57. ,    0.5],       [  -5. ,  102. ,   50. ,    1.4],       [  10. ,  103. ,   54. ,    0.6],       [  24. ,   97. ,   58. ,    1.5],       [  35. ,   97. ,   56. ,    1.3],       [  43. ,   96. ,   57. ,    1.3],       [  59. ,   96. ,   55. ,    0.9],       [  64. ,  100. ,   58. ,    1. ],       [  77. ,  104. ,   57. ,    1.4],       [  85. ,  104. ,   51. ,    1.5],       [ 103. ,   95. ,   53. ,    1.1],       [   1. ,   -4. ,   71. ,    1.1],       [  11. ,   -1. ,   66. ,    0.6],       [  21. ,    1. ,   67. ,    0.5],       [  30. ,    4. ,   68. ,    1.3],       [  40. ,    2. ,   62. ,    1.4],       [  50. ,    3. ,   70. ,    0.7],       [  61. ,    1. ,   66. ,    1.5],       [  79. ,    1. ,   67. ,    1.2],       [  85. ,    2. ,   65. ,    1.3],       [  99. ,    1. ,   65. ,    1.5],       [   0. ,   11. ,   71. ,    1.2],       [  12. ,   12. ,   68. ,    1.4],       [  23. ,   17. ,   63. ,    0.5],       [  37. ,   13. ,   65. ,    1.3],       [  43. ,   16. ,   66. ,    0.7],       [  54. ,   15. ,   62. ,    0.7],       [  62. ,   16. ,   70. ,    1.4],       [  75. ,   16. ,   70. ,    1.3],       [  87. ,   16. ,   67. ,    1.3],       [ 104. ,    9. ,   62. ,    1.4],       [   3. ,   28. ,   62. ,    0.9],       [   6. ,   28. ,   70. ,    0.5],       [  22. ,   23. ,   62. ,    1.4],       [  32. ,   33. ,   63. ,    0.8],       [  40. ,   30. ,   63. ,    1.3],       [  53. ,   31. ,   65. ,    1.4],       [  69. ,   31. ,   68. ,    1.1],       [  82. ,   24. ,   70. ,    0.8],       [  87. ,   27. ,   61. ,    1.4],       [  97. ,   26. ,   69. ,    0.8],       [   4. ,   38. ,   69. ,    1. ],       [  10. ,   41. ,   64. ,    1.4],       [  19. ,   44. ,   63. ,    0.6],       [  33. ,   38. ,   68. ,    1.1],       [  41. ,   38. ,   66. ,    0.6],       [  58. ,   44. ,   66. ,    0.9],       [  71. ,   39. ,   69. ,    1. ],       [  78. ,   39. ,   71. ,    1.4],       [  90. ,   42. ,   70. ,    0.6],       [  98. ,   42. ,   66. ,    0.6],       [   2. ,   59. ,   65. ,    0.7],       [  11. ,   56. ,   67. ,    0.8],       [  17. ,   57. ,   65. ,    0.6],       [  28. ,   60. ,   67. ,    0.6],       [  44. ,   60. ,   64. ,    0.9],       [  53. ,   59. ,   70. ,    1.1],       [  67. ,   59. ,   70. ,    1.1],       [  80. ,   60. ,   71. ,    0.9],       [  88. ,   55. ,   64. ,    1.3],       [  96. ,   53. ,   64. ,    1.3],       [  -4. ,   68. ,   67. ,    1.1],       [  15. ,   67. ,   63. ,    0.6],       [  19. ,   70. ,   67. ,    0.8],       [  31. ,   72. ,   65. ,    0.6],       [  47. ,   73. ,   71. ,    0.7],       [  51. ,   71. ,   70. ,    1. ],       [  70. ,   69. ,   67. ,    0.9],       [  79. ,   74. ,   70. ,    1.1],       [  87. ,   70. ,   68. ,    0.5],       [  95. ,   71. ,   64. ,    0.6],       [   1. ,   86. ,   63. ,    1.3],       [  14. ,   88. ,   63. ,    0.8],       [  19. ,   89. ,   64. ,    0.6],       [  31. ,   89. ,   65. ,    1.1],       [  44. ,   90. ,   62. ,    0.7],       [  51. ,   90. ,   66. ,    1.2],       [  71. ,   81. ,   64. ,    1.5],       [  76. ,   86. ,   66. ,    0.6],       [  90. ,   83. ,   70. ,    1.3],       [ 100. ,   88. ,   64. ,    1.5],       [   2. ,   96. ,   69. ,    0.7],       [   6. ,   98. ,   63. ,    1.4],       [  24. ,   95. ,   70. ,    0.6],       [  37. ,   95. ,   68. ,    0.5],       [  48. ,   95. ,   70. ,    0.9],       [  53. ,   97. ,   65. ,    1.1],       [  70. ,  100. ,   62. ,    1.2],       [  73. ,   98. ,   64. ,    0.6],       [  86. ,   98. ,   68. ,    1.4],       [ 103. ,   99. ,   63. ,    1. ],       [   0. ,   -1. ,   77. ,    0.9],       [   7. ,   -2. ,   80. ,    1.4],       [  20. ,   -2. ,   77. ,    0.5],       [  30. ,   -1. ,   73. ,    1.2],       [  40. ,   -3. ,   74. ,    1.2],       [  55. ,   -3. ,   78. ,    1. ],       [  65. ,    2. ,   82. ,    1.2],       [  76. ,   -4. ,   81. ,    0.9],       [  85. ,   -3. ,   81. ,    0.9],       [  96. ,    2. ,   73. ,    1. ],       [  -3. ,   11. ,   78. ,    1. ],       [   6. ,   17. ,   75. ,    1.2],       [  22. ,   12. ,   75. ,    1.4],       [  29. ,   16. ,   80. ,    1.4],       [  48. ,   17. ,   73. ,    1.3],       [  59. ,   17. ,   78. ,    0.9],       [  65. ,   15. ,   78. ,    1. ],       [  81. ,   15. ,   75. ,    0.8],       [  83. ,   15. ,   74. ,    0.6],       [  95. ,   13. ,   73. ,    0.6],       [   2. ,   28. ,   76. ,    1.5],       [   6. ,   31. ,   75. ,    1.2],       [  27. ,   23. ,   78. ,    1.5],       [  35. ,   32. ,   76. ,    0.7],       [  49. ,   30. ,   76. ,    1. ],       [  52. ,   30. ,   77. ,    0.6],       [  63. ,   30. ,   74. ,    0.8],       [  82. ,   32. ,   74. ,    0.8],       [  87. ,   30. ,   75. ,    1. ],       [  96. ,   32. ,   82. ,    1. ],       [   3. ,   39. ,   76. ,    1.3],       [  11. ,   47. ,   73. ,    0.8],       [  23. ,   43. ,   73. ,    0.8],       [  37. ,   45. ,   79. ,    1.4],       [  47. ,   43. ,   76. ,    1. ],       [  54. ,   39. ,   77. ,    0.8],       [  65. ,   40. ,   76. ,    0.8],       [  81. ,   45. ,   79. ,    1. ],       [  85. ,   43. ,   80. ,    0.8],       [  98. ,   44. ,   80. ,    1.3],       [  -3. ,   57. ,   80. ,    1.3],       [   8. ,   61. ,   73. ,    0.8],       [  20. ,   52. ,   78. ,    1.3],       [  37. ,   52. ,   75. ,    0.9],       [  46. ,   55. ,   73. ,    1. ],       [  53. ,   57. ,   75. ,    1. ],       [  71. ,   60. ,   78. ,    1. ],       [  79. ,   55. ,   75. ,    0.8],       [  92. ,   53. ,   77. ,    1.4],       [  97. ,   61. ,   79. ,    1.3],       [  -5. ,   70. ,   74. ,    0.7],       [   9. ,   69. ,   81. ,    0.9],       [  20. ,   69. ,   73. ,    1.1],       [  36. ,   71. ,   75. ,    1.3],       [  41. ,   68. ,   75. ,    1.4],       [  54. ,   70. ,   73. ,    1.2],       [  71. ,   76. ,   79. ,    0.7],       [  81. ,   74. ,   78. ,    1.2],       [  87. ,   67. ,   79. ,    1.3],       [ 102. ,   71. ,   77. ,    0.7],       [  -1. ,   85. ,   74. ,    0.7],       [   9. ,   81. ,   82. ,    0.9],       [  20. ,   80. ,   80. ,    0.7],       [  33. ,   88. ,   79. ,    1.1],       [  40. ,   84. ,   76. ,    1. ],       [  59. ,   84. ,   79. ,    1.2],       [  70. ,   82. ,   79. ,    1.2],       [  75. ,   90. ,   76. ,    0.6],       [  90. ,   84. ,   81. ,    1. ],       [ 100. ,   81. ,   74. ,    0.7],       [  -5. ,  103. ,   82. ,    1. ],       [   9. ,  102. ,   79. ,    1.2],       [  22. ,  102. ,   74. ,    1.3],       [  37. ,  103. ,   76. ,    0.6],       [  44. ,   96. ,   80. ,    0.9],       [  57. ,  102. ,   73. ,    0.7],       [  68. ,  102. ,   76. ,    0.7],       [  78. ,   99. ,   72. ,    1. ],       [  91. ,  100. ,   80. ,    0.9],       [  99. ,  101. ,   77. ,    1. ],       [  -2. ,   -4. ,   88. ,    0.6],       [  10. ,    3. ,   89. ,    1.1],       [  23. ,    2. ,   87. ,    1.3],       [  31. ,    4. ,   89. ,    0.8],       [  42. ,   -3. ,   93. ,    0.8],       [  55. ,    0. ,   89. ,    1.4],       [  64. ,   -2. ,   86. ,    1.2],       [  78. ,   -4. ,   86. ,    1.2],       [  84. ,   -1. ,   84. ,    1. ],       [ 100. ,    4. ,   88. ,    0.9],       [   2. ,   18. ,   89. ,    1.2],       [  10. ,   10. ,   84. ,    0.9],       [  23. ,   11. ,   90. ,    1.1],       [  35. ,    9. ,   85. ,    1.4],       [  41. ,   15. ,   87. ,    1.4],       [  60. ,   16. ,   87. ,    0.9],       [  64. ,   15. ,   85. ,    1.2],       [  76. ,   16. ,   86. ,    0.8],       [  92. ,   14. ,   84. ,    0.8],       [  97. ,    9. ,   88. ,    0.8],       [  -5. ,   32. ,   85. ,    1. ],       [  13. ,   29. ,   93. ,    1.4],       [  21. ,   23. ,   90. ,    0.7],       [  28. ,   23. ,   87. ,    1.4],       [  44. ,   29. ,   90. ,    1.4],       [  60. ,   25. ,   89. ,    1.5],       [  70. ,   24. ,   85. ,    1.1],       [  76. ,   32. ,   89. ,    0.9],       [  86. ,   32. ,   90. ,    0.9],       [ 100. ,   30. ,   92. ,    1.2],       [   3. ,   42. ,   92. ,    0.8],       [  14. ,   38. ,   93. ,    1.4],       [  25. ,   43. ,   93. ,    0.7],       [  37. ,   41. ,   93. ,    0.9],       [  45. ,   38. ,   86. ,    0.7],       [  59. ,   38. ,   92. ,    0.7],       [  71. ,   44. ,   89. ,    1.2],       [  81. ,   43. ,   90. ,    1.3],       [  89. ,   43. ,   88. ,    1. ],       [ 103. ,   43. ,   85. ,    0.7],       [  -2. ,   61. ,   91. ,    0.9],       [  13. ,   61. ,   84. ,    1. ],       [  20. ,   52. ,   92. ,    0.8],       [  37. ,   60. ,   92. ,    1. ],       [  42. ,   57. ,   90. ,    1.3],       [  52. ,   59. ,   85. ,    0.6],       [  68. ,   57. ,   87. ,    0.8],       [  76. ,   56. ,   88. ,    1. ],       [  92. ,   54. ,   88. ,    1.2],       [ 100. ,   53. ,   85. ,    1.4],       [  -2. ,   69. ,   84. ,    0.6],       [  11. ,   66. ,   88. ,    1.5],       [  21. ,   71. ,   92. ,    0.9],       [  28. ,   70. ,   86. ,    0.6],       [  45. ,   73. ,   86. ,    1.4],       [  59. ,   73. ,   91. ,    0.6],       [  65. ,   72. ,   93. ,    0.7],       [  74. ,   73. ,   84. ,    1.2],       [  90. ,   70. ,   91. ,    1.4],       [ 104. ,   70. ,   85. ,    1.4],       [  -1. ,   86. ,   93. ,    0.9],       [   9. ,   86. ,   88. ,    1.4],       [  25. ,   86. ,   92. ,    1.2],       [  31. ,   88. ,   85. ,    1.3],       [  42. ,   85. ,   89. ,    1.3],       [  56. ,   84. ,   91. ,    0.7],       [  63. ,   83. ,   84. ,    1.3],       [  80. ,   81. ,   85. ,    0.7],       [  91. ,   84. ,   91. ,    1.1],       [  95. ,   85. ,   93. ,    0.8],       [   0. ,   96. ,   88. ,    1.4],       [   9. ,   95. ,   85. ,    1.3],       [  20. ,   95. ,   85. ,    1.4],       [  30. ,   99. ,   85. ,    1. ],       [  46. ,  103. ,   92. ,    1.2],       [  58. ,  102. ,   86. ,    1.3],       [  71. ,  101. ,   88. ,    1.1],       [  76. ,  100. ,   87. ,    1.3],       [  92. ,   98. ,   84. ,    0.9],       [  98. ,  101. ,   91. ,    1.3],       [   4. ,   -4. ,   99. ,    0.9],       [   9. ,    3. ,   99. ,    1.1],       [  25. ,   -3. ,   95. ,    0.9],       [  32. ,   -5. ,  100. ,    0.7],       [  45. ,    4. ,   99. ,    0.6],       [  52. ,    4. ,  102. ,    1. ],       [  62. ,   -3. ,   97. ,    1.2],       [  75. ,   -5. ,   97. ,    0.9],       [  93. ,    4. ,   95. ,    0.8],       [  97. ,    0. ,  103. ,    1.2],       [   1. ,   17. ,  101. ,    1.1],       [  14. ,   10. ,   95. ,    1.2],       [  21. ,   13. ,  103. ,    0.6],       [  35. ,   16. ,  103. ,    1. ],       [  40. ,   13. ,   98. ,    1.3],       [  58. ,   12. ,   96. ,    0.7],       [  62. ,   15. ,  104. ,    0.8],       [  74. ,   14. ,   99. ,    1. ],       [  85. ,   18. ,  100. ,    1.3],       [  97. ,   16. ,   95. ,    1.5],       [  -1. ,   28. ,  104. ,    0.6],       [  12. ,   24. ,   99. ,    1.2],       [  23. ,   23. ,  104. ,    1.5],       [  29. ,   23. ,  104. ,    0.7],       [  45. ,   33. ,   96. ,    0.6],       [  56. ,   26. ,   99. ,    0.7],       [  70. ,   26. ,  100. ,    1.4],       [  79. ,   32. ,   98. ,    0.6],       [  86. ,   32. ,   99. ,    1.2],       [  95. ,   28. ,  103. ,    0.5],       [   4. ,   40. ,  100. ,    0.6],       [   6. ,   46. ,  103. ,    0.7],       [  27. ,   42. ,   97. ,    0.9],       [  36. ,   40. ,  102. ,    1.1],       [  46. ,   46. ,  100. ,    0.7],       [  57. ,   41. ,   99. ,    0.6],       [  65. ,   47. ,  102. ,    1.3],       [  74. ,   47. ,  103. ,    0.6],       [  90. ,   47. ,   99. ,    0.5],       [  95. ,   44. ,  101. ,    0.5],       [   0. ,   59. ,   96. ,    0.8],       [  12. ,   56. ,  102. ,    1.5],       [  26. ,   54. ,   96. ,    0.8],       [  31. ,   57. ,  102. ,    1.5],       [  39. ,   57. ,  104. ,    0.5],       [  58. ,   61. ,   97. ,    0.9],       [  67. ,   56. ,  101. ,    1. ],       [  81. ,   54. ,   95. ,    1. ],       [  88. ,   52. ,  100. ,    1.3],       [ 104. ,   58. ,   98. ,    0.7],       [  -1. ,   68. ,   95. ,    0.9],       [  11. ,   73. ,  104. ,    0.8],       [  21. ,   75. ,   99. ,    1.1],       [  32. ,   68. ,   99. ,    0.8],       [  47. ,   69. ,  100. ,    0.8],       [  51. ,   70. ,   95. ,    0.6],       [  65. ,   73. ,  103. ,    1.2],       [  79. ,   74. ,  104. ,    0.8],       [  92. ,   68. ,   98. ,    1.5],       [  97. ,   74. ,   97. ,    1.4],       [  -1. ,   84. ,  100. ,    1.5],       [  10. ,   80. ,   95. ,    0.8],       [  25. ,   83. ,  103. ,    0.5],       [  34. ,   86. ,   99. ,    0.7],       [  45. ,   84. ,   95. ,    0.6],       [  53. ,   83. ,   96. ,    0.9],       [  66. ,   82. ,  102. ,    1.4],       [  78. ,   81. ,   96. ,    1. ],       [  84. ,   81. ,   96. ,    1. ],       [ 101. ,   86. ,  102. ,    0.7],       [   4. ,   99. ,  101. ,    0.5],       [   9. ,  100. ,   97. ,    1.1],       [  19. ,   97. ,   97. ,    0.6],       [  30. ,  100. ,   98. ,    0.7],       [  42. ,  102. ,   99. ,    1.5],       [  59. ,   95. ,   98. ,    0.5],       [  65. ,  104. ,  100. ,    0.5],       [  73. ,  103. ,  101. ,    0.5],       [  89. ,   98. ,  104. ,    0.8],       [  96. ,  102. ,   97. ,    1.5]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  3.1,  4.1,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2.9,  4.1,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.insert_knot([2.935]*1, 0) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 17)
        vol2.insert_knot([2.079]*2, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 19)
        vol2.insert_knot([2.339]*3, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 22)
        vol2.insert_knot([1.952]*4, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 26)
        vol2.insert_knot([1.749]*5, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 31)
        vol2.insert_knot([0.600]*1, 1) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 16)
        vol2.insert_knot([0.600]*2, 1) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 18)
        vol2.insert_knot([0.600]*3, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 21)
        vol2.insert_knot([0.600]*4, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 25)
        vol2.insert_knot([0.600]*5, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 30)
        vol2.insert_knot([0.600]*6, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 36)
        vol2.insert_knot([3.929]*1, 2) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 17)
        vol2.insert_knot([2.447]*2, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 19)
        vol2.insert_knot([1.482]*3, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 22)
        vol2.insert_knot([2.726]*4, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 26)
        vol2.insert_knot([2.227]*5, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 31)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p5_rational_C0_periodic(self):
        controlpoints = np.array([[ 101. ,   -1. ,    2. ,    0.6],
       [  78. ,   60. ,   -4. ,    1.2],
       [  27. ,   98. ,    0. ,    0.9],
       [ -26. ,   99. ,   -4. ,    0.9],
       [ -78. ,   63. ,    3. ,    1.2],
       [-105. ,    2. ,   -1. ,    0.8],
       [ -82. ,  -58. ,   -3. ,    0.8],
       [ -34. ,  -93. ,   -1. ,    0.6],
       [  27. ,  -95. ,    3. ,    0.6],
       [  76. ,  -57. ,    0. ,    0.8]])
        basis0 = BSplineBasis(5, np.array([-1.2,  0. ,  0. ,  0. ,  0. ,  1. ,  1.7,  2.6,  4.4,  4.8,  5.8,  7. ,  7. ,  7. ,  7. ,  8. ]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([5.036]*1) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 17)
        crv2.insert_knot([1.093]*2) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 19)
        crv2.insert_knot([4.136]*3) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 22)
        crv2.insert_knot([3.673]*4) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 26)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p66_rational_C0_periodic(self):
        controlpoints = np.array([[  62. ,   -4. ,   -2. ,    0.6],       [  47. ,   32. ,   -4. ,    1.1],       [  33. ,   54. ,   -4. ,    1.4],       [  -4. ,   63. ,    4. ,    0.6],       [ -26. ,   54. ,    4. ,    0.8],       [ -57. ,   31. ,   -3. ,    1.3],       [ -63. ,    1. ,   -2. ,    0.7],       [ -50. ,  -33. ,    2. ,    1.1],       [ -35. ,  -55. ,    1. ,    1.2],       [   3. ,  -61. ,    0. ,    0.7],       [  33. ,  -57. ,   -1. ,    0.6],       [  53. ,  -34. ,   -3. ,    1.4],       [  67. ,    3. ,   -5. ,    0.8],       [  53. ,   31. ,   -3. ,    1.2],       [  32. ,   58. ,   -3. ,    1. ],       [   3. ,   70. ,    0. ,    1.4],       [ -30. ,   55. ,   -4. ,    1.1],       [ -56. ,   37. ,   -1. ,    0.7],       [ -71. ,    4. ,   -2. ,    0.6],       [ -61. ,  -32. ,    1. ,    0.7],       [ -33. ,  -58. ,   -4. ,    0.8],       [  -2. ,  -70. ,    0. ,    1. ],       [  38. ,  -62. ,   -1. ,    1.3],       [  58. ,  -33. ,   -3. ,    0.6],       [  68. ,    0. ,    4. ,    0.7],       [  61. ,   39. ,   -4. ,    0.9],       [  39. ,   63. ,   -5. ,    0.8],       [  -5. ,   78. ,   -2. ,    1. ],       [ -41. ,   65. ,   -4. ,    1.1],       [ -61. ,   38. ,    1. ,    0.6],       [ -78. ,    3. ,    3. ,    1.3],       [ -68. ,  -37. ,   -3. ,    1.2],       [ -36. ,  -60. ,    3. ,    1. ],       [   4. ,  -76. ,    3. ,    0.7],       [  31. ,  -61. ,   -3. ,    1.2],       [  61. ,  -41. ,    2. ,    0.5],       [  78. ,   -4. ,    3. ,    0.8],       [  68. ,   44. ,    2. ,    1.1],       [  38. ,   71. ,    2. ,    0.7],       [   2. ,   82. ,    1. ,    1.4],       [ -39. ,   72. ,    4. ,    0.6],       [ -73. ,   36. ,   -3. ,    0.5],       [ -84. ,   -4. ,    4. ,    0.9],       [ -68. ,  -45. ,    3. ,    0.5],       [ -36. ,  -73. ,   -3. ,    0.5],       [   1. ,  -81. ,   -1. ,    1.2],       [  44. ,  -71. ,   -2. ,    0.9],       [  67. ,  -43. ,   -2. ,    0.9],       [  86. ,    1. ,    3. ,    0.6],       [  74. ,   44. ,   -4. ,    0.8],       [  41. ,   76. ,   -4. ,    1.4],       [  -3. ,   88. ,    2. ,    0.9],       [ -40. ,   74. ,   -1. ,    0.7],       [ -71. ,   39. ,   -2. ,    1.3],       [ -89. ,   -2. ,    3. ,    0.6],       [ -76. ,  -49. ,    4. ,    1.2],       [ -49. ,  -74. ,    0. ,    0.9],       [   0. ,  -92. ,    2. ,    1.4],       [  47. ,  -78. ,    2. ,    1.1],       [  70. ,  -39. ,    3. ,    1. ],       [  93. ,   -2. ,   -2. ,    1.1],       [  77. ,   48. ,    2. ,    1.2],       [  49. ,   85. ,   -2. ,    1.2],       [   2. ,   96. ,    0. ,    0.9],       [ -49. ,   77. ,   -4. ,    0.7],       [ -80. ,   50. ,    4. ,    0.6],       [ -95. ,    0. ,   -4. ,    0.7],       [ -77. ,  -51. ,   -1. ,    1. ],       [ -51. ,  -83. ,   -4. ,    1.5],       [   4. ,  -99. ,    3. ,    1.2],       [  44. ,  -83. ,   -2. ,    1.2],       [  81. ,  -43. ,    2. ,    1.2],       [  99. ,   -2. ,    1. ,    1. ],       [  89. ,   46. ,   -4. ,    0.6],       [  47. ,   86. ,   -2. ,    0.6],       [  -3. ,   99. ,   -5. ,    0.9],       [ -46. ,   88. ,    0. ,    0.9],       [ -84. ,   54. ,    0. ,    0.7],       [ -98. ,    4. ,    0. ,    1.5],       [ -86. ,  -55. ,    1. ,    1.3],       [ -51. ,  -92. ,    0. ,    1.2],       [   0. , -104. ,   -3. ,    0.7],       [  50. ,  -82. ,   -3. ,    1.3],       [  82. ,  -50. ,   -1. ,    0.9]])
        basis0 = BSplineBasis(6, np.array([-1.4,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  3.4,  3.8,  4.9,  5.8,  6.6,  8. ,  8. ,
        8. ,  8. ,  8. ,  8.7]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([5.813]*1, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([4.259]*2, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([6.184]*3, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([5.564]*4, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([3.264]*5, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 34)
        surf2.insert_knot([0.800]*1, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 14)
        surf2.insert_knot([0.800]*2, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([0.800]*3, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 19)
        surf2.insert_knot([0.800]*4, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 23)
        surf2.insert_knot([0.800]*5, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 28)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p565_rational_C0_periodic(self):
        controlpoints = np.array([[  45. ,   -5. ,    3. ,    1.1],       [  45. ,   25. ,   -1. ,    1.1],       [  12. ,   48. ,   -2. ,    1. ],       [ -20. ,   45. ,    1. ,    0.8],       [ -45. ,   27. ,    0. ,    0.6],       [ -46. ,   -4. ,   -1. ,    1.1],       [ -41. ,  -25. ,    0. ,    1.3],       [ -18. ,  -48. ,   -1. ,    1. ],       [  17. ,  -46. ,   -1. ,    1.4],       [  37. ,  -29. ,   -5. ,    1.3],       [  58. ,    4. ,    3. ,    0.7],       [  42. ,   33. ,    4. ,    1.4],       [  18. ,   56. ,    2. ,    1.3],       [ -14. ,   51. ,    4. ,    1.4],       [ -45. ,   29. ,   -3. ,    1. ],       [ -55. ,   -3. ,    3. ,    1.3],       [ -45. ,  -37. ,    1. ,    1.3],       [ -18. ,  -49. ,    2. ,    0.6],       [  20. ,  -50. ,   -1. ,    0.8],       [  40. ,  -32. ,    3. ,    0.6],       [  57. ,    3. ,   -5. ,    1. ],       [  45. ,   31. ,   -5. ,    1.4],       [  15. ,   55. ,    4. ,    0.5],       [ -20. ,   57. ,    1. ,    0.5],       [ -48. ,   39. ,    3. ,    1. ],       [ -65. ,    3. ,   -5. ,    0.9],       [ -45. ,  -33. ,   -1. ,    0.7],       [ -22. ,  -62. ,   -2. ,    1.4],       [  22. ,  -55. ,    1. ,    1.2],       [  47. ,  -34. ,   -1. ,    1.2],       [  60. ,   -2. ,   -2. ,    0.7],       [  56. ,   36. ,   -1. ,    1. ],       [  23. ,   58. ,    2. ,    1. ],       [ -25. ,   64. ,    0. ,    0.6],       [ -50. ,   33. ,   -3. ,    1. ],       [ -70. ,    4. ,   -4. ,    1.4],       [ -49. ,  -35. ,   -3. ,    1.5],       [ -21. ,  -67. ,   -5. ,    1.3],       [  19. ,  -65. ,   -4. ,    1.2],       [  48. ,  -43. ,   -4. ,    0.5],       [  70. ,    2. ,    2. ,    0.7],       [  55. ,   43. ,   -4. ,    0.6],       [  19. ,   66. ,    2. ,    0.6],       [ -25. ,   69. ,    2. ,    1.3],       [ -54. ,   44. ,    4. ,    1.2],       [ -72. ,    1. ,    0. ,    0.9],       [ -56. ,  -44. ,   -5. ,    1. ],       [ -24. ,  -63. ,    4. ,    1. ],       [  24. ,  -71. ,   -2. ,    1. ],       [  52. ,  -44. ,   -5. ,    1.3],       [  77. ,    1. ,    2. ,    0.7],       [  63. ,   41. ,    1. ,    1. ],       [  26. ,   72. ,   -2. ,    1.1],       [ -26. ,   69. ,    3. ,    1. ],       [ -60. ,   42. ,    0. ,    0.7],       [ -79. ,    2. ,    2. ,    0.9],       [ -62. ,  -50. ,    3. ,    0.8],       [ -20. ,  -71. ,    3. ,    0.9],       [  26. ,  -75. ,    1. ,    1.1],       [  62. ,  -43. ,    4. ,    1.2],       [  76. ,    0. ,    4. ,    1.3],       [  63. ,   50. ,    3. ,    0.6],       [  26. ,   71. ,    2. ,    1.4],       [ -26. ,   72. ,    0. ,    1.2],       [ -62. ,   47. ,   -4. ,    0.5],       [ -82. ,   -1. ,    1. ,    1.2],       [ -65. ,  -49. ,    4. ,    1. ],       [ -21. ,  -81. ,    0. ,    0.7],       [  24. ,  -76. ,   -2. ,    1.4],       [  62. ,  -46. ,   -1. ,    1. ],       [  87. ,   -1. ,    3. ,    0.6],       [  72. ,   53. ,    0. ,    0.6],       [  22. ,   77. ,    2. ,    1.3],       [ -22. ,   76. ,    4. ,    1.2],       [ -66. ,   52. ,   -4. ,    1.2],       [ -90. ,    0. ,    0. ,    0.6],       [ -67. ,  -47. ,    3. ,    0.8],       [ -24. ,  -82. ,   -5. ,    1. ],       [  27. ,  -80. ,   -2. ,    0.7],       [  65. ,  -51. ,   -2. ,    1.1],       [  87. ,   -4. ,   -5. ,    0.9],       [  71. ,   52. ,    0. ,    1.1],       [  30. ,   88. ,    0. ,    0.6],       [ -24. ,   85. ,   -2. ,    0.5],       [ -75. ,   52. ,    1. ,    1.1],       [ -86. ,    2. ,   -1. ,    0.6],       [ -78. ,  -56. ,    3. ,    0.7],       [ -26. ,  -82. ,    0. ,    1.1],       [  25. ,  -87. ,   -5. ,    1.4],       [  69. ,  -55. ,    3. ,    1.3],       [  95. ,   -3. ,   -4. ,    1.4],       [  75. ,   58. ,    2. ,    1. ],       [  28. ,   95. ,    0. ,    1.1],       [ -32. ,   89. ,   -5. ,    0.8],       [ -78. ,   51. ,   -5. ,    1.2],       [ -92. ,    2. ,    1. ,    1.4],       [ -77. ,  -56. ,    4. ,    1.2],       [ -30. ,  -92. ,   -5. ,    0.7],       [  33. ,  -88. ,   -4. ,    1.3],       [  79. ,  -53. ,    2. ,    0.8],       [  95. ,   -5. ,   -4. ,    1.1],       [  77. ,   59. ,   -3. ,    0.8],       [  26. ,   97. ,   -1. ,    1.2],       [ -34. ,   95. ,   -1. ,    1. ],       [ -79. ,   55. ,    0. ,    1.2],       [ -99. ,   -2. ,    4. ,    0.6],       [ -86. ,  -62. ,    3. ,    1. ],       [ -34. ,  -94. ,    1. ,    0.8],       [  31. ,  -92. ,    0. ,    0.7],       [  76. ,  -61. ,    2. ,    1.2],       [  50. ,   -1. ,    9. ,    0.7],       [  43. ,   33. ,    9. ,    1.2],       [  13. ,   51. ,   10. ,    0.8],       [ -19. ,   51. ,    9. ,    0.8],       [ -45. ,   24. ,    6. ,    1.3],       [ -47. ,    0. ,    7. ,    0.8],       [ -36. ,  -30. ,    2. ,    1.4],       [ -13. ,  -49. ,    5. ,    1.5],       [  15. ,  -48. ,    5. ,    0.8],       [  42. ,  -29. ,    5. ,    1.3],       [  57. ,   -2. ,    8. ,    1. ],       [  49. ,   27. ,    9. ,    1. ],       [  12. ,   51. ,    5. ,    0.8],       [ -18. ,   48. ,    6. ,    1.4],       [ -45. ,   36. ,   10. ,    0.8],       [ -59. ,   -4. ,    4. ,    0.8],       [ -40. ,  -35. ,    5. ,    1.4],       [ -20. ,  -52. ,    5. ,    1.3],       [  19. ,  -57. ,    6. ,    0.9],       [  49. ,  -34. ,    5. ,    1.3],       [  64. ,   -2. ,    3. ,    1.2],       [  47. ,   39. ,    4. ,    1.4],       [  20. ,   59. ,    8. ,    1.1],       [ -23. ,   56. ,    4. ,    1.2],       [ -47. ,   35. ,    9. ,    1.2],       [ -63. ,    0. ,    5. ,    0.9],       [ -48. ,  -33. ,    7. ,    0.9],       [ -22. ,  -61. ,    5. ,    0.7],       [  13. ,  -62. ,    6. ,    1.4],       [  50. ,  -39. ,    1. ,    0.6],       [  68. ,    1. ,   11. ,    0.6],       [  54. ,   37. ,    2. ,    1. ],       [  24. ,   58. ,    9. ,    0.9],       [ -25. ,   61. ,   11. ,    1.4],       [ -53. ,   41. ,    6. ,    0.7],       [ -70. ,    4. ,    5. ,    1.1],       [ -55. ,  -43. ,    3. ,    1.5],       [ -17. ,  -62. ,    3. ,    1.3],       [  17. ,  -65. ,    6. ,    1.2],       [  56. ,  -41. ,   11. ,    1.5],       [  72. ,   -1. ,    9. ,    0.6],       [  52. ,   42. ,   11. ,    1. ],       [  18. ,   70. ,    8. ,    1.3],       [ -18. ,   66. ,    6. ,    1. ],       [ -56. ,   36. ,    3. ,    0.6],       [ -70. ,   -2. ,    3. ,    1. ],       [ -55. ,  -39. ,    5. ,    1.3],       [ -24. ,  -63. ,    9. ,    0.8],       [  18. ,  -64. ,    2. ,    0.8],       [  56. ,  -45. ,    5. ,    1.5],       [  72. ,    3. ,   10. ,    0.5],       [  57. ,   42. ,   11. ,    0.7],       [  26. ,   74. ,   11. ,    1.2],       [ -22. ,   69. ,    8. ,    1. ],       [ -65. ,   48. ,    6. ,    1.5],       [ -76. ,    4. ,    8. ,    1.2],       [ -61. ,  -40. ,   10. ,    1.3],       [ -22. ,  -69. ,   11. ,    1.3],       [  23. ,  -72. ,    3. ,    1.2],       [  59. ,  -43. ,    8. ,    1. ],       [  80. ,    4. ,    6. ,    0.6],       [  69. ,   44. ,    7. ,    0.7],       [  22. ,   76. ,    7. ,    0.6],       [ -27. ,   78. ,    5. ,    0.7],       [ -63. ,   45. ,    4. ,    1.5],       [ -78. ,   -5. ,    3. ,    0.6],       [ -64. ,  -48. ,    6. ,    1.2],       [ -25. ,  -73. ,    5. ,    1.4],       [  29. ,  -79. ,    4. ,    0.7],       [  68. ,  -51. ,    5. ,    0.9],       [  81. ,    0. ,    3. ,    0.9],       [  69. ,   51. ,    5. ,    0.8],       [  28. ,   79. ,    7. ,    0.9],       [ -31. ,   79. ,    2. ,    0.8],       [ -70. ,   49. ,    4. ,    1.2],       [ -90. ,   -5. ,   11. ,    0.7],       [ -66. ,  -50. ,    4. ,    1.1],       [ -29. ,  -82. ,    3. ,    1.3],       [  28. ,  -80. ,    3. ,    1.4],       [  72. ,  -51. ,   10. ,    0.6],       [  85. ,    2. ,    6. ,    1.2],       [  76. ,   54. ,   10. ,    1.3],       [  30. ,   89. ,    5. ,    0.9],       [ -29. ,   82. ,    8. ,    1.2],       [ -77. ,   53. ,    4. ,    0.6],       [ -90. ,    3. ,    7. ,    0.9],       [ -78. ,  -51. ,   10. ,    1.1],       [ -28. ,  -88. ,    4. ,    1.3],       [  27. ,  -85. ,    9. ,    0.7],       [  74. ,  -53. ,    5. ,    0.7],       [  94. ,   -5. ,    9. ,    1.2],       [  77. ,   53. ,    4. ,    1.2],       [  27. ,   89. ,    2. ,    0.6],       [ -27. ,   86. ,    5. ,    1.3],       [ -77. ,   59. ,    8. ,    1.1],       [ -98. ,    2. ,    2. ,    0.9],       [ -79. ,  -52. ,    2. ,    0.6],       [ -26. ,  -88. ,    9. ,    1.4],       [  25. ,  -87. ,    5. ,    0.6],       [  81. ,  -56. ,   11. ,    0.6],       [  95. ,    2. ,    7. ,    0.6],       [  85. ,   55. ,    7. ,    0.7],       [  29. ,   92. ,    6. ,    1.4],       [ -35. ,   96. ,    6. ,    1.5],       [ -84. ,   61. ,    5. ,    0.7],       [-101. ,   -5. ,    4. ,    1.2],       [ -81. ,  -58. ,   10. ,    1.2],       [ -32. ,  -94. ,    2. ,    1. ],       [  26. , -100. ,    4. ,    0.6],       [  80. ,  -55. ,   10. ,    1.4],       [  49. ,   -4. ,   12. ,    1.3],       [  37. ,   27. ,   18. ,    1.3],       [  16. ,   48. ,   15. ,    1.2],       [ -16. ,   50. ,   14. ,    1.3],       [ -45. ,   33. ,    8. ,    1.3],       [ -47. ,   -4. ,   11. ,    0.8],       [ -43. ,  -28. ,    8. ,    0.8],       [ -17. ,  -49. ,   14. ,    1. ],       [  16. ,  -44. ,   12. ,    0.5],       [  36. ,  -31. ,   14. ,    0.9],       [  59. ,    1. ,   12. ,    1.1],       [  40. ,   28. ,   11. ,    0.8],       [  14. ,   51. ,   14. ,    0.5],       [ -20. ,   49. ,   15. ,    1.4],       [ -43. ,   31. ,   18. ,    0.6],       [ -55. ,   -5. ,   16. ,    1. ],       [ -43. ,  -35. ,   12. ,    1.4],       [ -19. ,  -55. ,   12. ,    1.5],       [  17. ,  -53. ,   14. ,    1.3],       [  41. ,  -29. ,   15. ,    1. ],       [  57. ,    3. ,   17. ,    1.4],       [  51. ,   37. ,   13. ,    1.3],       [  14. ,   55. ,    8. ,    1. ],       [ -17. ,   56. ,   10. ,    1.4],       [ -50. ,   39. ,   11. ,    0.6],       [ -58. ,    4. ,   13. ,    1.2],       [ -46. ,  -38. ,   12. ,    0.8],       [ -16. ,  -60. ,    8. ,    1.5],       [  16. ,  -59. ,   17. ,    1.2],       [  48. ,  -34. ,    8. ,    0.7],       [  63. ,   -1. ,   15. ,    0.7],       [  50. ,   40. ,   12. ,    0.6],       [  21. ,   63. ,   14. ,    1.3],       [ -19. ,   61. ,   13. ,    0.6],       [ -51. ,   36. ,   13. ,    0.6],       [ -64. ,   -3. ,   16. ,    1.4],       [ -49. ,  -44. ,   10. ,    1. ],       [ -20. ,  -63. ,   13. ,    1.4],       [  19. ,  -61. ,   11. ,    1.4],       [  56. ,  -37. ,   14. ,    1.4],       [  67. ,   -3. ,   13. ,    0.8],       [  55. ,   37. ,    8. ,    1.5],       [  23. ,   62. ,   15. ,    0.5],       [ -25. ,   70. ,   14. ,    0.8],       [ -56. ,   38. ,   12. ,    1. ],       [ -75. ,    2. ,   17. ,    1.3],       [ -59. ,  -45. ,   13. ,    1.1],       [ -25. ,  -66. ,   10. ,    1.3],       [  25. ,  -72. ,   10. ,    1.2],       [  53. ,  -37. ,    9. ,    0.6],       [  75. ,    0. ,   16. ,    0.8],       [  60. ,   46. ,   16. ,    1. ],       [  19. ,   73. ,   13. ,    1.1],       [ -22. ,   67. ,   16. ,    0.8],       [ -61. ,   44. ,   17. ,    0.9],       [ -71. ,    2. ,    9. ,    1. ],       [ -59. ,  -47. ,   15. ,    0.6],       [ -23. ,  -72. ,    8. ,    1.5],       [  21. ,  -74. ,   11. ,    1.2],       [  64. ,  -46. ,   13. ,    1.4],       [  82. ,   -3. ,    9. ,    1. ],       [  63. ,   51. ,   11. ,    1.4],       [  22. ,   77. ,    9. ,    0.9],       [ -30. ,   75. ,   12. ,    0.8],       [ -66. ,   46. ,   15. ,    1. ],       [ -82. ,    4. ,   11. ,    1.2],       [ -65. ,  -44. ,   12. ,    0.7],       [ -28. ,  -76. ,   16. ,    1.3],       [  28. ,  -76. ,    8. ,    0.9],       [  68. ,  -49. ,   15. ,    0.8],       [  89. ,   -1. ,   11. ,    1.2],       [  72. ,   54. ,   14. ,    1.4],       [  24. ,   84. ,   10. ,    0.6],       [ -28. ,   84. ,   14. ,    0.7],       [ -68. ,   54. ,   17. ,    1.4],       [ -86. ,   -4. ,   13. ,    0.7],       [ -72. ,  -52. ,   15. ,    0.8],       [ -29. ,  -83. ,   16. ,    1.1],       [  29. ,  -81. ,   10. ,    1.1],       [  68. ,  -48. ,   17. ,    1.1],       [  94. ,    3. ,   16. ,    1.3],       [  70. ,   57. ,    9. ,    1. ],       [  30. ,   81. ,   11. ,    1.2],       [ -25. ,   86. ,   10. ,    1.4],       [ -73. ,   49. ,   13. ,    0.9],       [ -94. ,    0. ,   11. ,    1. ],       [ -76. ,  -50. ,   10. ,    1.1],       [ -31. ,  -91. ,   13. ,    0.9],       [  28. ,  -86. ,   13. ,    0.6],       [  71. ,  -56. ,   17. ,    0.8],       [  99. ,    3. ,   18. ,    0.6],       [  77. ,   57. ,    8. ,    0.5],       [  28. ,   89. ,    8. ,    0.7],       [ -31. ,   87. ,   10. ,    0.8],       [ -80. ,   59. ,    8. ,    1. ],       [ -97. ,    3. ,   15. ,    1.4],       [ -73. ,  -61. ,   12. ,    1.1],       [ -32. ,  -93. ,   17. ,    0.6],       [  25. ,  -88. ,    9. ,    1.3],       [  76. ,  -54. ,    8. ,    0.8],       [  95. ,   -2. ,   10. ,    0.9],       [  77. ,   54. ,   12. ,    0.8],       [  26. ,   99. ,   15. ,    1.4],       [ -28. ,   92. ,   15. ,    1.3],       [ -86. ,   60. ,    9. ,    1.1],       [-101. ,   -1. ,   10. ,    0.7],       [ -78. ,  -62. ,   16. ,    0.7],       [ -36. , -100. ,    9. ,    0.9],       [  32. ,  -95. ,   17. ,    1.4],       [  82. ,  -60. ,   16. ,    1.2],       [  50. ,    2. ,   24. ,    1.4],       [  37. ,   28. ,   16. ,    1. ],       [  14. ,   44. ,   24. ,    0.9],       [ -17. ,   50. ,   16. ,    1.3],       [ -43. ,   26. ,   15. ,    0.6],       [ -46. ,    0. ,   16. ,    0.8],       [ -42. ,  -25. ,   18. ,    1. ],       [ -18. ,  -52. ,   20. ,    0.9],       [  10. ,  -51. ,   19. ,    0.6],       [  41. ,  -29. ,   16. ,    1.3],       [  56. ,   -3. ,   24. ,    1.1],       [  43. ,   32. ,   18. ,    0.9],       [  19. ,   52. ,   24. ,    0.6],       [ -19. ,   57. ,   23. ,    0.9],       [ -42. ,   36. ,   20. ,    0.5],       [ -57. ,   -2. ,   17. ,    1.4],       [ -42. ,  -37. ,   18. ,    1.2],       [ -17. ,  -49. ,   23. ,    1.4],       [  20. ,  -53. ,   20. ,    1.4],       [  41. ,  -36. ,   24. ,    0.9],       [  59. ,    4. ,   16. ,    1.3],       [  47. ,   32. ,   23. ,    1.3],       [  22. ,   52. ,   17. ,    1.2],       [ -15. ,   58. ,   16. ,    1. ],       [ -49. ,   35. ,   20. ,    0.7],       [ -59. ,    2. ,   24. ,    1.5],       [ -47. ,  -32. ,   24. ,    1.1],       [ -15. ,  -58. ,   21. ,    0.9],       [  17. ,  -60. ,   16. ,    1.2],       [  44. ,  -33. ,   20. ,    0.8],       [  67. ,   -2. ,   15. ,    0.6],       [  53. ,   41. ,   24. ,    1.1],       [  22. ,   57. ,   24. ,    0.9],       [ -18. ,   62. ,   23. ,    0.9],       [ -53. ,   38. ,   24. ,    1. ],       [ -66. ,   -1. ,   22. ,    1.5],       [ -54. ,  -41. ,   23. ,    0.7],       [ -19. ,  -59. ,   20. ,    1.1],       [  22. ,  -62. ,   17. ,    1.1],       [  57. ,  -40. ,   16. ,    1.5],       [  73. ,    2. ,   21. ,    0.8],       [  58. ,   43. ,   16. ,    1.1],       [  20. ,   66. ,   21. ,    1.1],       [ -20. ,   67. ,   15. ,    1.4],       [ -55. ,   45. ,   20. ,    1.4],       [ -73. ,    4. ,   17. ,    0.8],       [ -61. ,  -44. ,   15. ,    1.1],       [ -27. ,  -63. ,   22. ,    1.5],       [  25. ,  -65. ,   15. ,    1. ],       [  57. ,  -43. ,   24. ,    0.8],       [  76. ,   -5. ,   24. ,    1.3],       [  58. ,   41. ,   16. ,    1.1],       [  27. ,   73. ,   24. ,    0.7],       [ -21. ,   69. ,   15. ,    1.4],       [ -65. ,   48. ,   15. ,    1.5],       [ -80. ,   -1. ,   23. ,    1.4],       [ -63. ,  -46. ,   24. ,    0.8],       [ -26. ,  -75. ,   17. ,    1.4],       [  25. ,  -71. ,   23. ,    1.5],       [  63. ,  -42. ,   22. ,    1.5],       [  75. ,    3. ,   24. ,    0.5],       [  62. ,   47. ,   18. ,    1.2],       [  21. ,   72. ,   24. ,    0.6],       [ -25. ,   80. ,   17. ,    0.6],       [ -68. ,   49. ,   17. ,    1.2],       [ -85. ,   -3. ,   17. ,    0.9],       [ -66. ,  -45. ,   17. ,    0.8],       [ -30. ,  -74. ,   22. ,    0.7],       [  28. ,  -73. ,   22. ,    1.4],       [  61. ,  -43. ,   19. ,    1.2],       [  85. ,    1. ,   16. ,    0.6],       [  70. ,   46. ,   20. ,    1.3],       [  28. ,   78. ,   15. ,    1. ],       [ -24. ,   76. ,   22. ,    1.4],       [ -67. ,   49. ,   19. ,    0.7],       [ -81. ,   -2. ,   23. ,    1.3],       [ -70. ,  -46. ,   18. ,    0.5],       [ -23. ,  -78. ,   22. ,    1. ],       [  23. ,  -82. ,   24. ,    0.6],       [  69. ,  -50. ,   21. ,    0.9],       [  85. ,   -1. ,   24. ,    1. ],       [  75. ,   57. ,   16. ,    1.3],       [  29. ,   85. ,   15. ,    0.7],       [ -25. ,   87. ,   18. ,    0.8],       [ -71. ,   55. ,   16. ,    0.9],       [ -86. ,    3. ,   19. ,    0.9],       [ -76. ,  -58. ,   15. ,    1.4],       [ -28. ,  -88. ,   21. ,    0.5],       [  26. ,  -82. ,   22. ,    0.8],       [  68. ,  -49. ,   17. ,    0.6],       [  99. ,    3. ,   15. ,    1.3],       [  75. ,   54. ,   22. ,    1.5],       [  28. ,   93. ,   16. ,    1.3],       [ -34. ,   89. ,   17. ,    1. ],       [ -74. ,   57. ,   23. ,    0.8],       [-100. ,    0. ,   17. ,    1.2],       [ -73. ,  -52. ,   19. ,    1.1],       [ -27. ,  -93. ,   19. ,    1.2],       [  24. ,  -93. ,   20. ,    1.1],       [  73. ,  -53. ,   23. ,    0.7],       [  96. ,   -4. ,   20. ,    0.8],       [  77. ,   54. ,   16. ,    1.2],       [  31. ,   96. ,   19. ,    0.5],       [ -34. ,   98. ,   17. ,    0.7],       [ -78. ,   63. ,   20. ,    1.4],       [-103. ,    4. ,   18. ,    0.9],       [ -83. ,  -61. ,   20. ,    0.9],       [ -36. ,  -93. ,   16. ,    1.2],       [  30. ,  -97. ,   19. ,    0.8],       [  79. ,  -62. ,   17. ,    0.6],       [  51. ,    4. ,   21. ,    0.8],       [  41. ,   26. ,   24. ,    0.8],       [  19. ,   51. ,   22. ,    1.2],       [ -20. ,   45. ,   27. ,    1. ],       [ -37. ,   28. ,   23. ,    1.5],       [ -51. ,    0. ,   26. ,    1.5],       [ -39. ,  -27. ,   23. ,    0.6],       [ -12. ,  -51. ,   29. ,    0.6],       [  17. ,  -49. ,   28. ,    0.6],       [  37. ,  -27. ,   26. ,    0.8],       [  58. ,    4. ,   22. ,    1.1],       [  47. ,   33. ,   28. ,    1.5],       [  12. ,   50. ,   24. ,    0.5],       [ -17. ,   50. ,   27. ,    1.1],       [ -49. ,   27. ,   22. ,    0.8],       [ -58. ,   -1. ,   30. ,    1.2],       [ -42. ,  -31. ,   31. ,    1.4],       [ -13. ,  -53. ,   27. ,    1.3],       [  16. ,  -57. ,   31. ,    0.6],       [  41. ,  -33. ,   26. ,    0.6],       [  56. ,    0. ,   28. ,    1.2],       [  49. ,   32. ,   26. ,    0.7],       [  21. ,   57. ,   27. ,    1. ],       [ -19. ,   61. ,   28. ,    1.1],       [ -45. ,   37. ,   28. ,    1.4],       [ -63. ,   -4. ,   22. ,    1. ],       [ -53. ,  -38. ,   26. ,    1.2],       [ -22. ,  -54. ,   27. ,    1. ],       [  21. ,  -61. ,   23. ,    0.6],       [  48. ,  -39. ,   22. ,    1.1],       [  69. ,   -2. ,   26. ,    0.8],       [  49. ,   39. ,   29. ,    0.6],       [  15. ,   60. ,   29. ,    0.7],       [ -19. ,   60. ,   24. ,    0.8],       [ -54. ,   36. ,   28. ,    0.7],       [ -65. ,   -2. ,   27. ,    0.5],       [ -58. ,  -43. ,   26. ,    0.5],       [ -20. ,  -66. ,   29. ,    1. ],       [  16. ,  -67. ,   22. ,    0.6],       [  52. ,  -36. ,   31. ,    1.5],       [  73. ,    0. ,   28. ,    0.5],       [  52. ,   38. ,   31. ,    1.3],       [  18. ,   67. ,   23. ,    1.3],       [ -27. ,   67. ,   27. ,    1.2],       [ -57. ,   41. ,   23. ,    1. ],       [ -74. ,   -1. ,   22. ,    1.2],       [ -59. ,  -37. ,   22. ,    1.1],       [ -26. ,  -65. ,   25. ,    1.3],       [  19. ,  -66. ,   30. ,    0.7],       [  58. ,  -42. ,   30. ,    1. ],       [  77. ,   -4. ,   31. ,    1. ],       [  64. ,   48. ,   27. ,    0.7],       [  28. ,   68. ,   27. ,    1. ],       [ -27. ,   67. ,   31. ,    0.5],       [ -65. ,   39. ,   28. ,    1.4],       [ -79. ,   -2. ,   23. ,    1.1],       [ -62. ,  -46. ,   24. ,    1.4],       [ -27. ,  -68. ,   22. ,    1.2],       [  26. ,  -71. ,   29. ,    1.4],       [  58. ,  -45. ,   22. ,    0.9],       [  78. ,    3. ,   28. ,    1.5],       [  66. ,   49. ,   23. ,    0.8],       [  20. ,   74. ,   29. ,    0.6],       [ -30. ,   79. ,   26. ,    0.6],       [ -63. ,   45. ,   29. ,    1.3],       [ -79. ,    3. ,   23. ,    1.1],       [ -60. ,  -50. ,   28. ,    1.2],       [ -25. ,  -73. ,   28. ,    0.6],       [  29. ,  -79. ,   23. ,    0.8],       [  67. ,  -46. ,   24. ,    0.6],       [  81. ,    1. ,   26. ,    0.6],       [  72. ,   53. ,   25. ,    1. ],       [  22. ,   84. ,   27. ,    1.2],       [ -30. ,   83. ,   30. ,    0.6],       [ -73. ,   49. ,   22. ,    1. ],       [ -90. ,   -4. ,   30. ,    1.4],       [ -67. ,  -54. ,   23. ,    1.4],       [ -30. ,  -86. ,   24. ,    0.7],       [  28. ,  -79. ,   23. ,    0.9],       [  70. ,  -47. ,   22. ,    1.1],       [  87. ,    1. ,   29. ,    1.4],       [  69. ,   56. ,   27. ,    0.6],       [  23. ,   84. ,   29. ,    1.3],       [ -29. ,   84. ,   29. ,    1. ],       [ -68. ,   50. ,   22. ,    0.6],       [ -89. ,   -5. ,   22. ,    0.7],       [ -68. ,  -50. ,   23. ,    1.5],       [ -25. ,  -86. ,   30. ,    0.8],       [  25. ,  -90. ,   28. ,    0.8],       [  77. ,  -52. ,   29. ,    0.8],       [  95. ,    2. ,   25. ,    0.9],       [  80. ,   58. ,   23. ,    1.4],       [  27. ,   89. ,   22. ,    1.4],       [ -34. ,   89. ,   21. ,    1.4],       [ -78. ,   58. ,   24. ,    0.6],       [ -95. ,    1. ,   25. ,    0.8],       [ -77. ,  -56. ,   26. ,    1.2],       [ -30. ,  -92. ,   26. ,    1.3],       [  26. ,  -89. ,   22. ,    0.9],       [  78. ,  -55. ,   28. ,    1.3],       [  99. ,   -4. ,   24. ,    1.4],       [  76. ,   59. ,   22. ,    0.7],       [  35. ,   91. ,   22. ,    1.1],       [ -32. ,   98. ,   22. ,    1.4],       [ -77. ,   53. ,   30. ,    0.7],       [ -98. ,    3. ,   30. ,    1. ],       [ -85. ,  -55. ,   30. ,    0.5],       [ -27. ,  -92. ,   24. ,    0.7],       [  29. ,  -92. ,   30. ,    0.9],       [  79. ,  -57. ,   29. ,    0.8],       [  49. ,    3. ,   34. ,    1. ],       [  39. ,   34. ,   33. ,    1.3],       [  14. ,   50. ,   36. ,    1.3],       [ -16. ,   49. ,   37. ,    1.3],       [ -42. ,   33. ,   31. ,    0.6],       [ -52. ,    4. ,   34. ,    1.2],       [ -37. ,  -34. ,   34. ,    0.6],       [ -17. ,  -46. ,   28. ,    0.7],       [  16. ,  -51. ,   37. ,    0.8],       [  36. ,  -34. ,   33. ,    0.8],       [  56. ,   -3. ,   37. ,    0.7],       [  49. ,   31. ,   32. ,    0.9],       [  16. ,   49. ,   34. ,    1. ],       [ -14. ,   56. ,   36. ,    0.8],       [ -48. ,   35. ,   36. ,    0.6],       [ -57. ,   -1. ,   36. ,    0.6],       [ -41. ,  -32. ,   32. ,    1.3],       [ -16. ,  -54. ,   33. ,    1.4],       [  17. ,  -50. ,   30. ,    0.7],       [  41. ,  -32. ,   34. ,    1.4],       [  61. ,    3. ,   32. ,    0.6],       [  44. ,   35. ,   29. ,    0.8],       [  21. ,   58. ,   29. ,    1.5],       [ -17. ,   55. ,   33. ,    0.6],       [ -49. ,   39. ,   35. ,    1. ],       [ -61. ,   -4. ,   33. ,    1. ],       [ -52. ,  -34. ,   38. ,    0.6],       [ -16. ,  -59. ,   34. ,    1.2],       [  14. ,  -57. ,   32. ,    0.6],       [  48. ,  -32. ,   31. ,    0.8],       [  65. ,   -5. ,   31. ,    0.8],       [  52. ,   34. ,   35. ,    0.7],       [  18. ,   62. ,   31. ,    0.6],       [ -22. ,   64. ,   29. ,    0.8],       [ -53. ,   37. ,   33. ,    0.5],       [ -63. ,    4. ,   33. ,    0.6],       [ -50. ,  -36. ,   33. ,    0.6],       [ -18. ,  -59. ,   38. ,    1. ],       [  18. ,  -60. ,   32. ,    0.8],       [  50. ,  -42. ,   33. ,    1. ],       [  66. ,    1. ,   36. ,    1. ],       [  52. ,   37. ,   28. ,    0.7],       [  22. ,   64. ,   36. ,    1.2],       [ -27. ,   66. ,   29. ,    0.9],       [ -61. ,   43. ,   32. ,    1.2],       [ -74. ,   -2. ,   30. ,    0.9],       [ -57. ,  -37. ,   32. ,    0.9],       [ -23. ,  -69. ,   29. ,    0.7],       [  26. ,  -67. ,   34. ,    1.4],       [  54. ,  -39. ,   30. ,    1. ],       [  76. ,    4. ,   37. ,    1.3],       [  61. ,   48. ,   32. ,    1.1],       [  18. ,   72. ,   31. ,    1.3],       [ -25. ,   72. ,   35. ,    0.7],       [ -61. ,   47. ,   30. ,    1.2],       [ -76. ,    0. ,   33. ,    0.8],       [ -61. ,  -49. ,   29. ,    0.5],       [ -22. ,  -70. ,   37. ,    1.2],       [  24. ,  -75. ,   31. ,    0.8],       [  55. ,  -43. ,   30. ,    0.5],       [  84. ,   -3. ,   35. ,    1.1],       [  63. ,   49. ,   33. ,    0.8],       [  28. ,   74. ,   38. ,    0.7],       [ -26. ,   77. ,   38. ,    1.3],       [ -67. ,   42. ,   28. ,    1.1],       [ -81. ,    4. ,   33. ,    0.9],       [ -64. ,  -52. ,   30. ,    0.5],       [ -30. ,  -76. ,   35. ,    0.7],       [  26. ,  -79. ,   32. ,    0.6],       [  66. ,  -51. ,   34. ,    1.4],       [  85. ,    0. ,   35. ,    0.8],       [  66. ,   50. ,   31. ,    0.8],       [  30. ,   80. ,   29. ,    0.5],       [ -24. ,   77. ,   31. ,    1.1],       [ -72. ,   50. ,   36. ,    1.3],       [ -89. ,    4. ,   37. ,    1.2],       [ -74. ,  -52. ,   37. ,    1.4],       [ -24. ,  -77. ,   37. ,    0.9],       [  29. ,  -81. ,   37. ,    1. ],       [  72. ,  -46. ,   32. ,    0.9],       [  85. ,    0. ,   29. ,    1.3],       [  76. ,   50. ,   34. ,    1. ],       [  27. ,   89. ,   28. ,    1.3],       [ -27. ,   84. ,   29. ,    0.8],       [ -74. ,   57. ,   32. ,    1.3],       [ -90. ,    2. ,   29. ,    0.7],       [ -75. ,  -49. ,   32. ,    1.3],       [ -26. ,  -83. ,   29. ,    1.3],       [  26. ,  -88. ,   33. ,    1.1],       [  69. ,  -54. ,   35. ,    0.8],       [  98. ,   -2. ,   33. ,    0.8],       [  75. ,   60. ,   31. ,    1. ],       [  30. ,   88. ,   38. ,    0.7],       [ -31. ,   90. ,   28. ,    0.9],       [ -80. ,   51. ,   32. ,    1.3],       [ -98. ,    2. ,   28. ,    0.6],       [ -76. ,  -52. ,   37. ,    1.2],       [ -26. ,  -96. ,   34. ,    1. ],       [  31. ,  -87. ,   32. ,    1.1],       [  76. ,  -53. ,   34. ,    1.4],       [ 103. ,    1. ,   33. ,    0.7],       [  81. ,   61. ,   36. ,    0.8],       [  31. ,   95. ,   35. ,    1.3],       [ -32. ,   92. ,   36. ,    0.8],       [ -81. ,   57. ,   34. ,    0.6],       [-101. ,   -5. ,   32. ,    1.5],       [ -79. ,  -61. ,   36. ,    1. ],       [ -36. ,  -96. ,   30. ,    0.8],       [  31. ,  -98. ,   34. ,    1. ],       [  85. ,  -55. ,   28. ,    0.7],       [  48. ,    1. ,   36. ,    1. ],       [  42. ,   32. ,   41. ,    1. ],       [  17. ,   49. ,   40. ,    1.2],       [ -19. ,   47. ,   37. ,    1.3],       [ -45. ,   34. ,   44. ,    0.8],       [ -53. ,    0. ,   41. ,    0.6],       [ -44. ,  -25. ,   37. ,    0.7],       [ -12. ,  -45. ,   41. ,    1.4],       [  17. ,  -52. ,   38. ,    1.1],       [  44. ,  -27. ,   36. ,    1.4],       [  50. ,    1. ,   44. ,    0.6],       [  47. ,   32. ,   41. ,    1.4],       [  19. ,   52. ,   41. ,    1.4],       [ -13. ,   54. ,   36. ,    0.5],       [ -49. ,   34. ,   39. ,    1.4],       [ -59. ,   -3. ,   39. ,    0.6],       [ -49. ,  -31. ,   42. ,    0.8],       [ -14. ,  -56. ,   36. ,    0.8],       [  20. ,  -50. ,   36. ,    1.1],       [  46. ,  -35. ,   36. ,    1.1],       [  57. ,   -3. ,   37. ,    1. ],       [  47. ,   35. ,   35. ,    0.6],       [  15. ,   53. ,   43. ,    0.9],       [ -15. ,   52. ,   44. ,    1.5],       [ -53. ,   35. ,   36. ,    1.3],       [ -62. ,   -1. ,   43. ,    0.5],       [ -54. ,  -40. ,   38. ,    1.5],       [ -22. ,  -54. ,   38. ,    1.2],       [  18. ,  -59. ,   44. ,    1.5],       [  44. ,  -39. ,   41. ,    0.6],       [  60. ,   -2. ,   39. ,    0.6],       [  48. ,   34. ,   37. ,    1.5],       [  17. ,   66. ,   43. ,    0.8],       [ -16. ,   65. ,   40. ,    1.2],       [ -49. ,   40. ,   38. ,    1.3],       [ -65. ,   -5. ,   39. ,    0.9],       [ -54. ,  -41. ,   39. ,    0.9],       [ -17. ,  -66. ,   36. ,    1.4],       [  17. ,  -59. ,   44. ,    1.1],       [  53. ,  -41. ,   36. ,    0.6],       [  67. ,    1. ,   36. ,    0.8],       [  55. ,   37. ,   43. ,    0.7],       [  25. ,   64. ,   44. ,    1. ],       [ -24. ,   64. ,   44. ,    0.6],       [ -61. ,   36. ,   42. ,    1. ],       [ -70. ,    2. ,   44. ,    0.9],       [ -55. ,  -46. ,   37. ,    0.8],       [ -17. ,  -65. ,   41. ,    0.8],       [  17. ,  -71. ,   41. ,    0.6],       [  52. ,  -37. ,   43. ,    1.4],       [  77. ,   -5. ,   40. ,    1. ],       [  56. ,   48. ,   35. ,    0.9],       [  21. ,   75. ,   35. ,    1. ],       [ -22. ,   71. ,   41. ,    1.1],       [ -60. ,   39. ,   42. ,    1.4],       [ -75. ,    1. ,   36. ,    0.7],       [ -58. ,  -48. ,   38. ,    1.4],       [ -23. ,  -70. ,   44. ,    1.2],       [  22. ,  -68. ,   36. ,    1. ],       [  62. ,  -43. ,   39. ,    0.9],       [  75. ,   -1. ,   40. ,    1.2],       [  65. ,   47. ,   36. ,    0.5],       [  20. ,   80. ,   37. ,    1. ],       [ -22. ,   77. ,   37. ,    0.7],       [ -67. ,   48. ,   37. ,    1.4],       [ -81. ,    2. ,   44. ,    1.4],       [ -65. ,  -45. ,   37. ,    0.9],       [ -26. ,  -81. ,   42. ,    0.7],       [  27. ,  -80. ,   39. ,    0.6],       [  69. ,  -51. ,   35. ,    0.8],       [  81. ,    4. ,   43. ,    1.2],       [  69. ,   45. ,   42. ,    1.3],       [  24. ,   80. ,   40. ,    0.9],       [ -27. ,   81. ,   44. ,    1. ],       [ -69. ,   50. ,   40. ,    0.5],       [ -83. ,   -3. ,   38. ,    1.4],       [ -66. ,  -47. ,   40. ,    1.4],       [ -26. ,  -81. ,   44. ,    0.6],       [  22. ,  -84. ,   35. ,    0.7],       [  70. ,  -50. ,   37. ,    1. ],       [  85. ,   -3. ,   39. ,    1.2],       [  74. ,   48. ,   43. ,    1.4],       [  24. ,   86. ,   41. ,    0.9],       [ -26. ,   82. ,   35. ,    0.8],       [ -75. ,   57. ,   43. ,    0.8],       [ -87. ,   -4. ,   44. ,    1. ],       [ -75. ,  -53. ,   37. ,    1.5],       [ -25. ,  -85. ,   43. ,    0.8],       [  25. ,  -85. ,   39. ,    0.7],       [  76. ,  -51. ,   40. ,    0.8],       [  99. ,   -1. ,   36. ,    0.5],       [  80. ,   55. ,   35. ,    1.2],       [  31. ,   85. ,   38. ,    1. ],       [ -29. ,   93. ,   38. ,    1.3],       [ -80. ,   51. ,   38. ,    0.6],       [ -98. ,   -5. ,   38. ,    0.9],       [ -74. ,  -56. ,   42. ,    0.8],       [ -25. ,  -87. ,   36. ,    1.1],       [  24. ,  -87. ,   36. ,    0.9],       [  72. ,  -57. ,   44. ,    0.8],       [ 103. ,    0. ,   39. ,    0.8],       [  85. ,   61. ,   44. ,    1.4],       [  32. ,   94. ,   37. ,    0.7],       [ -31. ,   95. ,   43. ,    0.5],       [ -85. ,   61. ,   40. ,    0.9],       [ -96. ,    0. ,   39. ,    1.3],       [ -81. ,  -64. ,   39. ,    1.4],       [ -36. ,  -98. ,   35. ,    1.2],       [  30. , -100. ,   38. ,    0.5],       [  76. ,  -63. ,   40. ,    1.2]])
        basis0 = BSplineBasis(5, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  3.1,  4.4,  5.1,  5.9,  7. ,  7. ,  7. ,  7. ,
        8.2]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  3. ,  3.7,  5.4,  6. ,  6. ,  6. ,  6. ,
        6. ,  6. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  3. ,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.insert_knot([2.340]*1, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 17)
        vol2.insert_knot([4.649]*2, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 19)
        vol2.insert_knot([2.305]*3, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 22)
        vol2.insert_knot([4.761]*4, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 26)
        vol2.insert_knot([5.326]*1, 1) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 18)
        vol2.insert_knot([2.520]*2, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 20)
        vol2.insert_knot([4.798]*3, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 23)
        vol2.insert_knot([2.021]*4, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 27)
        vol2.insert_knot([1.136]*5, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 32)
        vol2.insert_knot([1.302]*1, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 13)
        vol2.insert_knot([1.878]*2, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 15)
        vol2.insert_knot([1.665]*3, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 18)
        vol2.insert_knot([1.765]*4, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 22)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p7_rational_C1_periodic(self):
        controlpoints = np.array([[ 98. ,   0. ,   0. ,   1.1],
       [ 93. ,  39. ,   4. ,   1.1],
       [ 70. ,  73. ,  -5. ,   1. ],
       [ 38. ,  96. ,  -4. ,   0.7],
       [ -4. ,  98. ,   0. ,   0.6],
       [-36. ,  89. ,   3. ,   0.7],
       [-69. ,  72. ,  -2. ,   1.1],
       [-97. ,  35. ,   1. ,   1.4],
       [-97. ,   3. ,  -2. ,   0.6],
       [-90. , -34. ,   0. ,   0.8],
       [-67. , -71. ,   4. ,   0.8],
       [-37. , -96. ,   2. ,   1.2],
       [ -1. , -99. ,  -5. ,   0.8],
       [ 35. , -89. ,  -5. ,   0.6],
       [ 70. , -69. ,  -1. ,   0.5],
       [ 97. , -43. ,   3. ,   0.5]])
        basis0 = BSplineBasis(7, np.array([ -2.3,  -1.4,   0. ,   0. ,   0. ,   0. ,   0. ,   1.3,   2.4,   2.6,   3.7,   4.8,   5.7,
         7.2,   8.2,   9.4,   9.7,  10.6,  12. ,  12. ,  12. ,  12. ,  12. ,  13.3,  14.4]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([4.032]*1) # insert C5-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 26)
        crv2.insert_knot([5.544]*2) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([2.712]*3) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 31)
        crv2.insert_knot([7.811]*4) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 35)
        crv2.insert_knot([8.399]*5) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 40)
        crv2.insert_knot([7.266]*6) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 46)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p56_rational_C1_periodic(self):
        controlpoints = np.array([[  57. ,    2. ,    3. ,    0.9],       [  54. ,   26. ,    2. ,    1.2],       [  26. ,   50. ,   -3. ,    0.5],       [  -2. ,   62. ,    2. ,    0.6],       [ -31. ,   56. ,   -3. ,    0.8],       [ -48. ,   29. ,   -2. ,    0.9],       [ -57. ,    2. ,    4. ,    1.1],       [ -55. ,  -35. ,    0. ,    1. ],       [ -31. ,  -52. ,   -5. ,    1.5],       [  -2. ,  -57. ,    4. ,    1.4],       [  29. ,  -51. ,    2. ,    1.2],       [  56. ,  -27. ,   -3. ,    0.9],       [  63. ,   -1. ,   -1. ,    1.3],       [  56. ,   28. ,   -1. ,    1.1],       [  30. ,   53. ,   -3. ,    1.2],       [  -1. ,   67. ,    3. ,    0.9],       [ -36. ,   59. ,   -4. ,    0.8],       [ -58. ,   34. ,    4. ,    1.3],       [ -61. ,   -3. ,   -4. ,    1.1],       [ -55. ,  -34. ,   -5. ,    1.1],       [ -33. ,  -54. ,    0. ,    1. ],       [   3. ,  -68. ,   -2. ,    0.6],       [  36. ,  -52. ,    2. ,    0.7],       [  58. ,  -32. ,    4. ,    0.7],       [  68. ,   -2. ,    0. ,    1.3],       [  57. ,   38. ,   -3. ,    0.9],       [  32. ,   62. ,    4. ,    1.3],       [  -3. ,   71. ,    3. ,    0.6],       [ -40. ,   55. ,    1. ,    1.2],       [ -61. ,   36. ,    2. ,    0.8],       [ -66. ,    4. ,   -5. ,    1.3],       [ -63. ,  -31. ,   -2. ,    0.9],       [ -36. ,  -59. ,   -2. ,    1.1],       [  -4. ,  -68. ,   -5. ,    0.8],       [  39. ,  -62. ,    1. ,    0.9],       [  62. ,  -37. ,    0. ,    0.6],       [  78. ,   -1. ,    2. ,    0.9],       [  67. ,   39. ,    0. ,    1.1],       [  37. ,   61. ,   -3. ,    0.5],       [  -3. ,   77. ,    0. ,    0.7],       [ -37. ,   62. ,   -1. ,    0.6],       [ -63. ,   39. ,    4. ,    1.4],       [ -77. ,   -2. ,    0. ,    1.5],       [ -69. ,  -38. ,   -2. ,    1.1],       [ -35. ,  -64. ,   -2. ,    1.4],       [  -3. ,  -77. ,    1. ,    0.6],       [  38. ,  -66. ,   -5. ,    1.3],       [  62. ,  -39. ,    2. ,    0.7],       [  84. ,    4. ,   -1. ,    0.6],       [  72. ,   42. ,   -3. ,    1.2],       [  42. ,   68. ,   -3. ,    1.2],       [  -5. ,   83. ,    4. ,    1.3],       [ -42. ,   72. ,    0. ,    0.9],       [ -66. ,   37. ,    4. ,    0.5],       [ -82. ,   -4. ,   -1. ,    0.6],       [ -65. ,  -45. ,   -1. ,    1. ],       [ -41. ,  -67. ,    1. ,    0.9],       [  -4. ,  -81. ,   -3. ,    0.9],       [  35. ,  -65. ,    1. ,    1.2],       [  74. ,  -36. ,    2. ,    1.1],       [  86. ,    3. ,   -2. ,    1.5],       [  73. ,   42. ,   -5. ,    0.7],       [  43. ,   74. ,   -5. ,    0.9],       [   1. ,   82. ,    1. ,    1.4],       [ -43. ,   75. ,    1. ,    0.9],       [ -76. ,   38. ,   -5. ,    1.3],       [ -82. ,    0. ,    2. ,    1. ],       [ -72. ,  -45. ,    0. ,    1.4],       [ -45. ,  -77. ,    2. ,    1.2],       [  -5. ,  -82. ,   -4. ,    1.3],       [  38. ,  -77. ,    0. ,    1. ],       [  71. ,  -47. ,   -2. ,    1.1],       [  92. ,    4. ,    1. ,    0.7],       [  76. ,   47. ,   -2. ,    0.6],       [  45. ,   81. ,    3. ,    1.2],       [  -1. ,   86. ,   -3. ,    0.5],       [ -50. ,   78. ,   -1. ,    0.9],       [ -79. ,   48. ,    3. ,    1.4],       [ -92. ,    4. ,   -4. ,    0.6],       [ -78. ,  -44. ,    2. ,    1. ],       [ -41. ,  -76. ,    3. ,    0.5],       [   4. ,  -89. ,    4. ,    1.3],       [  48. ,  -78. ,   -3. ,    1.5],       [  78. ,  -42. ,    0. ,    0.6],       [  96. ,   -1. ,    1. ,    0.6],       [  86. ,   46. ,   -2. ,    0.9],       [  44. ,   83. ,    0. ,    1. ],       [   4. ,   90. ,   -5. ,    0.7],       [ -52. ,   86. ,   -2. ,    0.9],       [ -82. ,   51. ,    0. ,    1. ],       [ -95. ,   -5. ,   -5. ,    0.9],       [ -79. ,  -46. ,    0. ,    0.5],       [ -45. ,  -79. ,   -4. ,    1.2],       [   3. ,  -98. ,    2. ,    0.7],       [  44. ,  -81. ,   -4. ,    0.6],       [  86. ,  -45. ,    4. ,    0.6],       [ 100. ,   -4. ,   -2. ,    0.7],       [  84. ,   53. ,   -2. ,    0.8],       [  49. ,   84. ,   -4. ,    1.4],       [  -1. ,  102. ,   -5. ,    1.2],       [ -47. ,   83. ,    4. ,    0.9],       [ -86. ,   45. ,   -5. ,    0.7],       [ -97. ,   -5. ,    2. ,    0.6],       [ -89. ,  -52. ,   -4. ,    1.1],       [ -48. ,  -84. ,    1. ,    1.5],       [   3. , -104. ,   -2. ,    0.5],       [  45. ,  -88. ,    1. ,    0.7],       [  88. ,  -50. ,   -4. ,    1.2]])
        basis0 = BSplineBasis(5, np.array([ -2.3,  -1. ,   0. ,   0. ,   0. ,   1.1,   2.1,   2.9,   3.7,   4.7,   6.2,   6.9,   7.7,
         9. ,  10. ,  10. ,  10. ,  11.1,  12.1]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2.9,  4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([7.417]*1, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([3.093]*2, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([8.338]*3, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([5.515]*4, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([1.226]*1, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([2.485]*2, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([1.459]*3, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([2.549]*4, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)
        surf2.insert_knot([2.227]*5, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 30)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p656_rational_C1_periodic(self):
        controlpoints = np.array([[  49. ,    4. ,   -4. ,    1. ],       [  44. ,   22. ,   -2. ,    1. ],       [  32. ,   42. ,    4. ,    1.1],       [   6. ,   43. ,   -5. ,    0.6],       [ -12. ,   49. ,    0. ,    0.6],       [ -34. ,   40. ,   -2. ,    0.9],       [ -47. ,   19. ,   -5. ,    1.4],       [ -46. ,   -1. ,    0. ,    1.1],       [ -45. ,  -23. ,    2. ,    0.6],       [ -30. ,  -41. ,   -1. ,    1. ],       [ -16. ,  -53. ,    1. ,    0.8],       [   9. ,  -54. ,    0. ,    0.6],       [  32. ,  -41. ,    0. ,    0.6],       [  46. ,  -27. ,    3. ,    1.3],       [  57. ,   -4. ,    4. ,    1.4],       [  53. ,   28. ,    0. ,    1.2],       [  37. ,   44. ,    2. ,    1.4],       [  11. ,   56. ,   -3. ,    1.1],       [ -13. ,   49. ,    0. ,    1.4],       [ -33. ,   44. ,   -4. ,    1.1],       [ -48. ,   26. ,   -4. ,    1.4],       [ -58. ,   -3. ,   -2. ,    0.7],       [ -52. ,  -24. ,   -1. ,    0.7],       [ -39. ,  -47. ,   -5. ,    1.3],       [ -12. ,  -55. ,   -5. ,    0.5],       [  11. ,  -57. ,   -4. ,    0.9],       [  36. ,  -49. ,   -3. ,    0.7],       [  53. ,  -21. ,   -2. ,    0.5],       [  57. ,    1. ,    4. ,    1.2],       [  53. ,   22. ,    1. ,    0.5],       [  42. ,   51. ,   -1. ,    1.2],       [  12. ,   62. ,   -4. ,    1.3],       [ -11. ,   55. ,    0. ,    0.8],       [ -40. ,   46. ,    3. ,    1.5],       [ -53. ,   29. ,    3. ,    1.2],       [ -65. ,    0. ,   -4. ,    0.6],       [ -53. ,  -27. ,   -2. ,    0.9],       [ -42. ,  -48. ,   -5. ,    1.2],       [ -14. ,  -63. ,    3. ,    0.8],       [  17. ,  -56. ,   -5. ,    0.7],       [  35. ,  -48. ,   -2. ,    1. ],       [  58. ,  -24. ,   -5. ,    0.9],       [  66. ,    3. ,    2. ,    1.4],       [  57. ,   33. ,    4. ,    1.3],       [  40. ,   48. ,    3. ,    0.6],       [  15. ,   62. ,    1. ,    1.1],       [ -11. ,   66. ,   -1. ,    0.5],       [ -45. ,   54. ,   -4. ,    0.7],       [ -62. ,   26. ,    2. ,    1.4],       [ -69. ,   -1. ,    4. ,    0.8],       [ -62. ,  -27. ,    2. ,    0.8],       [ -42. ,  -48. ,   -2. ,    0.9],       [ -12. ,  -63. ,    3. ,    0.8],       [  17. ,  -66. ,    3. ,    1.4],       [  39. ,  -51. ,   -4. ,    1.1],       [  56. ,  -24. ,   -4. ,    1.3],       [  70. ,    4. ,    0. ,    1.3],       [  70. ,   35. ,    4. ,    1.2],       [  44. ,   53. ,   -2. ,    1.1],       [  19. ,   66. ,   -4. ,    0.7],       [ -12. ,   69. ,   -2. ,    0.5],       [ -50. ,   58. ,    1. ,    1. ],       [ -70. ,   35. ,    3. ,    0.7],       [ -71. ,   -3. ,    2. ,    0.7],       [ -68. ,  -29. ,    1. ,    0.7],       [ -44. ,  -58. ,   -5. ,    1.4],       [ -17. ,  -68. ,    4. ,    0.9],       [  18. ,  -75. ,    3. ,    0.6],       [  40. ,  -60. ,   -1. ,    1. ],       [  67. ,  -31. ,    4. ,    0.5],       [  73. ,    1. ,   -4. ,    1.1],       [  66. ,   30. ,    4. ,    1. ],       [  47. ,   59. ,    2. ,    1.3],       [  13. ,   78. ,   -2. ,    1.5],       [ -22. ,   78. ,   -4. ,    0.8],       [ -49. ,   57. ,    2. ,    1.3],       [ -69. ,   28. ,    1. ,    0.9],       [ -82. ,    4. ,   -5. ,    1. ],       [ -67. ,  -35. ,    4. ,    1.4],       [ -45. ,  -58. ,   -4. ,    0.6],       [ -18. ,  -73. ,    2. ,    0.6],       [  20. ,  -77. ,    0. ,    0.8],       [  46. ,  -63. ,   -1. ,    1.1],       [  66. ,  -38. ,    1. ,    1.2],       [  86. ,   -1. ,    0. ,    0.8],       [  71. ,   36. ,    4. ,    0.9],       [  48. ,   63. ,    0. ,    1.4],       [  18. ,   83. ,   -5. ,    0.9],       [ -18. ,   82. ,   -2. ,    1.4],       [ -49. ,   62. ,   -4. ,    1. ],       [ -73. ,   40. ,    3. ,    1.2],       [ -81. ,    1. ,    4. ,    0.9],       [ -79. ,  -41. ,    4. ,    0.6],       [ -53. ,  -69. ,    1. ,    0.9],       [ -21. ,  -80. ,    0. ,    1.4],       [  22. ,  -86. ,   -4. ,    0.8],       [  52. ,  -66. ,    4. ,    0.8],       [  76. ,  -36. ,    1. ,    1. ],       [  86. ,   -3. ,    2. ,    1.2],       [  84. ,   41. ,    3. ,    1.1],       [  52. ,   73. ,    0. ,    0.9],       [  16. ,   88. ,   -5. ,    1.1],       [ -18. ,   84. ,    0. ,    0.9],       [ -60. ,   68. ,    1. ,    1. ],       [ -76. ,   40. ,    1. ,    0.6],       [ -87. ,    0. ,   -3. ,    1.1],       [ -79. ,  -41. ,    2. ,    0.5],       [ -53. ,  -70. ,    1. ,    0.7],       [ -23. ,  -84. ,    3. ,    0.7],       [  19. ,  -91. ,   -1. ,    1.5],       [  60. ,  -74. ,   -4. ,    1.4],       [  82. ,  -39. ,   -4. ,    0.7],       [  91. ,    1. ,    2. ,    0.7],       [  86. ,   36. ,   -2. ,    0.5],       [  56. ,   77. ,    4. ,    1.3],       [  21. ,   89. ,    2. ,    1. ],       [ -22. ,   90. ,   -3. ,    0.8],       [ -61. ,   78. ,   -2. ,    0.5],       [ -85. ,   43. ,   -2. ,    1.1],       [ -97. ,    3. ,   -5. ,    0.9],       [ -83. ,  -37. ,    4. ,    1. ],       [ -63. ,  -79. ,   -2. ,    0.9],       [ -20. ,  -91. ,   -1. ,    0.5],       [  23. ,  -92. ,    1. ,    1. ],       [  57. ,  -72. ,    3. ,    0.9],       [  89. ,  -38. ,    4. ,    0.9],       [  99. ,    3. ,    0. ,    1.4],       [  86. ,   41. ,   -4. ,    0.8],       [  65. ,   74. ,   -1. ,    1. ],       [  22. ,   99. ,    3. ,    1.1],       [ -25. ,   99. ,    1. ,    0.6],       [ -63. ,   81. ,    2. ,    1.4],       [ -92. ,   44. ,   -3. ,    1.2],       [ -96. ,    1. ,   -2. ,    1.3],       [ -88. ,  -43. ,   -2. ,    0.7],       [ -67. ,  -79. ,    2. ,    0.8],       [ -19. ,  -98. ,   -3. ,    1.3],       [  20. , -103. ,   -2. ,    0.8],       [  62. ,  -77. ,    0. ,    0.6],       [  90. ,  -43. ,   -4. ,    1.3],       [  54. ,    1. ,    0. ,    1. ],       [  46. ,   26. ,    3. ,    0.8],       [  26. ,   43. ,    1. ,    1.3],       [  12. ,   45. ,    3. ,    1.4],       [  -7. ,   46. ,    1. ,    1.2],       [ -36. ,   36. ,    3. ,    0.7],       [ -44. ,   20. ,    5. ,    0.7],       [ -49. ,   -4. ,    3. ,    1. ],       [ -46. ,  -24. ,    0. ,    1.2],       [ -36. ,  -40. ,   -1. ,    0.7],       [ -15. ,  -51. ,    8. ,    0.9],       [  15. ,  -44. ,    0. ,    0.6],       [  32. ,  -43. ,    3. ,    1.1],       [  48. ,  -17. ,    6. ,    1. ],       [  58. ,    3. ,    2. ,    1.4],       [  50. ,   28. ,    6. ,    0.9],       [  35. ,   42. ,    1. ,    0.8],       [  17. ,   54. ,    9. ,    1.4],       [  -9. ,   58. ,   -1. ,    0.9],       [ -31. ,   42. ,   -1. ,    1.1],       [ -54. ,   21. ,    3. ,    1.4],       [ -53. ,    4. ,    1. ,    1. ],       [ -55. ,  -28. ,    7. ,    1.2],       [ -37. ,  -47. ,    1. ,    0.7],       [ -12. ,  -58. ,    5. ,    1. ],       [  13. ,  -60. ,    6. ,    1.2],       [  34. ,  -39. ,   -1. ,    0.9],       [  51. ,  -28. ,    4. ,    0.5],       [  65. ,   -5. ,    6. ,    1.4],       [  54. ,   27. ,    8. ,    1.4],       [  36. ,   45. ,    8. ,    0.5],       [  10. ,   63. ,    0. ,    1.2],       [ -11. ,   55. ,    7. ,    0.6],       [ -41. ,   45. ,    3. ,    1. ],       [ -51. ,   24. ,    0. ,    0.6],       [ -63. ,    1. ,    1. ,    1. ],       [ -53. ,  -23. ,    1. ,    1.4],       [ -41. ,  -49. ,    8. ,    0.6],       [ -14. ,  -64. ,    2. ,    1.3],       [   9. ,  -63. ,    7. ,    1.4],       [  41. ,  -47. ,    6. ,    0.6],       [  56. ,  -27. ,    1. ,    0.6],       [  64. ,    1. ,    1. ,    1.4],       [  57. ,   24. ,    8. ,    0.8],       [  43. ,   56. ,    4. ,    1.5],       [  13. ,   66. ,    2. ,    1.4],       [ -14. ,   61. ,    6. ,    1.5],       [ -45. ,   53. ,    0. ,    1.2],       [ -62. ,   33. ,    4. ,    1.4],       [ -65. ,    0. ,    4. ,    0.9],       [ -58. ,  -31. ,    4. ,    0.6],       [ -45. ,  -50. ,    0. ,    0.8],       [ -10. ,  -64. ,    0. ,    0.7],       [  17. ,  -63. ,    6. ,    1.2],       [  44. ,  -57. ,    4. ,    1.1],       [  60. ,  -25. ,    4. ,    1.2],       [  75. ,    3. ,    0. ,    1.2],       [  61. ,   36. ,    4. ,    1.1],       [  48. ,   56. ,    6. ,    1.4],       [  16. ,   69. ,    1. ,    1.3],       [ -12. ,   74. ,    9. ,    1.2],       [ -44. ,   56. ,    3. ,    0.5],       [ -70. ,   29. ,    1. ,    1.5],       [ -72. ,    0. ,    3. ,    0.8],       [ -66. ,  -34. ,    6. ,    1.2],       [ -41. ,  -59. ,    0. ,    1. ],       [ -19. ,  -67. ,   -1. ,    1.4],       [  20. ,  -67. ,    9. ,    1. ],       [  42. ,  -52. ,    4. ,    1.2],       [  69. ,  -35. ,    5. ,    1.1],       [  77. ,   -3. ,    1. ,    1.3],       [  72. ,   31. ,    2. ,    0.7],       [  47. ,   58. ,    4. ,    0.6],       [  14. ,   73. ,    7. ,    1. ],       [ -21. ,   79. ,    7. ,    0.7],       [ -44. ,   62. ,    6. ,    1.3],       [ -66. ,   31. ,    9. ,    1.1],       [ -80. ,   -3. ,    5. ,    0.7],       [ -75. ,  -32. ,    7. ,    1.5],       [ -53. ,  -64. ,    7. ,    0.6],       [ -18. ,  -73. ,    4. ,    1.1],       [  14. ,  -75. ,    7. ,    0.8],       [  48. ,  -66. ,   -1. ,    1. ],       [  72. ,  -37. ,    7. ,    0.7],       [  86. ,    4. ,    5. ,    0.9],       [  71. ,   35. ,    6. ,    0.5],       [  55. ,   66. ,    2. ,    1.3],       [  22. ,   81. ,    0. ,    0.9],       [ -16. ,   79. ,    5. ,    1.4],       [ -48. ,   69. ,    7. ,    1.2],       [ -79. ,   31. ,    8. ,    1.3],       [ -88. ,    3. ,    8. ,    0.8],       [ -75. ,  -41. ,    9. ,    1. ],       [ -56. ,  -63. ,    2. ,    0.5],       [ -18. ,  -80. ,    2. ,    1.5],       [  17. ,  -84. ,    8. ,    0.6],       [  50. ,  -61. ,    7. ,    0.9],       [  77. ,  -35. ,    1. ,    0.7],       [  85. ,    0. ,    2. ,    1.3],       [  83. ,   41. ,    0. ,    1.4],       [  54. ,   72. ,    8. ,    1. ],       [  19. ,   83. ,    7. ,    1.4],       [ -17. ,   89. ,    5. ,    1.5],       [ -56. ,   71. ,    5. ,    0.6],       [ -81. ,   36. ,    6. ,    1.2],       [ -88. ,    4. ,    8. ,    0.6],       [ -85. ,  -39. ,    2. ,    0.6],       [ -60. ,  -66. ,    9. ,    0.6],       [ -17. ,  -91. ,    9. ,    1. ],       [  19. ,  -90. ,    2. ,    0.8],       [  54. ,  -69. ,    3. ,    0.8],       [  78. ,  -39. ,    3. ,    1.1],       [  96. ,    2. ,    6. ,    1. ],       [  88. ,   40. ,    7. ,    0.9],       [  57. ,   72. ,    9. ,    1.4],       [  18. ,   94. ,    2. ,    0.6],       [ -20. ,   96. ,    4. ,    1. ],       [ -64. ,   71. ,    7. ,    1. ],       [ -84. ,   41. ,    3. ,    0.9],       [ -95. ,   -3. ,    8. ,    0.7],       [ -86. ,  -41. ,    0. ,    0.8],       [ -59. ,  -71. ,    4. ,    0.8],       [ -17. ,  -93. ,    7. ,    1.2],       [  22. ,  -92. ,    5. ,    0.6],       [  59. ,  -77. ,    8. ,    0.6],       [  87. ,  -38. ,   -1. ,    0.8],       [ 103. ,   -1. ,    8. ,    1.4],       [  92. ,   44. ,    6. ,    0.6],       [  64. ,   75. ,    4. ,    1.1],       [  24. ,   93. ,    7. ,    1.2],       [ -21. ,   93. ,    0. ,    0.8],       [ -65. ,   79. ,    0. ,    0.6],       [ -94. ,   47. ,    9. ,    1.1],       [-102. ,   -1. ,    0. ,    1.1],       [ -92. ,  -46. ,    5. ,    1.2],       [ -61. ,  -83. ,    4. ,    1.5],       [ -23. , -102. ,    1. ,    1.1],       [  23. ,  -96. ,    4. ,    1. ],       [  64. ,  -78. ,    7. ,    0.7],       [  92. ,  -40. ,    3. ,    0.6],       [  49. ,   -1. ,    5. ,    1. ],       [  40. ,   24. ,    8. ,    0.5],       [  35. ,   42. ,   11. ,    1.5],       [   9. ,   44. ,    9. ,    0.9],       [ -15. ,   50. ,   11. ,    0.7],       [ -29. ,   39. ,   11. ,    1.4],       [ -48. ,   18. ,    6. ,    0.6],       [ -47. ,    2. ,    5. ,    0.9],       [ -50. ,  -21. ,    6. ,    1. ],       [ -34. ,  -44. ,    5. ,    0.8],       [ -14. ,  -47. ,   12. ,    1.3],       [   9. ,  -45. ,    9. ,    0.7],       [  29. ,  -38. ,    9. ,    0.8],       [  49. ,  -25. ,    8. ,    1.3],       [  51. ,    1. ,    6. ,    0.8],       [  48. ,   22. ,    8. ,    1.3],       [  30. ,   38. ,   11. ,    1.3],       [  14. ,   56. ,   11. ,    0.9],       [  -9. ,   58. ,    9. ,    0.6],       [ -33. ,   41. ,    5. ,    1.3],       [ -47. ,   25. ,    9. ,    1.1],       [ -57. ,   -2. ,    5. ,    1.2],       [ -55. ,  -20. ,    9. ,    1.1],       [ -31. ,  -43. ,    8. ,    0.8],       [ -13. ,  -59. ,    7. ,    0.6],       [  14. ,  -56. ,   10. ,    0.8],       [  36. ,  -42. ,   11. ,    1.1],       [  54. ,  -25. ,    6. ,    0.8],       [  57. ,   -5. ,    9. ,    0.5],       [  52. ,   30. ,   11. ,    0.8],       [  35. ,   52. ,    5. ,    1.2],       [  16. ,   54. ,    7. ,    0.6],       [ -16. ,   60. ,   11. ,    1. ],       [ -35. ,   48. ,    6. ,    1. ],       [ -57. ,   25. ,   12. ,    0.8],       [ -60. ,   -1. ,    5. ,    1.3],       [ -60. ,  -23. ,   10. ,    0.5],       [ -42. ,  -52. ,   10. ,    1.3],       [ -13. ,  -56. ,   10. ,    0.6],       [  16. ,  -65. ,    5. ,    1.4],       [  38. ,  -49. ,    8. ,    0.5],       [  59. ,  -23. ,   12. ,    1.1],       [  68. ,    4. ,   12. ,    0.7],       [  63. ,   29. ,    5. ,    1.3],       [  41. ,   47. ,    9. ,    0.6],       [  16. ,   65. ,    9. ,    1.2],       [ -11. ,   65. ,    7. ,    1. ],       [ -43. ,   48. ,    4. ,    0.6],       [ -61. ,   28. ,    9. ,    0.7],       [ -67. ,    2. ,   12. ,    0.7],       [ -56. ,  -27. ,   11. ,    1.1],       [ -42. ,  -57. ,   10. ,    0.9],       [ -17. ,  -63. ,   12. ,    0.6],       [  18. ,  -61. ,    4. ,    0.8],       [  38. ,  -52. ,    9. ,    1.4],       [  57. ,  -26. ,   12. ,    0.6],       [  73. ,    1. ,   13. ,    0.8],       [  65. ,   35. ,    6. ,    0.7],       [  43. ,   56. ,    6. ,    0.9],       [  15. ,   69. ,    8. ,    0.7],       [ -15. ,   71. ,    5. ,    1.2],       [ -41. ,   57. ,    8. ,    1. ],       [ -68. ,   29. ,   12. ,    1.1],       [ -71. ,   -5. ,    5. ,    1. ],       [ -69. ,  -32. ,    9. ,    1.2],       [ -43. ,  -52. ,   10. ,    1.2],       [ -17. ,  -66. ,    5. ,    0.8],       [  14. ,  -73. ,   12. ,    0.7],       [  43. ,  -56. ,    9. ,    0.7],       [  62. ,  -32. ,    9. ,    0.6],       [  82. ,   -5. ,    8. ,    1.4],       [  73. ,   31. ,   10. ,    0.9],       [  46. ,   57. ,    9. ,    1. ],       [  20. ,   79. ,    7. ,    1.4],       [ -21. ,   74. ,    6. ,    0.6],       [ -52. ,   55. ,    8. ,    0.8],       [ -67. ,   34. ,    6. ,    1.2],       [ -82. ,   -4. ,   10. ,    0.7],       [ -67. ,  -33. ,    8. ,    1.5],       [ -44. ,  -64. ,   12. ,    1. ],       [ -22. ,  -79. ,   10. ,    0.6],       [  20. ,  -73. ,    6. ,    0.9],       [  45. ,  -57. ,    9. ,    1.2],       [  70. ,  -36. ,   12. ,    1.4],       [  81. ,   -1. ,   10. ,    1.5],       [  76. ,   39. ,    3. ,    1.3],       [  47. ,   62. ,    5. ,    0.7],       [  17. ,   77. ,    9. ,    0.9],       [ -18. ,   78. ,    8. ,    1. ],       [ -53. ,   65. ,   12. ,    0.7],       [ -80. ,   32. ,   12. ,    1. ],       [ -80. ,    2. ,   10. ,    1.3],       [ -72. ,  -41. ,    9. ,    0.7],       [ -55. ,  -69. ,    5. ,    1. ],       [ -17. ,  -83. ,    8. ,    1.2],       [  21. ,  -86. ,    4. ,    1.4],       [  52. ,  -61. ,    9. ,    0.7],       [  73. ,  -39. ,    9. ,    0.9],       [  88. ,   -5. ,    6. ,    1.1],       [  75. ,   41. ,   13. ,    0.9],       [  56. ,   67. ,    5. ,    0.9],       [  17. ,   81. ,    4. ,    0.8],       [ -17. ,   89. ,   12. ,    0.7],       [ -57. ,   65. ,    5. ,    0.8],       [ -79. ,   36. ,    8. ,    1. ],       [ -87. ,    1. ,   13. ,    0.7],       [ -79. ,  -39. ,   11. ,    0.6],       [ -59. ,  -66. ,   11. ,    1.2],       [ -18. ,  -92. ,    5. ,    0.6],       [  20. ,  -86. ,    9. ,    0.7],       [  53. ,  -67. ,   10. ,    0.7],       [  79. ,  -37. ,    5. ,    1. ],       [  90. ,   -3. ,    5. ,    1.3],       [  83. ,   36. ,   13. ,    0.9],       [  55. ,   78. ,   11. ,    1.4],       [  23. ,   95. ,    4. ,    0.9],       [ -25. ,   93. ,   11. ,    1.2],       [ -59. ,   77. ,    5. ,    1. ],       [ -81. ,   39. ,    6. ,    1.3],       [ -97. ,   -3. ,   12. ,    1.2],       [ -84. ,  -37. ,   12. ,    1.1],       [ -62. ,  -73. ,    8. ,    0.8],       [ -25. ,  -92. ,    8. ,    1.4],       [  22. ,  -97. ,   12. ,    0.7],       [  62. ,  -69. ,    6. ,    1.3],       [  85. ,  -40. ,    8. ,    0.9],       [ 101. ,    2. ,   13. ,    0.6],       [  89. ,   45. ,    8. ,    1.3],       [  61. ,   75. ,   11. ,    0.9],       [  26. ,   96. ,    8. ,    1.2],       [ -19. ,   98. ,   12. ,    0.7],       [ -60. ,   82. ,   12. ,    0.9],       [ -86. ,   39. ,    9. ,    0.9],       [-103. ,    1. ,   10. ,    0.7],       [ -89. ,  -41. ,   13. ,    1.2],       [ -67. ,  -83. ,    5. ,    1.2],       [ -26. , -102. ,    3. ,    0.7],       [  25. ,  -97. ,   12. ,    1. ],       [  61. ,  -78. ,    6. ,    1.2],       [  93. ,  -43. ,   12. ,    1.4],       [  50. ,    0. ,    9. ,    0.8],       [  40. ,   26. ,   11. ,    0.8],       [  34. ,   37. ,   13. ,    1.2],       [  10. ,   52. ,   10. ,    1.1],       [  -9. ,   47. ,   11. ,    1.3],       [ -29. ,   36. ,   16. ,    1.3],       [ -50. ,   22. ,   16. ,    0.8],       [ -46. ,    1. ,   14. ,    1.1],       [ -49. ,  -18. ,   11. ,    1.1],       [ -30. ,  -42. ,   13. ,    1. ],       [ -14. ,  -53. ,    8. ,    1. ],       [   9. ,  -51. ,   15. ,    0.6],       [  26. ,  -36. ,   16. ,    0.6],       [  48. ,  -18. ,   16. ,    1.4],       [  54. ,    1. ,    8. ,    1.3],       [  46. ,   19. ,    9. ,    0.6],       [  29. ,   40. ,   11. ,    1.3],       [  13. ,   51. ,    8. ,    1. ],       [ -14. ,   55. ,    9. ,    0.9],       [ -32. ,   39. ,   17. ,    1. ],       [ -54. ,   21. ,   15. ,    0.5],       [ -53. ,    1. ,   16. ,    0.8],       [ -53. ,  -25. ,   11. ,    0.5],       [ -38. ,  -39. ,   13. ,    0.8],       [ -18. ,  -50. ,   13. ,    1. ],       [   7. ,  -55. ,   14. ,    1.1],       [  36. ,  -45. ,   14. ,    1.1],       [  54. ,  -28. ,   10. ,    1.4],       [  57. ,    2. ,   10. ,    1.2],       [  52. ,   24. ,   16. ,    0.8],       [  35. ,   44. ,    9. ,    1.4],       [  13. ,   57. ,   14. ,    0.8],       [ -17. ,   55. ,   13. ,    1.4],       [ -39. ,   48. ,   10. ,    1.3],       [ -51. ,   22. ,   15. ,    1.2],       [ -63. ,    0. ,    9. ,    0.9],       [ -51. ,  -27. ,   11. ,    0.5],       [ -38. ,  -47. ,   12. ,    1.2],       [  -9. ,  -64. ,   18. ,    1.2],       [  16. ,  -60. ,   10. ,    0.6],       [  37. ,  -51. ,    9. ,    0.9],       [  52. ,  -23. ,   11. ,    1.5],       [  70. ,   -5. ,   11. ,    0.8],       [  64. ,   26. ,   10. ,    1.4],       [  37. ,   55. ,   10. ,    1. ],       [  19. ,   64. ,   14. ,    1. ],       [ -19. ,   67. ,   10. ,    1. ],       [ -39. ,   56. ,   15. ,    0.8],       [ -56. ,   30. ,   13. ,    1.5],       [ -68. ,   -1. ,   14. ,    0.6],       [ -59. ,  -26. ,   15. ,    0.8],       [ -41. ,  -55. ,   16. ,    0.7],       [ -16. ,  -63. ,   13. ,    0.9],       [  12. ,  -69. ,   17. ,    0.5],       [  40. ,  -54. ,   12. ,    0.8],       [  59. ,  -32. ,   11. ,    0.7],       [  71. ,    3. ,   15. ,    1.3],       [  62. ,   30. ,    9. ,    0.9],       [  44. ,   58. ,   15. ,    1.2],       [  12. ,   66. ,   14. ,    0.9],       [ -16. ,   71. ,   10. ,    0.8],       [ -47. ,   56. ,    8. ,    0.7],       [ -67. ,   28. ,   12. ,    1.4],       [ -75. ,    1. ,   12. ,    1.4],       [ -71. ,  -33. ,   11. ,    0.9],       [ -41. ,  -56. ,   12. ,    1.1],       [ -15. ,  -74. ,   16. ,    1.2],       [  11. ,  -76. ,   11. ,    1.3],       [  41. ,  -54. ,   15. ,    0.6],       [  67. ,  -29. ,   14. ,    0.9],       [  82. ,    1. ,    8. ,    1. ],       [  69. ,   31. ,   13. ,    1.5],       [  44. ,   60. ,   13. ,    0.9],       [  15. ,   76. ,   17. ,    0.8],       [ -21. ,   72. ,   18. ,    0.9],       [ -52. ,   65. ,   13. ,    1.1],       [ -72. ,   30. ,    8. ,    1.1],       [ -80. ,   -5. ,   10. ,    1.5],       [ -75. ,  -35. ,   17. ,    0.7],       [ -47. ,  -60. ,    9. ,    1.3],       [ -18. ,  -73. ,   14. ,    0.7],       [  13. ,  -74. ,   14. ,    1.4],       [  45. ,  -62. ,   16. ,    1.4],       [  70. ,  -32. ,   17. ,    0.6],       [  80. ,   -1. ,   17. ,    1.3],       [  75. ,   34. ,   14. ,    1. ],       [  48. ,   66. ,   16. ,    0.8],       [  20. ,   78. ,   15. ,    0.7],       [ -22. ,   78. ,   12. ,    1.3],       [ -55. ,   69. ,    9. ,    0.7],       [ -75. ,   32. ,   15. ,    0.7],       [ -82. ,   -2. ,   16. ,    1.5],       [ -73. ,  -39. ,   14. ,    1.2],       [ -48. ,  -66. ,   12. ,    0.6],       [ -24. ,  -80. ,   16. ,    0.7],       [  21. ,  -83. ,   17. ,    1. ],       [  55. ,  -63. ,   14. ,    0.8],       [  78. ,  -37. ,   17. ,    0.9],       [  84. ,   -3. ,   17. ,    0.8],       [  83. ,   39. ,   14. ,    0.8],       [  51. ,   67. ,   10. ,    1.3],       [  23. ,   84. ,    8. ,    0.8],       [ -23. ,   87. ,   17. ,    0.7],       [ -52. ,   67. ,   17. ,    1.2],       [ -83. ,   42. ,   13. ,    1. ],       [ -88. ,    2. ,   13. ,    1.4],       [ -81. ,  -36. ,   17. ,    1.1],       [ -54. ,  -66. ,   14. ,    0.9],       [ -17. ,  -92. ,   11. ,    1.1],       [  15. ,  -84. ,   16. ,    0.7],       [  50. ,  -66. ,   17. ,    0.5],       [  79. ,  -37. ,    8. ,    1.3],       [  90. ,   -1. ,   14. ,    1.1],       [  86. ,   40. ,   14. ,    1.2],       [  55. ,   74. ,   13. ,    0.9],       [  21. ,   87. ,   10. ,    0.8],       [ -26. ,   91. ,   12. ,    1.3],       [ -64. ,   71. ,    9. ,    0.5],       [ -90. ,   40. ,   12. ,    0.6],       [ -92. ,   -3. ,   13. ,    1.2],       [ -90. ,  -38. ,    9. ,    1.3],       [ -61. ,  -74. ,   13. ,    0.8],       [ -22. ,  -92. ,   10. ,    1.4],       [  24. ,  -89. ,   16. ,    1.1],       [  61. ,  -76. ,   14. ,    1.2],       [  83. ,  -43. ,   16. ,    1.1],       [ 104. ,   -3. ,   17. ,    1.3],       [  90. ,   39. ,   16. ,    0.8],       [  59. ,   82. ,   11. ,    1.2],       [  23. ,   94. ,   10. ,    1.5],       [ -28. ,  100. ,    9. ,    1.2],       [ -66. ,   74. ,   12. ,    1.2],       [ -86. ,   47. ,   18. ,    1.5],       [ -98. ,    1. ,   15. ,    1.2],       [ -86. ,  -40. ,   17. ,    0.7],       [ -59. ,  -82. ,   11. ,    0.8],       [ -27. ,  -94. ,   14. ,    0.8],       [  24. , -101. ,   16. ,    1.1],       [  65. ,  -79. ,    9. ,    1.3],       [  89. ,  -46. ,    8. ,    1. ],       [  53. ,   -2. ,   18. ,    1.1],       [  46. ,   22. ,   13. ,    1.3],       [  28. ,   36. ,   13. ,    0.9],       [  14. ,   53. ,   17. ,    0.6],       [ -14. ,   49. ,   13. ,    0.6],       [ -28. ,   41. ,   19. ,    1.2],       [ -43. ,   17. ,   12. ,    0.7],       [ -47. ,   -3. ,   18. ,    1.3],       [ -42. ,  -23. ,   22. ,    1. ],       [ -33. ,  -41. ,   18. ,    0.7],       [ -15. ,  -45. ,   15. ,    0.8],       [   8. ,  -48. ,   13. ,    0.6],       [  35. ,  -38. ,   22. ,    0.9],       [  42. ,  -23. ,   20. ,    0.5],       [  57. ,   -5. ,   13. ,    0.7],       [  49. ,   25. ,   18. ,    1.3],       [  32. ,   48. ,   20. ,    0.8],       [  16. ,   51. ,   12. ,    0.7],       [ -17. ,   55. ,   13. ,    0.9],       [ -31. ,   38. ,   14. ,    0.8],       [ -49. ,   26. ,   18. ,    0.5],       [ -56. ,    1. ,   13. ,    1.3],       [ -52. ,  -21. ,   14. ,    0.6],       [ -37. ,  -48. ,   19. ,    0.5],       [ -11. ,  -51. ,   15. ,    1.4],       [  11. ,  -54. ,   20. ,    1. ],       [  34. ,  -46. ,   16. ,    0.9],       [  49. ,  -21. ,   14. ,    0.9],       [  58. ,   -2. ,   18. ,    1.3],       [  54. ,   30. ,   12. ,    0.8],       [  42. ,   42. ,   21. ,    0.8],       [  16. ,   60. ,   16. ,    0.5],       [ -11. ,   56. ,   21. ,    1.5],       [ -36. ,   50. ,   14. ,    1.3],       [ -54. ,   22. ,   18. ,    1.4],       [ -64. ,    3. ,   20. ,    0.7],       [ -52. ,  -23. ,   13. ,    1. ],       [ -39. ,  -45. ,   15. ,    1. ],       [ -16. ,  -64. ,   15. ,    0.7],       [  13. ,  -58. ,   21. ,    0.8],       [  39. ,  -52. ,   14. ,    1.1],       [  59. ,  -27. ,   13. ,    0.6],       [  69. ,    2. ,   21. ,    0.8],       [  58. ,   29. ,   15. ,    1.4],       [  40. ,   49. ,   17. ,    0.5],       [  17. ,   69. ,   15. ,    1. ],       [ -11. ,   65. ,   20. ,    0.7],       [ -45. ,   50. ,   20. ,    0.8],       [ -61. ,   28. ,   15. ,    1.2],       [ -70. ,    0. ,   21. ,    0.6],       [ -57. ,  -33. ,   18. ,    1.4],       [ -39. ,  -49. ,   14. ,    0.6],       [ -12. ,  -63. ,   16. ,    0.6],       [  13. ,  -66. ,   22. ,    1. ],       [  44. ,  -49. ,   19. ,    0.9],       [  57. ,  -29. ,   16. ,    1.1],       [  71. ,   -2. ,   20. ,    1.4],       [  64. ,   35. ,   20. ,    0.9],       [  47. ,   61. ,   19. ,    1.2],       [  14. ,   74. ,   20. ,    0.9],       [ -18. ,   73. ,   20. ,    1.3],       [ -48. ,   54. ,   20. ,    0.7],       [ -69. ,   36. ,   22. ,    1.2],       [ -74. ,    3. ,   20. ,    1.3],       [ -61. ,  -30. ,   22. ,    1.4],       [ -42. ,  -52. ,   13. ,    0.6],       [ -13. ,  -70. ,   13. ,    1.5],       [  17. ,  -67. ,   13. ,    0.7],       [  40. ,  -60. ,   18. ,    0.9],       [  64. ,  -32. ,   13. ,    1.2],       [  79. ,    0. ,   14. ,    1.2],       [  71. ,   37. ,   14. ,    0.9],       [  50. ,   62. ,   18. ,    0.7],       [  14. ,   76. ,   16. ,    0.7],       [ -21. ,   75. ,   20. ,    1.4],       [ -50. ,   59. ,   13. ,    1. ],       [ -73. ,   37. ,   22. ,    1.5],       [ -74. ,    2. ,   16. ,    1.2],       [ -71. ,  -34. ,   18. ,    0.9],       [ -49. ,  -59. ,   19. ,    0.8],       [ -18. ,  -74. ,   17. ,    0.8],       [  18. ,  -80. ,   16. ,    1.3],       [  49. ,  -63. ,   22. ,    0.6],       [  68. ,  -35. ,   13. ,    0.6],       [  79. ,    4. ,   13. ,    0.9],       [  71. ,   31. ,   13. ,    1. ],       [  49. ,   65. ,   21. ,    1.5],       [  18. ,   79. ,   18. ,    0.7],       [ -24. ,   79. ,   18. ,    0.5],       [ -55. ,   64. ,   16. ,    0.7],       [ -76. ,   40. ,   14. ,    1.4],       [ -88. ,   -5. ,   15. ,    0.9],       [ -79. ,  -37. ,   17. ,    1. ],       [ -48. ,  -68. ,   16. ,    0.9],       [ -23. ,  -84. ,   16. ,    1.1],       [  18. ,  -85. ,   17. ,    0.5],       [  53. ,  -64. ,   21. ,    1. ],       [  74. ,  -39. ,   16. ,    0.6],       [  85. ,    4. ,   22. ,    0.9],       [  77. ,   36. ,   19. ,    1. ],       [  53. ,   70. ,   22. ,    0.6],       [  22. ,   84. ,   15. ,    1.1],       [ -16. ,   89. ,   20. ,    1.4],       [ -60. ,   73. ,   14. ,    1.5],       [ -83. ,   42. ,   19. ,    0.8],       [ -85. ,   -3. ,   17. ,    0.8],       [ -78. ,  -39. ,   20. ,    1.1],       [ -53. ,  -74. ,   17. ,    1.1],       [ -16. ,  -91. ,   14. ,    1.1],       [  15. ,  -91. ,   12. ,    1.2],       [  50. ,  -70. ,   21. ,    1.4],       [  82. ,  -43. ,   18. ,    1.3],       [  97. ,   -1. ,   13. ,    1.4],       [  82. ,   41. ,   12. ,    0.6],       [  55. ,   75. ,   14. ,    0.6],       [  19. ,   96. ,   17. ,    1.4],       [ -18. ,   91. ,   18. ,    0.8],       [ -60. ,   74. ,   14. ,    0.8],       [ -85. ,   41. ,   14. ,    0.6],       [ -97. ,   -2. ,   20. ,    1.3],       [ -89. ,  -38. ,   15. ,    1.1],       [ -60. ,  -78. ,   17. ,    0.9],       [ -22. ,  -97. ,   21. ,    1.3],       [  17. ,  -95. ,   20. ,    1.4],       [  54. ,  -74. ,   15. ,    1.4],       [  88. ,  -44. ,   16. ,    0.7],       [  99. ,   -4. ,   19. ,    1.5],       [  93. ,   40. ,   20. ,    0.7],       [  62. ,   82. ,   21. ,    0.7],       [  21. ,   93. ,   17. ,    1.1],       [ -22. ,  101. ,   13. ,    1. ],       [ -59. ,   81. ,   17. ,    0.8],       [ -93. ,   44. ,   17. ,    1. ],       [-101. ,    2. ,   20. ,    0.7],       [ -93. ,  -43. ,   21. ,    1.4],       [ -66. ,  -83. ,   20. ,    1.5],       [ -20. , -102. ,   16. ,    0.9],       [  23. ,  -93. ,   17. ,    1.4],       [  59. ,  -80. ,   19. ,    0.6],       [  88. ,  -41. ,   18. ,    1. ],       [  51. ,   -3. ,   18. ,    1.4],       [  46. ,   26. ,   18. ,    1.2],       [  30. ,   39. ,   24. ,    0.7],       [  15. ,   51. ,   24. ,    0.7],       [  -9. ,   44. ,   18. ,    0.5],       [ -36. ,   35. ,   19. ,    1.3],       [ -45. ,   22. ,   24. ,    0.5],       [ -55. ,    0. ,   27. ,    0.7],       [ -48. ,  -19. ,   20. ,    1.2],       [ -27. ,  -44. ,   20. ,    1.3],       [ -12. ,  -48. ,   22. ,    1.3],       [  14. ,  -50. ,   18. ,    0.9],       [  34. ,  -42. ,   24. ,    1.3],       [  47. ,  -19. ,   18. ,    1.4],       [  57. ,    3. ,   22. ,    0.9],       [  45. ,   19. ,   19. ,    0.7],       [  30. ,   40. ,   23. ,    1.2],       [   8. ,   51. ,   22. ,    1. ],       [ -15. ,   52. ,   19. ,    0.8],       [ -36. ,   44. ,   18. ,    1.1],       [ -55. ,   28. ,   21. ,    1.3],       [ -59. ,    4. ,   19. ,    1. ],       [ -46. ,  -20. ,   21. ,    1. ],       [ -39. ,  -48. ,   26. ,    1.4],       [ -10. ,  -55. ,   21. ,    0.6],       [  13. ,  -56. ,   26. ,    1.2],       [  32. ,  -49. ,   26. ,    0.9],       [  48. ,  -27. ,   21. ,    1.3],       [  57. ,   -3. ,   19. ,    1.1],       [  59. ,   29. ,   23. ,    1. ],       [  39. ,   51. ,   18. ,    0.7],       [  12. ,   59. ,   17. ,    0.7],       [ -15. ,   56. ,   24. ,    0.8],       [ -40. ,   43. ,   23. ,    0.7],       [ -53. ,   23. ,   20. ,    1.5],       [ -59. ,    4. ,   27. ,    1.4],       [ -56. ,  -27. ,   21. ,    1.4],       [ -38. ,  -49. ,   19. ,    1.3],       [ -16. ,  -57. ,   23. ,    0.6],       [  10. ,  -56. ,   25. ,    1.3],       [  35. ,  -53. ,   25. ,    1.3],       [  57. ,  -29. ,   17. ,    0.6],       [  63. ,    0. ,   19. ,    1.2],       [  64. ,   26. ,   25. ,    1.4],       [  37. ,   50. ,   25. ,    0.9],       [  11. ,   65. ,   18. ,    1. ],       [ -15. ,   60. ,   22. ,    1.4],       [ -40. ,   55. ,   17. ,    1.4],       [ -59. ,   31. ,   23. ,    1.1],       [ -64. ,   -3. ,   22. ,    1.4],       [ -61. ,  -33. ,   19. ,    1.1],       [ -43. ,  -51. ,   21. ,    0.8],       [ -18. ,  -69. ,   20. ,    0.7],       [  12. ,  -69. ,   17. ,    0.6],       [  40. ,  -50. ,   20. ,    1. ],       [  60. ,  -30. ,   25. ,    0.5],       [  67. ,   -2. ,   23. ,    0.8],       [  69. ,   34. ,   19. ,    1.3],       [  48. ,   58. ,   22. ,    1.4],       [  13. ,   70. ,   20. ,    1.1],       [ -16. ,   74. ,   25. ,    1. ],       [ -48. ,   60. ,   26. ,    1.3],       [ -63. ,   33. ,   24. ,    0.7],       [ -73. ,   -5. ,   21. ,    1. ],       [ -69. ,  -35. ,   24. ,    1.1],       [ -42. ,  -57. ,   21. ,    1. ],       [ -18. ,  -70. ,   22. ,    1.3],       [  15. ,  -75. ,   17. ,    1. ],       [  40. ,  -58. ,   23. ,    0.9],       [  65. ,  -30. ,   19. ,    0.6],       [  74. ,   -4. ,   23. ,    1. ],       [  66. ,   29. ,   19. ,    1.1],       [  47. ,   62. ,   20. ,    0.9],       [  12. ,   73. ,   22. ,    1. ],       [ -13. ,   76. ,   22. ,    1. ],       [ -53. ,   58. ,   23. ,    1.1],       [ -67. ,   29. ,   21. ,    1.3],       [ -81. ,   -4. ,   21. ,    1.4],       [ -70. ,  -34. ,   17. ,    1.1],       [ -48. ,  -58. ,   19. ,    1.3],       [ -15. ,  -79. ,   21. ,    1.3],       [  15. ,  -77. ,   26. ,    0.6],       [  47. ,  -61. ,   19. ,    1.1],       [  69. ,  -37. ,   23. ,    1.4],       [  80. ,    4. ,   19. ,    0.5],       [  70. ,   35. ,   24. ,    1.2],       [  55. ,   66. ,   18. ,    1.2],       [  22. ,   79. ,   23. ,    1.3],       [ -20. ,   78. ,   24. ,    0.7],       [ -55. ,   60. ,   22. ,    0.6],       [ -77. ,   39. ,   18. ,    1.5],       [ -83. ,    4. ,   25. ,    1.4],       [ -78. ,  -41. ,   22. ,    1.4],       [ -57. ,  -61. ,   17. ,    1.5],       [ -20. ,  -83. ,   23. ,    1.4],       [  19. ,  -84. ,   21. ,    1.1],       [  55. ,  -65. ,   20. ,    1.2],       [  77. ,  -32. ,   19. ,    0.9],       [  92. ,    2. ,   18. ,    0.9],       [  79. ,   33. ,   21. ,    0.8],       [  56. ,   70. ,   22. ,    0.9],       [  19. ,   81. ,   19. ,    1.3],       [ -16. ,   90. ,   21. ,    1.2],       [ -56. ,   73. ,   18. ,    1. ],       [ -78. ,   36. ,   18. ,    1.3],       [ -90. ,   -3. ,   27. ,    1.2],       [ -82. ,  -41. ,   23. ,    1.3],       [ -56. ,  -73. ,   22. ,    1. ],       [ -21. ,  -85. ,   26. ,    1.2],       [  16. ,  -86. ,   20. ,    1. ],       [  59. ,  -68. ,   24. ,    1.5],       [  81. ,  -41. ,   18. ,    0.9],       [  93. ,    3. ,   20. ,    1.5],       [  88. ,   37. ,   25. ,    0.6],       [  54. ,   76. ,   21. ,    1.1],       [  18. ,   96. ,   25. ,    0.7],       [ -18. ,   95. ,   17. ,    1.1],       [ -63. ,   74. ,   26. ,    1.4],       [ -86. ,   40. ,   18. ,    0.5],       [ -94. ,    4. ,   17. ,    1. ],       [ -81. ,  -46. ,   17. ,    0.5],       [ -59. ,  -73. ,   22. ,    1. ],       [ -25. ,  -88. ,   22. ,    1.5],       [  23. ,  -88. ,   18. ,    0.8],       [  62. ,  -78. ,   25. ,    0.7],       [  85. ,  -41. ,   24. ,    1. ],       [ 101. ,    3. ,   22. ,    0.9],       [  86. ,   47. ,   25. ,    1.5],       [  62. ,   79. ,   21. ,    1.3],       [  19. ,   96. ,   22. ,    1. ],       [ -27. ,   95. ,   24. ,    0.6],       [ -60. ,   82. ,   17. ,    0.9],       [ -93. ,   43. ,   22. ,    1.3],       [-101. ,    1. ,   21. ,    1.2],       [ -92. ,  -43. ,   25. ,    0.6],       [ -62. ,  -77. ,   22. ,    0.6],       [ -25. ,  -94. ,   22. ,    1.3],       [  18. ,  -97. ,   18. ,    1.2],       [  59. ,  -80. ,   19. ,    1.3],       [  91. ,  -46. ,   20. ,    0.6],       [  45. ,    1. ,   28. ,    1.3],       [  41. ,   17. ,   25. ,    0.8],       [  31. ,   44. ,   22. ,    1.5],       [  13. ,   48. ,   30. ,    0.7],       [ -14. ,   48. ,   31. ,    0.6],       [ -33. ,   39. ,   24. ,    0.8],       [ -45. ,   22. ,   22. ,    1.3],       [ -55. ,    2. ,   28. ,    1.2],       [ -47. ,  -26. ,   26. ,    1.1],       [ -33. ,  -36. ,   25. ,    1.2],       [ -10. ,  -49. ,   22. ,    1.3],       [   6. ,  -47. ,   27. ,    0.7],       [  31. ,  -41. ,   31. ,    0.5],       [  43. ,  -19. ,   22. ,    1.3],       [  50. ,   -2. ,   28. ,    1. ],       [  46. ,   22. ,   25. ,    1. ],       [  36. ,   43. ,   25. ,    0.6],       [   7. ,   55. ,   25. ,    1. ],       [  -9. ,   51. ,   29. ,    0.7],       [ -39. ,   43. ,   30. ,    0.5],       [ -49. ,   24. ,   29. ,    1.3],       [ -60. ,   -5. ,   22. ,    0.8],       [ -51. ,  -20. ,   28. ,    1.3],       [ -39. ,  -47. ,   28. ,    0.6],       [ -11. ,  -56. ,   25. ,    0.5],       [  15. ,  -51. ,   24. ,    0.9],       [  34. ,  -42. ,   30. ,    1. ],       [  52. ,  -21. ,   30. ,    1.3],       [  58. ,   -1. ,   22. ,    0.8],       [  55. ,   27. ,   21. ,    0.8],       [  37. ,   43. ,   27. ,    1.1],       [  10. ,   56. ,   26. ,    0.6],       [ -19. ,   62. ,   22. ,    1. ],       [ -43. ,   48. ,   25. ,    1.2],       [ -60. ,   23. ,   24. ,    1.2],       [ -59. ,    1. ,   25. ,    1.3],       [ -52. ,  -25. ,   21. ,    1.4],       [ -36. ,  -50. ,   28. ,    0.7],       [ -15. ,  -57. ,   25. ,    1.1],       [  15. ,  -59. ,   31. ,    0.8],       [  41. ,  -48. ,   22. ,    0.7],       [  54. ,  -31. ,   31. ,    0.9],       [  62. ,    0. ,   23. ,    1. ],       [  61. ,   23. ,   26. ,    1.2],       [  39. ,   54. ,   21. ,    0.8],       [  19. ,   65. ,   27. ,    1.1],       [ -14. ,   67. ,   27. ,    1.1],       [ -44. ,   56. ,   31. ,    0.5],       [ -57. ,   31. ,   22. ,    1.4],       [ -69. ,   -2. ,   27. ,    1.1],       [ -60. ,  -25. ,   28. ,    1.4],       [ -40. ,  -55. ,   31. ,    0.5],       [ -19. ,  -66. ,   25. ,    0.5],       [  11. ,  -70. ,   22. ,    1.2],       [  44. ,  -54. ,   25. ,    0.6],       [  61. ,  -29. ,   29. ,    1.3],       [  67. ,    4. ,   22. ,    0.7],       [  65. ,   29. ,   25. ,    0.6],       [  48. ,   52. ,   27. ,    1.3],       [  16. ,   73. ,   31. ,    1.3],       [ -20. ,   67. ,   26. ,    0.9],       [ -47. ,   60. ,   29. ,    1.4],       [ -61. ,   31. ,   24. ,    1.5],       [ -71. ,    3. ,   29. ,    1.2],       [ -63. ,  -33. ,   28. ,    1.4],       [ -50. ,  -61. ,   27. ,    0.8],       [ -12. ,  -74. ,   22. ,    1.5],       [  15. ,  -72. ,   28. ,    1.3],       [  40. ,  -57. ,   28. ,    1.5],       [  70. ,  -27. ,   30. ,    1.4],       [  76. ,   -3. ,   25. ,    0.7],       [  74. ,   32. ,   28. ,    0.7],       [  44. ,   57. ,   21. ,    0.7],       [  12. ,   73. ,   26. ,    1.4],       [ -17. ,   74. ,   30. ,    0.6],       [ -51. ,   57. ,   23. ,    0.9],       [ -66. ,   32. ,   21. ,    1.5],       [ -79. ,    3. ,   25. ,    1.2],       [ -75. ,  -32. ,   23. ,    0.9],       [ -48. ,  -64. ,   25. ,    0.6],       [ -20. ,  -73. ,   25. ,    1.1],       [  16. ,  -75. ,   23. ,    1. ],       [  47. ,  -58. ,   31. ,    1.1],       [  65. ,  -36. ,   23. ,    0.9],       [  82. ,   -2. ,   28. ,    0.9],       [  79. ,   35. ,   27. ,    0.7],       [  56. ,   68. ,   25. ,    0.7],       [  21. ,   82. ,   29. ,    1.5],       [ -14. ,   80. ,   26. ,    0.9],       [ -52. ,   62. ,   28. ,    0.6],       [ -73. ,   38. ,   28. ,    0.5],       [ -87. ,   -2. ,   30. ,    0.5],       [ -79. ,  -41. ,   21. ,    1.4],       [ -50. ,  -67. ,   28. ,    1.1],       [ -19. ,  -83. ,   24. ,    1.5],       [  14. ,  -82. ,   22. ,    1.1],       [  50. ,  -64. ,   28. ,    1.2],       [  78. ,  -37. ,   21. ,    1.4],       [  84. ,   -5. ,   24. ,    1.1],       [  77. ,   41. ,   31. ,    0.8],       [  54. ,   65. ,   24. ,    1. ],       [  20. ,   83. ,   25. ,    0.7],       [ -17. ,   86. ,   28. ,    1.2],       [ -52. ,   66. ,   25. ,    1.3],       [ -84. ,   43. ,   24. ,    0.6],       [ -89. ,   -1. ,   29. ,    1.1],       [ -76. ,  -40. ,   29. ,    1. ],       [ -54. ,  -66. ,   30. ,    1.3],       [ -16. ,  -90. ,   26. ,    1.3],       [  15. ,  -85. ,   30. ,    0.5],       [  56. ,  -68. ,   25. ,    0.9],       [  80. ,  -43. ,   31. ,    1.3],       [  95. ,    4. ,   30. ,    0.6],       [  84. ,   43. ,   30. ,    1. ],       [  63. ,   77. ,   24. ,    0.8],       [  22. ,   87. ,   30. ,    1.3],       [ -18. ,   89. ,   24. ,    1.5],       [ -57. ,   75. ,   29. ,    0.6],       [ -83. ,   45. ,   23. ,    1.1],       [ -91. ,   -3. ,   24. ,    1.1],       [ -84. ,  -43. ,   27. ,    0.9],       [ -58. ,  -78. ,   23. ,    1. ],       [ -19. ,  -95. ,   24. ,    1.4],       [  23. ,  -89. ,   21. ,    1.4],       [  58. ,  -78. ,   23. ,    1. ],       [  81. ,  -46. ,   26. ,    0.6],       [ 104. ,    1. ,   28. ,    1. ],       [  92. ,   39. ,   28. ,    0.6],       [  60. ,   74. ,   30. ,    1.4],       [  26. ,   92. ,   26. ,    0.8],       [ -19. ,   97. ,   26. ,    0.6],       [ -60. ,   78. ,   27. ,    0.6],       [ -92. ,   46. ,   23. ,    0.8],       [ -99. ,   -4. ,   26. ,    1.4],       [ -86. ,  -40. ,   27. ,    1.4],       [ -65. ,  -82. ,   26. ,    0.9],       [ -19. , -103. ,   31. ,    0.5],       [  23. ,  -95. ,   28. ,    1.5],       [  61. ,  -82. ,   24. ,    1.3],       [  90. ,  -41. ,   29. ,    1. ],       [  51. ,    0. ,   34. ,    0.6],       [  42. ,   22. ,   34. ,    1.2],       [  30. ,   37. ,   32. ,    1.4],       [   7. ,   50. ,   26. ,    1.4],       [ -12. ,   45. ,   26. ,    1.3],       [ -33. ,   42. ,   32. ,    1.3],       [ -43. ,   18. ,   27. ,    1.4],       [ -52. ,   -2. ,   26. ,    0.8],       [ -50. ,  -18. ,   35. ,    0.8],       [ -32. ,  -41. ,   27. ,    1.2],       [ -13. ,  -50. ,   32. ,    0.6],       [  12. ,  -50. ,   27. ,    1.3],       [  31. ,  -35. ,   33. ,    0.8],       [  45. ,  -19. ,   28. ,    1.1],       [  52. ,    1. ,   34. ,    0.7],       [  54. ,   23. ,   31. ,    1.4],       [  36. ,   38. ,   31. ,    0.8],       [   8. ,   58. ,   26. ,    0.6],       [ -15. ,   49. ,   28. ,    0.7],       [ -36. ,   41. ,   27. ,    1.1],       [ -55. ,   26. ,   26. ,    0.5],       [ -53. ,    2. ,   30. ,    0.5],       [ -55. ,  -24. ,   33. ,    1.1],       [ -38. ,  -47. ,   27. ,    1.2],       [ -18. ,  -52. ,   35. ,    1.2],       [   9. ,  -52. ,   36. ,    0.9],       [  35. ,  -43. ,   33. ,    0.9],       [  52. ,  -27. ,   30. ,    1.4],       [  58. ,   -2. ,   26. ,    0.6],       [  50. ,   27. ,   34. ,    1. ],       [  37. ,   52. ,   32. ,    1.4],       [  16. ,   58. ,   34. ,    1.3],       [ -18. ,   56. ,   33. ,    1.1],       [ -38. ,   47. ,   36. ,    1.2],       [ -53. ,   25. ,   35. ,    1.2],       [ -62. ,    4. ,   33. ,    0.6],       [ -54. ,  -25. ,   29. ,    1.1],       [ -34. ,  -45. ,   33. ,    1.1],       [ -15. ,  -60. ,   27. ,    0.8],       [  17. ,  -57. ,   26. ,    0.8],       [  33. ,  -53. ,   26. ,    1.2],       [  57. ,  -29. ,   30. ,    0.7],       [  63. ,   -3. ,   26. ,    0.9],       [  61. ,   27. ,   34. ,    1.5],       [  41. ,   47. ,   34. ,    0.9],       [  13. ,   68. ,   32. ,    1.3],       [ -12. ,   64. ,   31. ,    0.7],       [ -40. ,   52. ,   29. ,    0.8],       [ -58. ,   26. ,   35. ,    1.5],       [ -65. ,   -2. ,   30. ,    1.3],       [ -59. ,  -30. ,   30. ,    1.5],       [ -44. ,  -54. ,   33. ,    0.8],       [ -11. ,  -64. ,   29. ,    1.4],       [  10. ,  -70. ,   35. ,    1.1],       [  45. ,  -49. ,   36. ,    0.6],       [  65. ,  -32. ,   33. ,    1. ],       [  74. ,   -1. ,   35. ,    1.3],       [  67. ,   32. ,   31. ,    0.8],       [  45. ,   57. ,   26. ,    1.2],       [  14. ,   65. ,   34. ,    0.5],       [ -18. ,   67. ,   34. ,    1.1],       [ -50. ,   52. ,   26. ,    0.7],       [ -64. ,   35. ,   32. ,    1. ],       [ -71. ,    0. ,   34. ,    1.1],       [ -68. ,  -28. ,   35. ,    1.3],       [ -47. ,  -62. ,   29. ,    0.7],       [ -16. ,  -74. ,   27. ,    1. ],       [  20. ,  -73. ,   36. ,    1.3],       [  47. ,  -54. ,   26. ,    1. ],       [  67. ,  -27. ,   36. ,    1. ],       [  76. ,    0. ,   27. ,    1.5],       [  71. ,   37. ,   35. ,    0.9],       [  47. ,   56. ,   30. ,    0.5],       [  14. ,   72. ,   35. ,    1.2],       [ -22. ,   77. ,   28. ,    0.7],       [ -54. ,   58. ,   30. ,    0.9],       [ -67. ,   35. ,   32. ,    0.9],       [ -74. ,    2. ,   28. ,    0.8],       [ -72. ,  -38. ,   27. ,    1.2],       [ -45. ,  -61. ,   35. ,    0.7],       [ -14. ,  -79. ,   34. ,    1. ],       [  12. ,  -74. ,   33. ,    1.4],       [  46. ,  -64. ,   31. ,    1.4],       [  73. ,  -31. ,   28. ,    0.8],       [  88. ,    3. ,   30. ,    1. ],       [  79. ,   37. ,   32. ,    0.6],       [  56. ,   69. ,   29. ,    1.5],       [  21. ,   79. ,   34. ,    0.6],       [ -16. ,   82. ,   29. ,    1.3],       [ -52. ,   67. ,   33. ,    0.9],       [ -73. ,   32. ,   28. ,    1.3],       [ -87. ,   -3. ,   32. ,    1.3],       [ -79. ,  -39. ,   30. ,    1.3],       [ -50. ,  -65. ,   32. ,    0.6],       [ -16. ,  -79. ,   32. ,    0.6],       [  16. ,  -79. ,   33. ,    0.9],       [  47. ,  -68. ,   31. ,    0.6],       [  76. ,  -41. ,   29. ,    1.1],       [  88. ,   -4. ,   28. ,    1.4],       [  83. ,   42. ,   34. ,    1.3],       [  51. ,   73. ,   28. ,    1. ],       [  21. ,   87. ,   28. ,    0.8],       [ -15. ,   87. ,   34. ,    1.2],       [ -52. ,   73. ,   26. ,    0.9],       [ -80. ,   37. ,   30. ,    1.3],       [ -94. ,   -3. ,   27. ,    1.1],       [ -84. ,  -39. ,   27. ,    1. ],       [ -59. ,  -72. ,   29. ,    1.2],       [ -19. ,  -84. ,   31. ,    1.4],       [  15. ,  -92. ,   31. ,    1.3],       [  53. ,  -71. ,   32. ,    0.7],       [  77. ,  -38. ,   30. ,    0.9],       [  90. ,   -5. ,   31. ,    0.5],       [  80. ,   43. ,   33. ,    0.5],       [  61. ,   78. ,   30. ,    1.4],       [  19. ,   87. ,   28. ,    0.8],       [ -25. ,   94. ,   29. ,    1.2],       [ -56. ,   71. ,   34. ,    0.8],       [ -90. ,   45. ,   33. ,    1.3],       [ -92. ,   -1. ,   32. ,    1.3],       [ -84. ,  -45. ,   30. ,    0.9],       [ -62. ,  -79. ,   29. ,    1.1],       [ -21. ,  -90. ,   34. ,    0.6],       [  24. ,  -91. ,   33. ,    1.1],       [  56. ,  -75. ,   29. ,    1.1],       [  80. ,  -39. ,   33. ,    0.7],       [  95. ,    4. ,   32. ,    1.2],       [  90. ,   42. ,   30. ,    0.7],       [  62. ,   77. ,   35. ,    1.5],       [  17. ,   93. ,   33. ,    0.8],       [ -26. ,   97. ,   27. ,    0.8],       [ -63. ,   80. ,   33. ,    1.1],       [ -88. ,   45. ,   26. ,    0.8],       [-101. ,    3. ,   32. ,    0.7],       [ -93. ,  -48. ,   29. ,    1.2],       [ -58. ,  -78. ,   31. ,    0.7],       [ -27. ,  -95. ,   35. ,    1.1],       [  26. ,  -98. ,   26. ,    1.4],       [  63. ,  -82. ,   27. ,    1.2],       [  85. ,  -44. ,   29. ,    0.6],       [  52. ,   -1. ,   34. ,    0.8],       [  42. ,   23. ,   32. ,    0.7],       [  33. ,   42. ,   34. ,    1.5],       [  11. ,   51. ,   38. ,    1.1],       [ -12. ,   44. ,   31. ,    0.5],       [ -31. ,   36. ,   31. ,    1. ],       [ -47. ,   26. ,   31. ,    1.4],       [ -54. ,    0. ,   38. ,    1.4],       [ -46. ,  -25. ,   31. ,    1.3],       [ -34. ,  -40. ,   31. ,    0.8],       [  -9. ,  -45. ,   33. ,    1.3],       [  14. ,  -51. ,   31. ,    0.9],       [  32. ,  -40. ,   33. ,    0.6],       [  40. ,  -26. ,   39. ,    0.5],       [  52. ,    0. ,   40. ,    0.6],       [  46. ,   22. ,   31. ,    1.3],       [  29. ,   44. ,   32. ,    0.6],       [  17. ,   54. ,   35. ,    0.7],       [  -8. ,   59. ,   34. ,    1.2],       [ -32. ,   45. ,   32. ,    0.9],       [ -47. ,   26. ,   31. ,    0.9],       [ -54. ,    4. ,   31. ,    0.6],       [ -55. ,  -23. ,   37. ,    0.8],       [ -37. ,  -46. ,   38. ,    1.4],       [ -11. ,  -54. ,   39. ,    0.9],       [  14. ,  -55. ,   33. ,    1.1],       [  36. ,  -40. ,   37. ,    0.7],       [  54. ,  -21. ,   35. ,    1.1],       [  56. ,    3. ,   33. ,    1.2],       [  57. ,   22. ,   33. ,    0.8],       [  35. ,   49. ,   32. ,    1.2],       [  17. ,   59. ,   34. ,    1.3],       [ -11. ,   57. ,   33. ,    0.9],       [ -34. ,   45. ,   35. ,    1. ],       [ -54. ,   27. ,   30. ,    0.9],       [ -65. ,   -2. ,   34. ,    1.1],       [ -59. ,  -32. ,   34. ,    0.9],       [ -37. ,  -49. ,   34. ,    0.8],       [ -11. ,  -58. ,   34. ,    1.3],       [  15. ,  -56. ,   37. ,    1. ],       [  40. ,  -46. ,   38. ,    0.9],       [  51. ,  -28. ,   33. ,    1. ],       [  69. ,   -3. ,   36. ,    0.5],       [  57. ,   29. ,   37. ,    1.4],       [  41. ,   54. ,   34. ,    1.1],       [  19. ,   60. ,   31. ,    1.1],       [ -13. ,   67. ,   30. ,    0.7],       [ -38. ,   51. ,   36. ,    1.4],       [ -58. ,   24. ,   33. ,    0.6],       [ -70. ,   -4. ,   36. ,    1.3],       [ -59. ,  -31. ,   32. ,    0.7],       [ -45. ,  -51. ,   37. ,    1.3],       [ -13. ,  -62. ,   35. ,    0.9],       [  18. ,  -69. ,   33. ,    0.6],       [  46. ,  -54. ,   34. ,    1. ],       [  63. ,  -31. ,   35. ,    0.8],       [  74. ,   -4. ,   34. ,    1.3],       [  61. ,   29. ,   31. ,    1. ],       [  43. ,   53. ,   34. ,    0.8],       [  11. ,   72. ,   35. ,    0.8],       [ -18. ,   74. ,   37. ,    1.2],       [ -49. ,   60. ,   31. ,    1.1],       [ -62. ,   35. ,   37. ,    1.2],       [ -70. ,   -5. ,   38. ,    1.2],       [ -67. ,  -35. ,   30. ,    1.1],       [ -41. ,  -61. ,   31. ,    1.2],       [ -18. ,  -76. ,   36. ,    0.8],       [  18. ,  -67. ,   40. ,    0.7],       [  43. ,  -54. ,   31. ,    0.8],       [  65. ,  -37. ,   33. ,    1.2],       [  81. ,    4. ,   38. ,    1.4],       [  73. ,   37. ,   34. ,    0.6],       [  49. ,   57. ,   34. ,    1. ],       [  14. ,   79. ,   31. ,    0.9],       [ -16. ,   75. ,   35. ,    0.8],       [ -49. ,   60. ,   36. ,    0.8],       [ -72. ,   38. ,   35. ,    0.9],       [ -76. ,    0. ,   31. ,    0.8],       [ -74. ,  -31. ,   39. ,    0.8],       [ -48. ,  -65. ,   37. ,    1.4],       [ -17. ,  -73. ,   31. ,    1.1],       [  18. ,  -74. ,   34. ,    1.5],       [  43. ,  -60. ,   35. ,    1.3],       [  69. ,  -32. ,   31. ,    0.7],       [  81. ,   -2. ,   35. ,    1.5],       [  74. ,   33. ,   33. ,    1.1],       [  52. ,   61. ,   37. ,    1.3],       [  19. ,   85. ,   31. ,    0.6],       [ -15. ,   76. ,   38. ,    0.7],       [ -54. ,   63. ,   31. ,    0.8],       [ -78. ,   39. ,   37. ,    1.1],       [ -81. ,   -3. ,   35. ,    0.9],       [ -80. ,  -37. ,   30. ,    0.9],       [ -55. ,  -61. ,   37. ,    1.5],       [ -22. ,  -79. ,   34. ,    1. ],       [  16. ,  -85. ,   40. ,    0.9],       [  52. ,  -63. ,   34. ,    1.1],       [  76. ,  -34. ,   37. ,    0.6],       [  87. ,   -2. ,   36. ,    1.1],       [  77. ,   34. ,   36. ,    0.6],       [  50. ,   67. ,   32. ,    0.7],       [  23. ,   81. ,   39. ,    1.2],       [ -17. ,   82. ,   32. ,    1.4],       [ -58. ,   66. ,   34. ,    0.9],       [ -84. ,   38. ,   31. ,    1.2],       [ -86. ,   -2. ,   35. ,    0.9],       [ -82. ,  -39. ,   31. ,    0.8],       [ -54. ,  -74. ,   31. ,    0.9],       [ -23. ,  -85. ,   31. ,    0.9],       [  21. ,  -91. ,   40. ,    1.1],       [  56. ,  -65. ,   32. ,    0.6],       [  82. ,  -36. ,   33. ,    0.6],       [  91. ,   -4. ,   39. ,    0.8],       [  87. ,   44. ,   35. ,    0.6],       [  55. ,   76. ,   36. ,    0.6],       [  22. ,   87. ,   36. ,    0.5],       [ -23. ,   93. ,   31. ,    0.9],       [ -59. ,   74. ,   33. ,    0.5],       [ -89. ,   44. ,   37. ,    1. ],       [ -95. ,    0. ,   35. ,    1.3],       [ -87. ,  -39. ,   33. ,    1.5],       [ -59. ,  -77. ,   37. ,    0.8],       [ -24. ,  -93. ,   35. ,    0.7],       [  17. ,  -94. ,   33. ,    0.8],       [  61. ,  -78. ,   33. ,    0.8],       [  85. ,  -37. ,   34. ,    0.5],       [ 101. ,   -4. ,   38. ,    1. ],       [  91. ,   45. ,   37. ,    1. ],       [  63. ,   76. ,   31. ,    1.3],       [  18. ,   95. ,   31. ,    0.6],       [ -24. ,   99. ,   33. ,    0.6],       [ -58. ,   75. ,   30. ,    1.2],       [ -95. ,   45. ,   34. ,    0.6],       [-102. ,    3. ,   37. ,    0.7],       [ -91. ,  -47. ,   37. ,    1.3],       [ -67. ,  -80. ,   35. ,    0.7],       [ -21. ,  -97. ,   37. ,    1.3],       [  19. ,  -94. ,   31. ,    1.5],       [  58. ,  -77. ,   33. ,    1. ],       [  91. ,  -45. ,   35. ,    1.1],       [  49. ,    3. ,   35. ,    1.2],       [  41. ,   23. ,   43. ,    1.5],       [  27. ,   39. ,   38. ,    1.4],       [  11. ,   53. ,   44. ,    0.9],       [ -16. ,   48. ,   35. ,    0.7],       [ -36. ,   39. ,   38. ,    1.4],       [ -45. ,   17. ,   41. ,    1.2],       [ -51. ,    2. ,   43. ,    0.9],       [ -45. ,  -22. ,   39. ,    1. ],       [ -33. ,  -42. ,   37. ,    0.8],       [  -9. ,  -50. ,   36. ,    0.6],       [  15. ,  -51. ,   37. ,    0.7],       [  34. ,  -37. ,   43. ,    0.7],       [  45. ,  -23. ,   43. ,    0.8],       [  50. ,   -5. ,   39. ,    0.6],       [  54. ,   22. ,   41. ,    1.5],       [  31. ,   38. ,   36. ,    1.2],       [   8. ,   55. ,   37. ,    1.1],       [ -10. ,   51. ,   36. ,    0.6],       [ -36. ,   43. ,   42. ,    1.4],       [ -51. ,   22. ,   42. ,    1.5],       [ -55. ,    1. ,   39. ,    1.5],       [ -46. ,  -23. ,   39. ,    1.3],       [ -31. ,  -42. ,   41. ,    0.9],       [ -15. ,  -54. ,   40. ,    1.1],       [  10. ,  -51. ,   42. ,    1.2],       [  31. ,  -41. ,   40. ,    0.8],       [  52. ,  -25. ,   44. ,    0.5],       [  61. ,    1. ,   40. ,    1.5],       [  55. ,   25. ,   43. ,    1.2],       [  40. ,   43. ,   43. ,    1. ],       [  11. ,   55. ,   42. ,    1. ],       [ -17. ,   62. ,   42. ,    1.3],       [ -37. ,   43. ,   44. ,    1.5],       [ -58. ,   26. ,   41. ,    0.8],       [ -61. ,   -1. ,   37. ,    0.9],       [ -60. ,  -24. ,   39. ,    0.9],       [ -43. ,  -53. ,   35. ,    1.4],       [ -13. ,  -62. ,   40. ,    1. ],       [  12. ,  -64. ,   39. ,    0.7],       [  37. ,  -49. ,   36. ,    1.4],       [  54. ,  -24. ,   43. ,    1.4],       [  65. ,    2. ,   35. ,    0.5],       [  60. ,   33. ,   43. ,    0.5],       [  39. ,   56. ,   41. ,    0.7],       [  12. ,   62. ,   42. ,    0.6],       [ -14. ,   61. ,   42. ,    0.5],       [ -44. ,   56. ,   38. ,    0.8],       [ -65. ,   26. ,   41. ,    0.7],       [ -70. ,   -3. ,   36. ,    1.4],       [ -60. ,  -30. ,   44. ,    1.4],       [ -45. ,  -50. ,   44. ,    1.1],       [ -17. ,  -62. ,   42. ,    0.9],       [  15. ,  -65. ,   36. ,    1. ],       [  44. ,  -55. ,   41. ,    0.7],       [  55. ,  -27. ,   35. ,    1.2],       [  73. ,   -3. ,   44. ,    0.6],       [  68. ,   31. ,   41. ,    0.7],       [  40. ,   52. ,   38. ,    0.5],       [  16. ,   74. ,   42. ,    0.7],       [ -20. ,   74. ,   44. ,    1. ],       [ -47. ,   59. ,   42. ,    0.8],       [ -65. ,   30. ,   38. ,    0.8],       [ -75. ,   -3. ,   37. ,    1. ],       [ -65. ,  -32. ,   41. ,    0.8],       [ -49. ,  -58. ,   43. ,    0.9],       [ -19. ,  -75. ,   40. ,    1.2],       [  16. ,  -71. ,   44. ,    0.9],       [  42. ,  -61. ,   35. ,    1.1],       [  60. ,  -36. ,   41. ,    1.4],       [  77. ,    2. ,   38. ,    0.6],       [  71. ,   35. ,   43. ,    1.3],       [  49. ,   64. ,   40. ,    0.9],       [  20. ,   71. ,   35. ,    1.1],       [ -16. ,   80. ,   37. ,    0.7],       [ -53. ,   65. ,   39. ,    1.4],       [ -73. ,   35. ,   44. ,    0.8],       [ -73. ,    2. ,   37. ,    0.5],       [ -66. ,  -33. ,   37. ,    0.7],       [ -53. ,  -57. ,   40. ,    1.1],       [ -20. ,  -73. ,   41. ,    1. ],       [  17. ,  -80. ,   38. ,    0.6],       [  45. ,  -62. ,   42. ,    1.2],       [  66. ,  -37. ,   36. ,    1.4],       [  80. ,   -4. ,   40. ,    1. ],       [  77. ,   39. ,   39. ,    1.3],       [  49. ,   61. ,   43. ,    0.6],       [  22. ,   83. ,   37. ,    1. ],       [ -18. ,   77. ,   43. ,    1.2],       [ -52. ,   69. ,   39. ,    1.4],       [ -80. ,   39. ,   37. ,    0.7],       [ -80. ,    3. ,   38. ,    1.2],       [ -72. ,  -39. ,   35. ,    1.2],       [ -57. ,  -65. ,   35. ,    0.7],       [ -19. ,  -79. ,   44. ,    0.8],       [  17. ,  -85. ,   36. ,    1. ],       [  48. ,  -65. ,   42. ,    1.1],       [  79. ,  -39. ,   40. ,    1.2],       [  85. ,   -4. ,   38. ,    1.2],       [  82. ,   42. ,   40. ,    0.5],       [  55. ,   70. ,   41. ,    1. ],       [  20. ,   86. ,   42. ,    1.1],       [ -19. ,   91. ,   42. ,    1. ],       [ -60. ,   74. ,   40. ,    0.8],       [ -76. ,   34. ,   36. ,    1.3],       [ -86. ,    0. ,   37. ,    0.7],       [ -78. ,  -41. ,   36. ,    0.7],       [ -60. ,  -72. ,   42. ,    0.7],       [ -20. ,  -90. ,   42. ,    1.1],       [  22. ,  -89. ,   37. ,    1.3],       [  54. ,  -65. ,   39. ,    1.1],       [  78. ,  -35. ,   36. ,    0.6],       [  89. ,   -1. ,   42. ,    1.4],       [  84. ,   41. ,   41. ,    1.2],       [  63. ,   76. ,   38. ,    0.6],       [  20. ,   96. ,   40. ,    0.9],       [ -20. ,   88. ,   38. ,    1.2],       [ -62. ,   74. ,   42. ,    0.8],       [ -82. ,   43. ,   39. ,    0.7],       [ -98. ,   -3. ,   35. ,    0.5],       [ -85. ,  -44. ,   41. ,    1.4],       [ -63. ,  -76. ,   36. ,    1. ],       [ -19. ,  -89. ,   35. ,    1.3],       [  22. ,  -89. ,   44. ,    0.9],       [  54. ,  -70. ,   41. ,    1.3],       [  87. ,  -46. ,   40. ,    1.3],       [  98. ,   -5. ,   44. ,    0.8],       [  93. ,   46. ,   42. ,    1.4],       [  60. ,   79. ,   40. ,    1.1],       [  27. ,   92. ,   37. ,    1.1],       [ -22. ,  100. ,   43. ,    0.9],       [ -66. ,   79. ,   36. ,    1.2],       [ -86. ,   42. ,   40. ,    1.1],       [ -98. ,   -2. ,   35. ,    0.9],       [ -90. ,  -42. ,   40. ,    0.9],       [ -65. ,  -75. ,   41. ,    1.2],       [ -26. , -100. ,   36. ,    1.2],       [  22. ,  -95. ,   35. ,    1.2],       [  57. ,  -84. ,   40. ,    0.6],       [  86. ,  -47. ,   36. ,    0.6]])
        basis0 = BSplineBasis(6, np.array([ -2.1,  -1. ,   0. ,   0. ,   0. ,   0. ,   0.8,   2.1,   3.4,   4.1,   5.3,   5.6,   7.3,
         7.7,   8.9,  10. ,  11. ,  11. ,  11. ,  11. ,  11.8,  13.1]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.8,  3. ,  3.9,  5.2,  6. ,  6. ,  6. ,  6. ,  6. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  1.9,  3.3,  4.2,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.insert_knot([9.629]*1, 0) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 23)
        vol2.insert_knot([0.913]*2, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 25)
        vol2.insert_knot([3.993]*3, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 28)
        vol2.insert_knot([6.763]*4, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 32)
        vol2.insert_knot([4.712]*5, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 37)
        vol2.insert_knot([3.644]*1, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 16)
        vol2.insert_knot([1.387]*2, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 18)
        vol2.insert_knot([4.677]*3, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 21)
        vol2.insert_knot([4.763]*4, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 25)
        vol2.insert_knot([4.059]*1, 2) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 17)
        vol2.insert_knot([2.320]*2, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 19)
        vol2.insert_knot([1.557]*3, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 22)
        vol2.insert_knot([3.251]*4, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 26)
        vol2.insert_knot([1.894]*5, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 31)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p5_rational_C2_periodic(self):
        controlpoints = np.array([[  95. ,    0. ,   -4. ,    0.9],
       [  88. ,   47. ,   -2. ,    1.4],
       [  57. ,   76. ,   -4. ,    0.9],
       [  21. ,  101. ,   -1. ,    0.9],
       [ -23. ,   95. ,   -4. ,    1.2],
       [ -58. ,   82. ,    3. ,    1.2],
       [ -88. ,   40. ,   -3. ,    0.7],
       [ -96. ,    4. ,    3. ,    1.4],
       [ -93. ,  -49. ,   -4. ,    0.9],
       [ -67. ,  -83. ,    3. ,    1.3],
       [ -18. ,  -94. ,   -4. ,    1.2],
       [  17. , -100. ,    3. ,    1.3],
       [  64. ,  -77. ,    2. ,    0.7],
       [  91. ,  -40. ,    3. ,    1.1]])
        basis0 = BSplineBasis(5, np.array([ -2.8,  -1.9,  -1.3,   0. ,   0. ,   1. ,   2.3,   3.1,   4.1,   4.9,   5.6,   7.1,   8.2,
         9.1,  10.2,  11.1,  11.7,  13. ,  13. ,  14. ,  15.3,  16.1]),2)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2.insert_knot([6.101]*1) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)
        crv2.insert_knot([7.302]*2) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)
        crv2.insert_knot([4.884]*3) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([10.451]*4) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 32)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p67_rational_C2_periodic(self):
        controlpoints = np.array([[  59. ,   -4. ,    1. ,    0.8],       [  58. ,   20. ,    3. ,    1.1],       [  37. ,   39. ,    3. ,    1.4],       [  27. ,   58. ,   -4. ,    0.6],       [  -1. ,   63. ,   -1. ,    1.1],       [ -19. ,   55. ,   -3. ,    1.2],       [ -41. ,   43. ,   -4. ,    0.9],       [ -57. ,   23. ,    3. ,    0.9],       [ -59. ,    0. ,   -1. ,    0.9],       [ -53. ,  -28. ,    4. ,    1.3],       [ -43. ,  -40. ,    2. ,    1. ],       [ -23. ,  -55. ,   -5. ,    1.3],       [   1. ,  -63. ,   -4. ,    0.8],       [  24. ,  -53. ,    0. ,    0.9],       [  41. ,  -39. ,   -2. ,    0.8],       [  58. ,  -27. ,   -2. ,    1.3],       [  69. ,   -2. ,   -4. ,    0.6],       [  63. ,   23. ,    1. ,    1.3],       [  49. ,   41. ,   -2. ,    1.5],       [  20. ,   59. ,    4. ,    0.7],       [   4. ,   66. ,   -1. ,    1.2],       [ -29. ,   55. ,    3. ,    0.5],       [ -46. ,   46. ,   -3. ,    1.2],       [ -58. ,   21. ,   -2. ,    1.3],       [ -67. ,   -2. ,   -2. ,    0.6],       [ -59. ,  -23. ,    0. ,    1.5],       [ -50. ,  -44. ,   -3. ,    1.3],       [ -21. ,  -66. ,    3. ,    1.3],       [   0. ,  -64. ,    4. ,    1.4],       [  28. ,  -65. ,    1. ,    0.6],       [  49. ,  -47. ,    1. ,    1.3],       [  56. ,  -30. ,    4. ,    0.7],       [  75. ,   -3. ,   -3. ,    0.7],       [  65. ,   24. ,    0. ,    1.3],       [  54. ,   48. ,    4. ,    1.3],       [  24. ,   61. ,    3. ,    0.7],       [   2. ,   69. ,   -5. ,    1. ],       [ -29. ,   69. ,   -2. ,    1.1],       [ -47. ,   54. ,   -4. ,    0.8],       [ -69. ,   30. ,    3. ,    0.6],       [ -73. ,   -4. ,    0. ,    1. ],       [ -61. ,  -26. ,    4. ,    0.8],       [ -55. ,  -55. ,    3. ,    0.5],       [ -26. ,  -65. ,    0. ,    0.8],       [   2. ,  -72. ,    3. ,    0.9],       [  23. ,  -69. ,    1. ,    1.1],       [  45. ,  -55. ,    3. ,    0.6],       [  65. ,  -28. ,    1. ,    0.5],       [  72. ,   -2. ,   -2. ,    1.3],       [  75. ,   32. ,   -4. ,    1.4],       [  56. ,   54. ,   -1. ,    1.3],       [  28. ,   76. ,   -4. ,    1.1],       [  -1. ,   72. ,    4. ,    1.4],       [ -34. ,   70. ,    0. ,    0.6],       [ -59. ,   58. ,   -1. ,    0.8],       [ -73. ,   31. ,    4. ,    0.5],       [ -77. ,   -3. ,    3. ,    0.9],       [ -72. ,  -29. ,    4. ,    0.8],       [ -54. ,  -59. ,    3. ,    1.2],       [ -33. ,  -74. ,   -3. ,    1.5],       [   2. ,  -77. ,    3. ,    1.3],       [  33. ,  -67. ,   -2. ,    1.1],       [  50. ,  -60. ,    3. ,    0.6],       [  70. ,  -34. ,    4. ,    1.3],       [  86. ,    2. ,    4. ,    0.9],       [  78. ,   34. ,    2. ,    0.9],       [  60. ,   61. ,   -3. ,    0.8],       [  32. ,   81. ,    0. ,    1.2],       [  -5. ,   80. ,    3. ,    1.2],       [ -31. ,   72. ,   -5. ,    0.7],       [ -63. ,   63. ,    1. ,    1.2],       [ -79. ,   29. ,    3. ,    1.2],       [ -87. ,   -1. ,    4. ,    1.2],       [ -72. ,  -28. ,   -2. ,    0.7],       [ -54. ,  -61. ,   -4. ,    1. ],       [ -28. ,  -75. ,   -1. ,    0.7],       [  -5. ,  -86. ,    3. ,    1.3],       [  28. ,  -75. ,   -4. ,    0.6],       [  58. ,  -61. ,   -4. ,    0.9],       [  76. ,  -33. ,   -4. ,    1.4],       [  89. ,   -3. ,   -1. ,    0.8],       [  76. ,   30. ,    1. ,    0.7],       [  66. ,   63. ,   -2. ,    0.7],       [  36. ,   83. ,    0. ,    0.5],       [   2. ,   92. ,    1. ,    1. ],       [ -39. ,   83. ,    0. ,    0.6],       [ -62. ,   58. ,   -4. ,    0.6],       [ -81. ,   33. ,   -4. ,    0.7],       [ -94. ,    1. ,   -3. ,    0.8],       [ -86. ,  -30. ,   -3. ,    0.8],       [ -62. ,  -63. ,    3. ,    1.4],       [ -35. ,  -83. ,    1. ,    0.6],       [  -1. ,  -91. ,    2. ,    0.6],       [  34. ,  -85. ,    3. ,    0.6],       [  66. ,  -67. ,    4. ,    1.1],       [  77. ,  -38. ,   -3. ,    0.7],       [  92. ,   -4. ,   -2. ,    0.9],       [  91. ,   36. ,   -2. ,    0.6],       [  69. ,   62. ,    1. ,    0.9],       [  38. ,   91. ,   -5. ,    1.1],       [  -3. ,   96. ,    3. ,    0.5],       [ -37. ,   85. ,   -3. ,    0.8],       [ -70. ,   69. ,   -5. ,    0.8],       [ -85. ,   32. ,   -4. ,    1.3],       [ -91. ,    1. ,    1. ,    0.6],       [ -91. ,  -36. ,    2. ,    0.7],       [ -66. ,  -63. ,    3. ,    0.6],       [ -39. ,  -88. ,    1. ,    0.7],       [   0. ,  -95. ,    3. ,    1.3],       [  32. ,  -85. ,    2. ,    0.8],       [  65. ,  -64. ,    3. ,    0.7],       [  83. ,  -33. ,    1. ,    0.7],       [ 100. ,   -1. ,   -2. ,    1.4],       [  91. ,   33. ,   -2. ,    1.3],       [  71. ,   69. ,    2. ,    0.9],       [  36. ,   88. ,   -2. ,    0.9],       [  -4. ,  100. ,    0. ,    0.9],       [ -39. ,   91. ,    1. ,    1.3],       [ -75. ,   66. ,   -4. ,    1.2],       [ -94. ,   42. ,   -2. ,    1.3],       [-100. ,   -1. ,    4. ,    0.6],       [ -89. ,  -41. ,    2. ,    1.4],       [ -71. ,  -73. ,   -4. ,    0.5],       [ -39. ,  -95. ,   -3. ,    0.7],       [   4. , -103. ,   -2. ,    1. ],       [  35. ,  -90. ,   -1. ,    1. ],       [  66. ,  -69. ,   -3. ,    0.8],       [  88. ,  -41. ,   -4. ,    0.6]])
        basis0 = BSplineBasis(6, np.array([ -3. ,  -2.1,  -1.4,   0. ,   0. ,   0. ,   1.1,   2. ,   2.9,   3.8,   5.1,   6.4,   7.2,
         8.4,   8.6,  10.2,  11. ,  11.9,  12.6,  14. ,  14. ,  14. ,  15.1,  16. ,  16.9]),2)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2.insert_knot([6.365]*1, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 26)
        surf2.insert_knot([7.081]*2, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 28)
        surf2.insert_knot([8.334]*3, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 31)
        surf2.insert_knot([11.294]*4, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 35)
        surf2.insert_knot([2.737]*5, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 40)
        surf2.insert_knot([1.400]*1, 1) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([1.400]*2, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([1.400]*3, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([1.400]*4, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)
        surf2.insert_knot([1.400]*5, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 30)
        surf2.insert_knot([1.400]*6, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 36)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p766_rational_C2_periodic(self):
        controlpoints = np.array([[  50. ,   -2. ,    2. ,    0.7],       [  48. ,   12. ,    3. ,    0.6],       [  34. ,   30. ,   -2. ,    0.6],       [  22. ,   39. ,   -3. ,    0.6],       [   4. ,   50. ,   -4. ,    1.3],       [  -7. ,   48. ,   -2. ,    0.7],       [ -26. ,   46. ,   -3. ,    1.1],       [ -39. ,   31. ,   -5. ,    1.2],       [ -49. ,   18. ,   -1. ,    1.2],       [ -48. ,   -3. ,   -1. ,    1.4],       [ -45. ,  -21. ,   -5. ,    1.5],       [ -34. ,  -34. ,   -3. ,    1.1],       [ -22. ,  -44. ,    1. ,    1.3],       [  -8. ,  -52. ,    2. ,    1.4],       [   5. ,  -50. ,   -3. ,    1.5],       [  23. ,  -41. ,   -5. ,    0.7],       [  39. ,  -29. ,   -3. ,    1.4],       [  50. ,  -19. ,    1. ,    0.7],       [  53. ,   -4. ,   -2. ,    1.5],       [  56. ,   17. ,   -2. ,    0.9],       [  42. ,   31. ,    2. ,    0.7],       [  29. ,   47. ,   -5. ,    0.8],       [  13. ,   50. ,    4. ,    1. ],       [ -10. ,   53. ,   -4. ,    0.5],       [ -30. ,   53. ,   -5. ,    1.4],       [ -39. ,   33. ,   -2. ,    0.6],       [ -58. ,   19. ,    3. ,    1.2],       [ -55. ,    1. ,   -3. ,    1.2],       [ -50. ,  -19. ,    0. ,    0.8],       [ -43. ,  -36. ,   -1. ,    1.4],       [ -27. ,  -47. ,    4. ,    1. ],       [ -11. ,  -51. ,   -4. ,    1.4],       [  13. ,  -58. ,    4. ,    0.5],       [  23. ,  -49. ,    0. ,    1. ],       [  38. ,  -39. ,    0. ,    1.4],       [  48. ,  -18. ,    0. ,    0.8],       [  59. ,    3. ,   -3. ,    1. ],       [  60. ,   24. ,   -2. ,    0.6],       [  44. ,   40. ,    4. ,    1.1],       [  31. ,   55. ,   -2. ,    0.6],       [   7. ,   57. ,    0. ,    0.9],       [  -7. ,   62. ,   -3. ,    0.5],       [ -33. ,   57. ,   -4. ,    1.2],       [ -51. ,   43. ,    4. ,    1.4],       [ -64. ,   19. ,    4. ,    1.1],       [ -64. ,    0. ,   -3. ,    0.8],       [ -57. ,  -23. ,    2. ,    1.1],       [ -52. ,  -38. ,   -4. ,    0.7],       [ -31. ,  -56. ,    3. ,    0.6],       [ -16. ,  -64. ,    3. ,    0.6],       [   7. ,  -60. ,    3. ,    1.1],       [  26. ,  -53. ,    1. ,    1. ],       [  46. ,  -44. ,   -4. ,    1. ],       [  59. ,  -26. ,    2. ,    1.1],       [  64. ,   -2. ,   -1. ,    1.1],       [  67. ,   18. ,    2. ,    1. ],       [  54. ,   46. ,   -5. ,    1.5],       [  36. ,   54. ,    1. ,    1.2],       [  12. ,   66. ,    1. ,    0.5],       [ -14. ,   71. ,    2. ,    0.8],       [ -30. ,   63. ,    4. ,    0.8],       [ -51. ,   45. ,    3. ,    1. ],       [ -66. ,   27. ,    4. ,    1.2],       [ -66. ,   -4. ,    2. ,    0.8],       [ -68. ,  -21. ,    3. ,    1.3],       [ -56. ,  -46. ,   -3. ,    1.1],       [ -39. ,  -58. ,   -5. ,    1.1],       [ -16. ,  -69. ,    4. ,    1.3],       [   8. ,  -70. ,    3. ,    1.2],       [  35. ,  -60. ,   -5. ,    1.2],       [  48. ,  -41. ,    3. ,    1.1],       [  62. ,  -27. ,    3. ,    1.1],       [  73. ,   -3. ,    1. ,    0.6],       [  74. ,   21. ,    4. ,    1.3],       [  53. ,   49. ,   -4. ,    1.4],       [  38. ,   61. ,   -2. ,    1.2],       [  15. ,   78. ,    3. ,    1.1],       [  -9. ,   74. ,    2. ,    1. ],       [ -39. ,   67. ,   -2. ,    1.1],       [ -62. ,   43. ,   -3. ,    1. ],       [ -70. ,   26. ,   -4. ,    0.6],       [ -78. ,   -2. ,   -4. ,    1.1],       [ -67. ,  -27. ,   -2. ,    0.8],       [ -54. ,  -48. ,   -1. ,    0.6],       [ -40. ,  -67. ,    0. ,    0.8],       [ -18. ,  -72. ,   -3. ,    1.2],       [  15. ,  -74. ,    2. ,    1.2],       [  32. ,  -70. ,   -4. ,    1.3],       [  56. ,  -46. ,    3. ,    0.7],       [  71. ,  -31. ,   -1. ,    0.5],       [  85. ,   -1. ,    2. ,    0.8],       [  81. ,   23. ,   -4. ,    1.1],       [  65. ,   55. ,    4. ,    0.7],       [  39. ,   68. ,   -5. ,    1.5],       [  13. ,   75. ,   -2. ,    0.7],       [ -19. ,   82. ,    2. ,    1.3],       [ -43. ,   71. ,    4. ,    1.5],       [ -67. ,   47. ,    1. ,    1. ],       [ -80. ,   29. ,   -4. ,    0.7],       [ -86. ,    2. ,    3. ,    1. ],       [ -78. ,  -32. ,   -4. ,    1. ],       [ -65. ,  -51. ,    1. ,    1.3],       [ -40. ,  -71. ,   -2. ,    1.5],       [ -12. ,  -84. ,    4. ,    0.6],       [  15. ,  -83. ,   -4. ,    0.8],       [  35. ,  -69. ,    4. ,    1.4],       [  65. ,  -58. ,   -3. ,    1.1],       [  74. ,  -28. ,   -3. ,    1.1],       [  84. ,   -2. ,   -1. ,    1.3],       [  85. ,   33. ,   -5. ,    1.3],       [  64. ,   56. ,    2. ,    1.1],       [  46. ,   76. ,   -4. ,    1. ],       [  11. ,   91. ,   -1. ,    0.6],       [ -16. ,   87. ,    4. ,    1.2],       [ -44. ,   76. ,   -4. ,    0.9],       [ -66. ,   57. ,   -5. ,    1.2],       [ -87. ,   26. ,   -1. ,    1.3],       [ -84. ,   -4. ,    3. ,    1.1],       [ -82. ,  -31. ,    2. ,    1.2],       [ -70. ,  -52. ,    2. ,    0.7],       [ -41. ,  -77. ,   -1. ,    0.6],       [ -12. ,  -83. ,   -1. ,    1.1],       [  10. ,  -84. ,    1. ,    0.9],       [  44. ,  -72. ,    3. ,    1.5],       [  63. ,  -56. ,   -3. ,    1.2],       [  79. ,  -29. ,   -3. ,    1.3],       [  98. ,    1. ,   -5. ,    1. ],       [  90. ,   29. ,    1. ,    1.2],       [  70. ,   57. ,   -1. ,    1.5],       [  43. ,   79. ,   -2. ,    0.7],       [  19. ,   89. ,   -5. ,    1.4],       [ -14. ,   92. ,   -5. ,    1.4],       [ -47. ,   77. ,    0. ,    0.7],       [ -69. ,   56. ,    3. ,    1.4],       [ -88. ,   28. ,    1. ,    0.8],       [ -92. ,   -4. ,    1. ,    1.1],       [ -90. ,  -36. ,    3. ,    0.7],       [ -70. ,  -63. ,   -2. ,    1. ],       [ -48. ,  -81. ,   -4. ,    0.8],       [ -20. ,  -95. ,   -2. ,    1.5],       [  18. ,  -97. ,   -5. ,    1.4],       [  45. ,  -81. ,   -5. ,    1.2],       [  71. ,  -62. ,   -1. ,    0.7],       [  88. ,  -32. ,   -3. ,    1. ],       [ 104. ,   -2. ,    1. ,    0.7],       [  90. ,   38. ,   -5. ,    0.7],       [  74. ,   62. ,   -4. ,    1.4],       [  52. ,   81. ,   -3. ,    1. ],       [  13. ,  103. ,    0. ,    0.8],       [ -13. ,   93. ,    3. ,    0.7],       [ -54. ,   81. ,    4. ,    1.5],       [ -72. ,   64. ,    4. ,    1.1],       [ -93. ,   31. ,    4. ,    0.6],       [ -98. ,    0. ,    1. ,    1. ],       [ -91. ,  -31. ,    1. ,    0.6],       [ -79. ,  -69. ,    2. ,    1.4],       [ -49. ,  -84. ,   -5. ,    1.1],       [ -15. , -100. ,    2. ,    0.8],       [  21. ,  -98. ,   -1. ,    1. ],       [  46. ,  -83. ,   -4. ,    0.5],       [  81. ,  -63. ,   -1. ,    1.1],       [  94. ,  -38. ,    0. ,    1.3],       [  53. ,   -4. ,    4. ,    1.2],       [  42. ,   15. ,    2. ,    0.9],       [  33. ,   33. ,    9. ,    0.8],       [  26. ,   42. ,    8. ,    1.2],       [   7. ,   53. ,    5. ,    0.8],       [  -5. ,   52. ,    2. ,    1. ],       [ -30. ,   45. ,    8. ,    1.3],       [ -39. ,   27. ,    8. ,    1.5],       [ -45. ,   18. ,    4. ,    0.8],       [ -49. ,    3. ,    8. ,    1.4],       [ -50. ,  -22. ,    1. ,    0.8],       [ -41. ,  -37. ,    2. ,    1. ],       [ -24. ,  -45. ,    7. ,    1.1],       [ -10. ,  -48. ,    3. ,    0.5],       [   7. ,  -50. ,    8. ,    1.1],       [  21. ,  -40. ,    7. ,    0.8],       [  34. ,  -35. ,    1. ,    1.3],       [  48. ,  -13. ,    4. ,    1.2],       [  60. ,    2. ,    6. ,    1.3],       [  49. ,   17. ,   10. ,    1.5],       [  41. ,   40. ,    5. ,    1.3],       [  28. ,   47. ,    9. ,    1.5],       [   8. ,   58. ,    7. ,    0.9],       [ -11. ,   52. ,    3. ,    1.1],       [ -26. ,   51. ,    6. ,    1.5],       [ -40. ,   40. ,    3. ,    0.8],       [ -55. ,   22. ,    1. ,    0.8],       [ -60. ,    2. ,    3. ,    0.7],       [ -57. ,  -24. ,    3. ,    0.6],       [ -45. ,  -32. ,    6. ,    0.9],       [ -34. ,  -49. ,    8. ,    1. ],       [ -10. ,  -58. ,    7. ,    1.2],       [   4. ,  -60. ,    3. ,    1. ],       [  23. ,  -52. ,   10. ,    1.1],       [  47. ,  -34. ,    7. ,    1.2],       [  48. ,  -24. ,    9. ,    1.2],       [  63. ,    2. ,    0. ,    1.1],       [  57. ,   20. ,    3. ,    1.5],       [  43. ,   36. ,    6. ,    0.8],       [  33. ,   59. ,    8. ,    1.4],       [   8. ,   62. ,    4. ,    1.2],       [ -14. ,   62. ,    2. ,    1.4],       [ -36. ,   52. ,    6. ,    0.9],       [ -51. ,   38. ,    8. ,    1.5],       [ -63. ,   16. ,    3. ,    0.8],       [ -68. ,    4. ,    9. ,    0.5],       [ -63. ,  -26. ,    7. ,    0.7],       [ -47. ,  -38. ,    0. ,    1.1],       [ -35. ,  -59. ,    1. ,    0.5],       [ -10. ,  -65. ,    6. ,    1.1],       [  13. ,  -63. ,    3. ,    0.7],       [  26. ,  -51. ,   10. ,    1.4],       [  52. ,  -36. ,   10. ,    0.8],       [  56. ,  -26. ,    3. ,    1.1],       [  68. ,    0. ,   10. ,    0.9],       [  68. ,   23. ,    4. ,    0.9],       [  55. ,   45. ,    2. ,    1.4],       [  32. ,   57. ,    4. ,    1. ],       [  12. ,   72. ,    4. ,    1.2],       [ -15. ,   62. ,   10. ,    1.4],       [ -36. ,   59. ,    5. ,    0.7],       [ -54. ,   47. ,    6. ,    1.2],       [ -63. ,   27. ,    8. ,    1.4],       [ -67. ,   -4. ,    3. ,    1.2],       [ -67. ,  -21. ,    4. ,    0.8],       [ -51. ,  -48. ,    1. ,    0.7],       [ -39. ,  -58. ,    5. ,    0.9],       [ -16. ,  -69. ,    4. ,    0.7],       [  14. ,  -65. ,    7. ,    0.6],       [  33. ,  -63. ,    8. ,    1.2],       [  53. ,  -41. ,    7. ,    1. ],       [  65. ,  -24. ,    6. ,    1.4],       [  77. ,    3. ,    3. ,    0.6],       [  74. ,   21. ,    7. ,    1.3],       [  58. ,   47. ,    5. ,    1.3],       [  34. ,   63. ,    3. ,    1.2],       [  16. ,   72. ,    6. ,    0.9],       [ -15. ,   71. ,    1. ,    0.7],       [ -38. ,   62. ,    2. ,    1. ],       [ -58. ,   48. ,    9. ,    1. ],       [ -72. ,   29. ,    3. ,    1.1],       [ -71. ,   -3. ,    3. ,    0.9],       [ -73. ,  -29. ,    5. ,    0.7],       [ -56. ,  -45. ,    8. ,    1. ],       [ -42. ,  -62. ,    4. ,    1.1],       [ -16. ,  -75. ,   10. ,    0.7],       [  11. ,  -75. ,    8. ,    0.9],       [  33. ,  -63. ,    3. ,    0.6],       [  52. ,  -53. ,    2. ,    1.3],       [  68. ,  -28. ,    9. ,    0.7],       [  83. ,    3. ,    8. ,    1.3],       [  75. ,   27. ,    9. ,    0.7],       [  59. ,   47. ,    9. ,    0.5],       [  36. ,   72. ,   10. ,    0.8],       [  16. ,   79. ,    3. ,    0.9],       [ -19. ,   75. ,    6. ,    1.4],       [ -39. ,   66. ,    4. ,    1.5],       [ -59. ,   49. ,    2. ,    0.8],       [ -72. ,   31. ,    0. ,    0.9],       [ -84. ,    0. ,    9. ,    1.3],       [ -82. ,  -23. ,    7. ,    0.6],       [ -62. ,  -56. ,    9. ,    1.4],       [ -42. ,  -75. ,    3. ,    1.3],       [ -15. ,  -77. ,    6. ,    0.8],       [  11. ,  -82. ,    6. ,    1.5],       [  43. ,  -70. ,    2. ,    1.4],       [  63. ,  -56. ,    1. ,    0.9],       [  79. ,  -24. ,    5. ,    1.1],       [  88. ,    0. ,    2. ,    0.6],       [  80. ,   34. ,    7. ,    1.4],       [  68. ,   58. ,   10. ,    0.6],       [  44. ,   75. ,    1. ,    0.7],       [  15. ,   81. ,   10. ,    0.5],       [ -17. ,   88. ,    4. ,    1.4],       [ -44. ,   74. ,   10. ,    0.6],       [ -69. ,   56. ,    8. ,    1. ],       [ -84. ,   33. ,    8. ,    1.4],       [ -92. ,   -5. ,    4. ,    0.6],       [ -84. ,  -27. ,    6. ,    0.5],       [ -63. ,  -59. ,   10. ,    0.9],       [ -47. ,  -79. ,    3. ,    1.2],       [ -17. ,  -91. ,    3. ,    1.5],       [  12. ,  -83. ,    5. ,    1. ],       [  46. ,  -73. ,    2. ,    0.7],       [  66. ,  -55. ,    2. ,    1.4],       [  81. ,  -26. ,    3. ,    0.9],       [  90. ,    3. ,    2. ,    0.8],       [  92. ,   36. ,    4. ,    1.4],       [  68. ,   55. ,    2. ,    0.5],       [  50. ,   83. ,    8. ,    0.9],       [  20. ,   89. ,    7. ,    1.5],       [ -19. ,   95. ,    6. ,    1.1],       [ -52. ,   86. ,    8. ,    1. ],       [ -75. ,   61. ,   10. ,    1.2],       [ -85. ,   34. ,    4. ,    0.9],       [ -91. ,    2. ,    2. ,    0.9],       [ -91. ,  -35. ,   10. ,    0.9],       [ -72. ,  -58. ,    3. ,    1.2],       [ -48. ,  -86. ,    1. ,    1.4],       [ -15. ,  -93. ,    3. ,    1. ],       [  14. ,  -93. ,    2. ,    0.5],       [  42. ,  -81. ,    8. ,    0.7],       [  72. ,  -59. ,    9. ,    1.2],       [  90. ,  -34. ,   10. ,    1.2],       [  95. ,   -4. ,    5. ,    0.6],       [  95. ,   33. ,    2. ,    1.3],       [  72. ,   64. ,    1. ,    1.2],       [  48. ,   82. ,    3. ,    1.4],       [  20. ,   99. ,    3. ,    0.6],       [ -18. ,   97. ,    4. ,    1.3],       [ -55. ,   83. ,    2. ,    1.2],       [ -80. ,   61. ,    4. ,    1.4],       [ -90. ,   30. ,    6. ,    0.9],       [-103. ,    3. ,    8. ,    0.9],       [ -90. ,  -34. ,    8. ,    0.9],       [ -77. ,  -64. ,    6. ,    1.1],       [ -50. ,  -82. ,    5. ,    1.4],       [ -20. ,  -95. ,    7. ,    1.5],       [  21. ,  -97. ,    2. ,    1.3],       [  47. ,  -88. ,    1. ,    1.1],       [  78. ,  -66. ,    5. ,    1. ],       [  96. ,  -31. ,    0. ,    1.1],       [  46. ,   -5. ,    9. ,    1.4],       [  44. ,   15. ,    7. ,    0.8],       [  40. ,   28. ,   15. ,    1.5],       [  26. ,   40. ,   12. ,    1.2],       [   5. ,   51. ,    8. ,    1. ],       [  -5. ,   47. ,   13. ,    0.7],       [ -21. ,   45. ,   15. ,    0.6],       [ -38. ,   32. ,    9. ,    1.1],       [ -49. ,   15. ,   12. ,    1.1],       [ -51. ,    1. ,   14. ,    0.8],       [ -50. ,  -14. ,   14. ,    1.1],       [ -34. ,  -29. ,   15. ,    1.4],       [ -24. ,  -40. ,   12. ,    1.5],       [ -10. ,  -50. ,    8. ,    0.5],       [  10. ,  -50. ,    6. ,    0.6],       [  23. ,  -47. ,   11. ,    0.6],       [  42. ,  -30. ,   15. ,    1.3],       [  48. ,  -18. ,   15. ,    0.7],       [  53. ,    3. ,   10. ,    0.7],       [  50. ,   19. ,   11. ,    0.9],       [  42. ,   32. ,   11. ,    1.2],       [  26. ,   51. ,    9. ,    1.2],       [   6. ,   60. ,   10. ,    1.5],       [ -11. ,   57. ,   13. ,    0.9],       [ -28. ,   53. ,   12. ,    1. ],       [ -43. ,   39. ,    9. ,    1.1],       [ -53. ,   19. ,   16. ,    0.8],       [ -61. ,    1. ,    6. ,    0.7],       [ -58. ,  -20. ,   10. ,    0.9],       [ -48. ,  -37. ,   13. ,    1.3],       [ -32. ,  -54. ,   11. ,    0.6],       [ -11. ,  -60. ,   10. ,    0.7],       [   8. ,  -57. ,    6. ,    1. ],       [  24. ,  -49. ,   10. ,    0.9],       [  38. ,  -37. ,    6. ,    1.3],       [  56. ,  -15. ,   13. ,    1.4],       [  62. ,   -1. ,   10. ,    0.9],       [  54. ,   21. ,   12. ,    1. ],       [  51. ,   39. ,   14. ,    1. ],       [  35. ,   53. ,   13. ,    0.7],       [  12. ,   59. ,   13. ,    0.6],       [ -12. ,   60. ,   13. ,    0.7],       [ -34. ,   55. ,   11. ,    1.4],       [ -49. ,   41. ,   15. ,    0.8],       [ -56. ,   24. ,    9. ,    1.4],       [ -63. ,   -2. ,   10. ,    0.6],       [ -57. ,  -23. ,   10. ,    1. ],       [ -47. ,  -39. ,    7. ,    1. ],       [ -30. ,  -59. ,    6. ,    1.2],       [ -14. ,  -58. ,   12. ,    1.4],       [  10. ,  -59. ,    9. ,    1. ],       [  28. ,  -55. ,    8. ,    1.2],       [  52. ,  -40. ,   13. ,    0.9],       [  61. ,  -18. ,    8. ,    0.6],       [  71. ,   -1. ,    7. ,    0.9],       [  67. ,   20. ,    9. ,    0.7],       [  52. ,   42. ,   14. ,    1.2],       [  35. ,   60. ,    9. ,    1.1],       [  14. ,   68. ,   10. ,    1.2],       [ -12. ,   65. ,   14. ,    0.9],       [ -35. ,   58. ,    9. ,    1. ],       [ -58. ,   46. ,   14. ,    1.5],       [ -70. ,   22. ,    8. ,    1.1],       [ -68. ,    2. ,   13. ,    1. ],       [ -63. ,  -25. ,    7. ,    0.9],       [ -49. ,  -44. ,   14. ,    1.3],       [ -38. ,  -60. ,    9. ,    1.4],       [ -14. ,  -70. ,    6. ,    1.3],       [   7. ,  -63. ,    7. ,    0.8],       [  34. ,  -62. ,   14. ,    0.8],       [  51. ,  -42. ,    7. ,    0.6],       [  63. ,  -19. ,   14. ,    0.7],       [  71. ,    4. ,    7. ,    1.2],       [  74. ,   26. ,   10. ,    1. ],       [  55. ,   43. ,    8. ,    0.6],       [  37. ,   67. ,    8. ,    1.5],       [  15. ,   71. ,    6. ,    1.5],       [ -11. ,   74. ,    8. ,    0.6],       [ -33. ,   60. ,    8. ,    1.4],       [ -62. ,   45. ,   14. ,    0.9],       [ -70. ,   25. ,   15. ,    0.8],       [ -80. ,   -2. ,    6. ,    1. ],       [ -73. ,  -31. ,   14. ,    0.5],       [ -53. ,  -45. ,   13. ,    1.5],       [ -36. ,  -68. ,   12. ,    1. ],       [  -9. ,  -71. ,    8. ,    0.8],       [  16. ,  -73. ,   15. ,    0.8],       [  39. ,  -65. ,   11. ,    0.9],       [  56. ,  -49. ,   14. ,    1. ],       [  70. ,  -29. ,    8. ,    0.6],       [  85. ,    3. ,    8. ,    1.3],       [  74. ,   28. ,    7. ,    1.3],       [  63. ,   50. ,   11. ,    1.2],       [  41. ,   73. ,    9. ,    1. ],       [  14. ,   81. ,   14. ,    0.9],       [ -18. ,   78. ,   10. ,    1.4],       [ -43. ,   72. ,    8. ,    1.4],       [ -65. ,   49. ,   13. ,    1.1],       [ -79. ,   25. ,   13. ,    0.9],       [ -79. ,   -5. ,    9. ,    1.1],       [ -73. ,  -29. ,    8. ,    1. ],       [ -61. ,  -48. ,   11. ,    0.9],       [ -41. ,  -73. ,   10. ,    1. ],       [ -16. ,  -79. ,    8. ,    0.6],       [  15. ,  -81. ,   14. ,    0.5],       [  37. ,  -69. ,    7. ,    1.3],       [  64. ,  -56. ,   16. ,    0.8],       [  79. ,  -31. ,   14. ,    0.6],       [  90. ,    3. ,   15. ,    1.4],       [  83. ,   28. ,   16. ,    1.5],       [  66. ,   60. ,   13. ,    1.1],       [  45. ,   72. ,    7. ,    1.1],       [  12. ,   86. ,    9. ,    1.2],       [ -15. ,   86. ,    8. ,    1.4],       [ -49. ,   72. ,    8. ,    1. ],       [ -71. ,   55. ,    6. ,    0.9],       [ -84. ,   33. ,   13. ,    1. ],       [ -93. ,    0. ,   10. ,    0.9],       [ -83. ,  -29. ,   15. ,    1.4],       [ -70. ,  -56. ,    6. ,    1.4],       [ -42. ,  -76. ,   10. ,    0.9],       [ -20. ,  -90. ,    9. ,    1. ],       [  19. ,  -84. ,   13. ,    0.9],       [  42. ,  -73. ,    8. ,    1.2],       [  67. ,  -60. ,   13. ,    1. ],       [  78. ,  -28. ,   14. ,    1.2],       [  96. ,    0. ,   14. ,    0.8],       [  89. ,   32. ,    8. ,    1. ],       [  67. ,   64. ,    9. ,    1.1],       [  47. ,   79. ,   13. ,    1.2],       [  11. ,   89. ,   13. ,    1.1],       [ -20. ,   88. ,   14. ,    0.8],       [ -52. ,   83. ,    7. ,    1.1],       [ -73. ,   64. ,   16. ,    1.4],       [ -84. ,   28. ,   15. ,    1.2],       [ -93. ,    3. ,   15. ,    1.3],       [ -87. ,  -32. ,   12. ,    1.3],       [ -68. ,  -60. ,    8. ,    0.6],       [ -48. ,  -79. ,   15. ,    0.8],       [ -14. ,  -91. ,    7. ,    0.8],       [  15. ,  -97. ,   12. ,    0.5],       [  51. ,  -86. ,   12. ,    0.5],       [  69. ,  -57. ,   10. ,    0.7],       [  91. ,  -35. ,   10. ,    1.5],       [  96. ,    4. ,    8. ,    1.2],       [  92. ,   33. ,   11. ,    0.5],       [  74. ,   68. ,   15. ,    1. ],       [  51. ,   83. ,   13. ,    0.9],       [  14. ,  100. ,    8. ,    1.5],       [ -21. ,   99. ,    7. ,    1. ],       [ -47. ,   85. ,    9. ,    0.7],       [ -78. ,   66. ,    9. ,    0.7],       [ -91. ,   32. ,   15. ,    0.9],       [-102. ,   -3. ,   13. ,    0.7],       [ -96. ,  -35. ,    9. ,    1. ],       [ -79. ,  -63. ,   14. ,    1.4],       [ -54. ,  -88. ,    6. ,    0.8],       [ -20. ,  -99. ,    9. ,    0.7],       [  14. ,  -99. ,   12. ,    1.2],       [  47. ,  -91. ,    7. ,    1.4],       [  81. ,  -68. ,   13. ,    1.4],       [  94. ,  -31. ,    7. ,    0.9],       [  45. ,    4. ,   15. ,    0.9],       [  50. ,   12. ,   17. ,    0.8],       [  39. ,   30. ,   20. ,    1. ],       [  24. ,   48. ,   15. ,    0.6],       [   3. ,   50. ,   14. ,    1.4],       [  -7. ,   53. ,   14. ,    1.2],       [ -23. ,   39. ,   19. ,    1.3],       [ -41. ,   35. ,   18. ,    1.4],       [ -48. ,   13. ,   12. ,    1.4],       [ -48. ,    3. ,   18. ,    1. ],       [ -50. ,  -22. ,   20. ,    1.4],       [ -44. ,  -28. ,   18. ,    1.1],       [ -26. ,  -40. ,   20. ,    0.6],       [  -7. ,  -52. ,   13. ,    1.3],       [  10. ,  -46. ,   12. ,    1. ],       [  26. ,  -46. ,   18. ,    0.5],       [  41. ,  -32. ,   14. ,    0.8],       [  42. ,  -13. ,   19. ,    0.8],       [  60. ,    1. ,   15. ,    0.7],       [  57. ,   20. ,   20. ,    1.2],       [  46. ,   34. ,   13. ,    0.8],       [  24. ,   50. ,   20. ,    0.5],       [   8. ,   57. ,   20. ,    1.2],       [ -13. ,   53. ,   18. ,    1.5],       [ -25. ,   52. ,   17. ,    0.6],       [ -42. ,   40. ,   19. ,    1.1],       [ -56. ,   21. ,   20. ,    1.1],       [ -53. ,    3. ,   21. ,    0.9],       [ -54. ,  -16. ,   15. ,    1. ],       [ -44. ,  -41. ,   12. ,    1.3],       [ -25. ,  -48. ,   14. ,    1.3],       [  -8. ,  -59. ,   15. ,    1.3],       [  13. ,  -60. ,   19. ,    1. ],       [  29. ,  -48. ,   13. ,    0.6],       [  46. ,  -39. ,   13. ,    1. ],       [  53. ,  -18. ,   17. ,    1. ],       [  67. ,   -3. ,   16. ,    1.2],       [  63. ,   16. ,   19. ,    1.4],       [  48. ,   43. ,   19. ,    0.9],       [  29. ,   51. ,   16. ,    1.1],       [   8. ,   65. ,   15. ,    1. ],       [  -9. ,   59. ,   14. ,    0.8],       [ -36. ,   58. ,   16. ,    1. ],       [ -45. ,   44. ,   16. ,    1.2],       [ -57. ,   20. ,   14. ,    0.6],       [ -59. ,    3. ,   18. ,    0.6],       [ -60. ,  -23. ,   14. ,    1. ],       [ -48. ,  -38. ,   21. ,    0.9],       [ -31. ,  -59. ,   17. ,    0.9],       [ -15. ,  -62. ,   19. ,    1. ],       [  10. ,  -61. ,   12. ,    1. ],       [  30. ,  -59. ,   12. ,    0.5],       [  49. ,  -38. ,   12. ,    1.4],       [  59. ,  -26. ,   15. ,    1.1],       [  71. ,   -3. ,   16. ,    0.7],       [  65. ,   25. ,   17. ,    1.2],       [  47. ,   41. ,   17. ,    0.7],       [  29. ,   58. ,   12. ,    1.2],       [   7. ,   71. ,   13. ,    0.6],       [  -8. ,   68. ,   15. ,    0.5],       [ -30. ,   58. ,   16. ,    0.5],       [ -52. ,   48. ,   13. ,    1.1],       [ -70. ,   23. ,   22. ,    1.1],       [ -67. ,    2. ,   15. ,    0.6],       [ -66. ,  -25. ,   13. ,    1.3],       [ -51. ,  -42. ,   14. ,    1.4],       [ -34. ,  -58. ,   13. ,    0.6],       [ -13. ,  -68. ,   21. ,    0.6],       [  10. ,  -65. ,   14. ,    1.5],       [  29. ,  -62. ,   17. ,    0.9],       [  56. ,  -41. ,   20. ,    1.3],       [  67. ,  -23. ,   18. ,    1.3],       [  73. ,    2. ,   12. ,    1.1],       [  75. ,   24. ,   16. ,    1.5],       [  60. ,   45. ,   21. ,    0.7],       [  39. ,   61. ,   18. ,    0.5],       [  13. ,   74. ,   20. ,    0.8],       [  -9. ,   73. ,   18. ,    0.6],       [ -36. ,   64. ,   21. ,    0.8],       [ -57. ,   51. ,   21. ,    1. ],       [ -73. ,   30. ,   19. ,    1.3],       [ -79. ,   -3. ,   12. ,    1.1],       [ -71. ,  -30. ,   13. ,    1.4],       [ -61. ,  -49. ,   18. ,    0.6],       [ -38. ,  -61. ,   20. ,    0.9],       [ -14. ,  -69. ,   20. ,    1.5],       [  10. ,  -75. ,   16. ,    0.9],       [  36. ,  -66. ,   12. ,    1.5],       [  60. ,  -44. ,   20. ,    1.4],       [  68. ,  -28. ,   22. ,    0.7],       [  82. ,    0. ,   14. ,    0.9],       [  79. ,   29. ,   17. ,    1.1],       [  65. ,   49. ,   15. ,    1.4],       [  43. ,   72. ,   20. ,    0.8],       [  10. ,   75. ,   14. ,    0.8],       [ -11. ,   81. ,   16. ,    1.2],       [ -44. ,   72. ,   21. ,    1.2],       [ -63. ,   55. ,   14. ,    1.5],       [ -74. ,   31. ,   20. ,    1.1],       [ -83. ,   -2. ,   13. ,    0.9],       [ -74. ,  -27. ,   13. ,    1.5],       [ -67. ,  -58. ,   21. ,    0.5],       [ -37. ,  -69. ,   14. ,    1.1],       [ -13. ,  -76. ,   12. ,    1.4],       [  12. ,  -76. ,   18. ,    1.4],       [  43. ,  -72. ,   15. ,    1.3],       [  64. ,  -57. ,   12. ,    0.7],       [  74. ,  -25. ,   14. ,    0.9],       [  83. ,    4. ,   19. ,    0.7],       [  81. ,   32. ,   14. ,    0.6],       [  64. ,   55. ,   16. ,    1. ],       [  39. ,   72. ,   15. ,    0.9],       [  13. ,   90. ,   22. ,    0.9],       [ -12. ,   86. ,   13. ,    1.3],       [ -42. ,   77. ,   19. ,    1.5],       [ -63. ,   56. ,   14. ,    1. ],       [ -84. ,   31. ,   15. ,    0.5],       [ -91. ,    4. ,   15. ,    1.1],       [ -83. ,  -28. ,   18. ,    0.8],       [ -64. ,  -55. ,   16. ,    0.8],       [ -41. ,  -77. ,   21. ,    0.8],       [ -16. ,  -83. ,   20. ,    0.6],       [  14. ,  -82. ,   19. ,    0.6],       [  46. ,  -75. ,   15. ,    1.4],       [  67. ,  -53. ,   13. ,    0.5],       [  82. ,  -27. ,   16. ,    1.2],       [  90. ,   -2. ,   12. ,    1.1],       [  83. ,   35. ,   21. ,    0.6],       [  66. ,   60. ,   19. ,    1.5],       [  50. ,   82. ,   13. ,    0.6],       [  17. ,   89. ,   12. ,    1.4],       [ -21. ,   91. ,   20. ,    1. ],       [ -46. ,   84. ,   15. ,    1.3],       [ -77. ,   64. ,   18. ,    0.5],       [ -92. ,   29. ,   13. ,    0.7],       [ -99. ,   -5. ,   13. ,    0.9],       [ -84. ,  -30. ,   12. ,    0.8],       [ -77. ,  -65. ,   18. ,    1.1],       [ -45. ,  -79. ,   16. ,    1. ],       [ -17. ,  -94. ,   17. ,    0.5],       [  20. ,  -98. ,   14. ,    1.3],       [  45. ,  -77. ,   16. ,    1.4],       [  75. ,  -65. ,   18. ,    1.2],       [  92. ,  -32. ,   21. ,    1.2],       [ 100. ,    0. ,   16. ,    1.4],       [  97. ,   34. ,   12. ,    1. ],       [  73. ,   62. ,   14. ,    1.1],       [  45. ,   83. ,   12. ,    1.2],       [  15. ,   97. ,   15. ,    0.6],       [ -19. ,   98. ,   18. ,    1.5],       [ -54. ,   91. ,   14. ,    1. ],       [ -78. ,   67. ,   18. ,    1. ],       [ -93. ,   36. ,   13. ,    0.7],       [ -96. ,   -1. ,   21. ,    0.5],       [ -93. ,  -38. ,   21. ,    1.3],       [ -80. ,  -61. ,   22. ,    0.5],       [ -49. ,  -85. ,   21. ,    0.7],       [ -20. , -104. ,   16. ,    1.4],       [  16. , -102. ,   20. ,    1.1],       [  51. ,  -85. ,   21. ,    1.2],       [  79. ,  -68. ,   17. ,    0.7],       [  90. ,  -32. ,   17. ,    1.4],       [  48. ,   -1. ,   26. ,    0.9],       [  48. ,   19. ,   20. ,    1.3],       [  42. ,   27. ,   26. ,    1.2],       [  22. ,   43. ,   20. ,    0.8],       [   7. ,   47. ,   26. ,    1.5],       [ -13. ,   53. ,   20. ,    0.7],       [ -27. ,   45. ,   19. ,    0.5],       [ -39. ,   28. ,   19. ,    1.1],       [ -47. ,   16. ,   24. ,    1.1],       [ -47. ,    2. ,   26. ,    0.8],       [ -51. ,  -19. ,   21. ,    1.3],       [ -37. ,  -28. ,   23. ,    0.8],       [ -27. ,  -40. ,   18. ,    1.5],       [ -12. ,  -47. ,   18. ,    1.2],       [   7. ,  -52. ,   22. ,    0.9],       [  28. ,  -47. ,   27. ,    0.8],       [  40. ,  -31. ,   20. ,    0.7],       [  42. ,  -16. ,   26. ,    1.1],       [  59. ,    4. ,   20. ,    0.5],       [  48. ,   15. ,   20. ,    0.5],       [  46. ,   38. ,   27. ,    0.5],       [  30. ,   52. ,   22. ,    0.5],       [  13. ,   56. ,   19. ,    0.5],       [  -9. ,   56. ,   19. ,    0.9],       [ -29. ,   51. ,   26. ,    0.5],       [ -45. ,   31. ,   21. ,    0.8],       [ -52. ,   14. ,   21. ,    0.8],       [ -54. ,    0. ,   21. ,    0.9],       [ -51. ,  -20. ,   26. ,    0.9],       [ -48. ,  -38. ,   20. ,    0.8],       [ -29. ,  -47. ,   23. ,    0.9],       [ -11. ,  -60. ,   21. ,    1.4],       [  14. ,  -51. ,   26. ,    1. ],       [  29. ,  -48. ,   25. ,    1.5],       [  41. ,  -42. ,   21. ,    0.7],       [  51. ,  -22. ,   21. ,    1.1],       [  61. ,    1. ,   25. ,    1.2],       [  63. ,   16. ,   18. ,    1. ],       [  52. ,   35. ,   26. ,    1.3],       [  29. ,   51. ,   18. ,    1.1],       [  14. ,   66. ,   18. ,    0.6],       [ -16. ,   63. ,   18. ,    1.1],       [ -33. ,   52. ,   24. ,    0.9],       [ -44. ,   43. ,   22. ,    0.5],       [ -58. ,   23. ,   26. ,    1.3],       [ -66. ,   -3. ,   26. ,    0.9],       [ -61. ,  -22. ,   25. ,    0.5],       [ -46. ,  -43. ,   24. ,    0.7],       [ -32. ,  -57. ,   24. ,    1.4],       [  -9. ,  -63. ,   23. ,    0.6],       [   6. ,  -59. ,   20. ,    1.1],       [  29. ,  -52. ,   20. ,    0.5],       [  49. ,  -42. ,   20. ,    1. ],       [  54. ,  -17. ,   26. ,    1.3],       [  65. ,   -2. ,   23. ,    0.6],       [  63. ,   22. ,   26. ,    1. ],       [  55. ,   48. ,   24. ,    1.2],       [  33. ,   61. ,   21. ,    1. ],       [  13. ,   71. ,   24. ,    1.2],       [ -11. ,   70. ,   25. ,    1. ],       [ -32. ,   58. ,   26. ,    0.6],       [ -55. ,   42. ,   26. ,    1.2],       [ -65. ,   26. ,   19. ,    0.6],       [ -68. ,   -1. ,   26. ,    0.5],       [ -63. ,  -22. ,   27. ,    0.8],       [ -56. ,  -41. ,   25. ,    1.3],       [ -39. ,  -63. ,   25. ,    1.3],       [ -15. ,  -71. ,   25. ,    1.4],       [  15. ,  -70. ,   27. ,    1. ],       [  36. ,  -63. ,   19. ,    0.5],       [  57. ,  -46. ,   18. ,    1.5],       [  64. ,  -20. ,   25. ,    0.5],       [  76. ,    0. ,   25. ,    0.8],       [  70. ,   22. ,   20. ,    1.4],       [  62. ,   46. ,   24. ,    0.7],       [  34. ,   65. ,   22. ,    1. ],       [  12. ,   73. ,   27. ,    1.2],       [ -12. ,   77. ,   20. ,    0.5],       [ -37. ,   69. ,   18. ,    0.8],       [ -57. ,   48. ,   27. ,    0.9],       [ -70. ,   22. ,   23. ,    0.8],       [ -79. ,   -3. ,   18. ,    1.1],       [ -69. ,  -25. ,   22. ,    0.9],       [ -57. ,  -49. ,   26. ,    0.8],       [ -42. ,  -64. ,   23. ,    1.3],       [ -18. ,  -70. ,   25. ,    1.3],       [  10. ,  -74. ,   19. ,    0.7],       [  34. ,  -67. ,   25. ,    1.5],       [  58. ,  -45. ,   22. ,    1.4],       [  72. ,  -27. ,   23. ,    0.8],       [  76. ,    2. ,   21. ,    1.1],       [  74. ,   27. ,   24. ,    1.3],       [  57. ,   52. ,   25. ,    1.2],       [  41. ,   68. ,   18. ,    1.3],       [  11. ,   76. ,   25. ,    0.9],       [ -13. ,   76. ,   23. ,    0.5],       [ -43. ,   74. ,   27. ,    0.9],       [ -61. ,   48. ,   19. ,    1.2],       [ -77. ,   28. ,   22. ,    1.4],       [ -86. ,    1. ,   24. ,    0.9],       [ -74. ,  -25. ,   22. ,    1.1],       [ -63. ,  -48. ,   27. ,    1.4],       [ -39. ,  -75. ,   18. ,    0.6],       [ -16. ,  -84. ,   21. ,    1.1],       [  10. ,  -82. ,   20. ,    0.7],       [  41. ,  -76. ,   20. ,    1.2],       [  59. ,  -57. ,   26. ,    0.9],       [  72. ,  -31. ,   22. ,    1.5],       [  91. ,    3. ,   22. ,    1.3],       [  78. ,   25. ,   24. ,    0.9],       [  66. ,   51. ,   24. ,    1.2],       [  38. ,   73. ,   20. ,    1.4],       [  13. ,   87. ,   21. ,    1.2],       [ -15. ,   90. ,   26. ,    0.7],       [ -45. ,   75. ,   22. ,    0.8],       [ -65. ,   59. ,   18. ,    1. ],       [ -87. ,   29. ,   19. ,    0.9],       [ -89. ,    0. ,   19. ,    0.9],       [ -85. ,  -35. ,   25. ,    1.3],       [ -68. ,  -57. ,   17. ,    1.3],       [ -44. ,  -76. ,   25. ,    1.1],       [ -13. ,  -85. ,   23. ,    0.9],       [  16. ,  -90. ,   23. ,    0.7],       [  42. ,  -72. ,   26. ,    1.4],       [  70. ,  -54. ,   21. ,    1.5],       [  81. ,  -33. ,   22. ,    0.9],       [  89. ,    1. ,   26. ,    1.3],       [  90. ,   34. ,   18. ,    1.1],       [  72. ,   64. ,   18. ,    0.8],       [  42. ,   84. ,   18. ,    1.3],       [  18. ,   95. ,   26. ,    1.3],       [ -14. ,   92. ,   19. ,    1.1],       [ -44. ,   84. ,   27. ,    1.5],       [ -77. ,   57. ,   19. ,    0.5],       [ -87. ,   31. ,   22. ,    1.4],       [ -90. ,    4. ,   20. ,    1. ],       [ -86. ,  -29. ,   25. ,    1.3],       [ -72. ,  -60. ,   22. ,    1.3],       [ -45. ,  -77. ,   21. ,    1. ],       [ -20. ,  -93. ,   21. ,    0.9],       [  20. ,  -90. ,   21. ,    1. ],       [  42. ,  -78. ,   23. ,    1. ],       [  71. ,  -60. ,   26. ,    1.3],       [  84. ,  -30. ,   27. ,    0.9],       [  99. ,   -2. ,   17. ,    0.8],       [  92. ,   38. ,   27. ,    0.5],       [  72. ,   67. ,   19. ,    0.7],       [  45. ,   88. ,   26. ,    0.9],       [  20. ,  101. ,   20. ,    0.9],       [ -20. ,   96. ,   25. ,    0.5],       [ -50. ,   83. ,   18. ,    0.9],       [ -75. ,   63. ,   19. ,    0.8],       [ -93. ,   30. ,   21. ,    0.8],       [-101. ,   -3. ,   25. ,    0.7],       [ -91. ,  -37. ,   17. ,    0.7],       [ -81. ,  -68. ,   20. ,    1. ],       [ -54. ,  -84. ,   24. ,    1. ],       [ -13. ,  -99. ,   25. ,    0.8],       [  16. , -101. ,   22. ,    0.6],       [  49. ,  -87. ,   22. ,    0.7],       [  78. ,  -60. ,   19. ,    0.9],       [  98. ,  -32. ,   22. ,    1. ],       [  48. ,   -5. ,   29. ,    1.3],       [  44. ,   16. ,   24. ,    1.1],       [  33. ,   33. ,   25. ,    0.8],       [  21. ,   45. ,   27. ,    1.2],       [   5. ,   49. ,   24. ,    0.8],       [  -6. ,   51. ,   30. ,    1.4],       [ -24. ,   47. ,   24. ,    1.2],       [ -43. ,   35. ,   31. ,    0.9],       [ -51. ,   16. ,   26. ,    0.6],       [ -46. ,   -5. ,   24. ,    1. ],       [ -46. ,  -20. ,   28. ,    1.2],       [ -35. ,  -34. ,   29. ,    0.7],       [ -29. ,  -45. ,   33. ,    0.7],       [  -8. ,  -54. ,   23. ,    1.1],       [   9. ,  -52. ,   27. ,    1.1],       [  24. ,  -45. ,   29. ,    0.8],       [  41. ,  -37. ,   30. ,    0.9],       [  44. ,  -15. ,   28. ,    1.1],       [  54. ,   -1. ,   28. ,    1.2],       [  49. ,   19. ,   28. ,    1.4],       [  46. ,   32. ,   29. ,    0.8],       [  32. ,   44. ,   31. ,    0.5],       [  14. ,   52. ,   25. ,    0.6],       [ -10. ,   56. ,   31. ,    1.4],       [ -30. ,   48. ,   31. ,    0.5],       [ -42. ,   39. ,   27. ,    0.8],       [ -49. ,   21. ,   30. ,    0.8],       [ -53. ,    0. ,   31. ,    0.6],       [ -57. ,  -21. ,   28. ,    0.9],       [ -44. ,  -35. ,   23. ,    0.9],       [ -25. ,  -49. ,   24. ,    0.6],       [  -9. ,  -51. ,   29. ,    1.3],       [  11. ,  -60. ,   26. ,    0.6],       [  28. ,  -47. ,   25. ,    0.9],       [  40. ,  -40. ,   25. ,    1. ],       [  53. ,  -17. ,   27. ,    0.9],       [  63. ,    2. ,   27. ,    1.4],       [  58. ,   20. ,   24. ,    1.2],       [  49. ,   37. ,   28. ,    1.5],       [  30. ,   53. ,   29. ,    0.5],       [  13. ,   66. ,   32. ,    1.2],       [  -6. ,   62. ,   26. ,    1.5],       [ -28. ,   57. ,   28. ,    1.3],       [ -53. ,   36. ,   28. ,    1.4],       [ -56. ,   19. ,   31. ,    1.2],       [ -66. ,    2. ,   27. ,    1.1],       [ -54. ,  -22. ,   31. ,    0.5],       [ -51. ,  -44. ,   26. ,    0.7],       [ -28. ,  -59. ,   33. ,    0.7],       [  -8. ,  -58. ,   31. ,    0.7],       [  12. ,  -58. ,   24. ,    0.9],       [  30. ,  -51. ,   26. ,    1.3],       [  51. ,  -45. ,   25. ,    0.6],       [  58. ,  -20. ,   25. ,    0.9],       [  68. ,   -3. ,   26. ,    1.4],       [  66. ,   24. ,   29. ,    1.1],       [  49. ,   46. ,   28. ,    1.5],       [  32. ,   57. ,   24. ,    0.8],       [  12. ,   71. ,   31. ,    1. ],       [  -9. ,   67. ,   30. ,    0.9],       [ -38. ,   57. ,   27. ,    0.8],       [ -55. ,   43. ,   29. ,    0.6],       [ -64. ,   18. ,   30. ,    1. ],       [ -70. ,   -5. ,   31. ,    0.6],       [ -63. ,  -21. ,   32. ,    0.8],       [ -50. ,  -46. ,   26. ,    1.3],       [ -32. ,  -58. ,   26. ,    0.5],       [ -12. ,  -73. ,   27. ,    1.1],       [   7. ,  -72. ,   28. ,    0.8],       [  34. ,  -58. ,   28. ,    0.5],       [  47. ,  -42. ,   24. ,    1.1],       [  62. ,  -29. ,   29. ,    1.4],       [  72. ,    0. ,   27. ,    1.3],       [  69. ,   22. ,   27. ,    0.6],       [  60. ,   50. ,   29. ,    1.4],       [  41. ,   64. ,   24. ,    1. ],       [  17. ,   73. ,   28. ,    0.9],       [ -17. ,   69. ,   25. ,    1.5],       [ -40. ,   63. ,   31. ,    0.6],       [ -55. ,   52. ,   24. ,    0.9],       [ -72. ,   27. ,   32. ,    1.3],       [ -79. ,    0. ,   29. ,    0.7],       [ -70. ,  -26. ,   26. ,    1.1],       [ -55. ,  -52. ,   28. ,    0.8],       [ -34. ,  -64. ,   30. ,    1.4],       [ -12. ,  -75. ,   33. ,    0.7],       [  12. ,  -75. ,   24. ,    1.1],       [  34. ,  -70. ,   30. ,    0.8],       [  56. ,  -44. ,   28. ,    1.3],       [  71. ,  -22. ,   30. ,    1.1],       [  85. ,    1. ,   28. ,    1. ],       [  77. ,   25. ,   33. ,    1.3],       [  58. ,   48. ,   33. ,    1.4],       [  43. ,   73. ,   27. ,    0.7],       [  14. ,   81. ,   33. ,    1. ],       [ -16. ,   77. ,   26. ,    1.3],       [ -43. ,   74. ,   25. ,    1.2],       [ -62. ,   48. ,   27. ,    1.5],       [ -79. ,   29. ,   28. ,    0.6],       [ -77. ,    0. ,   24. ,    0.8],       [ -80. ,  -30. ,   31. ,    1.1],       [ -62. ,  -54. ,   28. ,    1.1],       [ -44. ,  -74. ,   31. ,    1.2],       [ -13. ,  -81. ,   30. ,    0.6],       [  18. ,  -76. ,   27. ,    0.9],       [  40. ,  -68. ,   24. ,    0.9],       [  57. ,  -49. ,   33. ,    0.9],       [  80. ,  -31. ,   26. ,    0.8],       [  89. ,   -1. ,   28. ,    1.3],       [  82. ,   31. ,   24. ,    1.2],       [  69. ,   51. ,   29. ,    0.8],       [  43. ,   80. ,   31. ,    1.1],       [  12. ,   81. ,   31. ,    0.7],       [ -14. ,   84. ,   32. ,    1.3],       [ -43. ,   78. ,   24. ,    0.7],       [ -69. ,   60. ,   26. ,    0.8],       [ -79. ,   34. ,   31. ,    1.1],       [ -86. ,   -2. ,   26. ,    1. ],       [ -84. ,  -31. ,   25. ,    1.4],       [ -64. ,  -61. ,   23. ,    1.5],       [ -41. ,  -78. ,   32. ,    1.3],       [ -18. ,  -87. ,   25. ,    1.1],       [  12. ,  -92. ,   25. ,    1. ],       [  47. ,  -80. ,   27. ,    0.5],       [  64. ,  -58. ,   33. ,    1. ],       [  82. ,  -33. ,   29. ,    0.6],       [  92. ,    4. ,   27. ,    1.4],       [  87. ,   28. ,   24. ,    0.7],       [  76. ,   64. ,   30. ,    1. ],       [  48. ,   78. ,   33. ,    1.2],       [  19. ,   89. ,   31. ,    1.1],       [ -18. ,   92. ,   24. ,    0.5],       [ -45. ,   81. ,   32. ,    0.5],       [ -71. ,   64. ,   33. ,    1.5],       [ -91. ,   28. ,   26. ,    1.5],       [ -91. ,   -4. ,   28. ,    1.4],       [ -91. ,  -30. ,   33. ,    0.7],       [ -76. ,  -60. ,   25. ,    0.7],       [ -45. ,  -86. ,   33. ,    0.9],       [ -17. ,  -97. ,   26. ,    1.2],       [  21. ,  -93. ,   30. ,    1.4],       [  47. ,  -78. ,   27. ,    1.1],       [  69. ,  -62. ,   23. ,    1. ],       [  90. ,  -29. ,   24. ,    1.3],       [  95. ,   -3. ,   25. ,    0.6],       [  96. ,   31. ,   24. ,    0.9],       [  79. ,   61. ,   32. ,    0.9],       [  51. ,   85. ,   24. ,    0.8],       [  12. ,   95. ,   30. ,    0.6],       [ -19. ,   93. ,   32. ,    1.3],       [ -49. ,   85. ,   31. ,    0.7],       [ -81. ,   65. ,   28. ,    1.2],       [ -93. ,   36. ,   26. ,    0.7],       [ -99. ,   -1. ,   25. ,    0.5],       [ -97. ,  -37. ,   29. ,    0.9],       [ -80. ,  -61. ,   28. ,    1.1],       [ -53. ,  -85. ,   31. ,    1.3],       [ -21. ,  -98. ,   32. ,    0.6],       [  21. ,  -97. ,   32. ,    0.6],       [  51. ,  -83. ,   32. ,    1.1],       [  76. ,  -62. ,   25. ,    1.4],       [  93. ,  -36. ,   29. ,    1.1],       [  46. ,    2. ,   35. ,    1.4],       [  48. ,   21. ,   33. ,    0.9],       [  39. ,   30. ,   38. ,    0.9],       [  22. ,   42. ,   30. ,    1.1],       [   8. ,   44. ,   37. ,    1.3],       [ -12. ,   44. ,   35. ,    1.2],       [ -22. ,   44. ,   30. ,    0.7],       [ -38. ,   30. ,   29. ,    1. ],       [ -50. ,   13. ,   37. ,    0.6],       [ -46. ,    4. ,   33. ,    1. ],       [ -52. ,  -19. ,   37. ,    0.8],       [ -35. ,  -34. ,   30. ,    1.5],       [ -28. ,  -43. ,   30. ,    0.5],       [ -11. ,  -45. ,   38. ,    1.1],       [   3. ,  -52. ,   34. ,    0.9],       [  28. ,  -46. ,   29. ,    0.9],       [  38. ,  -36. ,   29. ,    0.7],       [  47. ,  -14. ,   37. ,    0.9],       [  56. ,    4. ,   31. ,    1.2],       [  57. ,   16. ,   36. ,    1.3],       [  39. ,   35. ,   32. ,    1.5],       [  29. ,   47. ,   35. ,    1.2],       [  11. ,   58. ,   35. ,    0.7],       [ -11. ,   52. ,   32. ,    0.8],       [ -28. ,   52. ,   38. ,    1. ],       [ -43. ,   35. ,   36. ,    0.9],       [ -51. ,   14. ,   31. ,    1.3],       [ -58. ,   -5. ,   32. ,    0.8],       [ -51. ,  -24. ,   32. ,    0.8],       [ -46. ,  -36. ,   29. ,    1. ],       [ -29. ,  -50. ,   34. ,    1.2],       [ -14. ,  -52. ,   30. ,    0.5],       [  14. ,  -55. ,   35. ,    0.7],       [  31. ,  -45. ,   33. ,    0.9],       [  41. ,  -32. ,   32. ,    1.3],       [  57. ,  -20. ,   30. ,    0.6],       [  62. ,    0. ,   32. ,    0.9],       [  60. ,   25. ,   34. ,    1.2],       [  45. ,   38. ,   31. ,    1. ],       [  27. ,   55. ,   38. ,    1.5],       [   9. ,   61. ,   35. ,    0.8],       [ -13. ,   61. ,   31. ,    1.2],       [ -30. ,   51. ,   36. ,    1.1],       [ -44. ,   43. ,   37. ,    1.3],       [ -59. ,   23. ,   32. ,    1.2],       [ -66. ,    4. ,   37. ,    1. ],       [ -64. ,  -24. ,   38. ,    0.9],       [ -49. ,  -37. ,   37. ,    1.1],       [ -35. ,  -54. ,   36. ,    0.8],       [ -13. ,  -60. ,   36. ,    0.9],       [   7. ,  -67. ,   35. ,    1.2],       [  28. ,  -57. ,   30. ,    1.2],       [  45. ,  -41. ,   36. ,    1. ],       [  62. ,  -23. ,   31. ,    1.4],       [  73. ,    4. ,   29. ,    1. ],       [  65. ,   27. ,   36. ,    0.7],       [  49. ,   39. ,   31. ,    0.8],       [  33. ,   62. ,   35. ,    0.7],       [   8. ,   62. ,   37. ,    1.1],       [ -11. ,   69. ,   34. ,    1.3],       [ -36. ,   63. ,   31. ,    1.4],       [ -57. ,   39. ,   30. ,    0.6],       [ -64. ,   20. ,   29. ,    1.3],       [ -64. ,    4. ,   29. ,    1.3],       [ -63. ,  -23. ,   37. ,    1. ],       [ -55. ,  -44. ,   38. ,    1.1],       [ -38. ,  -64. ,   36. ,    0.7],       [ -16. ,  -64. ,   31. ,    1.4],       [  15. ,  -69. ,   32. ,    0.9],       [  33. ,  -63. ,   37. ,    1.3],       [  56. ,  -41. ,   38. ,    1.1],       [  66. ,  -19. ,   29. ,    1.1],       [  74. ,   -1. ,   31. ,    1.2],       [  72. ,   28. ,   33. ,    1.1],       [  53. ,   46. ,   34. ,    1.2],       [  37. ,   60. ,   30. ,    1.4],       [  16. ,   75. ,   37. ,    0.9],       [  -9. ,   77. ,   36. ,    1.4],       [ -42. ,   69. ,   35. ,    1.3],       [ -53. ,   47. ,   32. ,    1.1],       [ -75. ,   23. ,   33. ,    0.9],       [ -73. ,    1. ,   32. ,    1.3],       [ -71. ,  -28. ,   33. ,    1.2],       [ -56. ,  -45. ,   35. ,    0.9],       [ -41. ,  -63. ,   33. ,    1.1],       [ -17. ,  -76. ,   31. ,    1.3],       [  11. ,  -75. ,   33. ,    1.1],       [  36. ,  -68. ,   30. ,    0.7],       [  53. ,  -44. ,   37. ,    0.7],       [  65. ,  -29. ,   37. ,    1.4],       [  81. ,   -1. ,   30. ,    0.9],       [  81. ,   31. ,   36. ,    0.8],       [  59. ,   52. ,   38. ,    1.1],       [  36. ,   69. ,   36. ,    0.5],       [  12. ,   78. ,   38. ,    0.6],       [ -11. ,   82. ,   35. ,    1.1],       [ -41. ,   70. ,   38. ,    1.5],       [ -66. ,   49. ,   37. ,    1.3],       [ -80. ,   30. ,   35. ,    0.7],       [ -83. ,    4. ,   32. ,    1.5],       [ -73. ,  -27. ,   35. ,    0.9],       [ -60. ,  -51. ,   31. ,    1.4],       [ -38. ,  -70. ,   34. ,    1.1],       [ -13. ,  -80. ,   32. ,    1.2],       [   9. ,  -78. ,   32. ,    1.2],       [  41. ,  -73. ,   36. ,    0.7],       [  59. ,  -48. ,   37. ,    0.9],       [  75. ,  -33. ,   30. ,    0.7],       [  89. ,    1. ,   38. ,    1.2],       [  84. ,   33. ,   33. ,    0.7],       [  64. ,   53. ,   33. ,    0.5],       [  45. ,   72. ,   36. ,    0.6],       [  18. ,   88. ,   31. ,    0.7],       [ -16. ,   86. ,   39. ,    0.6],       [ -43. ,   80. ,   33. ,    1.2],       [ -69. ,   51. ,   34. ,    0.6],       [ -82. ,   29. ,   39. ,    0.7],       [ -87. ,    1. ,   32. ,    0.8],       [ -78. ,  -34. ,   33. ,    0.6],       [ -71. ,  -57. ,   31. ,    1.2],       [ -44. ,  -72. ,   37. ,    0.7],       [ -13. ,  -86. ,   33. ,    1.2],       [  14. ,  -83. ,   34. ,    1. ],       [  40. ,  -74. ,   39. ,    1.1],       [  70. ,  -60. ,   38. ,    0.7],       [  85. ,  -33. ,   34. ,    0.6],       [  92. ,   -1. ,   35. ,    0.9],       [  91. ,   34. ,   34. ,    1. ],       [  68. ,   57. ,   32. ,    1.3],       [  45. ,   80. ,   33. ,    1. ],       [  15. ,   92. ,   36. ,    0.6],       [ -18. ,   94. ,   37. ,    0.9],       [ -47. ,   80. ,   30. ,    1.1],       [ -72. ,   65. ,   34. ,    1.1],       [ -90. ,   28. ,   35. ,    0.9],       [ -89. ,    1. ,   36. ,    1.1],       [ -93. ,  -37. ,   32. ,    0.8],       [ -74. ,  -60. ,   39. ,    1.3],       [ -45. ,  -81. ,   38. ,    1.4],       [ -13. ,  -96. ,   29. ,    1.3],       [  20. ,  -96. ,   32. ,    1.1],       [  44. ,  -78. ,   37. ,    0.9],       [  74. ,  -57. ,   37. ,    1.2],       [  83. ,  -35. ,   36. ,    1.5],       [ 101. ,   -3. ,   31. ,    1.1],       [  92. ,   37. ,   31. ,    0.6],       [  80. ,   63. ,   38. ,    1.2],       [  52. ,   82. ,   32. ,    0.6],       [  17. ,   95. ,   37. ,    1. ],       [ -21. ,   94. ,   37. ,    1.4],       [ -53. ,   82. ,   39. ,    0.7],       [ -74. ,   63. ,   29. ,    1. ],       [ -93. ,   36. ,   29. ,    0.9],       [-101. ,   -4. ,   33. ,    1.4],       [ -97. ,  -35. ,   37. ,    0.6],       [ -82. ,  -69. ,   37. ,    1. ],       [ -51. ,  -86. ,   33. ,    0.5],       [ -18. , -102. ,   35. ,    0.7],       [  20. , -101. ,   30. ,    0.9],       [  49. ,  -86. ,   29. ,    0.9],       [  80. ,  -63. ,   30. ,    0.8],       [  97. ,  -30. ,   34. ,    1. ],       [  54. ,    2. ,   43. ,    1.4],       [  45. ,   21. ,   44. ,    1.2],       [  36. ,   34. ,   41. ,    1.1],       [  22. ,   44. ,   38. ,    1.4],       [   4. ,   52. ,   41. ,    0.7],       [  -5. ,   52. ,   36. ,    0.5],       [ -29. ,   44. ,   40. ,    1.3],       [ -40. ,   34. ,   40. ,    1.1],       [ -49. ,   15. ,   44. ,    0.9],       [ -48. ,    2. ,   41. ,    1. ],       [ -44. ,  -21. ,   39. ,    0.7],       [ -36. ,  -32. ,   36. ,    1.5],       [ -29. ,  -45. ,   42. ,    0.5],       [ -10. ,  -48. ,   39. ,    0.7],       [   4. ,  -51. ,   35. ,    0.6],       [  23. ,  -41. ,   40. ,    1.3],       [  34. ,  -36. ,   38. ,    0.6],       [  51. ,  -14. ,   43. ,    1.1],       [  57. ,    2. ,   40. ,    0.8],       [  51. ,   22. ,   35. ,    0.5],       [  41. ,   35. ,   43. ,    0.6],       [  30. ,   46. ,   41. ,    1.2],       [   5. ,   55. ,   40. ,    1.4],       [ -14. ,   57. ,   41. ,    1. ],       [ -27. ,   50. ,   37. ,    1.2],       [ -39. ,   35. ,   36. ,    1.4],       [ -54. ,   16. ,   42. ,    1.2],       [ -59. ,   -5. ,   43. ,    1.3],       [ -48. ,  -17. ,   41. ,    1. ],       [ -47. ,  -40. ,   39. ,    1.1],       [ -28. ,  -49. ,   35. ,    0.6],       [ -13. ,  -55. ,   40. ,    0.9],       [  11. ,  -56. ,   37. ,    1. ],       [  25. ,  -46. ,   42. ,    1.1],       [  41. ,  -40. ,   41. ,    1. ],       [  50. ,  -21. ,   36. ,    1.1],       [  64. ,    1. ,   44. ,    0.7],       [  54. ,   25. ,   41. ,    0.6],       [  51. ,   39. ,   38. ,    0.5],       [  26. ,   58. ,   43. ,    1. ],       [  12. ,   59. ,   36. ,    1.2],       [ -12. ,   62. ,   44. ,    1. ],       [ -27. ,   51. ,   38. ,    1.1],       [ -47. ,   44. ,   41. ,    0.7],       [ -58. ,   20. ,   35. ,    1.1],       [ -58. ,   -5. ,   42. ,    1.2],       [ -62. ,  -27. ,   40. ,    1. ],       [ -53. ,  -43. ,   40. ,    0.9],       [ -31. ,  -59. ,   41. ,    0.8],       [ -13. ,  -64. ,   44. ,    0.8],       [  14. ,  -62. ,   43. ,    1.2],       [  30. ,  -51. ,   40. ,    1.5],       [  43. ,  -38. ,   38. ,    0.7],       [  54. ,  -20. ,   43. ,    1. ],       [  70. ,   -3. ,   39. ,    1.2],       [  64. ,   24. ,   40. ,    0.8],       [  52. ,   41. ,   35. ,    0.8],       [  36. ,   57. ,   42. ,    0.9],       [  15. ,   68. ,   37. ,    0.6],       [  -9. ,   67. ,   41. ,    1.2],       [ -36. ,   56. ,   42. ,    0.8],       [ -56. ,   47. ,   35. ,    0.9],       [ -61. ,   21. ,   36. ,    1. ],       [ -68. ,    2. ,   38. ,    0.9],       [ -61. ,  -27. ,   35. ,    1. ],       [ -53. ,  -40. ,   36. ,    0.9],       [ -32. ,  -63. ,   36. ,    1. ],       [ -15. ,  -72. ,   39. ,    1.5],       [   9. ,  -72. ,   35. ,    0.9],       [  36. ,  -59. ,   41. ,    0.9],       [  50. ,  -42. ,   35. ,    0.8],       [  65. ,  -22. ,   36. ,    1.4],       [  72. ,    4. ,   36. ,    1.4],       [  67. ,   24. ,   41. ,    1.1],       [  56. ,   52. ,   40. ,    1.3],       [  36. ,   60. ,   40. ,    1.4],       [  14. ,   77. ,   44. ,    0.6],       [ -13. ,   78. ,   41. ,    0.6],       [ -41. ,   61. ,   42. ,    1.5],       [ -59. ,   45. ,   36. ,    0.6],       [ -75. ,   25. ,   35. ,    1.1],       [ -78. ,   -1. ,   42. ,    1.2],       [ -72. ,  -21. ,   37. ,    1.4],       [ -57. ,  -52. ,   39. ,    0.6],       [ -39. ,  -62. ,   38. ,    0.9],       [ -16. ,  -78. ,   43. ,    1.1],       [  11. ,  -70. ,   44. ,    0.7],       [  37. ,  -61. ,   43. ,    0.7],       [  59. ,  -48. ,   38. ,    0.6],       [  71. ,  -26. ,   41. ,    0.9],       [  78. ,    4. ,   36. ,    0.8],       [  76. ,   28. ,   39. ,    0.6],       [  57. ,   51. ,   44. ,    0.7],       [  39. ,   73. ,   38. ,    1. ],       [  17. ,   79. ,   35. ,    1.4],       [ -10. ,   75. ,   35. ,    1.4],       [ -42. ,   73. ,   36. ,    0.5],       [ -63. ,   53. ,   43. ,    1.4],       [ -75. ,   29. ,   37. ,    1.2],       [ -79. ,   -4. ,   38. ,    1.3],       [ -75. ,  -27. ,   35. ,    1.3],       [ -66. ,  -57. ,   38. ,    1.2],       [ -42. ,  -73. ,   41. ,    1.2],       [ -14. ,  -84. ,   44. ,    0.6],       [  15. ,  -79. ,   42. ,    0.8],       [  43. ,  -71. ,   41. ,    1.5],       [  65. ,  -53. ,   36. ,    1.2],       [  80. ,  -32. ,   43. ,    1.2],       [  86. ,    4. ,   36. ,    1.4],       [  82. ,   34. ,   42. ,    0.5],       [  67. ,   54. ,   44. ,    0.6],       [  44. ,   73. ,   40. ,    0.6],       [  11. ,   84. ,   41. ,    0.5],       [ -17. ,   88. ,   44. ,    1.3],       [ -48. ,   79. ,   43. ,    0.8],       [ -67. ,   51. ,   44. ,    1. ],       [ -79. ,   34. ,   44. ,    0.5],       [ -92. ,   -1. ,   37. ,    0.7],       [ -79. ,  -27. ,   35. ,    1.1],       [ -71. ,  -54. ,   36. ,    0.7],       [ -43. ,  -77. ,   44. ,    1.3],       [ -11. ,  -84. ,   40. ,    0.8],       [  10. ,  -84. ,   36. ,    0.5],       [  40. ,  -78. ,   37. ,    1.1],       [  66. ,  -56. ,   37. ,    1.2],       [  85. ,  -26. ,   44. ,    1.1],       [  91. ,   -4. ,   44. ,    0.9],       [  85. ,   33. ,   36. ,    0.6],       [  67. ,   60. ,   42. ,    1.4],       [  45. ,   85. ,   35. ,    1.3],       [  21. ,   92. ,   37. ,    1.1],       [ -16. ,   89. ,   42. ,    1.2],       [ -48. ,   78. ,   40. ,    0.7],       [ -67. ,   57. ,   42. ,    1.4],       [ -85. ,   31. ,   37. ,    1. ],       [ -93. ,    1. ,   41. ,    1.4],       [ -92. ,  -33. ,   43. ,    0.7],       [ -73. ,  -62. ,   38. ,    1.2],       [ -46. ,  -84. ,   39. ,    0.5],       [ -21. ,  -90. ,   36. ,    1. ],       [  13. ,  -89. ,   36. ,    1.2],       [  49. ,  -78. ,   39. ,    0.7],       [  72. ,  -61. ,   42. ,    1.4],       [  84. ,  -33. ,   41. ,    0.8],       [ 103. ,   -3. ,   38. ,    1. ],       [  91. ,   31. ,   36. ,    1.1],       [  79. ,   68. ,   38. ,    1.3],       [  52. ,   90. ,   37. ,    1.5],       [  20. ,  102. ,   41. ,    0.8],       [ -13. ,   95. ,   43. ,    1. ],       [ -53. ,   90. ,   43. ,    0.6],       [ -74. ,   59. ,   43. ,    1. ],       [ -96. ,   38. ,   40. ,    0.6],       [ -97. ,    1. ,   35. ,    0.9],       [ -91. ,  -34. ,   42. ,    0.8],       [ -74. ,  -60. ,   44. ,    1.4],       [ -50. ,  -89. ,   39. ,    0.6],       [ -14. , -104. ,   36. ,    1.3],       [  15. ,  -97. ,   40. ,    1.1],       [  46. ,  -90. ,   37. ,    0.6],       [  74. ,  -68. ,   38. ,    1.1],       [  97. ,  -33. ,   39. ,    0.8]])
        basis0 = BSplineBasis(7, np.array([ -3.2,  -2. ,  -1.3,   0. ,   0. ,   0. ,   0. ,   0.6,   1.6,   3. ,   3.9,   4.9,   5.7,
         7.2,   8.2,   9. ,  10.3,  10.9,  11.8,  13. ,  13.7,  15. ,  15. ,  15. ,  15. ,  15.6,
        16.6,  18. ]),2)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2. ,  3.3,  4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.7,  3. ,  3. ,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2.insert_knot([12.680]*1, 0) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 29)
        vol2.insert_knot([10.359]*2, 0) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 31)
        vol2.insert_knot([0.625]*3, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 34)
        vol2.insert_knot([10.286]*4, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 38)
        vol2.insert_knot([8.850]*5, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 43)
        vol2.insert_knot([0.697]*6, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 49)
        vol2.insert_knot([2.216]*1, 1) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 16)
        vol2.insert_knot([2.954]*2, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 18)
        vol2.insert_knot([2.704]*3, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 21)
        vol2.insert_knot([3.281]*4, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 25)
        vol2.insert_knot([3.163]*5, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 30)
        vol2.insert_knot([1.649]*1, 2) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 15)
        vol2.insert_knot([1.076]*2, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 17)
        vol2.insert_knot([0.990]*3, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 20)
        vol2.insert_knot([0.970]*4, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 24)
        vol2.insert_knot([1.474]*5, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 29)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p5(self):
        controlpoints = np.array([[  -5.,   -1.,   -5.],
       [  13.,    2.,   -4.],
       [  28.,   -4.,   -5.],
       [  46.,   -3.,   -2.],
       [  55.,   -4.,    1.],
       [  76.,   -1.,   -1.],
       [  84.,    4.,   -1.],
       [ 100.,    2.,    1.]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  3.3,  4. ,  4. ,  4. ,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([0.957]*1) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 14)
        crv2.insert_knot([1.953]*2) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 16)
        crv2.insert_knot([2.500]*3) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 19)
        crv2.insert_knot([1.450]*4) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p66(self):
        controlpoints = np.array([[   0.,    4.,   -4.],       [  14.,   -1.,   -4.],       [  20.,    1.,   -5.],       [  34.,    3.,    2.],       [  44.,   -2.,   -3.],       [  52.,    0.,    3.],       [  66.,    2.,    0.],       [  77.,   -4.,   -4.],       [  87.,   -2.,   -1.],       [ 102.,    3.,   -4.],       [   1.,   16.,    3.],       [  14.,    7.,    2.],       [  22.,   12.,    4.],       [  34.,   10.,    1.],       [  49.,   10.,    1.],       [  56.,   10.,   -2.],       [  69.,   13.,    3.],       [  82.,   10.,   -3.],       [  89.,    9.,    3.],       [  96.,   15.,   -2.],       [  -1.,   26.,    0.],       [  14.,   28.,    2.],       [  22.,   23.,    0.],       [  32.,   29.,   -1.],       [  44.,   28.,    0.],       [  56.,   25.,    3.],       [  68.,   23.,   -1.],       [  73.,   24.,    4.],       [  86.,   24.,    1.],       [  96.,   21.,    2.],       [   2.,   32.,    2.],       [   8.,   42.,    4.],       [  26.,   32.,   -1.],       [  33.,   40.,   -1.],       [  42.,   41.,   -1.],       [  55.,   33.,    3.],       [  63.,   38.,   -4.],       [  78.,   38.,   -2.],       [  84.,   38.,    1.],       [  95.,   33.,    3.],       [  -1.,   48.,    1.],       [  12.,   48.,   -3.],       [  18.,   45.,    2.],       [  35.,   53.,   -3.],       [  48.,   50.,    4.],       [  51.,   50.,   -3.],       [  66.,   47.,    4.],       [  77.,   52.,   -5.],       [  86.,   48.,    1.],       [ 103.,   54.,   -5.],       [  -5.,   58.,    4.],       [  16.,   66.,    3.],       [  26.,   65.,    1.],       [  34.,   62.,   -4.],       [  46.,   61.,   -3.],       [  59.,   59.,   -2.],       [  70.,   66.,    4.],       [  78.,   64.,    0.],       [  88.,   58.,   -5.],       [ 102.,   64.,   -2.],       [   1.,   79.,    4.],       [   7.,   74.,    1.],       [  22.,   77.,   -5.],       [  34.,   77.,   -1.],       [  41.,   73.,    0.],       [  55.,   78.,   -2.],       [  65.,   78.,   -2.],       [  80.,   74.,    0.],       [  87.,   79.,    4.],       [  95.,   71.,   -5.],       [   1.,   89.,    1.],       [  12.,   87.,    3.],       [  19.,   85.,   -2.],       [  31.,   83.,    1.],       [  43.,   88.,    3.],       [  54.,   87.,   -2.],       [  69.,   85.,   -3.],       [  82.,   90.,   -1.],       [  84.,   92.,    3.],       [ 102.,   90.,    1.],       [  -3.,   96.,    4.],       [   8.,   96.,    0.],       [  23.,   99.,    0.],       [  31.,   97.,    3.],       [  41.,  102.,   -2.],       [  59.,   99.,    3.],       [  64.,   98.,    0.],       [  75.,  102.,   -5.],       [  85.,   99.,    0.],       [  98.,  104.,   -3.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.3,  3.3,  3.9,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.4,  3. ,  4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([1.436]*1, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 17)
        surf2.insert_knot([3.191]*2, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 19)
        surf2.insert_knot([2.646]*3, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([2.134]*4, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 26)
        surf2.insert_knot([1.400]*5, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 31)
        surf2.insert_knot([1.625]*1, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([1.622]*2, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([2.220]*3, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([2.678]*4, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)
        surf2.insert_knot([2.137]*5, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 30)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p665(self):
        controlpoints = np.array([[   1.,    1.,    2.],       [  13.,    1.,   -4.],       [  27.,    4.,    0.],       [  32.,    4.,    0.],       [  44.,    3.,    0.],       [  55.,   -1.,    2.],       [  70.,   -4.,    2.],       [  77.,    3.,    1.],       [  88.,   -2.,   -3.],       [  99.,    2.,    2.],       [   2.,   12.,    4.],       [   7.,   18.,    0.],       [  21.,   13.,   -4.],       [  34.,   11.,    2.],       [  41.,   10.,    0.],       [  50.,   17.,    3.],       [  66.,   12.,   -4.],       [  80.,   10.,   -5.],       [  92.,   13.,    4.],       [  95.,   13.,   -3.],       [   2.,   27.,    0.],       [  14.,   26.,   -1.],       [  19.,   25.,    4.],       [  31.,   26.,    2.],       [  45.,   28.,   -4.],       [  53.,   24.,   -2.],       [  61.,   29.,   -2.],       [  75.,   26.,   -3.],       [  93.,   31.,   -5.],       [  95.,   29.,    3.],       [   4.,   38.,   -5.],       [  14.,   46.,   -4.],       [  21.,   43.,    1.],       [  34.,   39.,   -2.],       [  43.,   46.,    2.],       [  60.,   40.,    1.],       [  62.,   42.,   -3.],       [  79.,   43.,    4.],       [  91.,   39.,   -5.],       [  96.,   37.,    3.],       [  -5.,   54.,    3.],       [   9.,   58.,    1.],       [  19.,   59.,   -3.],       [  28.,   61.,   -5.],       [  46.,   53.,    0.],       [  58.,   61.,   -4.],       [  69.,   54.,   -4.],       [  82.,   55.,    2.],       [  93.,   61.,   -2.],       [  95.,   59.,    0.],       [   1.,   70.,    3.],       [  11.,   75.,    3.],       [  23.,   69.,    2.],       [  29.,   75.,   -2.],       [  45.,   66.,    2.],       [  53.,   72.,    3.],       [  69.,   76.,    0.],       [  78.,   76.,   -1.],       [  91.,   69.,    3.],       [ 103.,   71.,    1.],       [  -4.,   87.,    0.],       [  14.,   82.,    1.],       [  20.,   87.,    2.],       [  29.,   90.,    3.],       [  44.,   81.,   -5.],       [  52.,   82.,   -1.],       [  63.,   87.,   -5.],       [  79.,   84.,   -1.],       [  93.,   83.,   -2.],       [ 104.,   89.,   -5.],       [  -3.,   97.,   -5.],       [  12.,  101.,    2.],       [  20.,   99.,    4.],       [  35.,   97.,   -5.],       [  41.,   98.,   -5.],       [  51.,  100.,   -1.],       [  68.,   98.,    3.],       [  80.,   98.,   -1.],       [  86.,  103.,   -4.],       [  97.,   98.,    1.],       [   0.,   -5.,   23.],       [  11.,    4.,   22.],       [  23.,    4.,   21.],       [  35.,   -2.,   15.],       [  43.,    4.,   23.],       [  55.,    1.,   17.],       [  65.,    3.,   17.],       [  76.,   -5.,   16.],       [  86.,   -1.,   20.],       [ 102.,    0.,   23.],       [  -3.,   10.,   17.],       [   9.,   10.,   17.],       [  27.,   15.,   15.],       [  32.,   12.,   17.],       [  46.,   15.,   23.],       [  57.,   12.,   16.],       [  69.,   14.,   17.],       [  77.,    9.,   24.],       [  84.,   16.,   23.],       [ 101.,   17.,   22.],       [   2.,   25.,   21.],       [  10.,   26.,   17.],       [  18.,   27.,   21.],       [  36.,   25.,   15.],       [  44.,   29.,   18.],       [  56.,   31.,   18.],       [  65.,   33.,   22.],       [  76.,   30.,   19.],       [  86.,   27.,   23.],       [  98.,   30.,   18.],       [   3.,   47.,   17.],       [  15.,   40.,   24.],       [  18.,   37.,   16.],       [  31.,   39.,   17.],       [  42.,   47.,   22.],       [  56.,   41.,   22.],       [  68.,   41.,   15.],       [  81.,   45.,   18.],       [  90.,   45.,   23.],       [ 101.,   44.,   16.],       [   1.,   53.,   16.],       [  13.,   52.,   15.],       [  19.,   58.,   23.],       [  33.,   60.,   17.],       [  43.,   54.,   24.],       [  57.,   62.,   19.],       [  63.,   54.,   22.],       [  81.,   59.,   17.],       [  90.,   56.,   21.],       [  99.,   53.,   22.],       [   3.,   74.,   23.],       [  12.,   73.,   16.],       [  20.,   66.,   23.],       [  30.,   68.,   20.],       [  47.,   71.,   16.],       [  55.,   73.,   18.],       [  66.,   73.,   21.],       [  82.,   74.,   19.],       [  87.,   68.,   17.],       [  98.,   68.,   17.],       [   3.,   88.,   15.],       [   7.,   85.,   17.],       [  19.,   84.,   19.],       [  33.,   83.,   24.],       [  43.,   84.,   22.],       [  53.,   89.,   24.],       [  63.,   90.,   19.],       [  79.,   82.,   24.],       [  89.,   82.,   21.],       [ 101.,   81.,   22.],       [  -3.,  100.,   22.],       [  10.,  100.,   20.],       [  25.,   98.,   24.],       [  36.,  101.,   15.],       [  49.,  102.,   22.],       [  55.,   95.,   19.],       [  66.,  100.,   19.],       [  75.,  102.,   18.],       [  92.,  103.,   20.],       [ 101.,  102.,   17.],       [   1.,   -4.,   42.],       [   6.,    0.,   39.],       [  25.,   -4.,   42.],       [  33.,    3.,   38.],       [  46.,   -1.,   37.],       [  58.,    0.,   36.],       [  63.,    3.,   37.],       [  81.,   -5.,   40.],       [  89.,    0.,   43.],       [  97.,    0.,   40.],       [  -2.,   18.,   42.],       [   7.,   16.,   40.],       [  23.,   16.,   40.],       [  28.,   14.,   44.],       [  39.,   18.,   37.],       [  52.,   11.,   41.],       [  61.,    9.,   40.],       [  78.,   13.,   39.],       [  84.,   13.,   40.],       [ 103.,   11.,   41.],       [  -1.,   32.,   39.],       [  13.,   26.,   36.],       [  19.,   26.,   44.],       [  36.,   32.,   36.],       [  43.,   26.,   40.],       [  59.,   31.,   35.],       [  63.,   23.,   39.],       [  73.,   28.,   42.],       [  90.,   29.,   35.],       [  99.,   23.,   38.],       [  -1.,   41.,   37.],       [  11.,   42.,   41.],       [  26.,   40.,   38.],       [  32.,   40.,   42.],       [  42.,   42.,   38.],       [  50.,   43.,   44.],       [  63.,   43.,   44.],       [  78.,   43.,   42.],       [  93.,   42.,   42.],       [  99.,   42.,   43.],       [  -2.,   55.,   41.],       [  12.,   57.,   40.],       [  24.,   61.,   38.],       [  36.,   60.,   39.],       [  41.,   58.,   42.],       [  56.,   56.,   36.],       [  61.,   61.,   41.],       [  77.,   59.,   39.],       [  88.,   62.,   40.],       [  95.,   60.,   42.],       [   2.,   72.,   42.],       [   8.,   72.,   43.],       [  24.,   71.,   37.],       [  31.,   72.,   36.],       [  47.,   76.,   41.],       [  57.,   73.,   44.],       [  71.,   69.,   37.],       [  80.,   74.,   43.],       [  86.,   68.,   40.],       [ 104.,   68.,   41.],       [  -3.,   89.,   43.],       [  14.,   85.,   42.],       [  25.,   90.,   35.],       [  29.,   87.,   35.],       [  41.,   81.,   35.],       [  52.,   87.,   42.],       [  64.,   84.,   43.],       [  80.,   85.,   38.],       [  92.,   88.,   40.],       [ 104.,   86.,   43.],       [  -5.,  101.,   37.],       [  11.,  102.,   38.],       [  26.,  100.,   41.],       [  34.,   99.,   42.],       [  49.,  104.,   43.],       [  55.,   97.,   43.],       [  66.,  100.,   44.],       [  77.,  100.,   38.],       [  89.,  103.,   36.],       [ 104.,  103.,   35.],       [  -3.,    3.,   61.],       [  15.,    3.,   59.],       [  24.,    0.,   57.],       [  37.,    3.,   60.],       [  48.,   -3.,   59.],       [  58.,   -4.,   57.],       [  70.,   -1.,   60.],       [  77.,   -2.,   57.],       [  93.,   -4.,   64.],       [  97.,   -4.,   57.],       [  -5.,   11.,   63.],       [  10.,   11.,   55.],       [  21.,    9.,   58.],       [  34.,   18.,   63.],       [  42.,   18.,   62.],       [  58.,   10.,   58.],       [  68.,   16.,   55.],       [  74.,   17.,   56.],       [  91.,   13.,   56.],       [ 101.,   16.,   63.],       [   0.,   32.,   62.],       [   6.,   29.,   59.],       [  20.,   28.,   62.],       [  36.,   25.,   59.],       [  46.,   25.,   62.],       [  58.,   24.,   60.],       [  64.,   32.,   55.],       [  74.,   28.,   55.],       [  88.,   30.,   58.],       [ 104.,   24.,   55.],       [   4.,   38.,   58.],       [   9.,   40.,   55.],       [  27.,   38.,   60.],       [  34.,   44.,   56.],       [  45.,   40.,   61.],       [  52.,   40.,   57.],       [  69.,   47.,   60.],       [  78.,   40.,   61.],       [  84.,   38.,   62.],       [ 101.,   39.,   57.],       [   1.,   54.,   56.],       [  10.,   54.,   62.],       [  23.,   55.,   64.],       [  31.,   58.,   63.],       [  45.,   54.,   62.],       [  59.,   53.,   56.],       [  68.,   55.,   58.],       [  81.,   52.,   60.],       [  93.,   60.,   55.],       [ 104.,   53.,   64.],       [   3.,   69.,   62.],       [  16.,   70.,   57.],       [  26.,   73.,   61.],       [  38.,   69.,   58.],       [  47.,   75.,   55.],       [  55.,   74.,   55.],       [  65.,   70.,   58.],       [  76.,   71.,   56.],       [  93.,   68.,   55.],       [  95.,   72.,   63.],       [  -4.,   86.,   57.],       [  10.,   85.,   62.],       [  26.,   82.,   64.],       [  36.,   87.,   58.],       [  40.,   85.,   62.],       [  51.,   85.,   64.],       [  64.,   82.,   58.],       [  75.,   89.,   56.],       [  86.,   89.,   58.],       [ 103.,   84.,   57.],       [   3.,  100.,   58.],       [  14.,  100.,   62.],       [  20.,  101.,   61.],       [  29.,  102.,   55.],       [  46.,  102.,   59.],       [  53.,  104.,   62.],       [  62.,   95.,   63.],       [  75.,  100.,   58.],       [  91.,   99.,   59.],       [ 101.,  102.,   60.],       [   0.,   -1.,   80.],       [  12.,   -5.,   80.],       [  26.,    1.,   77.],       [  35.,   -5.,   80.],       [  47.,    4.,   79.],       [  59.,   -3.,   81.],       [  61.,    4.,   81.],       [  77.,    0.,   77.],       [  92.,    3.,   82.],       [ 102.,    3.,   79.],       [  -3.,   14.,   75.],       [  14.,   10.,   75.],       [  20.,   12.,   82.],       [  30.,   16.,   75.],       [  43.,   10.,   83.],       [  57.,   16.,   84.],       [  65.,   10.,   78.],       [  81.,   16.,   84.],       [  92.,   16.,   80.],       [ 100.,   14.,   78.],       [   3.,   23.,   77.],       [   8.,   28.,   78.],       [  21.,   30.,   81.],       [  30.,   30.,   79.],       [  47.,   25.,   83.],       [  54.,   25.,   82.],       [  63.,   30.,   77.],       [  76.,   30.,   76.],       [  91.,   27.,   82.],       [ 101.,   25.,   83.],       [  -5.,   46.,   83.],       [  11.,   38.,   78.],       [  17.,   38.,   77.],       [  35.,   47.,   75.],       [  48.,   41.,   84.],       [  55.,   44.,   78.],       [  71.,   46.,   75.],       [  81.,   43.,   81.],       [  85.,   38.,   84.],       [  99.,   46.,   80.],       [   4.,   52.,   81.],       [   7.,   59.,   83.],       [  21.,   58.,   75.],       [  29.,   62.,   76.],       [  46.,   59.,   84.],       [  53.,   53.,   75.],       [  67.,   54.,   77.],       [  76.,   53.,   77.],       [  86.,   56.,   78.],       [ 100.,   60.,   82.],       [  -5.,   75.,   77.],       [  10.,   72.,   78.],       [  26.,   73.,   80.],       [  29.,   71.,   83.],       [  47.,   69.,   77.],       [  54.,   74.,   80.],       [  64.,   72.,   84.],       [  77.,   73.,   80.],       [  91.,   67.,   77.],       [ 104.,   70.,   78.],       [  -3.,   89.,   84.],       [  15.,   85.,   75.],       [  22.,   85.,   83.],       [  32.,   89.,   80.],       [  41.,   89.,   77.],       [  51.,   85.,   82.],       [  65.,   89.,   75.],       [  79.,   81.,   80.],       [  88.,   87.,   80.],       [  97.,   87.,   77.],       [   0.,  101.,   80.],       [   9.,   97.,   84.],       [  25.,  102.,   78.],       [  33.,  102.,   76.],       [  39.,   97.,   76.],       [  55.,   98.,   79.],       [  63.,  102.,   84.],       [  78.,  102.,   83.],       [  90.,   97.,   78.],       [  95.,  101.,   78.],       [   2.,    2.,   99.],       [  11.,   -2.,  100.],       [  23.,    1.,  100.],       [  37.,    2.,  100.],       [  49.,    1.,  100.],       [  52.,    0.,   97.],       [  61.,    0.,  104.],       [  76.,   -4.,   96.],       [  86.,    1.,   99.],       [  98.,    0.,  104.],       [   3.,   18.,   96.],       [  12.,   16.,  102.],       [  21.,   16.,   96.],       [  37.,   10.,  101.],       [  39.,   10.,   97.],       [  59.,   19.,   97.],       [  70.,    9.,   99.],       [  74.,   10.,   95.],       [  91.,   16.,  103.],       [ 102.,    9.,  100.],       [   4.,   28.,  102.],       [  11.,   29.,  100.],       [  19.,   25.,   95.],       [  34.,   28.,   97.],       [  39.,   26.,  104.],       [  58.,   29.,  103.],       [  68.,   30.,  104.],       [  77.,   26.,   98.],       [  84.,   28.,   95.],       [  98.,   29.,   95.],       [  -5.,   42.,  101.],       [   8.,   40.,  101.],       [  20.,   45.,   97.],       [  36.,   41.,   95.],       [  41.,   39.,  101.],       [  59.,   38.,  102.],       [  69.,   47.,  103.],       [  77.,   42.,   99.],       [  86.,   47.,  102.],       [  95.,   42.,  102.],       [   3.,   53.,   98.],       [   7.,   60.,   98.],       [  18.,   56.,   99.],       [  38.,   56.,   99.],       [  48.,   56.,  101.],       [  54.,   57.,   99.],       [  61.,   54.,   97.],       [  76.,   60.,  100.],       [  84.,   59.,   99.],       [  97.,   54.,  102.],       [  -5.,   72.,   95.],       [   6.,   69.,  100.],       [  22.,   69.,   96.],       [  38.,   69.,  101.],       [  48.,   72.,  101.],       [  53.,   70.,   98.],       [  64.,   74.,   99.],       [  77.,   70.,  101.],       [  85.,   71.,  100.],       [ 100.,   69.,  101.],       [   3.,   87.,  100.],       [   9.,   86.,  101.],       [  18.,   82.,  100.],       [  35.,   85.,  103.],       [  44.,   86.,  104.],       [  58.,   86.,   95.],       [  67.,   89.,   95.],       [  75.,   85.,   95.],       [  89.,   87.,  100.],       [  98.,   84.,  102.],       [   1.,  104.,  104.],       [  15.,   99.,   96.],       [  17.,  102.,   98.],       [  37.,   95.,   98.],       [  48.,   98.,  104.],       [  55.,   96.,  101.],       [  69.,  101.,  102.],       [  80.,   99.,   99.],       [  87.,  102.,  102.],       [  97.,  103.,  100.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2. ,  2.9,  4. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  3. ,  3. ,  3. ,  3. ,  3. ,  3. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2. ,  2. ,  2. ,  2. ,  2. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.insert_knot([1.808]*1, 0) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 17)
        vol2.insert_knot([1.187]*2, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 19)
        vol2.insert_knot([0.954]*3, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 22)
        vol2.insert_knot([3.592]*4, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 26)
        vol2.insert_knot([3.512]*5, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 31)
        vol2.insert_knot([1.590]*1, 1) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 15)
        vol2.insert_knot([1.295]*2, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 17)
        vol2.insert_knot([1.263]*3, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 20)
        vol2.insert_knot([1.514]*4, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 24)
        vol2.insert_knot([1.715]*5, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 29)
        vol2.insert_knot([0.700]*1, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 12)
        vol2.insert_knot([0.700]*2, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 14)
        vol2.insert_knot([0.700]*3, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 17)
        vol2.insert_knot([0.700]*4, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 21)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p7_C0_periodic(self):
        controlpoints = np.array([[ 103.,    3.,    1.],
       [  91.,   48.,    1.],
       [  57.,   77.,    2.],
       [  17.,   97.,   -3.],
       [ -27.,   93.,   -1.],
       [ -65.,   74.,    1.],
       [ -87.,   47.,    0.],
       [ -98.,   -1.,    0.],
       [ -87.,  -42.,    2.],
       [ -67.,  -77.,    3.],
       [ -28.,  -98.,   -1.],
       [  18.,  -98.,    1.],
       [  59.,  -76.,   -3.],
       [  90.,  -41.,   -3.]])
        basis0 = BSplineBasis(7, np.array([ -0.7,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   1. ,   1.8,   2.8,   4.3,   5.4,   6.1,
         7.1,   8.3,   9. ,   9. ,   9. ,   9. ,   9. ,   9. ,  10. ]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([4.679]*1) # insert C5-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)
        crv2.insert_knot([1.486]*2) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)
        crv2.insert_knot([7.363]*3) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([8.111]*4) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 32)
        crv2.insert_knot([5.389]*5) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 37)
        crv2.insert_knot([3.934]*6) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 43)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p67_C0_periodic(self):
        controlpoints = np.array([[  58.,    1.,   -3.],       [  53.,   26.,    3.],       [  28.,   54.,   -1.],       [  -1.,   61.,   -1.],       [ -32.,   49.,   -3.],       [ -52.,   27.,   -5.],       [ -65.,   -4.,    3.],       [ -51.,  -28.,   -5.],       [ -29.,  -50.,    1.],       [   1.,  -61.,   -4.],       [  34.,  -51.,   -2.],       [  50.,  -26.,    4.],       [  70.,    4.,    3.],       [  61.,   37.,   -3.],       [  37.,   54.,   -3.],       [   0.,   66.,    2.],       [ -33.,   58.,    1.],       [ -53.,   30.,   -4.],       [ -71.,   -5.,   -2.],       [ -58.,  -37.,   -1.],       [ -32.,  -59.,    1.],       [  -2.,  -63.,    2.],       [  28.,  -56.,   -2.],       [  58.,  -36.,   -1.],       [  69.,    3.,   -5.],       [  65.,   38.,   -5.],       [  36.,   66.,   -4.],       [   1.,   76.,   -5.],       [ -34.,   64.,    4.],       [ -59.,   35.,   -5.],       [ -77.,    2.,   -1.],       [ -59.,  -34.,   -5.],       [ -37.,  -67.,    0.],       [   4.,  -76.,    2.],       [  40.,  -57.,   -5.],       [  59.,  -32.,   -5.],       [  76.,    4.,    0.],       [  66.,   40.,   -5.],       [  38.,   64.,   -1.],       [   0.,   73.,   -5.],       [ -38.,   64.,    3.],       [ -69.,   33.,   -3.],       [ -82.,   -5.,    3.],       [ -68.,  -38.,   -2.],       [ -35.,  -63.,   -4.],       [   1.,  -79.,    2.],       [  43.,  -72.,   -3.],       [  67.,  -40.,    4.],       [  80.,    0.,   -2.],       [  72.,   44.,    4.],       [  45.,   71.,   -5.],       [   0.,   87.,    1.],       [ -42.,   67.,   -3.],       [ -72.,   41.,    1.],       [ -85.,    3.,   -1.],       [ -70.,  -41.,   -3.],       [ -44.,  -73.,    0.],       [   3.,  -88.,    3.],       [  45.,  -75.,   -2.],       [  72.,  -43.,   -2.],       [  93.,   -2.,   -3.],       [  74.,   49.,   -5.],       [  44.,   78.,   -4.],       [   4.,   89.,   -1.],       [ -40.,   74.,   -3.],       [ -74.,   43.,   -1.],       [ -93.,   -2.,    3.],       [ -81.,  -45.,    2.],       [ -49.,  -73.,   -3.],       [  -2.,  -90.,    1.],       [  45.,  -75.,   -1.],       [  73.,  -49.,    2.],       [  97.,   -1.,   -4.],       [  83.,   48.,    2.],       [  45.,   81.,   -2.],       [  -3.,   94.,   -3.],       [ -43.,   84.,   -3.],       [ -83.,   51.,    3.],       [ -95.,    0.,   -1.],       [ -78.,  -48.,    4.],       [ -51.,  -81.,   -5.],       [  -2.,  -98.,   -5.],       [  46.,  -84.,    0.],       [  79.,  -43.,    1.],       [ 100.,   -4.,   -1.],       [  84.,   45.,   -2.],       [  53.,   91.,    1.],       [  -5.,   96.,    2.],       [ -54.,   82.,    4.],       [ -90.,   47.,    4.],       [-102.,   -3.,   -5.],       [ -85.,  -55.,   -4.],       [ -50.,  -86.,    4.],       [   0., -104.,   -5.],       [  53.,  -84.,    0.],       [  85.,  -55.,    3.]])
        basis0 = BSplineBasis(6, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.1,  3.2,  3.7,  5. ,  6. ,  7.3,  8. ,  8. ,
        8. ,  8. ,  8. ,  8.8]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([5.443]*1, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([6.336]*2, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([2.564]*3, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([2.988]*4, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([4.629]*5, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 34)
        surf2.insert_knot([1.400]*1, 1) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 16)
        surf2.insert_knot([1.400]*2, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 18)
        surf2.insert_knot([1.400]*3, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([1.400]*4, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 25)
        surf2.insert_knot([1.400]*5, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 30)
        surf2.insert_knot([1.400]*6, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 36)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p757_C0_periodic(self):
        controlpoints = np.array([[  45.,   -5.,   -1.],       [  43.,   17.,    4.],       [  30.,   35.,    3.],       [  10.,   45.,   -3.],       [  -8.,   51.,   -1.],       [ -35.,   36.,    2.],       [ -50.,   23.,    4.],       [ -48.,   -2.,    1.],       [ -50.,  -23.,    1.],       [ -33.,  -38.,   -2.],       [ -14.,  -52.,   -3.],       [   7.,  -47.,   -1.],       [  27.,  -38.,   -1.],       [  43.,  -26.,   -1.],       [  52.,   -3.,    4.],       [  47.,   21.,    3.],       [  36.,   47.,    4.],       [  12.,   56.,   -4.],       [ -16.,   57.,   -2.],       [ -34.,   39.,    0.],       [ -52.,   28.,    4.],       [ -62.,   -1.,    3.],       [ -51.,  -26.,    4.],       [ -35.,  -43.,    1.],       [ -15.,  -57.,   -3.],       [  13.,  -51.,   -5.],       [  36.,  -48.,   -3.],       [  46.,  -28.,    0.],       [  66.,   -2.,   -1.],       [  60.,   30.,    1.],       [  39.,   52.,   -1.],       [  16.,   66.,    3.],       [ -16.,   63.,   -4.],       [ -41.,   49.,    4.],       [ -60.,   24.,    4.],       [ -66.,   -5.,   -3.],       [ -57.,  -29.,   -4.],       [ -41.,  -49.,   -3.],       [ -14.,  -58.,   -4.],       [  10.,  -64.,   -1.],       [  44.,  -50.,    4.],       [  57.,  -26.,   -3.],       [  70.,    3.,    4.],       [  62.,   29.,    0.],       [  49.,   54.,    2.],       [  18.,   70.,    1.],       [ -15.,   73.,   -1.],       [ -45.,   54.,   -1.],       [ -65.,   28.,    4.],       [ -74.,   -5.,    3.],       [ -67.,  -31.,    2.],       [ -46.,  -53.,   -2.],       [ -13.,  -69.,    1.],       [  13.,  -70.,   -2.],       [  46.,  -59.,    1.],       [  66.,  -32.,   -1.],       [  74.,    3.,    2.],       [  72.,   33.,   -1.],       [  52.,   61.,   -1.],       [  18.,   72.,    2.],       [ -16.,   79.,   -2.],       [ -49.,   59.,   -2.],       [ -71.,   32.,    4.],       [ -82.,    4.,   -5.],       [ -73.,  -38.,   -4.],       [ -54.,  -65.,   -4.],       [ -19.,  -77.,   -3.],       [  19.,  -80.,    1.],       [  47.,  -61.,   -2.],       [  66.,  -30.,    4.],       [  84.,    2.,    2.],       [  76.,   39.,    1.],       [  51.,   67.,   -4.],       [  17.,   88.,    0.],       [ -21.,   84.,   -1.],       [ -58.,   67.,    0.],       [ -81.,   39.,    1.],       [ -86.,   -5.,   -1.],       [ -78.,  -35.,    1.],       [ -56.,  -67.,    4.],       [ -19.,  -87.,   -2.],       [  15.,  -85.,    3.],       [  52.,  -72.,    0.],       [  75.,  -39.,    2.],       [  90.,    1.,    4.],       [  86.,   44.,    4.],       [  58.,   68.,    0.],       [  22.,   93.,   -4.],       [ -20.,   93.,    1.],       [ -55.,   68.,    2.],       [ -88.,   39.,    2.],       [ -97.,    1.,   -3.],       [ -84.,  -45.,   -1.],       [ -61.,  -75.,    4.],       [ -23.,  -95.,    2.],       [  21.,  -95.,    4.],       [  54.,  -78.,   -4.],       [  86.,  -37.,    0.],       [  95.,   -1.,   -2.],       [  94.,   39.,   -3.],       [  66.,   76.,    1.],       [  23.,  100.,    2.],       [ -22.,  100.,   -5.],       [ -59.,   78.,    0.],       [ -95.,   42.,    3.],       [-104.,    3.,    4.],       [ -86.,  -48.,   -4.],       [ -68.,  -81.,    0.],       [ -22., -101.,    2.],       [  24.,  -96.,   -4.],       [  64.,  -83.,    0.],       [  87.,  -49.,    3.],       [  51.,   -3.,    2.],       [  44.,   20.,    7.],       [  34.,   38.,    5.],       [  11.,   46.,    7.],       [ -15.,   45.,    5.],       [ -29.,   40.,    0.],       [ -45.,   19.,    0.],       [ -49.,    2.,    3.],       [ -50.,  -18.,    6.],       [ -30.,  -41.,    0.],       [  -7.,  -46.,    6.],       [   9.,  -51.,    4.],       [  32.,  -40.,    6.],       [  44.,  -24.,    7.],       [  57.,   -4.,    5.],       [  56.,   26.,    7.],       [  36.,   39.,    2.],       [  14.,   55.,    0.],       [ -13.,   54.,    7.],       [ -39.,   43.,    1.],       [ -52.,   25.,    4.],       [ -59.,   -2.,    1.],       [ -49.,  -24.,    5.],       [ -32.,  -46.,    3.],       [ -12.,  -60.,    6.],       [  10.,  -58.,    5.],       [  36.,  -41.,    3.],       [  49.,  -29.,    5.],       [  67.,    3.,   -1.],       [  59.,   28.,    6.],       [  39.,   53.,    6.],       [  17.,   64.,    6.],       [ -10.,   61.,    6.],       [ -39.,   46.,    3.],       [ -58.,   28.,    1.],       [ -63.,   -5.,    5.],       [ -60.,  -26.,    0.],       [ -39.,  -48.,    6.],       [ -19.,  -59.,   -1.],       [  12.,  -62.,    3.],       [  41.,  -53.,    1.],       [  53.,  -27.,    6.],       [  72.,   -4.,    2.],       [  66.,   34.,    8.],       [  47.,   58.,    5.],       [  12.,   68.,    8.],       [ -15.,   72.,    0.],       [ -46.,   51.,    8.],       [ -61.,   31.,    7.],       [ -68.,   -2.,    0.],       [ -64.,  -30.,    2.],       [ -49.,  -58.,    2.],       [ -21.,  -70.,    4.],       [  20.,  -70.,    8.],       [  44.,  -55.,    0.],       [  64.,  -30.,    2.],       [  80.,   -3.,    4.],       [  65.,   35.,    6.],       [  44.,   62.,    5.],       [  22.,   76.,    4.],       [ -14.,   74.,    4.],       [ -52.,   59.,    3.],       [ -74.,   30.,    3.],       [ -82.,    3.,    1.],       [ -70.,  -31.,    2.],       [ -50.,  -61.,    1.],       [ -19.,  -78.,    2.],       [  21.,  -74.,    0.],       [  48.,  -60.,    4.],       [  75.,  -37.,    1.],       [  90.,    2.,   -1.],       [  80.,   41.,    6.],       [  57.,   67.,    3.],       [  15.,   85.,    8.],       [ -19.,   87.,   -1.],       [ -57.,   71.,    8.],       [ -75.,   32.,    7.],       [ -85.,    3.,    6.],       [ -80.,  -39.,    7.],       [ -50.,  -73.,    7.],       [ -16.,  -85.,   -1.],       [  17.,  -84.,    8.],       [  52.,  -69.,    2.],       [  77.,  -38.,    6.],       [  88.,   -1.,    7.],       [  81.,   41.,    3.],       [  61.,   76.,    0.],       [  21.,   91.,    6.],       [ -18.,   93.,    8.],       [ -62.,   71.,    6.],       [ -85.,   39.,    4.],       [ -95.,    3.,   -1.],       [ -82.,  -39.,    3.],       [ -58.,  -75.,    0.],       [ -19.,  -87.,    8.],       [  22.,  -95.,    6.],       [  55.,  -74.,    7.],       [  84.,  -40.,    3.],       [  95.,    3.,    2.],       [  86.,   46.,    0.],       [  63.,   74.,    7.],       [  23.,   94.,    8.],       [ -19.,   97.,    0.],       [ -67.,   81.,    6.],       [ -86.,   47.,    0.],       [-104.,    1.,    1.],       [ -87.,  -40.,    4.],       [ -61.,  -78.,    1.],       [ -27., -102.,    6.],       [  25.,  -95.,   -1.],       [  66.,  -78.,    7.],       [  89.,  -39.,    7.],       [  49.,    1.,    4.],       [  40.,   17.,    9.],       [  28.,   38.,   12.],       [  13.,   50.,   12.],       [ -16.,   44.,    4.],       [ -27.,   39.,   12.],       [ -50.,   23.,   10.],       [ -50.,   -3.,    5.],       [ -43.,  -17.,    5.],       [ -27.,  -39.,    7.],       [ -11.,  -44.,    9.],       [  14.,  -48.,    8.],       [  27.,  -39.,    6.],       [  46.,  -19.,    8.],       [  54.,    4.,   12.],       [  49.,   25.,    6.],       [  33.,   41.,    3.],       [  12.,   58.,   12.],       [  -9.,   54.,   11.],       [ -38.,   40.,    6.],       [ -54.,   24.,   12.],       [ -59.,   -2.,   10.],       [ -48.,  -26.,    9.],       [ -35.,  -42.,    8.],       [ -11.,  -57.,    9.],       [  15.,  -61.,    9.],       [  36.,  -50.,    3.],       [  47.,  -30.,   12.],       [  67.,   -2.,    3.],       [  61.,   27.,    5.],       [  37.,   46.,   12.],       [  15.,   60.,    6.],       [ -19.,   57.,    8.],       [ -46.,   53.,   11.],       [ -54.,   24.,   10.],       [ -65.,   -5.,   11.],       [ -61.,  -27.,   10.],       [ -39.,  -46.,    6.],       [ -10.,  -62.,    4.],       [   9.,  -59.,    7.],       [  37.,  -52.,   11.],       [  57.,  -25.,   11.],       [  67.,   -2.,    4.],       [  61.,   26.,   11.],       [  45.,   52.,    6.],       [  20.,   69.,    5.],       [ -16.,   72.,   10.],       [ -49.,   54.,    8.],       [ -66.,   30.,   10.],       [ -71.,   -5.,    9.],       [ -63.,  -34.,    5.],       [ -45.,  -57.,    8.],       [ -16.,  -71.,    9.],       [  17.,  -74.,    6.],       [  45.,  -55.,    9.],       [  62.,  -27.,   11.],       [  80.,    2.,    3.],       [  71.,   37.,    3.],       [  51.,   58.,    3.],       [  21.,   72.,   11.],       [ -14.,   78.,    7.],       [ -48.,   62.,    4.],       [ -67.,   32.,    9.],       [ -78.,   -2.,   11.],       [ -69.,  -30.,    3.],       [ -47.,  -64.,    5.],       [ -18.,  -73.,   11.],       [  15.,  -81.,    4.],       [  48.,  -64.,    6.],       [  67.,  -39.,    3.],       [  89.,    3.,    6.],       [  80.,   33.,   12.],       [  50.,   64.,   10.],       [  23.,   84.,   11.],       [ -15.,   87.,   12.],       [ -57.,   63.,    8.],       [ -81.,   39.,    9.],       [ -87.,   -3.,    9.],       [ -79.,  -36.,    9.],       [ -53.,  -67.,    7.],       [ -16.,  -88.,    5.],       [  23.,  -80.,    3.],       [  50.,  -63.,   10.],       [  75.,  -40.,    7.],       [  89.,    1.,   11.],       [  83.,   42.,    9.],       [  60.,   76.,    9.],       [  17.,   89.,   11.],       [ -19.,   89.,    3.],       [ -59.,   71.,    3.],       [ -88.,   37.,   12.],       [ -89.,    4.,    5.],       [ -88.,  -39.,    5.],       [ -61.,  -75.,    7.],       [ -23.,  -87.,    6.],       [  23.,  -91.,    8.],       [  52.,  -73.,    4.],       [  85.,  -40.,    6.],       [  99.,    3.,    5.],       [  90.,   48.,    7.],       [  63.,   78.,    3.],       [  21.,   95.,   12.],       [ -20.,   95.,    4.],       [ -59.,   80.,    3.],       [ -93.,   44.,    9.],       [ -96.,    2.,    6.],       [ -87.,  -41.,    5.],       [ -59.,  -78.,    8.],       [ -19.,  -94.,    9.],       [  25.,  -97.,   10.],       [  66.,  -79.,   10.],       [  87.,  -47.,   10.],       [  54.,   -1.,   16.],       [  48.,   24.,   15.],       [  31.,   43.,   14.],       [  11.,   46.,   10.],       [ -15.,   44.,   16.],       [ -32.,   35.,   11.],       [ -49.,   22.,   13.],       [ -46.,    0.,    7.],       [ -48.,  -26.,   15.],       [ -29.,  -38.,   10.],       [  -8.,  -50.,   16.],       [  14.,  -45.,   15.],       [  31.,  -35.,    8.],       [  46.,  -21.,    7.],       [  55.,   -5.,   12.],       [  48.,   26.,   15.],       [  36.,   40.,   14.],       [  11.,   55.,    9.],       [ -17.,   55.,   10.],       [ -38.,   48.,   15.],       [ -53.,   22.,   10.],       [ -54.,    0.,    7.],       [ -57.,  -22.,   14.],       [ -31.,  -40.,    7.],       [ -17.,  -54.,   15.],       [  14.,  -57.,   14.],       [  38.,  -42.,   15.],       [  52.,  -21.,    8.],       [  61.,    2.,   12.],       [  59.,   31.,   16.],       [  39.,   52.,   11.],       [  13.,   61.,   12.],       [ -14.,   65.,   15.],       [ -40.,   52.,   10.],       [ -54.,   23.,   16.],       [ -61.,   -5.,   15.],       [ -63.,  -24.,    8.],       [ -42.,  -55.,   12.],       [ -17.,  -64.,   13.],       [  10.,  -60.,   10.],       [  36.,  -54.,   12.],       [  53.,  -24.,   11.],       [  70.,    4.,   16.],       [  67.,   29.,   12.],       [  46.,   56.,   12.],       [  14.,   68.,   16.],       [ -21.,   67.,    8.],       [ -48.,   56.,   16.],       [ -66.,   27.,   16.],       [ -75.,   -4.,   13.],       [ -65.,  -33.,   16.],       [ -43.,  -61.,   11.],       [ -19.,  -66.,   10.],       [  19.,  -69.,   16.],       [  44.,  -61.,   13.],       [  62.,  -32.,   11.],       [  79.,   -3.,    9.],       [  68.,   34.,   16.],       [  46.,   57.,   11.],       [  21.,   79.,    8.],       [ -21.,   76.,   13.],       [ -52.,   63.,   16.],       [ -69.,   30.,    7.],       [ -81.,   -2.,    7.],       [ -73.,  -39.,   11.],       [ -45.,  -63.,   11.],       [ -19.,  -73.,   15.],       [  16.,  -81.,    8.],       [  50.,  -61.,    7.],       [  68.,  -31.,    9.],       [  87.,    4.,   14.],       [  78.,   40.,   16.],       [  49.,   66.,   16.],       [  19.,   87.,   13.],       [ -21.,   86.,   13.],       [ -52.,   65.,   14.],       [ -74.,   32.,    8.],       [ -88.,    2.,    9.],       [ -75.,  -38.,   12.],       [ -57.,  -68.,   14.],       [ -15.,  -87.,   11.],       [  18.,  -80.,    7.],       [  50.,  -67.,   10.],       [  74.,  -41.,   11.],       [  88.,   -3.,   13.],       [  79.,   37.,    9.],       [  59.,   67.,   10.],       [  22.,   90.,   11.],       [ -21.,   91.,   14.],       [ -54.,   73.,   10.],       [ -79.,   39.,    7.],       [ -98.,    1.,    9.],       [ -88.,  -45.,    8.],       [ -55.,  -74.,    8.],       [ -26.,  -96.,    7.],       [  15.,  -90.,   11.],       [  60.,  -74.,   12.],       [  78.,  -37.,    7.],       [ 100.,   -5.,   16.],       [  86.,   44.,    7.],       [  62.,   74.,   12.],       [  20.,   98.,   15.],       [ -24.,   92.,   16.],       [ -62.,   77.,   11.],       [ -89.,   39.,   10.],       [-105.,   -2.,   14.],       [ -95.,  -42.,   16.],       [ -64.,  -76.,   13.],       [ -28.,  -95.,   16.],       [  20.,  -94.,   12.],       [  59.,  -81.,   15.],       [  94.,  -43.,    8.],       [  54.,   -1.,   12.],       [  44.,   17.,   16.],       [  28.,   35.,   15.],       [  12.,   50.,   13.],       [ -16.,   50.,   11.],       [ -29.,   41.,   15.],       [ -47.,   25.,   18.],       [ -52.,   -5.,   19.],       [ -43.,  -18.,   20.],       [ -36.,  -38.,   13.],       [ -16.,  -47.,   20.],       [  15.,  -52.,   19.],       [  32.,  -43.,   19.],       [  48.,  -25.,   11.],       [  55.,    2.,   14.],       [  51.,   20.,   13.],       [  39.,   45.,   11.],       [  11.,   56.,   19.],       [ -17.,   53.,   12.],       [ -35.,   40.,   17.],       [ -53.,   24.,   17.],       [ -54.,    2.,   19.],       [ -49.,  -26.,   15.],       [ -32.,  -45.,   12.],       [ -11.,  -61.,   11.],       [  15.,  -59.,   13.],       [  33.,  -48.,   17.],       [  53.,  -26.,   11.],       [  67.,   -5.,   20.],       [  55.,   23.,   17.],       [  38.,   46.,   18.],       [  12.,   64.,   18.],       [ -13.,   60.,   14.],       [ -40.,   52.,   11.],       [ -58.,   28.,   11.],       [ -68.,    2.,   11.],       [ -59.,  -24.,   12.],       [ -44.,  -53.,   20.],       [ -18.,  -59.,   12.],       [  16.,  -61.,   20.],       [  44.,  -53.,   16.],       [  52.,  -31.,   18.],       [  66.,   -4.,   18.],       [  61.,   29.,   13.],       [  41.,   57.,   19.],       [  12.,   70.,   15.],       [ -17.,   64.,   15.],       [ -43.,   53.,   17.],       [ -67.,   33.,   15.],       [ -74.,   -4.,   15.],       [ -65.,  -36.,   11.],       [ -43.,  -55.,   13.],       [ -19.,  -72.,   20.],       [  11.,  -72.,   20.],       [  48.,  -60.,   20.],       [  63.,  -30.,   16.],       [  75.,   -1.,   14.],       [  70.,   31.,   12.],       [  52.,   62.,   11.],       [  16.,   72.,   14.],       [ -14.,   71.,   13.],       [ -45.,   59.,   19.],       [ -68.,   32.,   19.],       [ -75.,   -1.,   17.],       [ -76.,  -39.,   12.],       [ -49.,  -58.,   19.],       [ -13.,  -81.,   14.],       [  19.,  -73.,   19.],       [  44.,  -57.,   11.],       [  70.,  -31.,   15.],       [  84.,    2.,   17.],       [  76.,   38.,   19.],       [  49.,   69.,   16.],       [  15.,   83.,   12.],       [ -17.,   82.,   18.],       [ -49.,   65.,   14.],       [ -75.,   41.,   13.],       [ -87.,   -1.,   13.],       [ -77.,  -39.,   12.],       [ -51.,  -70.,   11.],       [ -17.,  -86.,   12.],       [  23.,  -89.,   19.],       [  53.,  -66.,   13.],       [  81.,  -38.,   20.],       [  91.,    0.,   14.],       [  85.,   37.,   13.],       [  59.,   69.,   20.],       [  21.,   90.,   12.],       [ -19.,   87.,   15.],       [ -57.,   71.,   19.],       [ -83.,   36.,   14.],       [ -96.,    0.,   14.],       [ -87.,  -37.,   18.],       [ -58.,  -70.,   11.],       [ -23.,  -88.,   18.],       [  22.,  -87.,   16.],       [  62.,  -77.,   13.],       [  80.,  -40.,   17.],       [ 102.,   -1.,   15.],       [  89.,   40.,   20.],       [  61.,   76.,   14.],       [  24.,   92.,   14.],       [ -21.,   95.,   17.],       [ -58.,   79.,   19.],       [ -91.,   48.,   12.],       [-101.,    4.,   17.],       [ -92.,  -40.,   14.],       [ -60.,  -77.,   12.],       [ -19.,  -97.,   14.],       [  23.,  -94.,   19.],       [  62.,  -80.,   18.],       [  93.,  -44.,   13.],       [  50.,   -1.,   15.],       [  46.,   26.,   16.],       [  31.,   39.,   21.],       [   9.,   52.,   16.],       [ -13.,   52.,   18.],       [ -33.,   40.,   16.],       [ -45.,   18.,   17.],       [ -50.,   -5.,   19.],       [ -43.,  -22.,   22.],       [ -27.,  -44.,   22.],       [  -9.,  -52.,   17.],       [   8.,  -49.,   22.],       [  28.,  -35.,   18.],       [  49.,  -24.,   17.],       [  54.,   -5.,   22.],       [  53.,   21.,   20.],       [  34.,   43.,   20.],       [  13.,   59.,   18.],       [ -11.,   57.,   15.],       [ -31.,   46.,   17.],       [ -49.,   21.,   20.],       [ -59.,    2.,   19.],       [ -56.,  -21.,   18.],       [ -40.,  -44.,   19.],       [ -17.,  -60.,   15.],       [  17.,  -56.,   23.],       [  33.,  -45.,   15.],       [  54.,  -22.,   22.],       [  62.,   -1.,   23.],       [  57.,   32.,   20.],       [  37.,   51.,   17.],       [  16.,   60.,   16.],       [ -13.,   60.,   23.],       [ -40.,   50.,   18.],       [ -58.,   31.,   21.],       [ -66.,   -1.,   24.],       [ -56.,  -31.,   24.],       [ -42.,  -54.,   16.],       [ -17.,  -62.,   22.],       [  17.,  -62.,   21.],       [  44.,  -49.,   24.],       [  60.,  -29.,   21.],       [  76.,    0.,   24.],       [  59.,   29.,   20.],       [  44.,   60.,   16.],       [  18.,   71.,   20.],       [ -13.,   73.,   21.],       [ -44.,   53.,   21.],       [ -65.,   31.,   21.],       [ -71.,   -3.,   15.],       [ -66.,  -27.,   18.],       [ -43.,  -57.,   21.],       [ -18.,  -66.,   19.],       [  18.,  -67.,   20.],       [  40.,  -61.,   21.],       [  65.,  -33.,   21.],       [  80.,   -1.,   15.],       [  69.,   34.,   20.],       [  46.,   63.,   23.],       [  17.,   80.,   16.],       [ -13.,   80.,   21.],       [ -47.,   62.,   20.],       [ -71.,   35.,   19.],       [ -75.,    4.,   21.],       [ -70.,  -32.,   24.],       [ -49.,  -62.,   19.],       [ -23.,  -77.,   17.],       [  17.,  -81.,   19.],       [  44.,  -57.,   23.],       [  69.,  -38.,   23.],       [  88.,    3.,   19.],       [  78.,   41.,   23.],       [  53.,   69.,   23.],       [  23.,   83.,   19.],       [ -16.,   79.,   24.],       [ -50.,   66.,   21.],       [ -76.,   39.,   20.],       [ -88.,   -3.,   18.],       [ -74.,  -40.,   19.],       [ -52.,  -66.,   23.],       [ -23.,  -88.,   17.],       [  17.,  -84.,   16.],       [  52.,  -72.,   17.],       [  82.,  -34.,   15.],       [  87.,    2.,   19.],       [  85.,   42.,   17.],       [  61.,   73.,   18.],       [  24.,   94.,   18.],       [ -18.,   91.,   20.],       [ -59.,   70.,   15.],       [ -82.,   43.,   22.],       [ -98.,   -1.,   17.],       [ -87.,  -45.,   22.],       [ -62.,  -76.,   17.],       [ -21.,  -94.,   24.],       [  16.,  -90.,   20.],       [  56.,  -69.,   20.],       [  82.,  -37.,   17.],       [ 103.,    3.,   21.],       [  93.,   47.,   15.],       [  57.,   83.,   22.],       [  20.,  101.,   22.],       [ -22.,   94.,   18.],       [ -65.,   73.,   21.],       [ -94.,   47.,   19.],       [-104.,    1.,   16.],       [ -90.,  -46.,   19.],       [ -64.,  -77.,   22.],       [ -20.,  -98.,   24.],       [  25., -103.,   18.],       [  65.,  -75.,   24.],       [  86.,  -43.,   15.],       [  50.,    2.,   23.],       [  45.,   26.,   25.],       [  30.,   40.,   24.],       [  15.,   51.,   25.],       [ -11.,   44.,   24.],       [ -35.,   41.,   19.],       [ -44.,   23.,   24.],       [ -54.,    4.,   25.],       [ -46.,  -27.,   20.],       [ -28.,  -36.,   24.],       [  -9.,  -45.,   21.],       [  11.,  -44.,   28.],       [  33.,  -36.,   24.],       [  46.,  -26.,   27.],       [  53.,   -1.,   24.],       [  51.,   28.,   27.],       [  34.,   42.,   26.],       [   8.,   60.,   21.],       [ -18.,   51.,   26.],       [ -41.,   45.,   23.],       [ -56.,   22.,   27.],       [ -55.,   -2.,   21.],       [ -51.,  -22.,   27.],       [ -38.,  -43.,   21.],       [ -13.,  -55.,   23.],       [   9.,  -52.,   20.],       [  36.,  -49.,   20.],       [  48.,  -24.,   24.],       [  68.,    2.,   25.],       [  59.,   27.,   26.],       [  39.,   51.,   23.],       [  13.,   64.,   27.],       [ -19.,   58.,   20.],       [ -41.,   52.,   24.],       [ -58.,   27.,   28.],       [ -63.,   -5.,   19.],       [ -63.,  -26.,   26.],       [ -36.,  -53.,   25.],       [ -16.,  -63.,   21.],       [  12.,  -61.,   26.],       [  40.,  -46.,   19.],       [  59.,  -27.,   27.],       [  67.,   -1.,   26.],       [  68.,   33.,   25.],       [  44.,   52.,   28.],       [  16.,   72.,   27.],       [ -13.,   67.,   22.],       [ -46.,   52.,   21.],       [ -67.,   32.,   20.],       [ -73.,   -4.,   21.],       [ -68.,  -33.,   25.],       [ -48.,  -53.,   27.],       [ -13.,  -67.,   26.],       [  17.,  -75.,   21.],       [  41.,  -58.,   27.],       [  68.,  -34.,   28.],       [  74.,   -3.,   20.],       [  67.,   31.,   26.],       [  53.,   61.,   21.],       [  16.,   75.,   24.],       [ -23.,   73.,   26.],       [ -54.,   58.,   20.],       [ -67.,   36.,   28.],       [ -77.,    4.,   22.],       [ -68.,  -37.,   25.],       [ -46.,  -59.,   19.],       [ -14.,  -78.,   20.],       [  22.,  -74.,   24.],       [  52.,  -66.,   28.],       [  74.,  -30.,   27.],       [  82.,    0.,   20.],       [  73.,   40.,   21.],       [  57.,   69.,   19.],       [  14.,   81.,   28.],       [ -15.,   80.,   28.],       [ -51.,   67.,   20.],       [ -77.,   37.,   27.],       [ -90.,    2.,   24.],       [ -79.,  -39.,   26.],       [ -51.,  -71.,   28.],       [ -18.,  -88.,   19.],       [  22.,  -84.,   27.],       [  51.,  -72.,   25.],       [  79.,  -35.,   27.],       [  91.,   -4.,   23.],       [  81.,   39.,   20.],       [  53.,   68.,   21.],       [  17.,   86.,   21.],       [ -24.,   93.,   25.],       [ -61.,   68.,   22.],       [ -84.,   42.,   19.],       [ -89.,   -4.,   21.],       [ -86.,  -45.,   27.],       [ -56.,  -69.,   25.],       [ -20.,  -92.,   24.],       [  24.,  -96.,   27.],       [  54.,  -77.,   19.],       [  84.,  -45.,   26.],       [ 103.,   -2.,   28.],       [  88.,   46.,   20.],       [  65.,   73.,   22.],       [  24.,   93.,   24.],       [ -23.,   99.,   28.],       [ -61.,   79.,   21.],       [ -91.,   40.,   23.],       [ -99.,   -5.,   26.],       [ -94.,  -42.,   24.],       [ -66.,  -82.,   21.],       [ -18., -101.,   21.],       [  21.,  -93.,   22.],       [  66.,  -83.,   21.],       [  88.,  -45.,   28.],       [  48.,   -5.,   32.],       [  41.,   20.,   31.],       [  30.,   44.,   29.],       [  10.,   44.,   27.],       [  -9.,   53.,   26.],       [ -28.,   41.,   25.],       [ -48.,   18.,   27.],       [ -55.,    3.,   30.],       [ -48.,  -21.,   26.],       [ -31.,  -38.,   23.],       [ -14.,  -48.,   31.],       [  14.,  -53.,   26.],       [  29.,  -39.,   24.],       [  41.,  -25.,   23.],       [  55.,   -5.,   29.],       [  52.,   26.,   31.],       [  37.,   48.,   28.],       [  16.,   53.,   27.],       [ -10.,   60.,   24.],       [ -35.,   43.,   26.],       [ -50.,   22.,   30.],       [ -60.,    4.,   24.],       [ -53.,  -21.,   24.],       [ -38.,  -47.,   24.],       [  -9.,  -57.,   23.],       [  10.,  -56.,   27.],       [  33.,  -41.,   27.],       [  49.,  -24.,   27.],       [  67.,    3.,   27.],       [  57.,   23.,   30.],       [  44.,   54.,   30.],       [  15.,   67.,   32.],       [ -16.,   60.,   30.],       [ -36.,   47.,   30.],       [ -60.,   22.,   32.],       [ -68.,    4.,   23.],       [ -57.,  -23.,   24.],       [ -37.,  -48.,   29.],       [ -16.,  -67.,   26.],       [  11.,  -66.,   30.],       [  42.,  -46.,   32.],       [  53.,  -26.,   31.],       [  73.,   -2.,   29.],       [  64.,   32.,   23.],       [  44.,   58.,   25.],       [  20.,   70.,   29.],       [ -17.,   70.,   27.],       [ -44.,   58.,   30.],       [ -63.,   28.,   24.],       [ -68.,   -3.,   30.],       [ -68.,  -29.,   30.],       [ -47.,  -53.,   25.],       [ -13.,  -74.,   24.],       [  16.,  -66.,   26.],       [  49.,  -52.,   29.],       [  69.,  -30.,   24.],       [  74.,    3.,   23.],       [  66.,   35.,   29.],       [  50.,   58.,   32.],       [  22.,   72.,   30.],       [ -18.,   76.,   26.],       [ -51.,   61.,   32.],       [ -71.,   33.,   32.],       [ -78.,    1.,   31.],       [ -73.,  -33.,   24.],       [ -51.,  -66.,   29.],       [ -22.,  -79.,   30.],       [  15.,  -76.,   29.],       [  45.,  -63.,   30.],       [  69.,  -30.,   24.],       [  90.,   -1.,   27.],       [  78.,   35.,   26.],       [  58.,   64.,   29.],       [  20.,   85.,   25.],       [ -18.,   84.,   23.],       [ -52.,   66.,   31.],       [ -82.,   41.,   24.],       [ -86.,   -4.,   26.],       [ -82.,  -41.,   27.],       [ -52.,  -69.,   28.],       [ -23.,  -80.,   25.],       [  19.,  -80.,   27.],       [  58.,  -65.,   23.],       [  78.,  -34.,   28.],       [  94.,   -1.,   26.],       [  80.,   40.,   29.],       [  54.,   70.,   23.],       [  25.,   92.,   27.],       [ -17.,   88.,   29.],       [ -57.,   69.,   23.],       [ -82.,   37.,   25.],       [ -96.,    1.,   32.],       [ -86.,  -45.,   26.],       [ -58.,  -76.,   28.],       [ -24.,  -90.,   29.],       [  21.,  -89.,   24.],       [  59.,  -72.,   31.],       [  88.,  -44.,   31.],       [ 100.,    4.,   28.],       [  85.,   42.,   27.],       [  61.,   79.,   29.],       [  25.,   99.,   31.],       [ -18.,   96.,   24.],       [ -58.,   83.,   32.],       [ -88.,   43.,   27.],       [-100.,    2.,   31.],       [ -91.,  -42.,   28.],       [ -63.,  -74.,   28.],       [ -18.,  -98.,   25.],       [  24., -101.,   27.],       [  59.,  -80.,   32.],       [  94.,  -41.,   26.],       [  48.,   -1.,   27.],       [  43.,   23.,   30.],       [  34.,   37.,   36.],       [   6.,   48.,   27.],       [ -15.,   48.,   28.],       [ -27.,   39.,   31.],       [ -49.,   20.,   34.],       [ -46.,   -5.,   34.],       [ -49.,  -20.,   30.],       [ -35.,  -45.,   29.],       [ -16.,  -49.,   29.],       [   8.,  -51.,   31.],       [  31.,  -36.,   34.],       [  49.,  -23.,   30.],       [  59.,   -2.,   27.],       [  49.,   27.,   32.],       [  35.,   48.,   28.],       [  12.,   53.,   27.],       [  -9.,   58.,   36.],       [ -34.,   43.,   29.],       [ -56.,   28.,   28.],       [ -58.,   -5.,   34.],       [ -49.,  -26.,   29.],       [ -38.,  -42.,   34.],       [ -15.,  -52.,   30.],       [  16.,  -60.,   30.],       [  33.,  -49.,   35.],       [  50.,  -22.,   35.],       [  66.,   -3.,   34.],       [  56.,   27.,   29.],       [  42.,   54.,   34.],       [  14.,   65.,   34.],       [ -11.,   67.,   33.],       [ -40.,   49.,   29.],       [ -62.,   25.,   31.],       [ -69.,   -2.,   33.],       [ -59.,  -24.,   27.],       [ -41.,  -51.,   27.],       [ -10.,  -59.,   34.],       [  15.,  -59.,   27.],       [  44.,  -52.,   29.],       [  59.,  -28.,   29.],       [  66.,    1.,   28.],       [  68.,   26.,   36.],       [  39.,   56.,   33.],       [  13.,   67.,   28.],       [ -14.,   72.,   30.],       [ -45.,   54.,   34.],       [ -64.,   27.,   28.],       [ -75.,    2.,   36.],       [ -66.,  -35.,   34.],       [ -43.,  -52.,   30.],       [ -21.,  -71.,   35.],       [  13.,  -66.,   35.],       [  47.,  -54.,   29.],       [  62.,  -32.,   32.],       [  78.,    1.,   28.],       [  71.,   31.,   30.],       [  48.,   59.,   30.],       [  19.,   78.,   34.],       [ -16.,   73.,   30.],       [ -54.,   65.,   27.],       [ -74.,   32.,   31.],       [ -76.,    2.,   34.],       [ -68.,  -39.,   32.],       [ -49.,  -66.,   28.],       [ -14.,  -75.,   32.],       [  13.,  -75.,   36.],       [  48.,  -61.,   33.],       [  75.,  -36.,   28.],       [  88.,   -2.,   33.],       [  80.,   34.,   34.],       [  54.,   67.,   27.],       [  16.,   81.,   27.],       [ -17.,   87.,   30.],       [ -59.,   70.,   36.],       [ -79.,   33.,   35.],       [ -86.,    3.,   29.],       [ -81.,  -42.,   28.],       [ -54.,  -70.,   28.],       [ -17.,  -83.,   36.],       [  21.,  -81.,   30.],       [  57.,  -71.,   27.],       [  74.,  -37.,   31.],       [  89.,    2.,   36.],       [  80.,   43.,   34.],       [  52.,   72.,   31.],       [  23.,   92.,   31.],       [ -19.,   95.,   29.],       [ -57.,   68.,   35.],       [ -82.,   38.,   28.],       [ -95.,   -5.,   29.],       [ -84.,  -45.,   29.],       [ -59.,  -69.,   34.],       [ -19.,  -95.,   30.],       [  22.,  -92.,   29.],       [  59.,  -72.,   27.],       [  84.,  -43.,   35.],       [ 100.,   -1.,   29.],       [  91.,   47.,   30.],       [  65.,   82.,   29.],       [  24.,   98.,   35.],       [ -26.,  100.,   32.],       [ -60.,   80.,   29.],       [ -94.,   38.,   28.],       [ -96.,   -4.,   34.],       [ -93.,  -41.,   28.],       [ -65.,  -82.,   27.],       [ -18.,  -97.,   28.],       [  18.,  -97.,   35.],       [  65.,  -77.,   28.],       [  90.,  -43.,   29.],       [  49.,    2.,   32.],       [  45.,   21.,   37.],       [  28.,   42.,   39.],       [   9.,   46.,   34.],       [  -8.,   49.,   36.],       [ -32.,   39.,   39.],       [ -44.,   22.,   36.],       [ -54.,   -1.,   31.],       [ -43.,  -21.,   31.],       [ -27.,  -39.,   36.],       [ -10.,  -53.,   37.],       [  12.,  -50.,   35.],       [  35.,  -42.,   31.],       [  41.,  -20.,   32.],       [  60.,   -2.,   38.],       [  47.,   28.,   35.],       [  35.,   45.,   39.],       [  16.,   58.,   31.],       [ -13.,   57.,   38.],       [ -32.,   48.,   33.],       [ -57.,   26.,   39.],       [ -55.,   -4.,   33.],       [ -56.,  -26.,   31.],       [ -41.,  -43.,   36.],       [ -12.,  -53.,   32.],       [   8.,  -57.,   33.],       [  37.,  -42.,   39.],       [  56.,  -29.,   40.],       [  65.,   -5.,   31.],       [  58.,   23.,   38.],       [  40.,   51.,   39.],       [  13.,   67.,   40.],       [ -17.,   62.,   32.],       [ -37.,   52.,   36.],       [ -57.,   26.,   39.],       [ -65.,   -5.,   34.],       [ -56.,  -29.,   32.],       [ -42.,  -55.,   40.],       [ -16.,  -66.,   35.],       [  18.,  -62.,   32.],       [  35.,  -56.,   38.],       [  59.,  -24.,   39.],       [  67.,    0.,   40.],       [  60.,   27.,   31.],       [  40.,   58.,   37.],       [  14.,   70.,   35.],       [ -20.,   72.,   35.],       [ -46.,   55.,   33.],       [ -66.,   31.,   35.],       [ -77.,    1.,   33.],       [ -60.,  -35.,   31.],       [ -47.,  -61.,   32.],       [ -16.,  -65.,   39.],       [  18.,  -69.,   34.],       [  45.,  -61.,   37.],       [  68.,  -28.,   31.],       [  73.,    4.,   36.],       [  74.,   33.,   40.],       [  44.,   59.,   39.],       [  18.,   74.,   38.],       [ -16.,   80.,   40.],       [ -48.,   59.,   36.],       [ -67.,   33.,   32.],       [ -78.,   -1.,   38.],       [ -66.,  -30.,   31.],       [ -47.,  -59.,   35.],       [ -19.,  -72.,   39.],       [  20.,  -79.,   37.],       [  53.,  -60.,   31.],       [  75.,  -37.,   36.],       [  83.,    3.,   37.],       [  72.,   41.,   35.],       [  48.,   62.,   33.],       [  22.,   83.,   38.],       [ -15.,   82.,   35.],       [ -51.,   71.,   36.],       [ -74.,   37.,   31.],       [ -89.,   -1.,   40.],       [ -78.,  -35.,   38.],       [ -51.,  -70.,   40.],       [ -15.,  -87.,   36.],       [  14.,  -81.,   31.],       [  57.,  -65.,   33.],       [  75.,  -43.,   33.],       [  89.,   -4.,   40.],       [  80.,   36.,   33.],       [  56.,   75.,   39.],       [  16.,   88.,   39.],       [ -18.,   94.,   32.],       [ -55.,   67.,   34.],       [ -89.,   41.,   32.],       [ -96.,    3.,   34.],       [ -86.,  -38.,   35.],       [ -63.,  -70.,   36.],       [ -21.,  -91.,   40.],       [  17.,  -92.,   38.],       [  58.,  -78.,   40.],       [  81.,  -44.,   39.],       [  98.,   -2.,   40.],       [  94.,   44.,   40.],       [  66.,   82.,   40.],       [  19.,   99.,   35.],       [ -23.,   96.,   39.],       [ -58.,   74.,   33.],       [ -90.,   40.,   36.],       [ -99.,   -1.,   33.],       [ -90.,  -47.,   38.],       [ -62.,  -78.,   39.],       [ -22.,  -98.,   40.],       [  26.,  -96.,   35.],       [  62.,  -80.,   37.],       [  94.,  -49.,   35.],       [  50.,    1.,   37.],       [  42.,   26.,   37.],       [  34.,   40.,   39.],       [   8.,   49.,   43.],       [ -10.,   43.,   39.],       [ -36.,   39.,   37.],       [ -44.,   20.,   42.],       [ -49.,    0.,   36.],       [ -42.,  -23.,   43.],       [ -29.,  -40.,   43.],       [ -15.,  -51.,   42.],       [   8.,  -52.,   44.],       [  32.,  -37.,   44.],       [  49.,  -22.,   42.],       [  59.,    0.,   42.],       [  46.,   20.,   44.],       [  37.,   49.,   39.],       [  12.,   56.,   44.],       [ -12.,   60.,   37.],       [ -38.,   41.,   43.],       [ -52.,   20.,   39.],       [ -54.,    1.,   40.],       [ -54.,  -22.,   41.],       [ -32.,  -47.,   43.],       [ -16.,  -59.,   39.],       [  14.,  -60.,   35.],       [  38.,  -45.,   43.],       [  48.,  -22.,   40.],       [  62.,   -4.,   36.],       [  53.,   26.,   36.],       [  44.,   53.,   39.],       [  12.,   58.,   41.],       [ -11.,   63.,   42.],       [ -42.,   50.,   38.],       [ -56.,   30.,   36.],       [ -64.,    2.,   42.],       [ -62.,  -30.,   35.],       [ -42.,  -54.,   36.],       [ -18.,  -63.,   36.],       [  15.,  -67.,   39.],       [  44.,  -55.,   44.],       [  58.,  -30.,   35.],       [  67.,    0.,   39.],       [  66.,   35.,   38.],       [  48.,   51.,   35.],       [  16.,   71.,   39.],       [ -17.,   73.,   40.],       [ -43.,   52.,   35.],       [ -66.,   29.,   39.],       [ -70.,   -4.,   44.],       [ -66.,  -28.,   38.],       [ -49.,  -52.,   36.],       [ -18.,  -68.,   38.],       [  17.,  -66.,   37.],       [  44.,  -59.,   39.],       [  68.,  -30.,   35.],       [  83.,   -3.,   39.],       [  72.,   29.,   39.],       [  51.,   63.,   36.],       [  14.,   79.,   44.],       [ -19.,   76.,   41.],       [ -45.,   62.,   36.],       [ -67.,   33.,   39.],       [ -80.,    2.,   37.],       [ -70.,  -33.,   38.],       [ -45.,  -60.,   39.],       [ -14.,  -81.,   36.],       [  20.,  -78.,   36.],       [  45.,  -64.,   39.],       [  70.,  -32.,   44.],       [  90.,    3.,   42.],       [  74.,   40.,   36.],       [  51.,   64.,   39.],       [  22.,   86.,   38.],       [ -21.,   84.,   41.],       [ -53.,   71.,   42.],       [ -81.,   38.,   35.],       [ -87.,    2.,   40.],       [ -81.,  -39.,   36.],       [ -56.,  -69.,   41.],       [ -16.,  -82.,   40.],       [  15.,  -87.,   37.],       [  54.,  -66.,   36.],       [  77.,  -33.,   41.],       [  95.,   -3.,   38.],       [  78.,   36.,   43.],       [  57.,   68.,   41.],       [  22.,   92.,   35.],       [ -24.,   94.,   38.],       [ -61.,   77.,   37.],       [ -83.,   42.,   37.],       [ -91.,   -3.,   44.],       [ -87.,  -38.,   44.],       [ -60.,  -75.,   40.],       [ -23.,  -91.,   42.],       [  19.,  -86.,   37.],       [  58.,  -71.,   43.],       [  88.,  -45.,   38.],       [ 101.,    1.,   39.],       [  93.,   38.,   40.],       [  60.,   82.,   40.],       [  21.,   99.,   36.],       [ -24.,   95.,   35.],       [ -62.,   73.,   40.],       [ -86.,   44.,   44.],       [-105.,    4.,   40.],       [ -90.,  -42.,   35.],       [ -62.,  -80.,   42.],       [ -19.,  -98.,   39.],       [  19., -102.,   35.],       [  61.,  -82.,   35.],       [  89.,  -44.,   42.]])
        basis0 = BSplineBasis(7, np.array([-1.2,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.9,  2.8,  4.1,  5.3,  6.2,  7.3,  7.8,
        9. ,  9. ,  9. ,  9. ,  9. ,  9. ,  9.9]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.6,  3.2,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.1,  3.1,  3.9,  5. ,  5. ,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.insert_knot([1.406]*1, 0) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 23)
        vol2.insert_knot([1.713]*2, 0) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 25)
        vol2.insert_knot([1.793]*3, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 28)
        vol2.insert_knot([1.266]*4, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 32)
        vol2.insert_knot([5.810]*5, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 37)
        vol2.insert_knot([1.031]*6, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 43)
        vol2.insert_knot([1.857]*1, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 14)
        vol2.insert_knot([2.240]*2, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 16)
        vol2.insert_knot([1.517]*3, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 19)
        vol2.insert_knot([1.605]*4, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 23)
        vol2.insert_knot([1.811]*1, 2) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 19)
        vol2.insert_knot([2.108]*2, 2) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 21)
        vol2.insert_knot([3.013]*3, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 24)
        vol2.insert_knot([3.303]*4, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 28)
        vol2.insert_knot([1.230]*5, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 33)
        vol2.insert_knot([3.797]*6, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 39)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p6_C1_periodic(self):
        controlpoints = np.array([[  96.,    0.,   -2.],
       [  90.,   39.,   -2.],
       [  62.,   82.,   -1.],
       [  21.,   97.,    3.],
       [ -19.,   93.,   -1.],
       [ -60.,   74.,   -4.],
       [ -94.,   48.,   -3.],
       [ -99.,   -4.,   -2.],
       [ -91.,  -45.,   -1.],
       [ -65.,  -79.,    1.],
       [ -27.,  -95.,    3.],
       [  26., -102.,   -3.],
       [  61.,  -75.,    0.],
       [  85.,  -45.,   -3.]])
        basis0 = BSplineBasis(6, np.array([ -1.7,  -1.4,   0. ,   0. ,   0. ,   0. ,   1. ,   2. ,   3.1,   4.2,   4.8,   6.1,   6.6,
         8.1,   9.3,   9.6,  11. ,  11. ,  11. ,  11. ,  12. ,  13. ]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([4.059]*1) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 23)
        crv2.insert_knot([4.860]*2) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 25)
        crv2.insert_knot([2.746]*3) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([5.773]*4) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 32)
        crv2.insert_knot([8.477]*5) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 37)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p57_C1_periodic(self):
        controlpoints = np.array([[  57.,    4.,   -2.],       [  51.,   28.,    3.],       [  28.,   52.,    2.],       [   3.,   57.,    1.],       [ -31.,   49.,    2.],       [ -51.,   31.,   -3.],       [ -57.,   -3.,    0.],       [ -50.,  -30.,   -3.],       [ -32.,  -51.,    3.],       [   4.,  -58.,   -3.],       [  31.,  -51.,   -3.],       [  52.,  -33.,    0.],       [  64.,    4.,    1.],       [  59.,   31.,   -2.],       [  33.,   54.,    3.],       [  -3.,   68.,    4.],       [ -37.,   59.,   -1.],       [ -59.,   31.,   -2.],       [ -69.,    2.,   -2.],       [ -53.,  -36.,   -4.],       [ -36.,  -52.,   -4.],       [   2.,  -65.,   -3.],       [  30.,  -56.,   -5.],       [  51.,  -33.,    0.],       [  72.,   -5.,   -4.],       [  60.,   36.,    0.],       [  34.,   61.,   -3.],       [  -4.,   64.,   -3.],       [ -32.,   55.,   -5.],       [ -62.,   32.,    1.],       [ -72.,    1.,    1.],       [ -61.,  -37.,   -5.],       [ -39.,  -63.,    2.],       [   4.,  -68.,   -4.],       [  36.,  -62.,   -1.],       [  53.,  -36.,    0.],       [  73.,    1.,   -2.],       [  57.,   38.,    3.],       [  37.,   57.,   -4.],       [  -1.,   74.,    0.],       [ -41.,   63.,   -4.],       [ -63.,   38.,    4.],       [ -70.,   -5.,    1.],       [ -60.,  -37.,    3.],       [ -36.,  -60.,   -1.],       [   3.,  -77.,    2.],       [  38.,  -61.,   -1.],       [  60.,  -39.,    4.],       [  74.,   -5.,    2.],       [  62.,   35.,    3.],       [  39.,   64.,   -1.],       [   1.,   77.,   -2.],       [ -41.,   70.,    4.],       [ -68.,   39.,    2.],       [ -74.,    1.,    1.],       [ -70.,  -41.,   -3.],       [ -37.,  -62.,   -4.],       [   2.,  -79.,    0.],       [  34.,  -67.,   -4.],       [  69.,  -36.,    2.],       [  83.,    4.,   -2.],       [  72.,   36.,    1.],       [  36.,   70.,    3.],       [  -4.,   83.,    1.],       [ -36.,   72.,   -2.],       [ -75.,   37.,   -5.],       [ -80.,   -4.,    0.],       [ -68.,  -43.,    0.],       [ -44.,  -72.,    1.],       [   1.,  -78.,    1.],       [  42.,  -66.,    4.],       [  67.,  -38.,    4.],       [  87.,   -1.,   -3.],       [  68.,   40.,   -1.],       [  46.,   70.,    3.],       [  -5.,   81.,    4.],       [ -47.,   73.,    0.],       [ -69.,   40.,   -5.],       [ -86.,   -1.,    3.],       [ -76.,  -43.,   -1.],       [ -42.,  -75.,   -4.],       [  -1.,  -80.,    1.],       [  43.,  -77.,    1.],       [  68.,  -47.,    1.],       [  87.,    3.,   -4.],       [  77.,   48.,    0.],       [  41.,   78.,    3.],       [   3.,   91.,    3.],       [ -41.,   80.,    3.],       [ -80.,   46.,    1.],       [ -89.,    3.,   -2.],       [ -72.,  -48.,    2.],       [ -43.,  -77.,   -1.],       [   2.,  -88.,   -5.],       [  41.,  -73.,    0.],       [  72.,  -49.,    3.],       [  89.,   -2.,    0.],       [  82.,   47.,   -5.],       [  46.,   78.,    4.],       [   4.,   93.,    0.],       [ -50.,   81.,    0.],       [ -78.,   47.,   -4.],       [ -97.,    3.,   -5.],       [ -80.,  -49.,    4.],       [ -48.,  -79.,    0.],       [  -2.,  -91.,   -2.],       [  45.,  -82.,   -2.],       [  82.,  -50.,    3.],       [  94.,   -1.,    3.],       [  82.,   50.,    4.],       [  45.,   87.,   -1.],       [  -3.,   98.,    1.],       [ -50.,   86.,   -4.],       [ -82.,   49.,   -3.],       [ -94.,   -2.,   -4.],       [ -84.,  -50.,   -3.],       [ -48.,  -83.,    3.],       [  -4.,  -95.,    4.],       [  48.,  -83.,   -5.],       [  86.,  -52.,   -2.],       [ 103.,   -2.,   -3.],       [  89.,   46.,    1.],       [  53.,   84.,   -5.],       [  -5.,  101.,   -4.],       [ -47.,   85.,    0.],       [ -83.,   50.,   -5.],       [-102.,   -1.,   -4.],       [ -86.,  -50.,   -3.],       [ -52.,  -85.,    1.],       [  -2.,  -98.,    2.],       [  48.,  -92.,    0.],       [  85.,  -50.,   -2.]])
        basis0 = BSplineBasis(5, np.array([ -2.3,  -0.9,   0. ,   0. ,   0. ,   0.8,   2.1,   3.4,   3.9,   5.3,   5.6,   6.7,   7.7,
         9.1,  10. ,  10. ,  10. ,  10.8,  12.1]),1)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.1,  2.7,  4.3,  5. ,  5. ,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([7.961]*1, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 20)
        surf2.insert_knot([1.966]*2, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 22)
        surf2.insert_knot([7.029]*3, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 25)
        surf2.insert_knot([7.736]*4, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 29)
        surf2.insert_knot([2.230]*1, 1) # insert C5-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 19)
        surf2.insert_knot([0.872]*2, 1) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)
        surf2.insert_knot([1.127]*3, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 24)
        surf2.insert_knot([3.782]*4, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 28)
        surf2.insert_knot([2.868]*5, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 33)
        surf2.insert_knot([2.316]*6, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 39)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p677_C1_periodic(self):
        controlpoints = np.array([[  48.,   -4.,   -1.],       [  44.,   16.,    2.],       [  30.,   39.,    2.],       [  15.,   46.,    1.],       [ -16.,   52.,   -5.],       [ -30.,   37.,   -1.],       [ -49.,   25.,   -4.],       [ -51.,    3.,    4.],       [ -42.,  -21.,   -2.],       [ -36.,  -38.,   -3.],       [  -7.,  -49.,    1.],       [  10.,  -52.,   -2.],       [  30.,  -44.,    2.],       [  46.,  -19.,    0.],       [  51.,   -5.,    1.],       [  49.,   22.,    0.],       [  31.,   44.,    4.],       [  12.,   55.,   -4.],       [ -15.,   54.,    0.],       [ -30.,   45.,   -4.],       [ -50.,   26.,   -1.],       [ -53.,   -1.,   -3.],       [ -54.,  -20.,    4.],       [ -34.,  -46.,   -5.],       [ -17.,  -53.,   -2.],       [  13.,  -56.,   -1.],       [  37.,  -48.,   -5.],       [  49.,  -27.,   -5.],       [  56.,   -2.,   -2.],       [  58.,   26.,   -1.],       [  35.,   46.,   -5.],       [  18.,   58.,    0.],       [ -13.,   58.,   -4.],       [ -34.,   51.,   -5.],       [ -51.,   26.,   -3.],       [ -65.,   -5.,    4.],       [ -59.,  -23.,   -5.],       [ -42.,  -49.,    2.],       [ -11.,  -63.,    0.],       [  16.,  -57.,   -4.],       [  37.,  -49.,    2.],       [  54.,  -28.,   -3.],       [  69.,    1.,    4.],       [  57.,   26.,    1.],       [  46.,   52.,   -2.],       [  14.,   69.,   -5.],       [ -13.,   60.,    1.],       [ -40.,   52.,    1.],       [ -65.,   28.,   -4.],       [ -65.,    3.,    4.],       [ -58.,  -25.,    3.],       [ -41.,  -57.,   -2.],       [ -14.,  -62.,   -2.],       [  14.,  -67.,   -1.],       [  36.,  -55.,   -5.],       [  59.,  -24.,   -4.],       [  68.,    1.,   -4.],       [  64.,   35.,   -1.],       [  46.,   55.,   -5.],       [  14.,   74.,   -4.],       [ -14.,   69.,    1.],       [ -46.,   60.,   -1.],       [ -70.,   31.,    4.],       [ -73.,   -2.,    2.],       [ -66.,  -32.,    1.],       [ -49.,  -52.,   -3.],       [ -19.,  -66.,    0.],       [  13.,  -68.,   -2.],       [  46.,  -55.,    4.],       [  61.,  -28.,    2.],       [  76.,   -3.,    2.],       [  69.,   35.,   -3.],       [  52.,   62.,   -3.],       [  19.,   79.,    2.],       [ -17.,   71.,   -1.],       [ -47.,   64.,    2.],       [ -66.,   29.,    0.],       [ -82.,   -3.,   -1.],       [ -69.,  -33.,    0.],       [ -51.,  -57.,    4.],       [ -21.,  -73.,   -4.],       [  18.,  -72.,   -5.],       [  47.,  -66.,    2.],       [  66.,  -35.,    2.],       [  80.,   -4.,   -5.],       [  75.,   32.,    4.],       [  49.,   61.,   -2.],       [  13.,   77.,   -3.],       [ -16.,   81.,    2.],       [ -48.,   62.,    1.],       [ -72.,   36.,   -4.],       [ -80.,   -5.,   -1.],       [ -74.,  -35.,    1.],       [ -51.,  -67.,    3.],       [ -22.,  -86.,    4.],       [  22.,  -82.,   -5.],       [  47.,  -68.,   -2.],       [  75.,  -39.,    1.],       [  93.,   -2.,   -2.],       [  78.,   40.,    3.],       [  58.,   69.,    0.],       [  18.,   82.,    4.],       [ -18.,   88.,    3.],       [ -58.,   70.,   -3.],       [ -76.,   41.,    1.],       [ -88.,   -1.,   -1.],       [ -83.,  -36.,    1.],       [ -52.,  -66.,   -5.],       [ -21.,  -84.,   -3.],       [  23.,  -89.,    0.],       [  54.,  -67.,    0.],       [  79.,  -38.,    3.],       [  92.,    4.,   -2.],       [  80.,   41.,    4.],       [  59.,   69.,    0.],       [  20.,   94.,   -3.],       [ -22.,   90.,   -2.],       [ -55.,   77.,    1.],       [ -84.,   40.,   -3.],       [ -95.,   -2.,    2.],       [ -89.,  -45.,    3.],       [ -59.,  -70.,   -5.],       [ -18.,  -89.,   -2.],       [  26.,  -91.,   -1.],       [  60.,  -76.,   -2.],       [  82.,  -37.,    3.],       [  99.,    3.,    4.],       [  93.,   46.,   -2.],       [  59.,   82.,   -2.],       [  26.,   98.,   -4.],       [ -25.,   93.,   -4.],       [ -62.,   80.,    3.],       [ -91.,   46.,    4.],       [-105.,   -3.,   -5.],       [ -92.,  -45.,   -1.],       [ -61.,  -80.,    1.],       [ -22.,  -98.,    1.],       [  20., -101.,   -2.],       [  67.,  -80.,   -5.],       [  92.,  -42.,    0.],       [  48.,   -1.,    6.],       [  44.,   19.,    5.],       [  32.,   40.,   -1.],       [   8.,   50.,    4.],       [  -7.,   46.,    3.],       [ -36.,   43.,    8.],       [ -49.,   23.,    2.],       [ -47.,   -2.,    1.],       [ -43.,  -20.,    5.],       [ -29.,  -38.,    8.],       [  -8.,  -46.,    0.],       [  12.,  -52.,    6.],       [  29.,  -37.,    6.],       [  48.,  -21.,    6.],       [  59.,   -1.,    0.],       [  46.,   25.,   -1.],       [  37.,   48.,    8.],       [  12.,   56.,    7.],       [ -12.,   54.,    9.],       [ -31.,   41.,    0.],       [ -47.,   26.,    2.],       [ -55.,   -3.,    2.],       [ -49.,  -25.,    8.],       [ -37.,  -39.,    6.],       [  -9.,  -52.,    7.],       [  12.,  -53.,    8.],       [  34.,  -48.,    1.],       [  48.,  -27.,    9.],       [  60.,   -3.,    8.],       [  58.,   28.,    3.],       [  41.,   46.,    9.],       [   9.,   56.,    5.],       [ -15.,   56.,    3.],       [ -38.,   47.,    3.],       [ -51.,   23.,    3.],       [ -61.,    1.,    2.],       [ -56.,  -27.,    8.],       [ -43.,  -46.,    3.],       [  -9.,  -63.,    8.],       [  15.,  -56.,    1.],       [  42.,  -49.,    2.],       [  55.,  -29.,    2.],       [  71.,   -1.,    5.],       [  60.,   25.,    4.],       [  43.,   57.,    0.],       [  15.,   61.,    9.],       [ -13.,   63.,    1.],       [ -38.,   55.,    7.],       [ -61.,   24.,    4.],       [ -66.,    2.,   -1.],       [ -58.,  -27.,    4.],       [ -38.,  -53.,    6.],       [ -11.,  -64.,    8.],       [  16.,  -63.,    0.],       [  40.,  -53.,    6.],       [  62.,  -29.,    1.],       [  70.,    2.,    0.],       [  69.,   34.,    4.],       [  42.,   53.,    9.],       [  19.,   70.,    3.],       [ -17.,   73.,    4.],       [ -44.,   53.,    7.],       [ -68.,   29.,    0.],       [ -69.,   -3.,    5.],       [ -68.,  -32.,    3.],       [ -44.,  -61.,    6.],       [ -17.,  -68.,   -1.],       [  13.,  -71.,    5.],       [  48.,  -56.,    9.],       [  64.,  -32.,    1.],       [  74.,    1.,    6.],       [  69.,   37.,    3.],       [  50.,   62.,    0.],       [  21.,   72.,    7.],       [ -15.,   77.,    2.],       [ -53.,   58.,    2.],       [ -66.,   30.,    9.],       [ -80.,    3.,    2.],       [ -67.,  -37.,    2.],       [ -48.,  -66.,    0.],       [ -23.,  -79.,    6.],       [  18.,  -80.,    5.],       [  49.,  -66.,    0.],       [  72.,  -33.,    1.],       [  86.,   -2.,   -1.],       [  77.,   34.,    1.],       [  53.,   64.,    7.],       [  22.,   85.,    4.],       [ -15.,   77.,    9.],       [ -50.,   64.,    4.],       [ -74.,   33.,    3.],       [ -81.,   -5.,    4.],       [ -73.,  -34.,    7.],       [ -57.,  -65.,    2.],       [ -17.,  -86.,    6.],       [  14.,  -77.,    5.],       [  52.,  -67.,    0.],       [  73.,  -37.,    6.],       [  85.,    1.,    3.],       [  77.,   38.,    0.],       [  58.,   73.,    1.],       [  22.,   90.,    0.],       [ -23.,   90.,    3.],       [ -58.,   72.,   -1.],       [ -84.,   37.,    9.],       [ -88.,   -2.,   -1.],       [ -78.,  -42.,    8.],       [ -54.,  -75.,    9.],       [ -19.,  -91.,    4.],       [  22.,  -84.,    3.],       [  53.,  -72.,    1.],       [  83.,  -36.,    2.],       [  95.,    0.,    5.],       [  83.,   37.,    4.],       [  60.,   75.,    7.],       [  18.,   87.,    4.],       [ -26.,   87.,    2.],       [ -59.,   69.,    7.],       [ -84.,   41.,   -1.],       [ -94.,   -3.,    5.],       [ -87.,  -46.,    5.],       [ -55.,  -72.,    5.],       [ -22.,  -91.,   -1.],       [  20.,  -96.,    3.],       [  56.,  -78.,    5.],       [  87.,  -44.,    4.],       [  98.,    1.,    8.],       [  90.,   40.,    2.],       [  66.,   73.,    6.],       [  19.,   94.,    6.],       [ -27.,  101.,    5.],       [ -59.,   81.,    6.],       [ -86.,   44.,    7.],       [ -97.,    4.,    8.],       [ -91.,  -47.,    1.],       [ -62.,  -74.,    7.],       [ -27., -100.,   -1.],       [  18., -102.,    5.],       [  61.,  -74.,    0.],       [  85.,  -47.,    7.],       [  48.,    3.,    7.],       [  42.,   24.,    7.],       [  32.,   44.,   10.],       [  11.,   51.,    9.],       [ -13.,   48.,    9.],       [ -27.,   43.,   12.],       [ -43.,   20.,   10.],       [ -51.,   -1.,   11.],       [ -43.,  -21.,    7.],       [ -28.,  -35.,    9.],       [ -11.,  -46.,    8.],       [  12.,  -45.,   11.],       [  29.,  -44.,   13.],       [  47.,  -24.,   13.],       [  57.,    3.,   12.],       [  49.,   28.,   10.],       [  34.,   41.,    8.],       [  10.,   50.,   13.],       [ -16.,   51.,   11.],       [ -33.,   41.,   10.],       [ -49.,   28.,   13.],       [ -56.,    1.,    4.],       [ -50.,  -27.,    9.],       [ -39.,  -44.,   13.],       [ -18.,  -57.,    7.],       [  13.,  -54.,    6.],       [  35.,  -39.,   13.],       [  46.,  -27.,   11.],       [  62.,    3.,    6.],       [  54.,   30.,    8.],       [  40.,   49.,   12.],       [  13.,   57.,    8.],       [ -17.,   56.,    9.],       [ -37.,   46.,   11.],       [ -59.,   24.,    9.],       [ -66.,   -3.,   12.],       [ -55.,  -31.,   12.],       [ -40.,  -49.,    8.],       [ -17.,  -57.,    9.],       [   8.,  -60.,    7.],       [  39.,  -48.,   11.],       [  54.,  -25.,    6.],       [  65.,   -4.,    4.],       [  62.,   30.,   10.],       [  40.,   56.,    6.],       [  11.,   63.,    8.],       [ -12.,   61.,    7.],       [ -39.,   48.,    7.],       [ -57.,   32.,   10.],       [ -64.,    1.,    4.],       [ -56.,  -31.,   11.],       [ -40.,  -55.,    7.],       [ -20.,  -61.,   12.],       [  19.,  -63.,   10.],       [  39.,  -49.,   11.],       [  60.,  -26.,    5.],       [  73.,    2.,   13.],       [  64.,   35.,    9.],       [  42.,   52.,    4.],       [  16.,   68.,    4.],       [ -19.,   73.,    6.],       [ -45.,   61.,   13.],       [ -65.,   26.,    7.],       [ -76.,    2.,    4.],       [ -67.,  -31.,    8.],       [ -48.,  -54.,    9.],       [ -12.,  -67.,    7.],       [  13.,  -74.,   12.],       [  40.,  -60.,    7.],       [  62.,  -30.,   13.],       [  82.,    4.,    5.],       [  74.,   38.,    9.],       [  46.,   55.,    6.],       [  14.,   73.,   10.],       [ -14.,   72.,   13.],       [ -47.,   61.,   11.],       [ -70.,   31.,   11.],       [ -79.,   -1.,    5.],       [ -70.,  -30.,    7.],       [ -53.,  -63.,    5.],       [ -23.,  -78.,    6.],       [  18.,  -77.,   12.],       [  44.,  -66.,   10.],       [  66.,  -38.,   12.],       [  82.,   -2.,    4.],       [  70.,   37.,    4.],       [  47.,   61.,    5.],       [  22.,   80.,    5.],       [ -15.,   81.,    5.],       [ -57.,   62.,   12.],       [ -71.,   35.,   12.],       [ -88.,   -1.,   11.],       [ -78.,  -39.,    9.],       [ -49.,  -70.,   12.],       [ -24.,  -82.,    4.],       [  20.,  -82.,    9.],       [  53.,  -64.,    9.],       [  76.,  -37.,    6.],       [  91.,    3.,    4.],       [  77.,   37.,    7.],       [  59.,   67.,   10.],       [  23.,   81.,   13.],       [ -22.,   83.,    9.],       [ -61.,   72.,   12.],       [ -79.,   43.,   13.],       [ -88.,    3.,   10.],       [ -78.,  -43.,    5.],       [ -53.,  -73.,   12.],       [ -24.,  -90.,    7.],       [  23.,  -89.,    5.],       [  54.,  -71.,    6.],       [  81.,  -35.,    8.],       [  97.,   -2.,   12.],       [  89.,   36.,   10.],       [  54.,   74.,    4.],       [  18.,   89.,   10.],       [ -26.,   92.,    4.],       [ -59.,   72.,    7.],       [ -85.,   36.,    7.],       [ -93.,    3.,   13.],       [ -85.,  -39.,    5.],       [ -55.,  -70.,    7.],       [ -23.,  -88.,   13.],       [  22.,  -91.,   11.],       [  60.,  -71.,   12.],       [  81.,  -46.,   13.],       [  95.,    0.,    4.],       [  85.,   40.,    7.],       [  58.,   82.,   11.],       [  21.,   98.,    4.],       [ -18.,  100.,    6.],       [ -60.,   80.,    9.],       [ -89.,   43.,   13.],       [ -96.,    4.,   13.],       [ -89.,  -40.,    8.],       [ -61.,  -83.,   13.],       [ -23., -100.,   10.],       [  25.,  -93.,    8.],       [  59.,  -79.,    4.],       [  94.,  -43.,   10.],       [  53.,   -3.,   10.],       [  49.,   18.,    9.],       [  33.,   34.,   13.],       [  13.,   48.,   16.],       [  -8.,   46.,   11.],       [ -32.,   38.,   13.],       [ -48.,   16.,    9.],       [ -54.,    4.,   11.],       [ -42.,  -27.,   14.],       [ -29.,  -40.,   13.],       [  -7.,  -53.,   16.],       [   8.,  -49.,   11.],       [  35.,  -37.,   13.],       [  41.,  -21.,   16.],       [  50.,    2.,   16.],       [  48.,   22.,   10.],       [  32.,   39.,   16.],       [  14.,   50.,   16.],       [  -8.,   56.,   10.],       [ -37.,   44.,   17.],       [ -49.,   27.,   12.],       [ -58.,   -3.,   11.],       [ -47.,  -26.,   13.],       [ -37.,  -44.,   12.],       [ -10.,  -59.,   10.],       [  11.,  -56.,   13.],       [  33.,  -43.,    9.],       [  53.,  -26.,   17.],       [  59.,    3.,   15.],       [  58.,   30.,   16.],       [  34.,   51.,    9.],       [  13.,   62.,   16.],       [ -18.,   63.,   10.],       [ -40.,   51.,    8.],       [ -58.,   22.,   10.],       [ -59.,   -2.,   10.],       [ -53.,  -30.,   17.],       [ -36.,  -51.,   17.],       [ -17.,  -62.,   16.],       [  17.,  -58.,   17.],       [  41.,  -44.,   13.],       [  58.,  -23.,   17.],       [  62.,    2.,   10.],       [  60.,   28.,   13.],       [  40.,   53.,   18.],       [  18.,   62.,   18.],       [ -18.,   65.,   13.],       [ -38.,   50.,   15.],       [ -60.,   26.,   16.],       [ -65.,    3.,   10.],       [ -58.,  -31.,   10.],       [ -47.,  -53.,   16.],       [ -12.,  -65.,    8.],       [  10.,  -64.,   16.],       [  45.,  -56.,   10.],       [  60.,  -34.,   11.],       [  75.,   -2.,   11.],       [  61.,   30.,   17.],       [  48.,   59.,    9.],       [  15.,   73.,   11.],       [ -17.,   66.,   10.],       [ -47.,   52.,   17.],       [ -61.,   29.,   13.],       [ -76.,    3.,   15.],       [ -64.,  -28.,   14.],       [ -48.,  -52.,   11.],       [ -20.,  -71.,   10.],       [  19.,  -67.,    9.],       [  44.,  -57.,    9.],       [  65.,  -30.,   14.],       [  79.,   -2.,   15.],       [  67.,   29.,   12.],       [  46.,   62.,    9.],       [  17.,   77.,   15.],       [ -17.,   75.,   11.],       [ -49.,   56.,   14.],       [ -68.,   32.,   15.],       [ -75.,    4.,   15.],       [ -73.,  -32.,   17.],       [ -44.,  -61.,   10.],       [ -18.,  -77.,   15.],       [  20.,  -78.,   18.],       [  52.,  -64.,   12.],       [  71.,  -38.,   13.],       [  86.,    2.,   14.],       [  78.,   32.,   11.],       [  51.,   65.,   11.],       [  22.,   77.,   13.],       [ -18.,   77.,   10.],       [ -48.,   65.,   13.],       [ -75.,   32.,   14.],       [ -79.,   -1.,   12.],       [ -80.,  -40.,   17.],       [ -57.,  -67.,   15.],       [ -21.,  -80.,   10.],       [  20.,  -80.,   10.],       [  51.,  -70.,   13.],       [  72.,  -33.,   13.],       [  88.,    1.,   17.],       [  83.,   41.,   16.],       [  58.,   74.,   12.],       [  18.,   82.,   10.],       [ -24.,   86.,   15.],       [ -61.,   72.,   13.],       [ -80.,   36.,   12.],       [ -86.,    4.,    8.],       [ -83.,  -41.,    9.],       [ -59.,  -69.,   16.],       [ -18.,  -92.,   15.],       [  19.,  -91.,   10.],       [  53.,  -69.,   15.],       [  79.,  -36.,   14.],       [  90.,    2.,    9.],       [  87.,   39.,    8.],       [  58.,   73.,   10.],       [  20.,   89.,    9.],       [ -22.,   91.,   14.],       [ -57.,   73.,   15.],       [ -82.,   41.,    9.],       [ -96.,   -3.,   15.],       [ -82.,  -37.,   10.],       [ -58.,  -75.,   16.],       [ -17.,  -97.,   12.],       [  24.,  -91.,   10.],       [  63.,  -73.,   14.],       [  83.,  -38.,   14.],       [  96.,   -5.,   16.],       [  93.,   47.,    9.],       [  57.,   75.,   14.],       [  20.,   97.,   12.],       [ -23.,   95.,   17.],       [ -60.,   76.,   11.],       [ -94.,   42.,   16.],       [-104.,   -2.,   10.],       [ -88.,  -41.,    9.],       [ -62.,  -84.,   13.],       [ -24.,  -98.,   17.],       [  17., -101.,   16.],       [  66.,  -76.,   12.],       [  92.,  -46.,   11.],       [  49.,    1.,   21.],       [  40.,   24.,   22.],       [  34.,   43.,   13.],       [  11.,   48.,   12.],       [ -14.,   50.,   16.],       [ -32.,   39.,   20.],       [ -41.,   23.,   16.],       [ -49.,   -2.,   14.],       [ -45.,  -24.,   17.],       [ -35.,  -39.,   14.],       [ -17.,  -53.,   19.],       [  10.,  -46.,   16.],       [  28.,  -45.,   22.],       [  45.,  -18.,   20.],       [  58.,   -3.,   19.],       [  51.,   25.,   21.],       [  32.,   39.,   22.],       [  11.,   57.,   22.],       [ -14.,   50.,   22.],       [ -31.,   38.,   14.],       [ -51.,   20.,   22.],       [ -55.,   -1.,   15.],       [ -55.,  -23.,   16.],       [ -38.,  -49.,   14.],       [ -16.,  -56.,   22.],       [  15.,  -57.,   13.],       [  32.,  -47.,   15.],       [  49.,  -21.,   12.],       [  56.,   -2.,   18.],       [  53.,   25.,   17.],       [  42.,   45.,   20.],       [  14.,   59.,   12.],       [ -12.,   61.,   17.],       [ -40.,   45.,   16.],       [ -52.,   23.,   21.],       [ -59.,    3.,   14.],       [ -60.,  -31.,   13.],       [ -43.,  -45.,   22.],       [ -12.,  -62.,   15.],       [  10.,  -57.,   15.],       [  41.,  -52.,   15.],       [  57.,  -23.,   19.],       [  70.,   -2.,   13.],       [  57.,   30.,   15.],       [  40.,   48.,   20.],       [  15.,   60.,   19.],       [ -11.,   60.,   20.],       [ -43.,   47.,   15.],       [ -57.,   28.,   13.],       [ -72.,   -3.,   19.],       [ -63.,  -31.,   17.],       [ -41.,  -51.,   16.],       [ -18.,  -68.,   18.],       [  16.,  -69.,   20.],       [  46.,  -48.,   13.],       [  64.,  -33.,   14.],       [  73.,    1.,   18.],       [  60.,   34.,   19.],       [  49.,   56.,   18.],       [  19.,   68.,   13.],       [ -21.,   72.,   13.],       [ -48.,   52.,   13.],       [ -62.,   26.,   20.],       [ -74.,    1.,   15.],       [ -61.,  -31.,   21.],       [ -42.,  -53.,   13.],       [ -19.,  -67.,   18.],       [  18.,  -74.,   17.],       [  40.,  -61.,   17.],       [  62.,  -32.,   22.],       [  79.,    3.,   14.],       [  72.,   32.,   16.],       [  53.,   64.,   16.],       [  17.,   80.,   20.],       [ -17.,   77.,   18.],       [ -49.,   60.,   20.],       [ -68.,   37.,   14.],       [ -76.,    2.,   14.],       [ -69.,  -34.,   15.],       [ -52.,  -63.,   22.],       [ -14.,  -80.,   14.],       [  14.,  -76.,   18.],       [  44.,  -57.,   21.],       [  74.,  -37.,   14.],       [  81.,   -2.,   17.],       [  78.,   33.,   17.],       [  55.,   62.,   20.],       [  14.,   83.,   16.],       [ -14.,   83.,   22.],       [ -48.,   65.,   15.],       [ -72.,   35.,   19.],       [ -88.,   -1.,   17.],       [ -79.,  -36.,   20.],       [ -55.,  -61.,   18.],       [ -22.,  -80.,   17.],       [  17.,  -79.,   17.],       [  52.,  -68.,   22.],       [  74.,  -41.,   19.],       [  89.,    2.,   20.],       [  84.,   36.,   20.],       [  50.,   69.,   22.],       [  15.,   87.,   12.],       [ -22.,   82.,   22.],       [ -57.,   68.,   21.],       [ -79.,   33.,   18.],       [ -89.,    2.,   14.],       [ -83.,  -40.,   17.],       [ -53.,  -67.,   16.],       [ -16.,  -86.,   20.],       [  21.,  -90.,   20.],       [  59.,  -73.,   16.],       [  76.,  -44.,   21.],       [  94.,   -3.,   14.],       [  84.,   36.,   16.],       [  59.,   70.,   21.],       [  17.,   90.,   16.],       [ -19.,   91.,   19.],       [ -63.,   76.,   19.],       [ -82.,   44.,   13.],       [ -94.,   -2.,   20.],       [ -85.,  -40.,   15.],       [ -60.,  -76.,   21.],       [ -19.,  -96.,   13.],       [  17.,  -94.,   18.],       [  56.,  -70.,   22.],       [  86.,  -39.,   16.],       [ 104.,   -1.,   21.],       [  92.,   44.,   17.],       [  59.,   75.,   21.],       [  20.,   95.,   18.],       [ -22.,   97.,   20.],       [ -65.,   82.,   15.],       [ -87.,   40.,   13.],       [-101.,    2.,   19.],       [ -95.,  -43.,   20.],       [ -61.,  -79.,   20.],       [ -20.,  -93.,   22.],       [  17.,  -98.,   16.],       [  60.,  -78.,   22.],       [  90.,  -44.,   13.],       [  45.,    2.,   25.],       [  41.,   19.,   18.],       [  27.,   42.,   25.],       [  13.,   44.,   26.],       [ -13.,   44.,   19.],       [ -36.,   40.,   23.],       [ -45.,   25.,   21.],       [ -51.,    3.,   25.],       [ -45.,  -22.,   26.],       [ -31.,  -43.,   19.],       [  -8.,  -50.,   20.],       [   7.,  -54.,   19.],       [  28.,  -43.,   25.],       [  48.,  -25.,   23.],       [  59.,    2.,   20.],       [  45.,   21.,   23.],       [  36.,   41.,   22.],       [  15.,   51.,   25.],       [ -12.,   54.,   21.],       [ -33.,   40.,   19.],       [ -47.,   23.,   27.],       [ -60.,   -4.,   18.],       [ -53.,  -21.,   19.],       [ -38.,  -44.,   21.],       [ -11.,  -56.,   26.],       [   8.,  -56.,   19.],       [  29.,  -46.,   21.],       [  49.,  -27.,   25.],       [  62.,   -1.,   21.],       [  59.,   28.,   17.],       [  34.,   48.,   25.],       [  16.,   61.,   20.],       [  -9.,   56.,   26.],       [ -36.,   52.,   19.],       [ -56.,   24.,   18.],       [ -65.,    2.,   25.],       [ -59.,  -24.,   19.],       [ -37.,  -48.,   25.],       [ -13.,  -57.,   23.],       [  11.,  -59.,   25.],       [  42.,  -51.,   26.],       [  57.,  -22.,   18.],       [  69.,   -3.,   17.],       [  56.,   28.,   20.],       [  40.,   55.,   20.],       [  13.,   67.,   25.],       [ -11.,   60.,   26.],       [ -41.,   52.,   19.],       [ -62.,   28.,   25.],       [ -67.,    1.,   22.],       [ -63.,  -26.,   19.],       [ -44.,  -52.,   24.],       [ -17.,  -61.,   20.],       [  16.,  -63.,   23.],       [  41.,  -52.,   22.],       [  55.,  -29.,   21.],       [  71.,    0.,   26.],       [  64.,   26.,   22.],       [  40.,   51.,   20.],       [  12.,   69.,   23.],       [ -19.,   73.,   24.],       [ -46.,   58.,   18.],       [ -67.,   30.,   24.],       [ -68.,   -4.,   21.],       [ -69.,  -37.,   17.],       [ -43.,  -53.,   23.],       [ -19.,  -72.,   20.],       [  19.,  -72.,   19.],       [  46.,  -59.,   22.],       [  65.,  -31.,   25.],       [  73.,    2.,   22.],       [  68.,   34.,   26.],       [  51.,   56.,   27.],       [  20.,   72.,   18.],       [ -14.,   79.,   24.],       [ -51.,   57.,   22.],       [ -68.,   33.,   24.],       [ -78.,   -5.,   23.],       [ -73.,  -35.,   21.],       [ -50.,  -56.,   20.],       [ -15.,  -81.,   18.],       [  19.,  -75.,   26.],       [  47.,  -61.,   25.],       [  74.,  -30.,   25.],       [  81.,    0.,   24.],       [  75.,   35.,   17.],       [  49.,   62.,   17.],       [  20.,   83.,   23.],       [ -19.,   84.,   18.],       [ -54.,   67.,   19.],       [ -78.,   41.,   22.],       [ -81.,    3.,   24.],       [ -79.,  -35.,   26.],       [ -50.,  -62.,   26.],       [ -14.,  -87.,   26.],       [  16.,  -84.,   17.],       [  55.,  -62.,   26.],       [  71.,  -34.,   17.],       [  87.,    1.,   19.],       [  84.,   42.,   24.],       [  52.,   73.,   25.],       [  16.,   88.,   22.],       [ -16.,   86.,   20.],       [ -55.,   73.,   21.],       [ -81.,   36.,   20.],       [ -89.,   -1.,   24.],       [ -85.,  -44.,   25.],       [ -54.,  -71.,   25.],       [ -20.,  -87.,   19.],       [  16.,  -82.,   24.],       [  57.,  -75.,   18.],       [  77.,  -41.,   18.],       [  96.,   -5.,   21.],       [  85.,   36.,   18.],       [  60.,   76.,   18.],       [  19.,   89.,   18.],       [ -24.,   88.,   19.],       [ -59.,   71.,   18.],       [ -90.,   37.,   22.],       [ -99.,   -3.,   23.],       [ -81.,  -42.,   22.],       [ -58.,  -72.,   23.],       [ -17.,  -90.,   19.],       [  19.,  -93.,   23.],       [  54.,  -76.,   17.],       [  83.,  -40.,   24.],       [ 100.,   -3.,   26.],       [  92.,   42.,   25.],       [  62.,   82.,   19.],       [  23.,   94.,   25.],       [ -26.,   97.,   23.],       [ -65.,   76.,   22.],       [ -91.,   47.,   17.],       [-100.,    1.,   18.],       [ -87.,  -42.,   23.],       [ -62.,  -76.,   23.],       [ -21.,  -99.,   25.],       [  23.,  -94.,   19.],       [  60.,  -80.,   19.],       [  89.,  -46.,   25.],       [  52.,   -5.,   30.],       [  47.,   19.,   26.],       [  30.,   39.,   23.],       [  12.,   44.,   28.],       [ -11.,   49.,   29.],       [ -28.,   34.,   28.],       [ -46.,   17.,   28.],       [ -48.,   -2.,   28.],       [ -42.,  -18.,   23.],       [ -28.,  -42.,   30.],       [ -11.,  -50.,   27.],       [  13.,  -50.,   25.],       [  28.,  -39.,   27.],       [  40.,  -19.,   29.],       [  57.,   -4.,   29.],       [  45.,   24.,   30.],       [  32.,   39.,   27.],       [  17.,   58.,   22.],       [ -13.,   57.,   29.],       [ -36.,   42.,   24.],       [ -47.,   21.,   24.],       [ -53.,    1.,   31.],       [ -48.,  -27.,   30.],       [ -39.,  -45.,   24.],       [ -14.,  -57.,   27.],       [   8.,  -53.,   23.],       [  30.,  -41.,   31.],       [  48.,  -21.,   28.],       [  59.,    3.,   25.],       [  56.,   30.,   25.],       [  33.,   47.,   27.],       [  14.,   64.,   24.],       [ -15.,   59.,   28.],       [ -39.,   46.,   27.],       [ -60.,   22.,   24.],       [ -60.,   -1.,   28.],       [ -54.,  -29.,   24.],       [ -36.,  -49.,   26.],       [ -12.,  -57.,   26.],       [  16.,  -63.,   26.],       [  38.,  -48.,   30.],       [  55.,  -26.,   27.],       [  64.,   -3.,   25.],       [  61.,   31.,   24.],       [  46.,   49.,   22.],       [  18.,   62.,   23.],       [ -13.,   67.,   22.],       [ -44.,   54.,   30.],       [ -61.,   24.,   22.],       [ -63.,    0.,   21.],       [ -59.,  -25.,   25.],       [ -38.,  -57.,   28.],       [ -11.,  -67.,   29.],       [  17.,  -66.,   29.],       [  42.,  -48.,   29.],       [  60.,  -33.,   28.],       [  76.,    0.,   22.],       [  60.,   35.,   24.],       [  49.,   56.,   22.],       [  18.,   66.,   30.],       [ -19.,   70.,   22.],       [ -44.,   61.,   30.],       [ -66.,   33.,   26.],       [ -69.,    0.,   23.],       [ -71.,  -36.,   21.],       [ -42.,  -60.,   30.],       [ -21.,  -73.,   27.],       [  12.,  -73.,   27.],       [  47.,  -59.,   28.],       [  67.,  -30.,   28.],       [  78.,   -2.,   24.],       [  67.,   32.,   22.],       [  44.,   60.,   29.],       [  14.,   75.,   23.],       [ -14.,   73.,   24.],       [ -48.,   61.,   26.],       [ -72.,   31.,   30.],       [ -75.,    1.,   23.],       [ -75.,  -32.,   29.],       [ -50.,  -60.,   31.],       [ -20.,  -74.,   24.],       [  12.,  -74.,   24.],       [  53.,  -61.,   25.],       [  73.,  -34.,   25.],       [  79.,    1.,   28.],       [  77.,   35.,   25.],       [  50.,   64.,   23.],       [  21.,   82.,   27.],       [ -23.,   77.,   26.],       [ -57.,   64.,   22.],       [ -72.,   35.,   21.],       [ -84.,    0.,   29.],       [ -74.,  -41.,   22.],       [ -53.,  -69.,   29.],       [ -18.,  -81.,   29.],       [  18.,  -85.,   24.],       [  55.,  -62.,   25.],       [  71.,  -37.,   30.],       [  93.,   -3.,   26.],       [  82.,   35.,   26.],       [  56.,   72.,   29.],       [  19.,   88.,   26.],       [ -18.,   85.,   22.],       [ -53.,   67.,   29.],       [ -81.,   43.,   28.],       [ -90.,    1.,   30.],       [ -78.,  -36.,   23.],       [ -53.,  -74.,   29.],       [ -18.,  -91.,   28.],       [  24.,  -91.,   23.],       [  51.,  -74.,   30.],       [  78.,  -41.,   23.],       [  98.,   -3.,   22.],       [  89.,   36.,   26.],       [  57.,   76.,   23.],       [  19.,   90.,   24.],       [ -21.,   89.,   24.],       [ -63.,   77.,   29.],       [ -87.,   42.,   29.],       [ -96.,   -2.,   29.],       [ -88.,  -42.,   26.],       [ -62.,  -70.,   26.],       [ -26.,  -98.,   22.],       [  17.,  -88.,   29.],       [  59.,  -72.,   25.],       [  87.,  -40.,   25.],       [  95.,   -5.,   27.],       [  88.,   43.,   28.],       [  64.,   76.,   25.],       [  25.,  101.,   29.],       [ -22.,   98.,   22.],       [ -63.,   77.,   22.],       [ -93.,   39.,   31.],       [-104.,    1.,   25.],       [ -93.,  -40.,   22.],       [ -59.,  -75.,   23.],       [ -25., -101.,   25.],       [  26., -100.,   25.],       [  62.,  -75.,   30.],       [  92.,  -40.,   22.],       [  51.,    4.,   30.],       [  41.,   23.,   33.],       [  27.,   43.,   32.],       [  14.,   47.,   29.],       [ -11.,   51.,   30.],       [ -27.,   34.,   35.],       [ -42.,   20.,   33.],       [ -48.,    3.,   29.],       [ -42.,  -21.,   32.],       [ -31.,  -40.,   31.],       [ -11.,  -46.,   35.],       [  15.,  -45.,   27.],       [  32.,  -44.,   34.],       [  43.,  -25.,   34.],       [  55.,   -1.,   29.],       [  53.,   29.,   30.],       [  31.,   39.,   35.],       [   8.,   52.,   29.],       [  -9.,   50.,   30.],       [ -37.,   47.,   29.],       [ -48.,   28.,   30.],       [ -54.,    1.,   28.],       [ -47.,  -20.,   28.],       [ -38.,  -49.,   28.],       [ -18.,  -51.,   27.],       [   9.,  -56.,   33.],       [  30.,  -48.,   35.],       [  50.,  -28.,   26.],       [  60.,    1.,   31.],       [  52.,   28.,   29.],       [  42.,   52.,   28.],       [  17.,   57.,   34.],       [ -18.,   64.,   29.],       [ -38.,   44.,   28.],       [ -58.,   23.,   33.],       [ -63.,    2.,   31.],       [ -59.,  -24.,   33.],       [ -38.,  -47.,   34.],       [ -15.,  -60.,   26.],       [  15.,  -58.,   35.],       [  38.,  -48.,   33.],       [  55.,  -32.,   27.],       [  68.,   -5.,   30.],       [  59.,   32.,   35.],       [  44.,   48.,   31.],       [  19.,   64.,   28.],       [ -11.,   68.,   32.],       [ -42.,   51.,   33.],       [ -59.,   24.,   34.],       [ -66.,    1.,   33.],       [ -56.,  -31.,   34.],       [ -42.,  -52.,   27.],       [ -20.,  -64.,   35.],       [  11.,  -67.,   35.],       [  38.,  -50.,   34.],       [  62.,  -32.,   31.],       [  70.,    3.,   31.],       [  64.,   32.,   30.],       [  49.,   59.,   26.],       [  15.,   67.,   35.],       [ -17.,   69.,   27.],       [ -47.,   58.,   35.],       [ -69.,   34.,   29.],       [ -69.,    3.,   31.],       [ -63.,  -29.,   31.],       [ -43.,  -55.,   31.],       [ -20.,  -74.,   27.],       [  16.,  -74.,   35.],       [  42.,  -56.,   31.],       [  67.,  -27.,   30.],       [  79.,    4.,   26.],       [  65.,   32.,   32.],       [  51.,   65.,   26.],       [  14.,   76.,   35.],       [ -21.,   80.,   32.],       [ -44.,   61.,   35.],       [ -73.,   35.,   32.],       [ -75.,   -1.,   28.],       [ -70.,  -32.,   31.],       [ -50.,  -60.,   26.],       [ -19.,  -78.,   34.],       [  13.,  -76.,   35.],       [  44.,  -59.,   32.],       [  74.,  -37.,   34.],       [  87.,    1.,   29.],       [  77.,   33.,   26.],       [  55.,   69.,   35.],       [  22.,   79.,   30.],       [ -18.,   80.,   26.],       [ -54.,   67.,   26.],       [ -77.,   37.,   32.],       [ -84.,    4.,   35.],       [ -74.,  -42.,   26.],       [ -56.,  -63.,   29.],       [ -16.,  -77.,   30.],       [  18.,  -80.,   35.],       [  51.,  -70.,   33.],       [  76.,  -36.,   31.],       [  89.,    0.,   27.],       [  79.,   39.,   33.],       [  51.,   70.,   31.],       [  20.,   85.,   32.],       [ -15.,   82.,   26.],       [ -53.,   69.,   32.],       [ -77.,   36.,   31.],       [ -92.,   -5.,   26.],       [ -83.,  -38.,   34.],       [ -60.,  -71.,   30.],       [ -18.,  -87.,   30.],       [  18.,  -84.,   28.],       [  56.,  -67.,   35.],       [  75.,  -37.,   31.],       [  99.,    1.,   31.],       [  81.,   38.,   28.],       [  60.,   78.,   33.],       [  16.,   88.,   32.],       [ -24.,   88.,   31.],       [ -57.,   69.,   32.],       [ -85.,   44.,   26.],       [ -92.,    3.,   27.],       [ -86.,  -42.,   31.],       [ -55.,  -70.,   28.],       [ -18.,  -88.,   35.],       [  17.,  -97.,   32.],       [  60.,  -79.,   29.],       [  81.,  -43.,   28.],       [ 100.,   -5.,   35.],       [  90.,   38.,   29.],       [  67.,   80.,   28.],       [  23.,  101.,   32.],       [ -20.,   95.,   29.],       [ -59.,   76.,   27.],       [ -92.,   47.,   34.],       [-103.,    3.,   26.],       [ -91.,  -39.,   34.],       [ -58.,  -76.,   35.],       [ -21.,  -98.,   35.],       [  23.,  -98.,   29.],       [  57.,  -81.,   28.],       [  91.,  -46.,   36.],       [  53.,    2.,   34.],       [  45.,   17.,   31.],       [  27.,   36.,   37.],       [  14.,   51.,   31.],       [ -12.,   46.,   32.],       [ -32.,   34.,   35.],       [ -50.,   22.,   33.],       [ -55.,   -1.,   33.],       [ -46.,  -21.,   33.],       [ -35.,  -44.,   33.],       [  -9.,  -46.,   35.],       [   6.,  -54.,   34.],       [  30.,  -42.,   38.],       [  42.,  -22.,   34.],       [  53.,   -1.,   38.],       [  46.,   23.,   34.],       [  32.,   43.,   33.],       [   7.,   58.,   36.],       [ -12.,   57.,   36.],       [ -34.,   43.,   36.],       [ -49.,   21.,   31.],       [ -55.,   -2.,   40.],       [ -46.,  -21.,   40.],       [ -35.,  -48.,   39.],       [ -18.,  -57.,   35.],       [  10.,  -58.,   31.],       [  39.,  -46.,   31.],       [  51.,  -25.,   34.],       [  57.,    3.,   34.],       [  57.,   26.,   37.],       [  34.,   44.,   37.],       [  16.,   60.,   35.],       [ -11.,   64.,   39.],       [ -37.,   47.,   33.],       [ -54.,   25.,   31.],       [ -64.,   -3.,   31.],       [ -56.,  -29.,   35.],       [ -41.,  -50.,   30.],       [ -16.,  -62.,   35.],       [  10.,  -64.,   31.],       [  34.,  -51.,   35.],       [  52.,  -32.,   35.],       [  70.,   -5.,   37.],       [  62.,   29.,   32.],       [  37.,   55.,   32.],       [  14.,   61.,   33.],       [ -14.,   66.,   35.],       [ -45.,   53.,   33.],       [ -64.,   26.,   34.],       [ -70.,   -2.,   40.],       [ -63.,  -28.,   36.],       [ -46.,  -48.,   32.],       [ -11.,  -70.,   31.],       [  10.,  -69.,   32.],       [  45.,  -49.,   40.],       [  58.,  -26.,   39.],       [  67.,   -5.,   39.],       [  69.,   31.,   31.],       [  41.,   54.,   32.],       [  11.,   66.,   37.],       [ -19.,   72.,   32.],       [ -47.,   58.,   30.],       [ -64.,   35.,   31.],       [ -72.,   -2.,   34.],       [ -62.,  -28.,   33.],       [ -43.,  -60.,   36.],       [ -13.,  -69.,   37.],       [  20.,  -67.,   37.],       [  49.,  -53.,   31.],       [  69.,  -34.,   35.],       [  80.,    0.,   39.],       [  70.,   35.,   39.],       [  50.,   55.,   31.],       [  19.,   73.,   38.],       [ -16.,   76.,   38.],       [ -44.,   60.,   31.],       [ -69.,   29.,   34.],       [ -80.,    0.,   35.],       [ -75.,  -29.,   38.],       [ -44.,  -64.,   34.],       [ -21.,  -81.,   31.],       [  16.,  -76.,   39.],       [  48.,  -58.,   35.],       [  66.,  -34.,   33.],       [  83.,   -5.,   37.],       [  73.,   39.,   38.],       [  53.,   68.,   40.],       [  20.,   80.,   39.],       [ -15.,   80.,   30.],       [ -56.,   61.,   34.],       [ -72.,   38.,   35.],       [ -84.,   -5.,   31.],       [ -79.,  -34.,   31.],       [ -54.,  -69.,   32.],       [ -16.,  -78.,   38.],       [  19.,  -86.,   37.],       [  52.,  -62.,   35.],       [  70.,  -41.,   39.],       [  93.,    1.,   32.],       [  82.,   37.,   36.],       [  59.,   67.,   39.],       [  23.,   84.,   36.],       [ -23.,   84.,   34.],       [ -57.,   69.,   37.],       [ -78.,   39.,   36.],       [ -89.,   -1.,   38.],       [ -76.,  -41.,   36.],       [ -56.,  -70.,   40.],       [ -25.,  -91.,   35.],       [  15.,  -87.,   31.],       [  56.,  -70.,   30.],       [  76.,  -42.,   34.],       [  98.,   -5.,   38.],       [  88.,   40.,   32.],       [  62.,   74.,   36.],       [  22.,   94.,   33.],       [ -20.,   96.,   30.],       [ -55.,   78.,   36.],       [ -85.,   42.,   30.],       [ -93.,    4.,   39.],       [ -82.,  -43.,   38.],       [ -64.,  -75.,   30.],       [ -20.,  -97.,   35.],       [  16.,  -91.,   35.],       [  55.,  -76.,   39.],       [  84.,  -40.,   33.],       [ 102.,   -3.,   38.],       [  87.,   45.,   30.],       [  61.,   75.,   40.],       [  27.,   96.,   35.],       [ -23.,  102.,   39.],       [ -58.,   82.,   35.],       [ -86.,   47.,   38.],       [ -99.,    0.,   34.],       [ -90.,  -39.,   35.],       [ -65.,  -83.,   32.],       [ -22.,  -96.,   35.],       [  19.,  -93.,   31.],       [  64.,  -76.,   38.],       [  87.,  -47.,   34.],       [  53.,   -2.,   41.],       [  43.,   21.,   35.],       [  32.,   37.,   40.],       [  11.,   46.,   44.],       [  -8.,   50.,   39.],       [ -36.,   38.,   40.],       [ -49.,   22.,   38.],       [ -54.,   -5.,   43.],       [ -47.,  -26.,   36.],       [ -28.,  -42.,   40.],       [ -14.,  -48.,   37.],       [  15.,  -49.,   40.],       [  29.,  -39.,   36.],       [  45.,  -25.,   40.],       [  59.,   -3.,   37.],       [  50.,   24.,   37.],       [  32.,   46.,   38.],       [   9.,   54.,   41.],       [ -13.,   55.,   40.],       [ -36.,   47.,   44.],       [ -52.,   24.,   41.],       [ -52.,    1.,   41.],       [ -47.,  -29.,   43.],       [ -37.,  -43.,   41.],       [ -11.,  -56.,   41.],       [  13.,  -53.,   38.],       [  37.,  -44.,   39.],       [  53.,  -28.,   40.],       [  61.,    2.,   39.],       [  54.,   30.,   40.],       [  35.,   50.,   43.],       [  17.,   61.,   41.],       [  -9.,   56.,   43.],       [ -43.,   46.,   35.],       [ -57.,   24.,   37.],       [ -58.,   -3.,   37.],       [ -60.,  -27.,   41.],       [ -41.,  -44.,   44.],       [ -12.,  -59.,   37.],       [  18.,  -55.,   35.],       [  36.,  -49.,   38.],       [  50.,  -29.,   35.],       [  64.,   -3.,   44.],       [  63.,   28.,   36.],       [  45.,   51.,   43.],       [  11.,   68.,   41.],       [ -12.,   67.,   40.],       [ -39.,   50.,   42.],       [ -58.,   30.,   43.],       [ -66.,    0.,   35.],       [ -61.,  -25.,   37.],       [ -43.,  -57.,   44.],       [ -16.,  -61.,   35.],       [  16.,  -65.,   44.],       [  37.,  -49.,   39.],       [  58.,  -29.,   41.],       [  72.,   -3.,   41.],       [  67.,   33.,   39.],       [  40.,   53.,   41.],       [  13.,   67.,   39.],       [ -21.,   68.,   43.],       [ -43.,   56.,   38.],       [ -62.,   28.,   44.],       [ -75.,   -1.,   38.],       [ -62.,  -29.,   39.],       [ -45.,  -59.,   43.],       [ -14.,  -73.,   43.],       [  16.,  -67.,   36.],       [  42.,  -58.,   42.],       [  64.,  -34.,   35.],       [  82.,   -1.,   40.],       [  71.,   36.,   43.],       [  48.,   59.,   37.],       [  13.,   74.,   35.],       [ -21.,   71.,   36.],       [ -50.,   64.,   39.],       [ -74.,   33.,   42.],       [ -80.,    3.,   38.],       [ -75.,  -34.,   44.],       [ -45.,  -66.,   44.],       [ -22.,  -76.,   35.],       [  14.,  -80.,   42.],       [  52.,  -63.,   38.],       [  71.,  -37.,   36.],       [  83.,    3.,   38.],       [  75.,   36.,   43.],       [  48.,   69.,   39.],       [  15.,   85.,   42.],       [ -20.,   83.,   39.],       [ -50.,   65.,   40.],       [ -78.,   40.,   43.],       [ -81.,    2.,   43.],       [ -79.,  -39.,   43.],       [ -50.,  -67.,   42.],       [ -17.,  -85.,   39.],       [  19.,  -82.,   39.],       [  54.,  -70.,   36.],       [  77.,  -33.,   44.],       [  89.,    2.,   44.],       [  80.,   35.,   37.],       [  50.,   72.,   42.],       [  15.,   84.,   42.],       [ -21.,   89.,   38.],       [ -58.,   70.,   38.],       [ -84.,   41.,   44.],       [ -88.,    1.,   37.],       [ -77.,  -34.,   39.],       [ -56.,  -72.,   43.],       [ -22.,  -91.,   37.],       [  16.,  -89.,   35.],       [  58.,  -68.,   38.],       [  78.,  -37.,   41.],       [  96.,    4.,   36.],       [  84.,   38.,   40.],       [  54.,   70.,   38.],       [  20.,   92.,   36.],       [ -26.,   96.,   44.],       [ -63.,   75.,   37.],       [ -82.,   39.,   39.],       [ -91.,   -3.,   36.],       [ -88.,  -45.,   40.],       [ -59.,  -74.,   40.],       [ -26.,  -89.,   40.],       [  24.,  -89.,   42.],       [  59.,  -72.,   36.],       [  84.,  -38.,   39.],       [ 102.,   -5.,   37.],       [  88.,   47.,   38.],       [  64.,   80.,   43.],       [  25.,  102.,   40.],       [ -19.,  102.,   41.],       [ -63.,   81.,   37.],       [ -90.,   40.,   40.],       [ -98.,   -3.,   39.],       [ -94.,  -45.,   38.],       [ -63.,  -83.,   36.],       [ -18.,  -97.,   41.],       [  26., -103.,   43.],       [  61.,  -80.,   42.],       [  93.,  -48.,   42.]])
        basis0 = BSplineBasis(6, np.array([ -2. ,  -1.4,   0. ,   0. ,   0. ,   0. ,   0.8,   2.3,   2.8,   4.2,   4.8,   5.7,   7.2,
         7.9,   9. ,   9.6,  11. ,  11. ,  11. ,  11. ,  11.8,  13.3]),1)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.1,  3.4,  4. ,  4. ,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2.3,  3.1,  4. ,  4. ,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.insert_knot([7.474]*1, 0) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 23)
        vol2.insert_knot([2.437]*2, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 25)
        vol2.insert_knot([7.294]*3, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 28)
        vol2.insert_knot([7.562]*4, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 32)
        vol2.insert_knot([1.924]*5, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 37)
        vol2.insert_knot([1.843]*1, 1) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 18)
        vol2.insert_knot([1.309]*2, 1) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 20)
        vol2.insert_knot([1.531]*3, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 23)
        vol2.insert_knot([2.030]*4, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 27)
        vol2.insert_knot([1.184]*5, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 32)
        vol2.insert_knot([2.081]*6, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 38)
        vol2.insert_knot([1.166]*1, 2) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 18)
        vol2.insert_knot([1.225]*2, 2) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 20)
        vol2.insert_knot([1.655]*3, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 23)
        vol2.insert_knot([2.022]*4, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 27)
        vol2.insert_knot([2.314]*5, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 32)
        vol2.insert_knot([1.191]*6, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 38)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_curve_3D_p6_C2_periodic(self):
        controlpoints = np.array([[ 102.,   -2.,   -1.],
       [  95.,   40.,    3.],
       [  70.,   68.,    0.],
       [  33.,   95.,   -1.],
       [  -1.,   97.,    0.],
       [ -37.,   91.,   -1.],
       [ -66.,   74.,    2.],
       [ -95.,   37.,   -5.],
       [-105.,   -2.,    4.],
       [ -96.,  -42.,   -3.],
       [ -74.,  -71.,   -1.],
       [ -34.,  -90.,   -1.],
       [  -2., -104.,    2.],
       [  34.,  -93.,    2.],
       [  66.,  -69.,   -1.],
       [  92.,  -40.,   -4.]])
        basis0 = BSplineBasis(6, np.array([ -3.4,  -1.9,  -1. ,   0. ,   0. ,   0. ,   0.8,   2.2,   2.9,   4.2,   4.6,   6.3,   6.7,
         7.6,   8.9,   9.9,  10.6,  12.1,  13. ,  14. ,  14. ,  14. ,  14.8,  16.2,  16.9]),2)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2.insert_knot([1.762]*1) # insert C4-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 26)
        crv2.insert_knot([5.442]*2) # insert C3-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 28)
        crv2.insert_knot([11.602]*3) # insert C2-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 31)
        crv2.insert_knot([7.230]*4) # insert C1-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 35)
        crv2.insert_knot([10.893]*5) # insert C0-knot
        self.assertEqual(len(crv2.knots(direction=0,with_multiplicities=True)), 40)

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_surface_3D_p65_C2_periodic(self):
        controlpoints = np.array([[  56.,   -3.,   -5.],       [  55.,   25.,    2.],       [  46.,   41.,   -2.],       [  21.,   57.,    2.],       [  -4.,   59.,    2.],       [ -26.,   55.,   -4.],       [ -47.,   45.,   -5.],       [ -55.,   20.,    3.],       [ -59.,   -5.,   -2.],       [ -57.,  -27.,    3.],       [ -45.,  -39.,   -1.],       [ -26.,  -59.,   -3.],       [  -5.,  -61.,    1.],       [  18.,  -56.,    3.],       [  41.,  -41.,   -4.],       [  55.,  -24.,    3.],       [  69.,   -2.,   -2.],       [  61.,   23.,   -1.],       [  46.,   43.,    3.],       [  26.,   66.,   -5.],       [   2.,   70.,    4.],       [ -28.,   64.,    2.],       [ -52.,   52.,   -2.],       [ -64.,   25.,    4.],       [ -70.,    4.,    2.],       [ -63.,  -24.,    4.],       [ -45.,  -50.,    2.],       [ -31.,  -67.,   -2.],       [   3.,  -66.,   -1.],       [  29.,  -68.,   -2.],       [  52.,  -49.,    1.],       [  65.,  -30.,   -5.],       [  75.,    4.,   -1.],       [  67.,   30.,   -4.],       [  53.,   54.,   -1.],       [  28.,   74.,   -4.],       [   4.,   72.,    4.],       [ -31.,   74.,   -1.],       [ -52.,   51.,   -5.],       [ -69.,   25.,   -1.],       [ -78.,   -5.,   -1.],       [ -74.,  -28.,    2.],       [ -51.,  -57.,    3.],       [ -29.,  -66.,   -1.],       [  -4.,  -76.,   -2.],       [  33.,  -70.,    0.],       [  49.,  -57.,    4.],       [  65.,  -30.,    4.],       [  88.,    0.,   -3.],       [  74.,   28.,   -2.],       [  63.,   59.,    4.],       [  35.,   77.,    4.],       [   3.,   83.,   -5.],       [ -29.,   80.,   -4.],       [ -61.,   61.,    4.],       [ -82.,   31.,   -4.],       [ -83.,   -3.,   -3.],       [ -80.,  -37.,    0.],       [ -59.,  -65.,   -3.],       [ -33.,  -77.,    0.],       [  -1.,  -83.,   -2.],       [  34.,  -82.,   -2.],       [  56.,  -57.,    3.],       [  81.,  -36.,    3.],       [  91.,   -3.,   -1.],       [  83.,   37.,   -1.],       [  66.,   68.,    0.],       [  39.,   83.,   -1.],       [  -3.,   88.,   -1.],       [ -34.,   85.,   -5.],       [ -63.,   64.,    2.],       [ -82.,   34.,    3.],       [ -94.,   -2.,    1.],       [ -86.,  -38.,    3.],       [ -65.,  -69.,    1.],       [ -32.,  -90.,    2.],       [  -3.,  -92.,   -1.],       [  39.,  -90.,   -1.],       [  62.,  -61.,    4.],       [  88.,  -33.,    4.],       [ 103.,   -4.,   -1.],       [  90.,   41.,   -1.],       [  72.,   75.,    1.],       [  40.,   90.,   -4.],       [  -4.,  102.,    4.],       [ -38.,   94.,   -2.],       [ -75.,   68.,    2.],       [ -94.,   33.,   -4.],       [-103.,   -2.,   -2.],       [ -97.,  -42.,    1.],       [ -68.,  -68.,   -3.],       [ -39.,  -97.,    1.],       [  -4.,  -99.,   -5.],       [  37.,  -91.,   -5.],       [  70.,  -70.,   -5.],       [  90.,  -36.,   -4.]])
        basis0 = BSplineBasis(6, np.array([ -2.9,  -1.8,  -1. ,   0. ,   0. ,   0. ,   1.2,   2.3,   3.4,   4.3,   4.6,   6.4,   7.1,
         8.2,   9.4,  10.1,  11.1,  12.2,  13. ,  14. ,  14. ,  14. ,  15.2,  16.3,  17.4]),2)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2.insert_knot([11.415]*1, 0) # insert C4-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 26)
        surf2.insert_knot([2.253]*2, 0) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 28)
        surf2.insert_knot([2.659]*3, 0) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 31)
        surf2.insert_knot([9.481]*4, 0) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 35)
        surf2.insert_knot([5.061]*5, 0) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=0,with_multiplicities=True)), 40)
        surf2.insert_knot([1.300]*1, 1) # insert C3-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 12)
        surf2.insert_knot([1.300]*2, 1) # insert C2-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 14)
        surf2.insert_knot([1.300]*3, 1) # insert C1-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 17)
        surf2.insert_knot([1.300]*4, 1) # insert C0-knot
        self.assertEqual(len(surf2.knots(direction=1,with_multiplicities=True)), 21)

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)

    def test_volume_3D_p677_C2_periodic(self):
        controlpoints = np.array([[  52.,    0.,    1.],       [  44.,   18.,   -5.],       [  38.,   39.,   -4.],       [  21.,   47.,    2.],       [  -1.,   48.,   -5.],       [ -18.,   41.,    1.],       [ -36.,   30.,    4.],       [ -51.,   21.,   -1.],       [ -50.,    3.,    4.],       [ -43.,  -16.,    1.],       [ -33.,  -32.,   -1.],       [ -16.,  -49.,    3.],       [  -4.,  -47.,    0.],       [  16.,  -48.,    3.],       [  32.,  -38.,    3.],       [  48.,  -22.,    2.],       [  59.,    4.,    2.],       [  47.,   17.,    1.],       [  34.,   38.,    2.],       [  19.,   54.,   -1.],       [  -3.,   55.,   -5.],       [ -17.,   48.,    4.],       [ -40.,   38.,   -4.],       [ -55.,   24.,   -5.],       [ -53.,   -2.,    1.],       [ -57.,  -23.,    4.],       [ -41.,  -40.,    2.],       [ -19.,  -49.,   -5.],       [   0.,  -59.,    1.],       [  20.,  -53.,    0.],       [  37.,  -44.,   -3.],       [  48.,  -19.,   -3.],       [  59.,   -1.,    2.],       [  57.,   23.,    3.],       [  41.,   39.,    4.],       [  19.,   56.,    3.],       [   4.,   63.,    4.],       [ -24.,   54.,    4.],       [ -45.,   42.,   -4.],       [ -56.,   19.,   -1.],       [ -57.,   -2.,    3.],       [ -52.,  -20.,    4.],       [ -43.,  -46.,   -3.],       [ -24.,  -60.,    3.],       [  -4.,  -60.,    0.],       [  27.,  -61.,    0.],       [  45.,  -47.,    3.],       [  57.,  -29.,    1.],       [  63.,    1.,   -3.],       [  58.,   23.,    1.],       [  47.,   48.,    4.],       [  20.,   57.,    3.],       [   2.,   68.,   -3.],       [ -27.,   64.,    0.],       [ -51.,   50.,    2.],       [ -64.,   28.,   -4.],       [ -63.,    0.,    0.],       [ -62.,  -30.,   -3.],       [ -52.,  -45.,    2.],       [ -30.,  -60.,    0.],       [  -5.,  -71.,    1.],       [  28.,  -67.,    2.],       [  48.,  -50.,   -5.],       [  63.,  -24.,   -4.],       [  67.,    0.,    1.],       [  67.,   31.,   -3.],       [  49.,   47.,    3.],       [  26.,   63.,    1.],       [   0.,   70.,   -1.],       [ -32.,   67.,   -1.],       [ -55.,   51.,    4.],       [ -71.,   25.,   -1.],       [ -74.,   -5.,   -5.],       [ -63.,  -25.,    1.],       [ -47.,  -55.,   -2.],       [ -26.,  -68.,   -1.],       [  -3.,  -73.,   -1.],       [  31.,  -68.,    1.],       [  47.,  -47.,    4.],       [  66.,  -27.,   -1.],       [  77.,   -2.,   -1.],       [  69.,   26.,    1.],       [  56.,   55.,   -1.],       [  25.,   66.,   -2.],       [   4.,   76.,    2.],       [ -32.,   71.,   -3.],       [ -55.,   50.,   -5.],       [ -77.,   26.,   -5.],       [ -81.,   -1.,    2.],       [ -77.,  -31.,   -3.],       [ -53.,  -53.,    0.],       [ -35.,  -72.,   -1.],       [  -5.,  -81.,    4.],       [  33.,  -72.,    1.],       [  58.,  -56.,   -4.],       [  71.,  -34.,    4.],       [  79.,    2.,    3.],       [  81.,   35.,    2.],       [  55.,   60.,    1.],       [  26.,   76.,    0.],       [   2.,   80.,   -1.],       [ -37.,   75.,   -4.],       [ -63.,   61.,   -3.],       [ -80.,   31.,   -4.],       [ -82.,   -1.,   -3.],       [ -81.,  -30.,    1.],       [ -60.,  -64.,   -2.],       [ -34.,  -74.,   -1.],       [   2.,  -82.,   -4.],       [  27.,  -79.,   -5.],       [  54.,  -59.,   -1.],       [  77.,  -32.,   -1.],       [  88.,    4.,   -3.],       [  85.,   33.,   -2.],       [  67.,   66.,    3.],       [  31.,   78.,   -5.],       [  -2.,   92.,    1.],       [ -39.,   84.,   -3.],       [ -64.,   59.,   -2.],       [ -83.,   34.,    2.],       [ -90.,   -4.,   -2.],       [ -86.,  -37.,    1.],       [ -68.,  -65.,   -1.],       [ -38.,  -87.,   -2.],       [  -1.,  -92.,    3.],       [  29.,  -86.,   -2.],       [  62.,  -60.,    3.],       [  77.,  -33.,   -2.],       [  90.,    4.,    0.],       [  83.,   39.,    2.],       [  64.,   71.,   -1.],       [  38.,   85.,   -3.],       [  -3.,   98.,   -3.],       [ -32.,   90.,    2.],       [ -70.,   65.,    1.],       [ -90.,   33.,    0.],       [ -98.,    0.,    1.],       [ -83.,  -36.,    2.],       [ -69.,  -64.,    0.],       [ -33.,  -88.,    0.],       [  -2.,  -98.,   -3.],       [  35.,  -91.,    4.],       [  61.,  -63.,   -1.],       [  87.,  -33.,   -3.],       [ 104.,   -3.,    3.],       [  93.,   34.,   -1.],       [  75.,   72.,   -4.],       [  38.,   93.,    2.],       [   0.,   96.,    1.],       [ -37.,   93.,    3.],       [ -76.,   69.,   -4.],       [ -93.,   39.,    1.],       [-103.,   -3.,    3.],       [ -92.,  -37.,   -4.],       [ -69.,  -68.,   -4.],       [ -35.,  -94.,   -3.],       [   0.,  -96.,    0.],       [  36.,  -91.,   -3.],       [  73.,  -71.,    2.],       [  91.,  -40.,   -4.],       [  54.,    1.,    2.],       [  46.,   20.,    2.],       [  39.,   30.,    3.],       [  16.,   42.,    2.],       [  -5.,   49.,    0.],       [ -21.,   41.,    9.],       [ -38.,   31.,    6.],       [ -45.,   18.,    5.],       [ -55.,    2.,    9.],       [ -46.,  -20.,    5.],       [ -34.,  -37.,    2.],       [ -16.,  -46.,    8.],       [   2.,  -48.,    9.],       [  15.,  -50.,    0.],       [  36.,  -31.,    2.],       [  42.,  -17.,    7.],       [  53.,    4.,    6.],       [  54.,   23.,    1.],       [  43.,   43.,    7.],       [  22.,   51.,    7.],       [  -5.,   56.,    1.],       [ -24.,   55.,    3.],       [ -41.,   38.,    3.],       [ -53.,   16.,    4.],       [ -57.,   -1.,    5.],       [ -49.,  -19.,    7.],       [ -44.,  -42.,    7.],       [ -25.,  -55.,    0.],       [  -4.,  -53.,    3.],       [  16.,  -51.,    8.],       [  42.,  -41.,    1.],       [  47.,  -19.,    4.],       [  57.,    3.,    2.],       [  61.,   26.,    6.],       [  43.,   45.,    8.],       [  25.,   57.,    4.],       [   2.,   61.,    1.],       [ -20.,   54.,    0.],       [ -39.,   45.,    2.],       [ -61.,   20.,    5.],       [ -63.,   -4.,    9.],       [ -60.,  -28.,    6.],       [ -45.,  -48.,    2.],       [ -23.,  -54.,    0.],       [  -2.,  -60.,    3.],       [  24.,  -59.,    0.],       [  40.,  -46.,    8.],       [  55.,  -22.,    0.],       [  64.,    3.,    5.],       [  62.,   21.,    2.],       [  50.,   49.,    1.],       [  28.,   65.,    5.],       [   2.,   66.,    9.],       [ -28.,   61.,    8.],       [ -52.,   45.,    2.],       [ -65.,   22.,    1.],       [ -63.,   -3.,    2.],       [ -65.,  -29.,    8.],       [ -45.,  -46.,    4.],       [ -29.,  -62.,    8.],       [   3.,  -66.,    2.],       [  21.,  -64.,    8.],       [  44.,  -52.,    5.],       [  58.,  -30.,    2.],       [  71.,    1.,    0.],       [  71.,   25.,   -1.],       [  49.,   48.,    5.],       [  27.,   65.,    0.],       [   0.,   71.,    3.],       [ -24.,   63.,    2.],       [ -50.,   48.,    9.],       [ -67.,   25.,    2.],       [ -75.,    3.,   -1.],       [ -65.,  -27.,    7.],       [ -55.,  -52.,    7.],       [ -33.,  -65.,    6.],       [  -4.,  -75.,    7.],       [  32.,  -67.,    7.],       [  49.,  -56.,    1.],       [  70.,  -27.,    8.],       [  75.,   -4.,    8.],       [  75.,   33.,    7.],       [  54.,   50.,    7.],       [  28.,   69.,    1.],       [   2.,   77.,    3.],       [ -26.,   73.,    0.],       [ -60.,   54.,    0.],       [ -75.,   25.,    3.],       [ -80.,   -4.,    8.],       [ -71.,  -31.,    5.],       [ -53.,  -59.,    7.],       [ -33.,  -76.,    9.],       [   3.,  -82.,    0.],       [  27.,  -71.,    4.],       [  58.,  -55.,    5.],       [  75.,  -31.,    4.],       [  87.,   -4.,    1.],       [  74.,   35.,    1.],       [  58.,   58.,    6.],       [  32.,   79.,   -1.],       [   1.,   79.,    5.],       [ -32.,   77.,    3.],       [ -60.,   55.,    2.],       [ -75.,   35.,    3.],       [ -84.,   -1.,    0.],       [ -77.,  -33.,    1.],       [ -55.,  -58.,   -1.],       [ -31.,  -81.,   -1.],       [   1.,  -85.,    8.],       [  26.,  -81.,    7.],       [  56.,  -61.,    3.],       [  81.,  -35.,    5.],       [  93.,    2.,    2.],       [  78.,   35.,    0.],       [  62.,   64.,    2.],       [  38.,   81.,    6.],       [  -5.,   90.,    9.],       [ -39.,   83.,    2.],       [ -62.,   64.,    6.],       [ -87.,   38.,    5.],       [ -85.,   -2.,   -1.],       [ -82.,  -30.,    8.],       [ -61.,  -66.,    5.],       [ -33.,  -85.,    1.],       [  -3.,  -87.,    5.],       [  37.,  -84.,    4.],       [  58.,  -68.,    1.],       [  80.,  -35.,    9.],       [  96.,    3.,    0.],       [  91.,   39.,    1.],       [  67.,   64.,    3.],       [  37.,   91.,    3.],       [   1.,   92.,    5.],       [ -36.,   83.,    7.],       [ -65.,   69.,    5.],       [ -83.,   36.,    1.],       [ -95.,   -1.,    7.],       [ -83.,  -35.,    6.],       [ -64.,  -69.,    3.],       [ -33.,  -90.,    4.],       [   3.,  -95.,    0.],       [  40.,  -87.,    8.],       [  68.,  -71.,   -1.],       [  82.,  -38.,    5.],       [ 102.,   -3.,    0.],       [  95.,   34.,    0.],       [  72.,   70.,    2.],       [  42.,   90.,    8.],       [   0.,  104.,    3.],       [ -43.,   91.,    4.],       [ -67.,   71.,    8.],       [ -91.,   37.,    1.],       [ -99.,   -3.,    1.],       [ -92.,  -43.,    7.],       [ -71.,  -68.,    3.],       [ -38.,  -96.,    4.],       [   4., -100.,    9.],       [  33.,  -98.,    4.],       [  66.,  -67.,   -1.],       [  88.,  -40.,    4.],       [  53.,   -5.,   11.],       [  50.,   22.,   11.],       [  30.,   37.,   11.],       [  19.,   46.,   10.],       [  -3.,   48.,    4.],       [ -21.,   47.,    5.],       [ -35.,   33.,   13.],       [ -42.,   17.,    4.],       [ -48.,    4.,    4.],       [ -44.,  -19.,    6.],       [ -36.,  -37.,    9.],       [ -20.,  -48.,    9.],       [  -3.,  -49.,   10.],       [  14.,  -43.,    8.],       [  34.,  -37.,   12.],       [  43.,  -22.,    9.],       [  51.,   -3.,    4.],       [  50.,   18.,    8.],       [  35.,   38.,    5.],       [  17.,   50.,    7.],       [  -1.,   54.,   10.],       [ -24.,   55.,    8.],       [ -39.,   40.,    7.],       [ -51.,   20.,   12.],       [ -61.,   -1.,   11.],       [ -48.,  -26.,    7.],       [ -39.,  -41.,    6.],       [ -24.,  -55.,    5.],       [   3.,  -59.,    8.],       [  23.,  -50.,   11.],       [  35.,  -44.,   12.],       [  52.,  -21.,    6.],       [  57.,    2.,   12.],       [  61.,   18.,    6.],       [  42.,   38.,   11.],       [  27.,   56.,   11.],       [   2.,   56.,   11.],       [ -26.,   55.,    5.],       [ -44.,   45.,    4.],       [ -58.,   24.,    8.],       [ -58.,   -5.,    3.],       [ -61.,  -20.,   12.],       [ -43.,  -48.,    7.],       [ -24.,  -53.,    4.],       [  -2.,  -59.,    7.],       [  26.,  -59.,   11.],       [  42.,  -42.,   11.],       [  60.,  -25.,   13.],       [  70.,    3.,   11.],       [  65.,   20.,    8.],       [  42.,   49.,    9.],       [  24.,   62.,    5.],       [  -3.,   69.,    5.],       [ -30.,   61.,    3.],       [ -47.,   44.,    6.],       [ -62.,   26.,    8.],       [ -65.,    0.,    4.],       [ -58.,  -26.,    6.],       [ -50.,  -48.,    5.],       [ -24.,  -58.,    6.],       [  -2.,  -71.,    3.],       [  25.,  -62.,    6.],       [  45.,  -49.,   12.],       [  57.,  -22.,    9.],       [  76.,    4.,   10.],       [  67.,   23.,   11.],       [  46.,   46.,   11.],       [  32.,   66.,    9.],       [   0.,   69.,   12.],       [ -33.,   69.,   13.],       [ -51.,   46.,    5.],       [ -69.,   23.,   13.],       [ -69.,   -2.,   12.],       [ -68.,  -25.,    6.],       [ -53.,  -55.,    6.],       [ -23.,  -64.,    6.],       [  -2.,  -68.,   12.],       [  28.,  -63.,    7.],       [  54.,  -50.,    5.],       [  65.,  -28.,   10.],       [  72.,    2.,   11.],       [  67.,   26.,    5.],       [  51.,   54.,   10.],       [  34.,   68.,   12.],       [  -1.,   75.,   10.],       [ -28.,   74.,   12.],       [ -51.,   55.,    9.],       [ -70.,   29.,    9.],       [ -74.,   -4.,   12.],       [ -74.,  -31.,   11.],       [ -60.,  -60.,   10.],       [ -32.,  -69.,    8.],       [  -4.,  -76.,   10.],       [  29.,  -69.,   11.],       [  56.,  -57.,    5.],       [  67.,  -33.,   12.],       [  87.,   -4.,   12.],       [  81.,   34.,    9.],       [  61.,   59.,    5.],       [  35.,   72.,    6.],       [  -5.,   82.,    4.],       [ -34.,   80.,    4.],       [ -55.,   56.,    7.],       [ -80.,   36.,   13.],       [ -85.,   -3.,   10.],       [ -75.,  -33.,    8.],       [ -55.,  -64.,   13.],       [ -32.,  -73.,    5.],       [  -4.,  -87.,   10.],       [  34.,  -78.,   11.],       [  61.,  -64.,   11.],       [  81.,  -36.,    8.],       [  89.,    4.,   12.],       [  79.,   30.,   12.],       [  66.,   61.,   13.],       [  31.,   84.,    4.],       [  -5.,   84.,    6.],       [ -33.,   79.,   11.],       [ -61.,   61.,   13.],       [ -87.,   32.,    9.],       [ -86.,    4.,    8.],       [ -80.,  -36.,    5.],       [ -68.,  -63.,    4.],       [ -30.,  -85.,   12.],       [   0.,  -89.,   13.],       [  37.,  -86.,   13.],       [  62.,  -63.,   12.],       [  83.,  -30.,    7.],       [  98.,    2.,    9.],       [  91.,   35.,   12.],       [  67.,   67.,    5.],       [  41.,   85.,    8.],       [   0.,   99.,   11.],       [ -38.,   91.,    5.],       [ -64.,   67.,    6.],       [ -90.,   37.,    4.],       [ -91.,    4.,    5.],       [ -89.,  -34.,    5.],       [ -71.,  -71.,   12.],       [ -38.,  -83.,   12.],       [  -1.,  -97.,   11.],       [  38.,  -90.,    5.],       [  70.,  -67.,    9.],       [  91.,  -42.,   11.],       [ 102.,   -2.,    8.],       [  91.,   42.,   10.],       [  72.,   69.,    9.],       [  38.,   91.,    7.],       [  -5.,   96.,    8.],       [ -40.,   94.,   10.],       [ -69.,   68.,   10.],       [ -92.,   37.,    8.],       [ -97.,    4.,    9.],       [ -92.,  -40.,    6.],       [ -75.,  -69.,    7.],       [ -36.,  -92.,   12.],       [  -4.,  -96.,    6.],       [  34.,  -91.,   13.],       [  66.,  -76.,    9.],       [  92.,  -44.,   13.],       [  50.,   -3.,   12.],       [  48.,   17.,   15.],       [  40.,   38.,   18.],       [  19.,   46.,   13.],       [   1.,   49.,   14.],       [ -24.,   46.,   17.],       [ -36.,   31.,    9.],       [ -43.,   17.,   13.],       [ -53.,    1.,   10.],       [ -47.,  -17.,    9.],       [ -34.,  -40.,   16.],       [ -24.,  -51.,    9.],       [  -4.,  -53.,    9.],       [  23.,  -49.,   11.],       [  35.,  -34.,    9.],       [  46.,  -20.,   14.],       [  56.,   -3.,   13.],       [  47.,   21.,   18.],       [  35.,   36.,    9.],       [  20.,   47.,   13.],       [   2.,   51.,   18.],       [ -22.,   51.,    8.],       [ -45.,   35.,    8.],       [ -55.,   20.,   14.],       [ -59.,    4.,   14.],       [ -52.,  -25.,   13.],       [ -38.,  -39.,   16.],       [ -21.,  -49.,   17.],       [  -4.,  -53.,   12.],       [  25.,  -47.,   14.],       [  40.,  -38.,   17.],       [  50.,  -17.,   12.],       [  60.,    0.,   13.],       [  57.,   27.,   15.],       [  41.,   41.,    8.],       [  23.,   57.,   11.],       [  -2.,   60.,   11.],       [ -25.,   60.,   11.],       [ -47.,   40.,   11.],       [ -58.,   24.,   10.],       [ -65.,    1.,   18.],       [ -59.,  -22.,   10.],       [ -43.,  -46.,   14.],       [ -22.,  -61.,   10.],       [  -5.,  -57.,   14.],       [  18.,  -56.,   16.],       [  39.,  -40.,   13.],       [  59.,  -27.,   15.],       [  67.,   -5.,   12.],       [  63.,   29.,   10.],       [  43.,   43.,   14.],       [  30.,   62.,    9.],       [  -1.,   63.,   17.],       [ -22.,   60.,   17.],       [ -51.,   48.,   15.],       [ -62.,   24.,   14.],       [ -72.,   -4.,   14.],       [ -62.,  -27.,   13.],       [ -52.,  -43.,    9.],       [ -28.,  -58.,   14.],       [  -3.,  -67.,    9.],       [  25.,  -59.,    8.],       [  51.,  -45.,   14.],       [  65.,  -28.,   15.],       [  76.,    4.,   10.],       [  65.,   28.,   10.],       [  54.,   48.,   18.],       [  28.,   70.,   16.],       [   1.,   75.,   12.],       [ -24.,   69.,   16.],       [ -48.,   55.,   13.],       [ -63.,   23.,   11.],       [ -77.,   -1.,    9.],       [ -64.,  -33.,   15.],       [ -56.,  -53.,   14.],       [ -28.,  -66.,   10.],       [   2.,  -75.,   15.],       [  29.,  -65.,   17.],       [  53.,  -48.,   12.],       [  65.,  -28.,   18.],       [  80.,    2.,   10.],       [  72.,   34.,    9.],       [  52.,   59.,   13.],       [  26.,   76.,    9.],       [  -3.,   77.,   10.],       [ -26.,   70.,   13.],       [ -51.,   59.,   14.],       [ -68.,   31.,    8.],       [ -83.,   -2.,   12.],       [ -68.,  -26.,   15.],       [ -55.,  -52.,   14.],       [ -28.,  -69.,   16.],       [   4.,  -78.,   10.],       [  31.,  -74.,   10.],       [  54.,  -59.,   13.],       [  73.,  -27.,   14.],       [  85.,   -1.,   17.],       [  78.,   33.,    9.],       [  58.,   60.,   12.],       [  27.,   80.,   11.],       [  -2.,   86.,   10.],       [ -37.,   77.,   13.],       [ -62.,   57.,   14.],       [ -82.,   35.,   10.],       [ -86.,    4.,   17.],       [ -73.,  -35.,   11.],       [ -55.,  -61.,    9.],       [ -28.,  -78.,   11.],       [  -1.,  -88.,   10.],       [  35.,  -74.,   16.],       [  62.,  -57.,   14.],       [  81.,  -36.,   14.],       [  90.,    1.,   15.],       [  81.,   35.,   13.],       [  64.,   65.,   12.],       [  37.,   85.,   15.],       [  -4.,   92.,   17.],       [ -37.,   85.,   16.],       [ -59.,   61.,   10.],       [ -80.,   34.,   14.],       [ -86.,   -4.,   13.],       [ -79.,  -38.,    8.],       [ -60.,  -60.,   12.],       [ -33.,  -86.,    8.],       [   1.,  -90.,   12.],       [  33.,  -87.,   13.],       [  65.,  -59.,   12.],       [  86.,  -35.,    8.],       [  98.,    3.,   13.],       [  82.,   38.,   14.],       [  65.,   66.,   10.],       [  36.,   92.,   18.],       [  -5.,   89.,   14.],       [ -40.,   85.,   13.],       [ -69.,   68.,   12.],       [ -89.,   33.,    9.],       [ -91.,   -2.,   14.],       [ -92.,  -33.,    8.],       [ -72.,  -66.,   17.],       [ -34.,  -89.,   10.],       [  -4.,  -95.,   11.],       [  39.,  -90.,   15.],       [  67.,  -65.,   16.],       [  89.,  -38.,   16.],       [  98.,   -3.,   16.],       [  91.,   39.,   15.],       [  70.,   71.,   12.],       [  43.,   91.,    8.],       [   0.,  104.,    9.],       [ -36.,   96.,   16.],       [ -75.,   74.,   11.],       [ -88.,   34.,   17.],       [ -98.,    3.,    9.],       [ -95.,  -40.,   12.],       [ -67.,  -76.,   14.],       [ -43.,  -90.,   11.],       [  -4.,  -96.,   18.],       [  37.,  -89.,   14.],       [  75.,  -68.,   13.],       [  96.,  -43.,   12.],       [  51.,    4.,   13.],       [  42.,   20.,   20.],       [  33.,   37.,   14.],       [  14.,   47.,   20.],       [  -1.,   47.,   19.],       [ -23.,   44.,   16.],       [ -32.,   34.,   15.],       [ -50.,   23.,   18.],       [ -48.,   -3.,   16.],       [ -51.,  -20.,   18.],       [ -39.,  -35.,   19.],       [ -15.,  -46.,   15.],       [   4.,  -54.,   17.],       [  18.,  -45.,   14.],       [  36.,  -36.,   14.],       [  48.,  -21.,   17.],       [  54.,    3.,   13.],       [  51.,   18.,   15.],       [  36.,   39.,   16.],       [  21.,   52.,   20.],       [   2.,   52.,   22.],       [ -26.,   53.,   21.],       [ -35.,   42.,   14.],       [ -53.,   16.,   19.],       [ -61.,   -4.,   22.],       [ -50.,  -21.,   15.],       [ -43.,  -35.,   19.],       [ -27.,  -53.,   20.],       [  -4.,  -52.,   16.],       [  20.,  -47.,   18.],       [  39.,  -36.,   14.],       [  50.,  -22.,   14.],       [  56.,   -2.,   16.],       [  59.,   21.,   14.],       [  44.,   42.,   13.],       [  19.,   52.,   21.],       [   0.,   58.,   13.],       [ -29.,   52.,   14.],       [ -44.,   38.,   12.],       [ -53.,   21.,   20.],       [ -65.,    0.,   21.],       [ -52.,  -23.,   22.],       [ -46.,  -39.,   19.],       [ -27.,  -56.,   20.],       [  -5.,  -57.,   21.],       [  25.,  -52.,   12.],       [  46.,  -43.,   14.],       [  53.,  -26.,   16.],       [  69.,    2.,   15.],       [  57.,   28.,   16.],       [  45.,   47.,   13.],       [  23.,   62.,   16.],       [   1.,   70.,   14.],       [ -27.,   60.,   21.],       [ -48.,   42.,   13.],       [ -64.,   29.,   16.],       [ -67.,    2.,   21.],       [ -60.,  -28.,   15.],       [ -51.,  -51.,   17.],       [ -24.,  -62.,   14.],       [   3.,  -65.,   16.],       [  25.,  -59.,   21.],       [  45.,  -45.,   22.],       [  59.,  -29.,   19.],       [  74.,   -5.,   13.],       [  70.,   23.,   17.],       [  49.,   54.,   17.],       [  25.,   69.,   13.],       [  -4.,   76.,   21.],       [ -30.,   63.,   22.],       [ -51.,   48.,   17.],       [ -68.,   28.,   17.],       [ -76.,   -3.,   19.],       [ -71.,  -29.,   16.],       [ -47.,  -50.,   17.],       [ -29.,  -70.,   21.],       [  -4.,  -74.,   21.],       [  26.,  -67.,   13.],       [  53.,  -55.,   19.],       [  65.,  -28.,   21.],       [  79.,    1.,   16.],       [  71.,   33.,   17.],       [  50.,   52.,   20.],       [  25.,   66.,   13.],       [   1.,   73.,   19.],       [ -35.,   68.,   15.],       [ -53.,   51.,   16.],       [ -71.,   29.,   17.],       [ -80.,    1.,   22.],       [ -72.,  -28.,   22.],       [ -54.,  -55.,   13.],       [ -30.,  -76.,   21.],       [  -2.,  -78.,   20.],       [  25.,  -70.,   15.],       [  54.,  -52.,   18.],       [  73.,  -28.,   15.],       [  84.,    0.,   19.],       [  80.,   31.,   17.],       [  55.,   55.,   21.],       [  32.,   74.,   20.],       [   4.,   84.,   21.],       [ -29.,   73.,   17.],       [ -62.,   54.,   13.],       [ -74.,   31.,   22.],       [ -81.,   -1.,   17.],       [ -74.,  -36.,   17.],       [ -61.,  -56.,   22.],       [ -29.,  -76.,   18.],       [   2.,  -86.,   18.],       [  28.,  -75.,   15.],       [  61.,  -63.,   15.],       [  79.,  -37.,   13.],       [  88.,    1.,   22.],       [  85.,   35.,   14.],       [  64.,   67.,   21.],       [  31.,   83.,   20.],       [  -3.,   87.,   15.],       [ -32.,   82.,   19.],       [ -63.,   63.,   16.],       [ -82.,   33.,   19.],       [ -85.,    4.,   14.],       [ -86.,  -32.,   18.],       [ -59.,  -65.,   14.],       [ -38.,  -81.,   21.],       [   1.,  -91.,   19.],       [  36.,  -80.,   19.],       [  64.,  -60.,   12.],       [  77.,  -37.,   18.],       [  89.,   -4.,   15.],       [  84.,   34.,   16.],       [  66.,   68.,   15.],       [  32.,   83.,   22.],       [  -5.,   98.,   18.],       [ -34.,   82.,   21.],       [ -71.,   64.,   17.],       [ -93.,   34.,   21.],       [ -95.,    3.,   17.],       [ -84.,  -36.,   20.],       [ -67.,  -70.,   13.],       [ -35.,  -88.,   16.],       [  -2.,  -92.,   21.],       [  38.,  -89.,   18.],       [  71.,  -66.,   17.],       [  87.,  -41.,   20.],       [  97.,    4.,   19.],       [  97.,   35.,   21.],       [  65.,   71.,   15.],       [  41.,   95.,   19.],       [  -1.,  100.,   19.],       [ -38.,   92.,   17.],       [ -74.,   73.,   17.],       [ -96.,   40.,   16.],       [-102.,    4.,   20.],       [ -93.,  -35.,   18.],       [ -73.,  -71.,   18.],       [ -37.,  -94.,   16.],       [  -5.,  -97.,   13.],       [  33.,  -93.,   14.],       [  75.,  -75.,   21.],       [  93.,  -42.,   16.],       [  46.,   -2.,   23.],       [  45.,   15.,   20.],       [  32.,   35.,   26.],       [  22.,   43.,   18.],       [   3.,   54.,   20.],       [ -24.,   41.,   25.],       [ -31.,   39.,   26.],       [ -51.,   21.,   21.],       [ -48.,   -1.,   25.],       [ -43.,  -15.,   22.],       [ -33.,  -37.,   18.],       [ -21.,  -49.,   25.],       [  -1.,  -48.,   19.],       [  14.,  -50.,   24.],       [  31.,  -34.,   27.],       [  42.,  -24.,   19.],       [  58.,   -2.,   26.],       [  47.,   22.,   26.],       [  43.,   37.,   21.],       [  18.,   48.,   20.],       [   2.,   60.,   19.],       [ -23.,   48.,   21.],       [ -41.,   41.,   20.],       [ -48.,   20.,   18.],       [ -61.,   -1.,   22.],       [ -52.,  -18.,   23.],       [ -39.,  -43.,   24.],       [ -26.,  -54.,   25.],       [   4.,  -58.,   24.],       [  17.,  -50.,   20.],       [  34.,  -42.,   23.],       [  52.,  -25.,   21.],       [  64.,    1.,   23.],       [  60.,   25.,   24.],       [  43.,   47.,   26.],       [  23.,   55.,   23.],       [   0.,   64.,   27.],       [ -23.,   53.,   20.],       [ -43.,   45.,   18.],       [ -54.,   19.,   19.],       [ -64.,   -1.,   20.],       [ -56.,  -27.,   27.],       [ -44.,  -44.,   25.],       [ -25.,  -55.,   17.],       [   1.,  -66.,   25.],       [  22.,  -52.,   27.],       [  47.,  -41.,   18.],       [  60.,  -28.,   24.],       [  71.,    0.,   18.],       [  61.,   29.,   25.],       [  48.,   44.,   19.],       [  29.,   61.,   20.],       [   0.,   70.,   20.],       [ -22.,   62.,   18.],       [ -44.,   44.,   22.],       [ -61.,   26.,   23.],       [ -71.,   -5.,   17.],       [ -60.,  -27.,   17.],       [ -49.,  -43.,   19.],       [ -24.,  -58.,   19.],       [  -4.,  -66.,   26.],       [  21.,  -63.,   26.],       [  48.,  -50.,   25.],       [  60.,  -23.,   18.],       [  70.,    3.,   25.],       [  71.,   30.,   25.],       [  49.,   54.,   25.],       [  29.,   65.,   24.],       [  -1.,   77.,   22.],       [ -27.,   69.,   24.],       [ -48.,   50.,   26.],       [ -64.,   31.,   26.],       [ -76.,   -4.,   18.],       [ -64.,  -26.,   23.],       [ -50.,  -50.,   19.],       [ -25.,  -72.,   20.],       [   4.,  -75.,   24.],       [  23.,  -71.,   19.],       [  47.,  -50.,   22.],       [  61.,  -23.,   17.],       [  74.,   -1.,   26.],       [  73.,   32.,   18.],       [  52.,   54.,   17.],       [  33.,   76.,   22.],       [   0.,   74.,   25.],       [ -32.,   75.,   22.],       [ -56.,   52.,   18.],       [ -74.,   27.,   22.],       [ -79.,    0.,   18.],       [ -75.,  -26.,   19.],       [ -52.,  -53.,   17.],       [ -34.,  -76.,   25.],       [   3.,  -74.,   17.],       [  34.,  -70.,   17.],       [  53.,  -53.,   17.],       [  69.,  -29.,   23.],       [  85.,   -3.,   21.],       [  78.,   31.,   21.],       [  59.,   55.,   20.],       [  27.,   81.,   21.],       [  -3.,   88.,   17.],       [ -29.,   80.,   25.],       [ -63.,   57.,   26.],       [ -79.,   36.,   20.],       [ -88.,   -3.,   19.],       [ -73.,  -32.,   25.],       [ -63.,  -58.,   23.],       [ -34.,  -82.,   23.],       [  -3.,  -86.,   22.],       [  31.,  -73.,   25.],       [  63.,  -61.,   23.],       [  80.,  -37.,   24.],       [  91.,    3.,   22.],       [  77.,   36.,   22.],       [  65.,   61.,   22.],       [  36.,   84.,   24.],       [   2.,   87.,   26.],       [ -35.,   80.,   22.],       [ -62.,   62.,   17.],       [ -78.,   38.,   19.],       [ -90.,   -3.,   17.],       [ -80.,  -37.,   26.],       [ -59.,  -64.,   23.],       [ -32.,  -82.,   22.],       [  -3.,  -89.,   20.],       [  37.,  -81.,   21.],       [  61.,  -63.,   23.],       [  82.,  -38.,   22.],       [  96.,   -1.,   25.],       [  89.,   37.,   25.],       [  66.,   64.,   20.],       [  34.,   88.,   25.],       [   1.,   91.,   19.],       [ -39.,   83.,   26.],       [ -71.,   69.,   20.],       [ -84.,   32.,   21.],       [ -99.,    2.,   20.],       [ -85.,  -36.,   25.],       [ -67.,  -67.,   20.],       [ -41.,  -92.,   24.],       [   3., -100.,   25.],       [  32.,  -89.,   25.],       [  62.,  -72.,   26.],       [  83.,  -38.,   22.],       [ 101.,   -4.,   17.],       [  94.,   42.,   19.],       [  71.,   71.,   21.],       [  33.,   91.,   24.],       [   1.,  102.,   24.],       [ -34.,   94.,   24.],       [ -67.,   75.,   18.],       [ -90.,   43.,   23.],       [-104.,   -3.,   20.],       [ -96.,  -40.,   22.],       [ -72.,  -69.,   25.],       [ -34.,  -89.,   23.],       [  -5., -104.,   21.],       [  38.,  -93.,   20.],       [  72.,  -72.,   25.],       [  93.,  -34.,   19.],       [  53.,   -3.,   25.],       [  46.,   22.,   29.],       [  39.,   30.,   27.],       [  15.,   45.,   27.],       [  -2.,   51.,   29.],       [ -18.,   43.,   27.],       [ -37.,   34.,   23.],       [ -47.,   16.,   27.],       [ -52.,   -3.,   23.],       [ -49.,  -17.,   27.],       [ -32.,  -38.,   27.],       [ -17.,  -44.,   26.],       [  -4.,  -51.,   23.],       [  18.,  -45.,   31.],       [  36.,  -38.,   24.],       [  42.,  -18.,   21.],       [  57.,    4.,   22.],       [  50.,   22.,   27.],       [  38.,   40.,   25.],       [  17.,   54.,   23.],       [  -2.,   59.,   27.],       [ -25.,   47.,   26.],       [ -36.,   37.,   25.],       [ -52.,   18.,   22.],       [ -52.,   -3.,   29.],       [ -57.,  -24.,   27.],       [ -37.,  -44.,   26.],       [ -25.,  -49.,   22.],       [   0.,  -57.,   24.],       [  22.,  -49.,   25.],       [  35.,  -40.,   24.],       [  49.,  -17.,   24.],       [  62.,    4.,   23.],       [  53.,   26.,   22.],       [  42.,   42.,   31.],       [  24.,   60.,   23.],       [   4.,   59.,   25.],       [ -26.,   58.,   27.],       [ -40.,   39.,   28.],       [ -61.,   24.,   29.],       [ -66.,   -4.,   23.],       [ -61.,  -27.,   24.],       [ -43.,  -48.,   25.],       [ -26.,  -56.,   23.],       [   0.,  -63.,   23.],       [  23.,  -52.,   27.],       [  42.,  -47.,   29.],       [  60.,  -27.,   29.],       [  67.,    3.,   22.],       [  61.,   26.,   25.],       [  48.,   43.,   23.],       [  26.,   64.,   30.],       [   4.,   70.,   25.],       [ -28.,   65.,   25.],       [ -48.,   48.,   26.],       [ -66.,   27.,   23.],       [ -68.,    1.,   30.],       [ -64.,  -29.,   30.],       [ -45.,  -50.,   21.],       [ -27.,  -66.,   24.],       [   3.,  -63.,   25.],       [  28.,  -64.,   30.],       [  47.,  -50.,   27.],       [  59.,  -26.,   23.],       [  74.,   -2.,   29.],       [  65.,   30.,   29.],       [  51.,   52.,   30.],       [  27.,   70.,   27.],       [  -4.,   71.,   23.],       [ -33.,   61.,   22.],       [ -56.,   50.,   25.],       [ -67.,   23.,   27.],       [ -74.,   -3.,   24.],       [ -67.,  -27.,   29.],       [ -53.,  -50.,   31.],       [ -25.,  -71.,   31.],       [  -1.,  -76.,   24.],       [  23.,  -63.,   31.],       [  51.,  -56.,   25.],       [  64.,  -29.,   22.],       [  79.,    4.,   27.],       [  71.,   28.,   22.],       [  58.,   52.,   22.],       [  30.,   69.,   26.],       [  -4.,   74.,   22.],       [ -31.,   72.,   30.],       [ -60.,   57.,   31.],       [ -75.,   32.,   25.],       [ -80.,   -4.,   30.],       [ -72.,  -33.,   26.],       [ -60.,  -57.,   26.],       [ -28.,  -76.,   31.],       [  -5.,  -82.,   23.],       [  26.,  -71.,   25.],       [  59.,  -52.,   28.],       [  71.,  -31.,   29.],       [  81.,   -3.,   21.],       [  75.,   36.,   26.],       [  54.,   61.,   26.],       [  27.,   81.,   30.],       [   3.,   78.,   28.],       [ -34.,   74.,   30.],       [ -59.,   63.,   21.],       [ -82.,   31.,   24.],       [ -84.,    3.,   28.],       [ -80.,  -33.,   29.],       [ -60.,  -56.,   26.],       [ -37.,  -80.,   28.],       [  -1.,  -88.,   23.],       [  29.,  -80.,   27.],       [  63.,  -63.,   31.],       [  72.,  -28.,   24.],       [  93.,    0.,   22.],       [  83.,   32.,   27.],       [  62.,   57.,   23.],       [  29.,   82.,   29.],       [   3.,   90.,   26.],       [ -33.,   82.,   29.],       [ -59.,   59.,   26.],       [ -85.,   35.,   21.],       [ -93.,    1.,   29.],       [ -85.,  -35.,   24.],       [ -59.,  -63.,   23.],       [ -33.,  -85.,   30.],       [  -1.,  -93.,   24.],       [  31.,  -80.,   22.],       [  60.,  -65.,   27.],       [  81.,  -39.,   29.],       [  93.,    3.,   24.],       [  82.,   38.,   26.],       [  62.,   61.,   29.],       [  33.,   84.,   24.],       [  -5.,   93.,   22.],       [ -32.,   82.,   27.],       [ -72.,   64.,   24.],       [ -87.,   36.,   24.],       [ -94.,    2.,   27.],       [ -89.,  -32.,   29.],       [ -63.,  -67.,   24.],       [ -32.,  -86.,   27.],       [  -3.,  -93.,   28.],       [  35.,  -86.,   28.],       [  65.,  -63.,   30.],       [  87.,  -38.,   23.],       [  97.,   -5.,   28.],       [  87.,   36.,   23.],       [  70.,   66.,   26.],       [  39.,   92.,   24.],       [   2.,  104.,   29.],       [ -40.,   90.,   25.],       [ -74.,   71.,   22.],       [ -89.,   41.,   25.],       [ -98.,   -2.,   21.],       [ -89.,  -43.,   26.],       [ -75.,  -70.,   21.],       [ -40.,  -93.,   27.],       [  -2., -104.,   26.],       [  39.,  -92.,   29.],       [  71.,  -67.,   31.],       [  93.,  -42.,   23.],       [  49.,   -4.,   27.],       [  44.,   19.,   34.],       [  33.,   31.,   32.],       [  22.,   49.,   30.],       [   0.,   51.,   31.],       [ -19.,   43.,   30.],       [ -33.,   34.,   33.],       [ -47.,   15.,   27.],       [ -53.,    1.,   27.],       [ -43.,  -17.,   30.],       [ -37.,  -38.,   27.],       [ -20.,  -48.,   34.],       [   1.,  -50.,   28.],       [  23.,  -45.,   30.],       [  38.,  -35.,   26.],       [  41.,  -16.,   34.],       [  56.,   -3.,   31.],       [  53.,   16.,   34.],       [  42.,   35.,   33.],       [  21.,   52.,   32.],       [  -5.,   59.,   26.],       [ -18.,   56.,   31.],       [ -37.,   34.,   30.],       [ -54.,   19.,   32.],       [ -53.,    4.,   34.],       [ -51.,  -18.,   29.],       [ -36.,  -37.,   35.],       [ -19.,  -50.,   26.],       [   0.,  -52.,   31.],       [  25.,  -56.,   32.],       [  38.,  -36.,   28.],       [  50.,  -18.,   35.],       [  61.,    0.,   27.],       [  56.,   21.,   26.],       [  39.,   46.,   32.],       [  20.,   61.,   27.],       [  -2.,   62.,   31.],       [ -29.,   53.,   28.],       [ -44.,   41.,   32.],       [ -62.,   18.,   35.],       [ -61.,   -5.,   33.],       [ -58.,  -22.,   28.],       [ -43.,  -40.,   28.],       [ -23.,  -59.,   30.],       [   1.,  -66.,   29.],       [  24.,  -61.,   29.],       [  38.,  -45.,   26.],       [  55.,  -25.,   34.],       [  66.,    3.,   27.],       [  63.,   24.,   27.],       [  46.,   46.,   31.],       [  25.,   65.,   34.],       [   2.,   66.,   27.],       [ -23.,   59.,   34.],       [ -43.,   50.,   31.],       [ -63.,   28.,   27.],       [ -71.,   -1.,   33.],       [ -63.,  -27.,   31.],       [ -46.,  -46.,   35.],       [ -26.,  -60.,   27.],       [  -4.,  -64.,   33.],       [  21.,  -61.,   33.],       [  48.,  -51.,   35.],       [  60.,  -28.,   28.],       [  68.,    4.,   30.],       [  69.,   29.,   34.],       [  48.,   50.,   34.],       [  26.,   65.,   31.],       [   4.,   74.,   31.],       [ -33.,   69.,   26.],       [ -48.,   53.,   33.],       [ -71.,   26.,   27.],       [ -70.,   -4.,   26.],       [ -66.,  -32.,   29.],       [ -52.,  -53.,   32.],       [ -33.,  -68.,   26.],       [  -1.,  -68.,   26.],       [  30.,  -68.,   30.],       [  52.,  -56.,   31.],       [  71.,  -28.,   33.],       [  79.,   -4.,   27.],       [  75.,   31.,   28.],       [  53.,   52.,   28.],       [  31.,   67.,   29.],       [  -2.,   75.,   30.],       [ -31.,   70.,   34.],       [ -53.,   55.,   33.],       [ -69.,   30.,   27.],       [ -81.,    3.,   34.],       [ -76.,  -31.,   32.],       [ -55.,  -51.,   28.],       [ -30.,  -71.,   29.],       [   1.,  -83.,   33.],       [  27.,  -77.,   31.],       [  54.,  -54.,   26.],       [  71.,  -28.,   35.],       [  84.,    2.,   32.],       [  77.,   33.,   34.],       [  63.,   55.,   32.],       [  35.,   78.,   33.],       [   2.,   88.,   34.],       [ -30.,   73.,   30.],       [ -61.,   58.,   29.],       [ -81.,   30.,   26.],       [ -86.,   -4.,   31.],       [ -76.,  -36.,   31.],       [ -57.,  -57.,   30.],       [ -35.,  -82.,   28.],       [  -5.,  -81.,   31.],       [  30.,  -78.,   33.],       [  56.,  -60.,   31.],       [  79.,  -28.,   27.],       [  87.,    3.,   30.],       [  79.,   34.,   34.],       [  60.,   59.,   28.],       [  34.,   77.,   28.],       [  -3.,   89.,   26.],       [ -39.,   85.,   27.],       [ -59.,   59.,   32.],       [ -79.,   35.,   27.],       [ -93.,   -4.,   34.],       [ -83.,  -31.,   33.],       [ -62.,  -63.,   34.],       [ -33.,  -85.,   34.],       [   4.,  -94.,   34.],       [  35.,  -81.,   31.],       [  67.,  -68.,   28.],       [  80.,  -37.,   26.],       [  93.,   -2.,   28.],       [  85.,   40.,   32.],       [  63.,   68.,   30.],       [  35.,   82.,   27.],       [   3.,   92.,   33.],       [ -36.,   83.,   29.],       [ -72.,   68.,   29.],       [ -89.,   36.,   27.],       [ -92.,    4.,   30.],       [ -91.,  -39.,   35.],       [ -69.,  -71.,   32.],       [ -40.,  -92.,   35.],       [  -5.,  -94.,   28.],       [  38.,  -90.,   29.],       [  70.,  -70.,   29.],       [  91.,  -40.,   35.],       [  97.,   -1.,   26.],       [  90.,   40.,   28.],       [  71.,   69.,   28.],       [  34.,   92.,   29.],       [  -1.,  100.,   35.],       [ -36.,   92.,   30.],       [ -70.,   70.,   30.],       [ -94.,   34.,   27.],       [ -99.,   -4.,   26.],       [ -91.,  -35.,   27.],       [ -68.,  -76.,   32.],       [ -34.,  -94.,   28.],       [  -1., -105.,   35.],       [  34.,  -88.,   29.],       [  73.,  -72.,   35.],       [  93.,  -37.,   34.],       [  47.,   -1.,   32.],       [  45.,   15.,   32.],       [  32.,   32.,   38.],       [  19.,   48.,   36.],       [   0.,   49.,   36.],       [ -19.,   46.,   39.],       [ -37.,   31.,   31.],       [ -46.,   20.,   31.],       [ -54.,   -5.,   33.],       [ -46.,  -20.,   30.],       [ -39.,  -40.,   33.],       [ -15.,  -46.,   36.],       [   3.,  -49.,   34.],       [  23.,  -49.,   35.],       [  32.,  -37.,   31.],       [  48.,  -24.,   31.],       [  57.,    1.,   32.],       [  51.,   22.,   35.],       [  34.,   41.,   39.],       [  21.,   55.,   40.],       [   1.,   54.,   33.],       [ -17.,   54.,   38.],       [ -42.,   34.,   34.],       [ -50.,   17.,   32.],       [ -56.,    4.,   40.],       [ -53.,  -18.,   34.],       [ -36.,  -42.,   39.],       [ -17.,  -47.,   35.],       [   3.,  -53.,   37.],       [  18.,  -51.,   35.],       [  39.,  -40.,   33.],       [  54.,  -23.,   35.],       [  57.,    4.,   33.],       [  58.,   20.,   36.],       [  42.,   44.,   33.],       [  23.,   54.,   31.],       [  -5.,   59.,   32.],       [ -19.,   60.,   37.],       [ -47.,   43.,   38.],       [ -54.,   18.,   35.],       [ -59.,    2.,   31.],       [ -58.,  -20.,   38.],       [ -42.,  -43.,   40.],       [ -19.,  -56.,   35.],       [   2.,  -66.,   38.],       [  24.,  -59.,   30.],       [  40.,  -46.,   33.],       [  52.,  -26.,   34.],       [  62.,   -4.,   37.],       [  57.,   29.,   39.],       [  46.,   51.,   32.],       [  23.,   56.,   31.],       [   2.,   68.,   37.],       [ -22.,   61.,   34.],       [ -44.,   49.,   37.],       [ -62.,   27.,   31.],       [ -72.,    4.,   31.],       [ -61.,  -29.,   31.],       [ -52.,  -52.,   40.],       [ -29.,  -59.,   33.],       [  -2.,  -70.,   39.],       [  21.,  -59.,   37.],       [  44.,  -49.,   35.],       [  61.,  -24.,   37.],       [  68.,   -3.,   34.],       [  68.,   26.,   33.],       [  53.,   50.,   39.],       [  24.,   63.,   31.],       [  -4.,   76.,   35.],       [ -29.,   68.,   37.],       [ -49.,   47.,   38.],       [ -67.,   31.,   35.],       [ -73.,   -3.,   35.],       [ -72.,  -24.,   33.],       [ -51.,  -49.,   33.],       [ -26.,  -64.,   31.],       [  -4.,  -68.,   37.],       [  28.,  -65.,   32.],       [  55.,  -55.,   39.],       [  67.,  -26.,   35.],       [  77.,    0.,   36.],       [  73.,   31.,   38.],       [  55.,   58.,   40.],       [  33.,   76.,   37.],       [   0.,   74.,   32.],       [ -34.,   76.,   38.],       [ -53.,   55.,   34.],       [ -68.,   31.,   30.],       [ -74.,    1.,   32.],       [ -68.,  -25.,   36.],       [ -51.,  -57.,   31.],       [ -25.,  -76.,   35.],       [  -1.,  -80.,   31.],       [  32.,  -74.,   35.],       [  59.,  -51.,   36.],       [  70.,  -29.,   36.],       [  83.,   -4.,   35.],       [  81.,   36.,   33.],       [  54.,   60.,   33.],       [  34.,   72.,   40.],       [  -5.,   87.,   35.],       [ -36.,   80.,   30.],       [ -63.,   59.,   34.],       [ -75.,   34.,   32.],       [ -82.,   -3.,   35.],       [ -76.,  -31.,   36.],       [ -63.,  -61.,   36.],       [ -35.,  -82.,   37.],       [   4.,  -85.,   31.],       [  31.,  -76.,   36.],       [  55.,  -62.,   35.],       [  78.,  -31.,   39.],       [  91.,    3.,   35.],       [  85.,   31.,   36.],       [  58.,   66.,   37.],       [  31.,   78.,   36.],       [  -1.,   86.,   30.],       [ -33.,   78.,   40.],       [ -61.,   59.,   31.],       [ -82.,   30.,   36.],       [ -93.,   -2.,   34.],       [ -86.,  -37.,   36.],       [ -67.,  -68.,   34.],       [ -32.,  -81.,   40.],       [   0.,  -92.,   34.],       [  36.,  -84.,   33.],       [  60.,  -63.,   34.],       [  84.,  -31.,   33.],       [  91.,   -3.,   34.],       [  84.,   33.,   38.],       [  65.,   67.,   34.],       [  31.,   82.,   33.],       [   1.,   97.,   34.],       [ -34.,   84.,   34.],       [ -67.,   66.,   34.],       [ -84.,   32.,   36.],       [ -90.,    0.,   33.],       [ -91.,  -38.,   36.],       [ -65.,  -65.,   36.],       [ -40.,  -89.,   32.],       [   3.,  -92.,   31.],       [  32.,  -92.,   36.],       [  70.,  -68.,   37.],       [  87.,  -32.,   32.],       [  98.,   -2.,   40.],       [  88.,   35.,   34.],       [  71.,   71.,   35.],       [  41.,   88.,   35.],       [  -3.,   97.,   32.],       [ -36.,   89.,   37.],       [ -68.,   72.,   38.],       [ -91.,   38.,   30.],       [ -97.,   -4.,   30.],       [ -92.,  -36.,   37.],       [ -68.,  -68.,   30.],       [ -36.,  -97.,   36.],       [  -1.,  -97.,   40.],       [  39.,  -91.,   32.],       [  65.,  -69.,   33.],       [  90.,  -42.,   38.],       [  50.,    3.,   40.],       [  48.,   23.,   38.],       [  33.,   34.,   43.],       [  20.,   51.,   39.],       [   4.,   48.,   43.],       [ -19.,   50.,   41.],       [ -38.,   30.,   39.],       [ -42.,   16.,   40.],       [ -46.,   -3.,   44.],       [ -51.,  -20.,   40.],       [ -32.,  -40.,   44.],       [ -23.,  -43.,   36.],       [   4.,  -46.,   44.],       [  22.,  -46.,   42.],       [  39.,  -38.,   42.],       [  49.,  -20.,   37.],       [  51.,   -5.,   43.],       [  51.,   20.,   35.],       [  37.,   36.,   37.],       [  23.,   56.,   38.],       [   1.,   57.,   39.],       [ -19.,   53.,   35.],       [ -38.,   38.,   39.],       [ -48.,   20.,   40.],       [ -56.,    4.,   42.],       [ -48.,  -26.,   35.],       [ -44.,  -39.,   38.],       [ -17.,  -56.,   40.],       [  -5.,  -54.,   36.],       [  24.,  -50.,   40.],       [  36.,  -38.,   40.],       [  51.,  -21.,   40.],       [  61.,   -2.,   39.],       [  56.,   21.,   36.],       [  43.,   46.,   35.],       [  19.,   60.,   40.],       [   0.,   59.,   43.],       [ -25.,   57.,   39.],       [ -47.,   41.,   43.],       [ -61.,   24.,   35.],       [ -60.,   -3.,   36.],       [ -54.,  -28.,   42.],       [ -46.,  -43.,   36.],       [ -21.,  -59.,   35.],       [   4.,  -64.,   37.],       [  24.,  -52.,   36.],       [  45.,  -40.,   35.],       [  56.,  -22.,   39.],       [  64.,   -4.,   40.],       [  65.,   21.,   41.],       [  42.,   43.,   42.],       [  29.,   61.,   36.],       [  -4.,   67.,   39.],       [ -30.,   59.,   41.],       [ -43.,   44.,   41.],       [ -60.,   28.,   35.],       [ -69.,    0.,   38.],       [ -58.,  -21.,   39.],       [ -47.,  -47.,   42.],       [ -27.,  -60.,   38.],       [  -1.,  -69.,   37.],       [  21.,  -66.,   38.],       [  44.,  -47.,   37.],       [  66.,  -30.,   43.],       [  69.,    3.,   43.],       [  68.,   23.,   43.],       [  51.,   47.,   39.],       [  26.,   65.,   35.],       [   1.,   75.,   36.],       [ -24.,   71.,   38.],       [ -56.,   53.,   41.],       [ -72.,   31.,   41.],       [ -76.,   -4.,   43.],       [ -66.,  -31.,   36.],       [ -53.,  -48.,   38.],       [ -31.,  -64.,   37.],       [   3.,  -71.,   40.],       [  23.,  -70.,   36.],       [  46.,  -54.,   35.],       [  66.,  -29.,   43.],       [  75.,    0.,   35.],       [  67.,   30.,   44.],       [  54.,   51.,   40.],       [  32.,   73.,   36.],       [  -1.,   75.,   42.],       [ -34.,   74.,   41.],       [ -58.,   52.,   39.],       [ -77.,   28.,   39.],       [ -82.,   -2.,   43.],       [ -73.,  -34.,   39.],       [ -53.,  -54.,   41.],       [ -33.,  -69.,   44.],       [   1.,  -76.,   37.],       [  32.,  -76.,   39.],       [  56.,  -58.,   41.],       [  76.,  -32.,   42.],       [  82.,   -2.,   35.],       [  78.,   28.,   42.],       [  56.,   57.,   39.],       [  30.,   77.,   40.],       [   0.,   88.,   43.],       [ -32.,   74.,   43.],       [ -64.,   54.,   40.],       [ -78.,   31.,   36.],       [ -87.,    2.,   35.],       [ -78.,  -36.,   36.],       [ -63.,  -64.,   36.],       [ -36.,  -81.,   41.],       [  -3.,  -81.,   35.],       [  34.,  -75.,   43.],       [  56.,  -61.,   40.],       [  74.,  -36.,   36.],       [  86.,   -2.,   36.],       [  78.,   32.,   44.],       [  59.,   62.,   39.],       [  29.,   78.,   39.],       [   4.,   85.,   39.],       [ -33.,   87.,   36.],       [ -66.,   64.,   37.],       [ -83.,   31.,   38.],       [ -92.,    1.,   40.],       [ -81.,  -31.,   35.],       [ -66.,  -64.,   44.],       [ -31.,  -78.,   36.],       [   4.,  -93.,   40.],       [  33.,  -85.,   36.],       [  61.,  -60.,   41.],       [  82.,  -36.,   43.],       [  94.,   -4.,   44.],       [  89.,   31.,   35.],       [  68.,   67.,   38.],       [  35.,   91.,   39.],       [  -5.,   94.,   39.],       [ -35.,   89.,   36.],       [ -69.,   63.,   41.],       [ -91.,   40.,   42.],       [ -96.,    4.,   38.],       [ -91.,  -38.,   39.],       [ -70.,  -64.,   35.],       [ -32.,  -91.,   43.],       [   4.,  -92.,   35.],       [  33.,  -84.,   38.],       [  71.,  -72.,   44.],       [  86.,  -38.,   36.],       [  97.,   -1.,   38.],       [  93.,   33.,   38.],       [  73.,   75.,   39.],       [  41.,   88.,   44.],       [   3.,  100.,   42.],       [ -43.,   92.,   40.],       [ -68.,   68.,   38.],       [ -97.,   33.,   36.],       [-101.,   -1.,   36.],       [ -94.,  -37.,   43.],       [ -68.,  -69.,   40.],       [ -39.,  -94.,   39.],       [   3.,  -98.,   36.],       [  36.,  -96.,   38.],       [  73.,  -76.,   44.],       [  91.,  -41.,   42.]])
        basis0 = BSplineBasis(6, np.array([ -3.2,  -2.1,  -1.2,   0. ,   0. ,   0. ,   0.7,   2. ,   3. ,   3.8,   5. ,   5.8,   6.8,
         8.4,   8.7,   9.7,  10.8,  11.9,  12.8,  14. ,  14. ,  14. ,  14.7,  16. ,  17. ]),2)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.7,  2.9,  4. ,  4. ,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2.1,  2.9,  4. ,  4. ,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2.insert_knot([6.637]*1, 0) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 26)
        vol2.insert_knot([3.880]*2, 0) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 28)
        vol2.insert_knot([1.233]*3, 0) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 31)
        vol2.insert_knot([3.340]*4, 0) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 35)
        vol2.insert_knot([10.035]*5, 0) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=0,with_multiplicities=True)), 40)
        vol2.insert_knot([2.674]*1, 1) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 18)
        vol2.insert_knot([2.049]*2, 1) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 20)
        vol2.insert_knot([2.727]*3, 1) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 23)
        vol2.insert_knot([2.278]*4, 1) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 27)
        vol2.insert_knot([2.252]*5, 1) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 32)
        vol2.insert_knot([1.451]*6, 1) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=1,with_multiplicities=True)), 38)
        vol2.insert_knot([2.627]*1, 2) # insert C5-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 18)
        vol2.insert_knot([1.143]*2, 2) # insert C4-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 20)
        vol2.insert_knot([1.396]*3, 2) # insert C3-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 23)
        vol2.insert_knot([1.722]*4, 2) # insert C2-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 27)
        vol2.insert_knot([1.125]*5, 2) # insert C1-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 32)
        vol2.insert_knot([1.134]*6, 2) # insert C0-knot
        self.assertEqual(len(vol2.knots(direction=2,with_multiplicities=True)), 38)

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        self.assertAlmostEqual(np.linalg.norm(pt-pt2), 0.0)


if __name__ == '__main__':
    unittest.main()
