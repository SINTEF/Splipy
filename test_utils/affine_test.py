# --- Automatic generated test file  ---
# Generator    : generate_affine.py
# Date         : 2016-01-29
# Git revision : 8d0dc5a99fc2d41964f0eced89a17fe40c1bb482

import numpy as np
from GeoMod import Volume, Surface, Curve, BSplineBasis
from math import sqrt
import unittest


class TestAffine(unittest.TestCase):
    def test_translate_curve_2D_p2_rational(self):
        controlpoints = np.array([[  -2. ,    3. ,    1.5],
       [  26. ,   -1. ,    0.6],
       [  48. ,   -1. ,    0.7],
       [  73. ,    0. ,    0.5],
       [ 102. ,   -5. ,    1.2]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  1.9,  3.1,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 9.2,  2.1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 9.200000
        pt2[...,1] -= 2.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_2D_p4_rational(self):
        controlpoints = np.array([[  1. ,  -5. ,   0.8],
       [ 22. ,   4. ,   0.8],
       [ 44. ,  -1. ,   1.4],
       [ 59. ,  -4. ,   1.5],
       [ 76. ,  -5. ,   0.6],
       [ 95. ,  -2. ,   1.3]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.4,  1.7,  3. ,  3. ,  3. ,  3. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 2.8,  6. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 2.800000
        pt2[...,1] /= 6.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p42_rational(self):
        controlpoints = np.array([[   2. ,   -3. ,    1.1],
       [  19. ,   -2. ,    0.9],
       [  42. ,    0. ,    1. ],
       [  61. ,    0. ,    0.7],
       [  80. ,   -3. ,    1.2],
       [ 104. ,    0. ,    1. ],
       [   4. ,   45. ,    1.1],
       [  18. ,   54. ,    1.3],
       [  44. ,   48. ,    0.6],
       [  59. ,   49. ,    0.9],
       [  79. ,   49. ,    1.1],
       [ 103. ,   51. ,    1.3],
       [   1. ,  100. ,    0.5],
       [  22. ,   96. ,    0.9],
       [  42. ,  102. ,    1.2],
       [  63. ,   98. ,    0.7],
       [  77. ,   96. ,    1.3],
       [  97. ,   96. ,    1.4]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  2.4,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(2, np.array([ 0.,  0.,  1.,  2.,  2.]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 0.4,  7.6,  3.2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 0.400000
        pt2[...,1] -= 7.600000
        pt2[...,2] -= 3.200000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_surface_2D_p42_rational(self):
        controlpoints = np.array([[   0. ,    4. ,    1.2],
       [  17. ,   -4. ,    1.1],
       [  42. ,   -5. ,    1. ],
       [  61. ,    2. ,    0.6],
       [  75. ,   -2. ,    0.8],
       [  95. ,    2. ,    1.3],
       [   1. ,   54. ,    1.1],
       [  23. ,   47. ,    0.8],
       [  37. ,   47. ,    1.2],
       [  55. ,   54. ,    1. ],
       [  75. ,   49. ,    1.2],
       [ 100. ,   52. ,    1. ],
       [  -1. ,   99. ,    0.7],
       [  24. ,   98. ,    1.2],
       [  40. ,  103. ,    1.3],
       [  62. ,  104. ,    1.5],
       [  81. ,   98. ,    0.9],
       [  95. ,   97. ,    1. ]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1. ,  2.3,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 4.3,  7.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.300000
        pt2[...,1] /= 7.400000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p4_rational_C0_periodic(self):
        controlpoints = np.array([[ 100. ,   -3. ,    0.9],
       [  72. ,   68. ,    1.3],
       [   2. ,   98. ,    0.7],
       [ -69. ,   73. ,    1. ],
       [-102. ,   -3. ,    1.5],
       [ -76. ,  -72. ,    0.6],
       [  -2. , -101. ,    0.9],
       [  69. ,  -75. ,    1.4]])
        basis0 = BSplineBasis(4, np.array([-1.2,  0. ,  0. ,  0. ,  0.9,  2.4,  2.9,  4. ,  4.8,  6. ,  6. ,
        6. ,  6.9]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 3.3,  9.1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 3.300000
        pt2[...,1] -= 9.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_2D_p2_rational_C0_periodic(self):
        controlpoints = np.array([[ 100. ,    3. ,    0.5],
       [   3. ,  102. ,    1.3],
       [-100. ,    1. ,    1.3],
       [  -5. , -103. ,    1.1]])
        basis0 = BSplineBasis(2, np.array([-1.1,  0. ,  1.3,  2.4,  2.9,  4. ,  5.3]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 3.4,  5.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 3.400000
        pt2[...,1] /= 5.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p24_rational_C0_periodic(self):
        controlpoints = np.array([[ 58. ,  -4. ,   0.7],       [ 35. ,  45. ,   1.3],       [-13. ,  56. ,   1.3],       [-59. ,  29. ,   0.8],       [-51. , -22. ,   1.2],       [-13. , -60. ,   0.6],       [ 33. , -49. ,   0.6],       [ 68. ,  -5. ,   0.8],       [ 44. ,  48. ,   1. ],       [-14. ,  64. ,   1.1],       [-63. ,  24. ,   0.6],       [-63. , -29. ,   1.1],       [-17. , -63. ,   1.1],       [ 37. , -46. ,   0.5],       [ 69. ,  -3. ,   0.9],       [ 47. ,  58. ,   0.5],       [-16. ,  68. ,   1.1],       [-65. ,  31. ,   1.2],       [-63. , -30. ,   0.6],       [-12. , -72. ,   0.8],       [ 39. , -58. ,   0.8],       [ 72. ,   0. ,   1.3],       [ 43. ,  62. ,   0.5],       [-20. ,  68. ,   1. ],       [-64. ,  34. ,   1.4],       [-70. , -35. ,   0.7],       [-22. , -76. ,   1.2],       [ 42. , -59. ,   0.6],       [ 78. ,  -3. ,   1.1],       [ 47. ,  64. ,   0.9],       [-14. ,  79. ,   1.3],       [-71. ,  35. ,   1.3],       [-74. , -37. ,   0.8],       [-16. , -76. ,   1. ],       [ 46. , -63. ,   1.1],       [ 86. ,  -4. ,   0.8],       [ 53. ,  65. ,   1. ],       [-19. ,  87. ,   0.9],       [-72. ,  41. ,   1. ],       [-78. , -39. ,   0.8],       [-18. , -86. ,   1. ],       [ 51. , -70. ,   1. ],       [ 91. ,   3. ,   0.9],       [ 53. ,  71. ,   0.7],       [-22. ,  88. ,   1.2],       [-85. ,  43. ,   0.6],       [-86. , -44. ,   1.4],       [-21. , -87. ,   0.7],       [ 57. , -71. ,   0.7],       [ 90. ,  -5. ,   1. ],       [ 61. ,  74. ,   0.9],       [-21. ,  91. ,   1.2],       [-85. ,  39. ,   1.1],       [-84. , -42. ,   1.4],       [-25. , -96. ,   1.5],       [ 62. , -80. ,   1. ],       [ 97. ,   1. ,   0.7],       [ 64. ,  76. ,   0.8],       [-22. ,  97. ,   0.8],       [-86. ,  39. ,   1.1],       [-88. , -46. ,   1.5],       [-20. , -99. ,   0.5],       [ 58. , -80. ,   1.2]])
        basis0 = BSplineBasis(2, np.array([-1. ,  0. ,  0.8,  2.1,  3.2,  4.4,  4.6,  6. ,  7. ,  7.8]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  1.9,  2.9,  4. ,  5. ,  6. ,  6. ,
        6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 6. ,  3.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 6.000000
        pt2[...,1] -= 3.400000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_2D_p33_rational_C0_periodic(self):
        controlpoints = np.array([[ 58. ,  -2. ,   1.2],       [ 45. ,  42. ,   0.7],       [ -3. ,  58. ,   1.3],       [-47. ,  45. ,   1.1],       [-63. ,   2. ,   1.5],       [-46. , -45. ,   0.7],       [ -5. , -63. ,   1.2],       [ 40. , -41. ,   0.8],       [ 69. ,   3. ,   1.2],       [ 50. ,  47. ,   1. ],       [ -3. ,  69. ,   0.7],       [-56. ,  48. ,   1.4],       [-77. ,  -3. ,   1.5],       [-54. , -48. ,   0.7],       [  0. , -69. ,   1.4],       [ 49. , -54. ,   1.2],       [ 87. ,   1. ,   1.3],       [ 65. ,  62. ,   0.9],       [ -3. ,  85. ,   1.4],       [-64. ,  66. ,   0.9],       [-92. ,   2. ,   1.4],       [-57. , -66. ,   0.5],       [  1. , -84. ,   0.8],       [ 60. , -66. ,   1. ],       [ 95. ,   0. ,   0.5],       [ 73. ,  72. ,   0.5],       [ -4. ,  97. ,   0.8],       [-67. ,  72. ,   0.9],       [-97. ,   0. ,   1.4],       [-67. , -71. ,   1.1],       [  4. , -97. ,   0.8],       [ 72. , -76. ,   1. ]])
        basis0 = BSplineBasis(3, np.array([-1. ,  0. ,  0. ,  1. ,  2.4,  3.3,  4.3,  5.2,  6. ,  7. ,  7. ,
        8. ]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.4,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 4.9,  4.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.900000
        pt2[...,1] /= 4.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_2D_p3_rational_C1_periodic(self):
        controlpoints = np.array([[ 101. ,    4. ,    0.9],
       [  28. ,   90. ,    1.1],
       [ -80. ,   63. ,    0.6],
       [ -79. ,  -62. ,    0.7],
       [  33. ,  -95. ,    0.8]])
        basis0 = BSplineBasis(3, np.array([-2.1, -1. ,  0. ,  0.8,  1.9,  2.9,  4. ,  5. ,  5.8,  6.9]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 11.5,   8.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 11.500000
        pt2[...,1] /= 8.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p4(self):
        controlpoints = np.array([[  0.,   3.],
       [ 16.,   1.],
       [ 21.,  -4.],
       [ 41.,  -1.],
       [ 47.,  -1.],
       [ 62.,   2.],
       [ 73.,  -1.],
       [ 92.,  -1.],
       [ 96.,  -3.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.8,  1.8,  2.9,  4.1,  4.8,  6. ,  6. ,
        6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 4.4,  1.6,  7.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 4.400000
        pt2[...,1] -= 1.600000
        pt2[...,2] -= 7.200000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_curve_2D_p4(self):
        controlpoints = np.array([[  1.,   2.],
       [ 23.,  -5.],
       [ 54.,  -5.],
       [ 79.,  -5.],
       [ 99.,  -2.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ,  2. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 10.4,  10.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 10.400000
        pt2[...,1] /= 10.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p34(self):
        controlpoints = np.array([[   3.,   -3.],
       [  23.,   -4.],
       [  48.,    2.],
       [  70.,   -3.],
       [  98.,    2.],
       [  -2.,   29.],
       [  21.,   27.],
       [  49.,   25.],
       [  77.,   25.],
       [ 102.,   23.],
       [   1.,   48.],
       [  26.,   50.],
       [  49.,   52.],
       [  76.,   48.],
       [  95.,   50.],
       [  -1.,   72.],
       [  27.,   78.],
       [  46.,   70.],
       [  76.,   76.],
       [ 102.,   73.],
       [   0.,  103.],
       [  26.,   97.],
       [  48.,  103.],
       [  71.,   98.],
       [ 104.,   99.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.7,  2. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 0.5,  5.9,  3.6])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 0.500000
        pt2[...,1] -= 5.900000
        pt2[...,2] -= 3.600000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_surface_2D_p33(self):
        controlpoints = np.array([[   3.,    3.],
       [  24.,   -2.],
       [  47.,   -2.],
       [  70.,   -2.],
       [  98.,    1.],
       [  -4.,   29.],
       [  27.,   29.],
       [  50.,   28.],
       [  71.,   27.],
       [ 101.,   26.],
       [  -1.,   49.],
       [  29.,   49.],
       [  54.,   45.],
       [  71.,   54.],
       [ 102.,   46.],
       [  -2.,   78.],
       [  27.,   70.],
       [  51.,   73.],
       [  75.,   77.],
       [ 102.,   73.],
       [   3.,   97.],
       [  22.,   95.],
       [  51.,   97.],
       [  72.,   99.],
       [  96.,  102.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1. ,  1.8,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1. ,  1.9,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 10.3,  10.6])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 10.300000
        pt2[...,1] /= 10.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p2_C0_periodic(self):
        controlpoints = np.array([[  96.,    3.],
       [  66.,   77.],
       [ -25.,   99.],
       [ -93.,   39.],
       [ -89.,  -43.],
       [ -18., -101.],
       [  61.,  -77.]])
        basis0 = BSplineBasis(2, np.array([-0.7,  0. ,  1.2,  2.2,  3.2,  4.2,  5.1,  6.3,  7. ,  8.2]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 1.9,  5.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 1.900000
        pt2[...,1] -= 5.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_2D_p2_C0_periodic(self):
        controlpoints = np.array([[  95.,   -1.],
       [   1.,  103.],
       [ -98.,    0.],
       [  -2., -104.]])
        basis0 = BSplineBasis(2, np.array([-1.1,  0. ,  0.9,  1.7,  2.9,  4. ,  4.9]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([  3.4,  10.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 3.400000
        pt2[...,1] /= 10.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p44_C0_periodic(self):
        controlpoints = np.array([[  60.,    2.],       [  41.,   47.],       [  -3.,   64.],       [ -48.,   39.],       [ -64.,    4.],       [ -44.,  -43.],       [  -3.,  -56.],       [  38.,  -47.],       [  68.,    4.],       [  45.,   43.],       [  -1.,   63.],       [ -50.,   43.],       [ -67.,   -4.],       [ -43.,  -48.],       [   0.,  -68.],       [  46.,  -52.],       [  69.,    1.],       [  52.,   54.],       [   3.,   76.],       [ -49.,   48.],       [ -73.,   -2.],       [ -48.,  -49.],       [   4.,  -76.],       [  55.,  -53.],       [  82.,   -5.],       [  55.,   55.],       [   3.,   76.],       [ -61.,   61.],       [ -79.,    0.],       [ -56.,  -60.],       [  -4.,  -77.],       [  52.,  -54.],       [  88.,    0.],       [  66.,   59.],       [  -3.,   88.],       [ -62.,   58.],       [ -83.,   -3.],       [ -59.,  -64.],       [  -5.,  -89.],       [  59.,  -61.],       [  95.,   -4.],       [  62.,   67.],       [  -1.,   97.],       [ -64.,   66.],       [ -93.,    2.],       [ -70.,  -67.],       [   2.,  -91.],       [  68.,  -66.],       [ 101.,    2.],       [  72.,   72.],       [  -3.,   98.],       [ -71.,   72.],       [ -96.,    1.],       [ -76.,  -75.],       [  -5., -103.],       [  72.,  -73.]])
        basis0 = BSplineBasis(4, np.array([-0.9,  0. ,  0. ,  0. ,  1.3,  1.8,  3. ,  3.8,  5.1,  6. ,  6. ,
        6. ,  7.3]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  2.4,  3.1,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 1.7,  7.6,  5. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 1.700000
        pt2[...,1] -= 7.600000
        pt2[...,2] -= 5.000000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_surface_2D_p23_C0_periodic(self):
        controlpoints = np.array([[  58.,   -1.],       [  35.,   44.],       [ -12.,   59.],       [ -55.,   25.],       [ -50.,  -27.],       [ -15.,  -56.],       [  41.,  -48.],       [  69.,    2.],       [  42.,   54.],       [ -16.,   66.],       [ -65.,   33.],       [ -60.,  -34.],       [ -16.,  -71.],       [  39.,  -53.],       [  78.,   -2.],       [  53.,   61.],       [ -16.,   74.],       [ -73.,   32.],       [ -75.,  -38.],       [ -22.,  -77.],       [  54.,  -66.],       [  92.,   -1.],       [  53.,   71.],       [ -19.,   86.],       [ -86.,   37.],       [ -84.,  -43.],       [ -23.,  -92.],       [  52.,  -74.],       [  97.,   -4.],       [  60.,   83.],       [ -24.,   98.],       [ -89.,   46.],       [ -95.,  -48.],       [ -26., -103.],       [  63.,  -75.]])
        basis0 = BSplineBasis(2, np.array([-1.4,  0. ,  1. ,  2.4,  2.7,  3.8,  5.1,  5.6,  7. ,  8. ]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  1.9,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 6.4,  5.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 6.400000
        pt2[...,1] /= 5.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p4_C1_periodic(self):
        controlpoints = np.array([[  98.,   -5.],
       [  70.,   68.],
       [  -2.,  103.],
       [ -74.,   72.],
       [-101.,    1.],
       [ -72.,  -75.],
       [  -5.,  -97.],
       [  73.,  -69.]])
        basis0 = BSplineBasis(4, np.array([-1.7, -1.3,  0. ,  0. ,  1. ,  1.8,  2.8,  4.3,  5.3,  5.7,  7. ,
        7. ,  8. ,  8.8]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 6.5,  9. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 6.500000
        pt2[...,1] -= 9.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_2D_p3_C1_periodic(self):
        controlpoints = np.array([[ 104.,    0.],
       [  60.,   73.],
       [ -19.,   92.],
       [ -88.,   42.],
       [ -89.,  -45.],
       [ -21., -103.],
       [  61.,  -79.]])
        basis0 = BSplineBasis(3, np.array([-1.7, -1.3,  0. ,  0.8,  1.7,  2.7,  4.3,  5.3,  5.7,  7. ,  7.8,
        8.7]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 8.5,  3.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 8.500000
        pt2[...,1] /= 3.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p32_C1_periodic(self):
        controlpoints = np.array([[  59.,    4.],
       [  26.,   56.],
       [ -28.,   52.],
       [ -61.,    2.],
       [ -26.,  -50.],
       [  32.,  -51.],
       [  71.,    2.],
       [  38.,   57.],
       [ -31.,   63.],
       [ -71.,   -3.],
       [ -35.,  -63.],
       [  35.,  -66.],
       [  84.,    2.],
       [  41.,   64.],
       [ -45.,   65.],
       [ -81.,    2.],
       [ -42.,  -66.],
       [  39.,  -72.],
       [  90.,    1.],
       [  42.,   75.],
       [ -49.,   79.],
       [ -92.,    2.],
       [ -49.,  -83.],
       [  45.,  -79.],
       [ 101.,   -1.],
       [  47.,   83.],
       [ -49.,   83.],
       [ -98.,   -5.],
       [ -50.,  -85.],
       [  45.,  -92.]])
        basis0 = BSplineBasis(3, np.array([-2. , -1.4,  0. ,  0.8,  1.9,  3.1,  4. ,  4.6,  6. ,  6.8,  7.9]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  1.7,  3.3,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 2.8,  0.2,  1.8])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 2.800000
        pt2[...,1] -= 0.200000
        pt2[...,2] -= 1.800000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_surface_2D_p32_C1_periodic(self):
        controlpoints = np.array([[  63.,    4.],       [  42.,   40.],       [   1.,   64.],       [ -39.,   45.],       [ -63.,    4.],       [ -41.,  -43.],       [  -3.,  -60.],       [  42.,  -42.],       [  62.,    0.],       [  49.,   42.],       [   1.,   65.],       [ -49.,   52.],       [ -72.,    2.],       [ -43.,  -51.],       [  -5.,  -67.],       [  44.,  -46.],       [  70.,   -1.],       [  50.,   47.],       [   4.,   68.],       [ -50.,   49.],       [ -69.,   -5.],       [ -49.,  -55.],       [   4.,  -77.],       [  51.,  -54.],       [  79.,   -4.],       [  52.,   55.],       [  -1.,   78.],       [ -57.,   54.],       [ -85.,   -2.],       [ -53.,  -61.],       [  -1.,  -81.],       [  59.,  -55.],       [  85.,   -3.],       [  61.,   64.],       [   3.,   84.],       [ -65.,   65.],       [ -85.,   -4.],       [ -60.,  -65.],       [   3.,  -88.],       [  60.,  -64.],       [  88.,    4.],       [  64.,   67.],       [   2.,   93.],       [ -63.,   70.],       [ -90.,    3.],       [ -62.,  -64.],       [  -4.,  -94.],       [  68.,  -64.],       [ 102.,   -5.],       [  69.,   74.],       [   2.,  102.],       [ -75.,   74.],       [-100.,   -5.],       [ -71.,  -72.],       [  -5.,  -98.],       [  66.,  -68.]])
        basis0 = BSplineBasis(3, np.array([ -1.9,  -1.3,   0. ,   0.7,   2.2,   3. ,   4.2,   4.7,   6.1,
         6.7,   8. ,   8.7,  10.2]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.6,  1.7,  3.1,  4. ,  5.3,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 11.7,   5. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 11.700000
        pt2[...,1] /= 5.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p4_rational(self):
        controlpoints = np.array([[   3. ,   -1. ,    1. ,    0.8],
       [  29. ,    2. ,    2. ,    0.8],
       [  51. ,   -3. ,   -2. ,    0.8],
       [  77. ,    0. ,    2. ,    1. ],
       [ 104. ,   -2. ,    3. ,    1.2]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2. ,  2. ,  2. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 6.3,  8.5,  3.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 6.300000
        pt2[...,1] -= 8.500000
        pt2[...,2] -= 3.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p3_rational(self):
        controlpoints = np.array([[  -4. ,   -4. ,    0. ,    1.4],
       [  28. ,    0. ,   -4. ,    0.9],
       [  49. ,    3. ,   -1. ,    1. ],
       [  71. ,    1. ,   -2. ,    0.9],
       [ 101. ,    2. ,   -2. ,    1. ]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1. ,  1.9,  3. ,  3. ,  3. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 8.1,  9.3,  2.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 8.100000
        pt2[...,1] /= 9.300000
        pt2[...,2] /= 2.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p43_rational(self):
        controlpoints = np.array([[   4. ,   -2. ,   -2. ,    1. ],
       [  21. ,   -4. ,    1. ,    0.5],
       [  53. ,   -2. ,   -5. ,    1.1],
       [  74. ,   -2. ,   -3. ,    1.1],
       [ 102. ,    3. ,    0. ,    0.5],
       [   4. ,   23. ,    3. ,    1. ],
       [  20. ,   22. ,   -1. ,    1.3],
       [  52. ,   24. ,    0. ,    1.2],
       [  78. ,   22. ,   -1. ,    0.7],
       [  96. ,   26. ,   -1. ,    0.6],
       [   2. ,   49. ,   -1. ,    1.4],
       [  23. ,   45. ,    3. ,    0.8],
       [  47. ,   47. ,    0. ,    1. ],
       [  74. ,   45. ,   -5. ,    0.9],
       [  95. ,   49. ,    2. ,    1.3],
       [   1. ,   70. ,   -5. ,    0.9],
       [  23. ,   79. ,   -4. ,    0.5],
       [  47. ,   77. ,    0. ,    0.5],
       [  71. ,   76. ,   -4. ,    1.3],
       [  96. ,   74. ,   -5. ,    1.4],
       [   0. ,   97. ,    0. ,    1.3],
       [  28. ,  102. ,    3. ,    1.2],
       [  52. ,  101. ,   -2. ,    1.5],
       [  74. ,  104. ,   -1. ,    1.2],
       [ 101. ,   98. ,    3. ,    0.7]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.6,  2. ,  2. ,  2. ,  2. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  2.4,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 7.8,  6.9,  4. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 7.800000
        pt2[...,1] -= 6.900000
        pt2[...,2] -= 4.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p33_rational(self):
        controlpoints = np.array([[  -5. ,   -5. ,    2. ,    1.4],
       [  27. ,    2. ,    0. ,    1.5],
       [  54. ,    1. ,    1. ,    1. ],
       [  73. ,   -3. ,    3. ,    1.2],
       [  97. ,    4. ,   -1. ,    0.6],
       [   0. ,   16. ,   -4. ,    1.4],
       [  26. ,   15. ,   -3. ,    0.7],
       [  46. ,   24. ,   -1. ,    0.9],
       [  75. ,   15. ,   -5. ,    1.1],
       [ 101. ,   17. ,   -5. ,    0.8],
       [   4. ,   39. ,   -4. ,    0.7],
       [  24. ,   41. ,   -1. ,    0.6],
       [  53. ,   37. ,   -4. ,    1.2],
       [  76. ,   41. ,   -1. ,    0.7],
       [ 104. ,   42. ,   -1. ,    0.7],
       [   4. ,   61. ,   -4. ,    1.3],
       [  29. ,   56. ,   -1. ,    1. ],
       [  54. ,   63. ,   -4. ,    1.4],
       [  72. ,   55. ,   -1. ,    1.1],
       [  96. ,   62. ,   -1. ,    1.1],
       [   2. ,   76. ,    4. ,    0.9],
       [  27. ,   78. ,    4. ,    1.3],
       [  52. ,   79. ,    4. ,    1.2],
       [  79. ,   82. ,    2. ,    1.1],
       [  95. ,   78. ,    1. ,    1. ],
       [  -4. ,   95. ,   -5. ,    1.2],
       [  25. ,   95. ,    0. ,    1.3],
       [  52. ,  100. ,   -1. ,    1.4],
       [  71. ,   97. ,    2. ,    0.6],
       [  98. ,  100. ,   -4. ,    0.7]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  2.1,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  2. ,  3.1,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 4.6,  4.3,  2. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.600000
        pt2[...,1] /= 4.300000
        pt2[...,2] /= 2.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p242_rational(self):
        controlpoints = np.array([[  -5. ,    0. ,    2. ,    0.5],       [  22. ,    1. ,    4. ,    0.9],       [  39. ,    2. ,   -5. ,    0.5],       [  57. ,    3. ,    2. ,    0.6],       [  84. ,    2. ,   -4. ,    0.9],       [  97. ,   -2. ,   -4. ,    1.1],       [  -4. ,   13. ,    1. ,    1. ],       [  20. ,   14. ,   -1. ,    0.8],       [  42. ,   10. ,   -1. ,    1.3],       [  58. ,   18. ,   -1. ,    1. ],       [  80. ,   10. ,    1. ,    1.4],       [  97. ,   13. ,    1. ,    1. ],       [   2. ,   27. ,    1. ,    1.4],       [  16. ,   33. ,    1. ,    1.4],       [  42. ,   29. ,    0. ,    1. ],       [  61. ,   31. ,   -1. ,    0.6],       [  80. ,   28. ,    2. ,    0.8],       [  96. ,   24. ,   -5. ,    1.3],       [  -1. ,   38. ,   -5. ,    1.5],       [  22. ,   45. ,   -4. ,    0.9],       [  35. ,   41. ,    3. ,    1.4],       [  58. ,   38. ,    2. ,    0.7],       [  81. ,   44. ,    3. ,    1.5],       [  95. ,   38. ,    4. ,    1.2],       [  -1. ,   56. ,    1. ,    1.3],       [  19. ,   61. ,   -1. ,    0.6],       [  44. ,   60. ,    0. ,    1.1],       [  55. ,   56. ,   -2. ,    1.2],       [  78. ,   54. ,    1. ,    0.5],       [ 102. ,   61. ,   -4. ,    0.6],       [  -4. ,   68. ,   -1. ,    0.8],       [  19. ,   68. ,   -3. ,    1.1],       [  43. ,   71. ,    4. ,    1.3],       [  58. ,   68. ,   -5. ,    1. ],       [  80. ,   68. ,    0. ,    1. ],       [ 102. ,   68. ,   -2. ,    1.4],       [   0. ,   89. ,    3. ,    1.1],       [  23. ,   89. ,    1. ,    1.3],       [  43. ,   81. ,   -4. ,    1.4],       [  56. ,   89. ,    4. ,    1.2],       [  79. ,   85. ,   -5. ,    0.9],       [  96. ,   82. ,    3. ,    1. ],       [   1. ,  104. ,   -4. ,    0.9],       [  17. ,  103. ,    2. ,    0.8],       [  44. ,   98. ,   -5. ,    1.3],       [  60. ,   96. ,    4. ,    1.2],       [  84. ,  103. ,    2. ,    0.8],       [ 104. ,   98. ,    1. ,    1.4],       [  -3. ,    0. ,   36. ,    0.7],       [  22. ,   -5. ,   35. ,    1.2],       [  43. ,    4. ,   31. ,    0.6],       [  61. ,    2. ,   32. ,    0.6],       [  76. ,    1. ,   34. ,    1.4],       [ 101. ,   -2. ,   33. ,    0.9],       [   2. ,   12. ,   31. ,    1.2],       [  17. ,   13. ,   34. ,    1.1],       [  35. ,   13. ,   28. ,    1.4],       [  62. ,   17. ,   28. ,    0.9],       [  75. ,   16. ,   30. ,    0.5],       [  99. ,   12. ,   28. ,    0.8],       [  -4. ,   29. ,   32. ,    0.5],       [  18. ,   25. ,   35. ,    0.9],       [  37. ,   27. ,   30. ,    1.5],       [  55. ,   28. ,   36. ,    0.8],       [  78. ,   26. ,   35. ,    1.1],       [ 103. ,   30. ,   30. ,    1.2],       [  -3. ,   43. ,   33. ,    1.4],       [  15. ,   41. ,   37. ,    1.1],       [  39. ,   47. ,   37. ,    0.6],       [  60. ,   41. ,   36. ,    1.4],       [  79. ,   47. ,   35. ,    1. ],       [ 102. ,   43. ,   31. ,    1. ],       [   3. ,   58. ,   32. ,    1.5],       [  17. ,   56. ,   37. ,    1.5],       [  41. ,   53. ,   34. ,    1.2],       [  57. ,   53. ,   35. ,    1. ],       [  78. ,   60. ,   29. ,    1.3],       [ 102. ,   52. ,   28. ,    0.7],       [  -2. ,   73. ,   30. ,    1.1],       [  17. ,   75. ,   37. ,    0.8],       [  36. ,   72. ,   33. ,    1.2],       [  59. ,   66. ,   36. ,    0.6],       [  78. ,   69. ,   29. ,    1.2],       [  98. ,   73. ,   38. ,    1. ],       [  -1. ,   83. ,   32. ,    0.6],       [  16. ,   85. ,   34. ,    0.8],       [  43. ,   84. ,   29. ,    1.2],       [  55. ,   84. ,   37. ,    1.4],       [  83. ,   82. ,   34. ,    1.3],       [ 101. ,   87. ,   34. ,    0.7],       [  -3. ,  104. ,   30. ,    0.6],       [  16. ,   99. ,   31. ,    1.5],       [  38. ,  102. ,   36. ,    0.7],       [  60. ,  101. ,   33. ,    0.9],       [  76. ,   96. ,   35. ,    0.8],       [ 101. ,   95. ,   29. ,    1.3],       [  -1. ,    4. ,   65. ,    0.6],       [  22. ,    0. ,   62. ,    1.4],       [  39. ,   -3. ,   69. ,    0.9],       [  59. ,    0. ,   64. ,    1. ],       [  81. ,   -2. ,   65. ,    1.3],       [  99. ,    0. ,   61. ,    0.9],       [   1. ,   12. ,   68. ,    1. ],       [  23. ,    9. ,   67. ,    0.9],       [  40. ,   12. ,   61. ,    0.7],       [  64. ,    9. ,   67. ,    1.3],       [  83. ,   11. ,   62. ,    1. ],       [ 102. ,   15. ,   65. ,    1.3],       [  -2. ,   25. ,   68. ,    1. ],       [  17. ,   31. ,   71. ,    1.2],       [  41. ,   33. ,   64. ,    1.3],       [  64. ,   24. ,   63. ,    0.7],       [  83. ,   32. ,   63. ,    1.1],       [  99. ,   28. ,   68. ,    0.9],       [  -1. ,   44. ,   64. ,    1.3],       [  15. ,   38. ,   64. ,    1.1],       [  36. ,   47. ,   61. ,    1.3],       [  62. ,   47. ,   68. ,    1.4],       [  79. ,   37. ,   62. ,    1.1],       [ 101. ,   43. ,   61. ,    1. ],       [  -4. ,   56. ,   70. ,    1.2],       [  17. ,   59. ,   63. ,    1. ],       [  39. ,   56. ,   67. ,    0.5],       [  58. ,   56. ,   64. ,    0.5],       [  82. ,   60. ,   69. ,    1. ],       [ 102. ,   57. ,   65. ,    1.4],       [  -2. ,   75. ,   68. ,    1.5],       [  23. ,   71. ,   68. ,    0.8],       [  37. ,   71. ,   69. ,    1.4],       [  60. ,   74. ,   66. ,    1. ],       [  76. ,   74. ,   65. ,    1.5],       [  98. ,   74. ,   70. ,    0.6],       [   0. ,   84. ,   69. ,    1.1],       [  17. ,   89. ,   69. ,    0.6],       [  39. ,   89. ,   69. ,    0.6],       [  62. ,   89. ,   65. ,    1. ],       [  83. ,   83. ,   70. ,    1.2],       [ 101. ,   89. ,   69. ,    0.6],       [   0. ,  102. ,   68. ,    1.2],       [  18. ,  100. ,   71. ,    0.7],       [  39. ,  102. ,   69. ,    1.5],       [  64. ,   97. ,   67. ,    1.5],       [  83. ,  101. ,   64. ,    1. ],       [ 101. ,  100. ,   65. ,    0.9],       [   1. ,    0. ,  103. ,    0.9],       [  23. ,    2. ,  104. ,    0.6],       [  39. ,   -1. ,  104. ,    1.4],       [  58. ,   -1. ,   99. ,    0.5],       [  82. ,    4. ,   97. ,    1.4],       [  97. ,   -2. ,   99. ,    0.8],       [   4. ,    9. ,   99. ,    0.9],       [  24. ,   12. ,   99. ,    1.4],       [  42. ,   15. ,  101. ,    0.9],       [  60. ,   16. ,  104. ,    1. ],       [  82. ,   12. ,   99. ,    0.8],       [ 102. ,   13. ,   97. ,    1.1],       [   4. ,   27. ,   95. ,    1.2],       [  19. ,   24. ,  104. ,    0.9],       [  38. ,   24. ,   96. ,    1.1],       [  64. ,   31. ,   99. ,    1.3],       [  79. ,   29. ,   99. ,    1.1],       [ 103. ,   32. ,   99. ,    1.2],       [  -3. ,   38. ,  101. ,    0.9],       [  15. ,   46. ,   98. ,    1.2],       [  42. ,   39. ,   97. ,    0.6],       [  62. ,   38. ,   97. ,    1.2],       [  76. ,   47. ,  104. ,    0.9],       [  95. ,   46. ,   96. ,    0.6],       [   4. ,   58. ,  103. ,    1. ],       [  22. ,   60. ,  103. ,    1.2],       [  37. ,   55. ,   95. ,    0.6],       [  63. ,   61. ,   98. ,    0.6],       [  77. ,   52. ,  101. ,    1.5],       [  97. ,   53. ,  101. ,    0.6],       [  -5. ,   68. ,  100. ,    0.8],       [  22. ,   68. ,   99. ,    1.3],       [  38. ,   75. ,  102. ,    0.8],       [  56. ,   70. ,   97. ,    0.5],       [  77. ,   67. ,   98. ,    1.3],       [  95. ,   67. ,   97. ,    0.7],       [  -5. ,   86. ,   99. ,    1. ],       [  24. ,   87. ,  101. ,    1. ],       [  38. ,   83. ,  102. ,    0.9],       [  61. ,   88. ,  100. ,    0.6],       [  81. ,   87. ,  104. ,    1.3],       [  98. ,   86. ,   98. ,    0.9],       [  -4. ,   99. ,   97. ,    1.2],       [  17. ,   99. ,  100. ,    1.4],       [  35. ,  101. ,   96. ,    1.5],       [  56. ,   97. ,   97. ,    1. ],       [  83. ,   97. ,   99. ,    0.6],       [  99. ,   97. ,   95. ,    0.7]])
        basis0 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.6,  2.1,  3. ,  4.1,  5. ,  5. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.9,  2.3,  2.8,  3.7,  5. ,  5. ,  5. ,
        5. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.9,  2.3,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 8.1,  4.7,  9.5])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 8.100000
        pt2[...,1] -= 4.700000
        pt2[...,2] -= 9.500000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p322_rational(self):
        controlpoints = np.array([[   0. ,    1. ,   -1. ,    0.8],       [  15. ,   -4. ,   -5. ,    0.8],       [  31. ,    3. ,    0. ,    1.3],       [  52. ,   -5. ,   -1. ,    1.1],       [  67. ,    1. ,    1. ,    1.3],       [  80. ,    1. ,    4. ,    1.1],       [  96. ,    2. ,   -2. ,    0.5],       [  -5. ,   18. ,   -4. ,    1.1],       [  13. ,   18. ,   -2. ,    1.1],       [  34. ,   18. ,    2. ,    0.6],       [  49. ,   15. ,   -4. ,    0.9],       [  63. ,   15. ,    4. ,    0.7],       [  79. ,   15. ,    2. ,    1.2],       [ 100. ,   15. ,    0. ,    1.2],       [  -5. ,   30. ,   -2. ,    1.3],       [  17. ,   30. ,    2. ,    0.6],       [  28. ,   37. ,   -3. ,    1. ],       [  45. ,   37. ,   -3. ,    1. ],       [  71. ,   37. ,   -3. ,    1.2],       [  83. ,   38. ,   -3. ,    0.8],       [ 100. ,   32. ,   -2. ,    1.2],       [   1. ,   45. ,   -5. ,    1.3],       [  15. ,   48. ,   -3. ,    1.4],       [  30. ,   45. ,   -2. ,    1. ],       [  45. ,   49. ,   -4. ,    0.9],       [  64. ,   52. ,   -1. ,    1.1],       [  86. ,   48. ,    0. ,    0.6],       [  95. ,   52. ,   -5. ,    0.9],       [  -2. ,   65. ,   -4. ,    0.9],       [  13. ,   65. ,   -4. ,    0.9],       [  32. ,   65. ,   -2. ,    0.7],       [  46. ,   68. ,    4. ,    0.5],       [  66. ,   67. ,   -1. ,    0.7],       [  82. ,   62. ,    3. ,    0.9],       [ 102. ,   66. ,    4. ,    1.1],       [   0. ,   82. ,   -4. ,    1.2],       [  19. ,   83. ,   -3. ,    1. ],       [  28. ,   84. ,    2. ,    1.4],       [  48. ,   86. ,   -1. ,    1. ],       [  65. ,   79. ,    2. ,    0.8],       [  84. ,   81. ,   -1. ,    1.1],       [  97. ,   85. ,   -2. ,    0.9],       [  -1. ,  103. ,   -5. ,    1. ],       [  18. ,  103. ,    3. ,    0.7],       [  31. ,  103. ,   -1. ,    1. ],       [  49. ,   98. ,    0. ,    1.4],       [  61. ,   95. ,    3. ,    1.2],       [  79. ,   95. ,    0. ,    1.1],       [  99. ,   95. ,    2. ,    1.4],       [  -2. ,    2. ,   25. ,    1.1],       [  20. ,   -1. ,   20. ,    0.7],       [  35. ,   -2. ,   20. ,    0.7],       [  48. ,   -5. ,   29. ,    0.9],       [  63. ,    4. ,   21. ,    1.2],       [  79. ,   -1. ,   27. ,    1.1],       [ 104. ,   -5. ,   27. ,    0.8],       [  -4. ,   19. ,   26. ,    1. ],       [  16. ,   12. ,   28. ,    0.7],       [  28. ,   17. ,   24. ,    0.7],       [  46. ,   14. ,   25. ,    0.9],       [  64. ,   15. ,   20. ,    0.9],       [  84. ,   14. ,   22. ,    0.6],       [  99. ,   19. ,   24. ,    0.6],       [  -3. ,   34. ,   25. ,    1.3],       [  11. ,   28. ,   23. ,    0.5],       [  29. ,   35. ,   27. ,    0.8],       [  54. ,   29. ,   29. ,    1.4],       [  65. ,   32. ,   26. ,    1.1],       [  79. ,   30. ,   22. ,    0.6],       [  95. ,   34. ,   27. ,    1.4],       [  -1. ,   49. ,   27. ,    0.8],       [  12. ,   45. ,   28. ,    0.8],       [  34. ,   53. ,   27. ,    1.4],       [  49. ,   54. ,   23. ,    1.2],       [  68. ,   48. ,   28. ,    1.3],       [  78. ,   51. ,   20. ,    1.2],       [ 103. ,   52. ,   20. ,    1.4],       [   4. ,   64. ,   27. ,    0.5],       [  16. ,   63. ,   21. ,    1.3],       [  36. ,   63. ,   23. ,    0.8],       [  53. ,   66. ,   24. ,    0.5],       [  69. ,   67. ,   25. ,    0.9],       [  82. ,   65. ,   21. ,    0.9],       [  98. ,   71. ,   25. ,    0.9],       [  -2. ,   80. ,   20. ,    1.5],       [  20. ,   81. ,   29. ,    1.5],       [  37. ,   86. ,   28. ,    0.6],       [  54. ,   84. ,   26. ,    0.5],       [  71. ,   87. ,   28. ,    1. ],       [  80. ,   81. ,   21. ,    1.4],       [  98. ,   85. ,   24. ,    0.9],       [  -1. ,  100. ,   27. ,    1.2],       [  18. ,  100. ,   24. ,    1.3],       [  38. ,   99. ,   24. ,    1.1],       [  47. ,  100. ,   20. ,    1.1],       [  68. ,  104. ,   21. ,    0.6],       [  82. ,   96. ,   22. ,    1.5],       [ 100. ,  100. ,   24. ,    0.8],       [   4. ,    0. ,   47. ,    1.4],       [  20. ,    4. ,   49. ,    0.9],       [  34. ,    1. ,   46. ,    1. ],       [  51. ,   -2. ,   53. ,    1.3],       [  61. ,   -2. ,   47. ,    1.1],       [  85. ,    1. ,   46. ,    1. ],       [  98. ,   -4. ,   50. ,    1.1],       [  -2. ,   21. ,   49. ,    1. ],       [  13. ,   15. ,   45. ,    0.7],       [  37. ,   16. ,   53. ,    0.8],       [  53. ,   18. ,   52. ,    1.3],       [  66. ,   11. ,   53. ,    1.1],       [  82. ,   15. ,   48. ,    1.2],       [  99. ,   16. ,   54. ,    0.7],       [  -5. ,   34. ,   49. ,    1.2],       [  17. ,   30. ,   45. ,    1.3],       [  32. ,   34. ,   51. ,    1. ],       [  52. ,   32. ,   47. ,    0.9],       [  69. ,   33. ,   49. ,    1.2],       [  87. ,   32. ,   50. ,    1.4],       [ 101. ,   29. ,   46. ,    1.1],       [  -1. ,   49. ,   51. ,    1.4],       [  13. ,   47. ,   50. ,    0.9],       [  28. ,   51. ,   50. ,    0.9],       [  49. ,   51. ,   45. ,    0.7],       [  65. ,   54. ,   53. ,    1.1],       [  81. ,   45. ,   48. ,    0.6],       [  98. ,   51. ,   53. ,    0.5],       [  -5. ,   64. ,   47. ,    1.3],       [  20. ,   69. ,   48. ,    0.9],       [  35. ,   67. ,   50. ,    1.5],       [  47. ,   66. ,   46. ,    0.6],       [  69. ,   61. ,   45. ,    0.9],       [  81. ,   61. ,   45. ,    1.5],       [ 102. ,   71. ,   52. ,    1.2],       [  -2. ,   79. ,   52. ,    0.6],       [  20. ,   84. ,   47. ,    0.7],       [  29. ,   83. ,   47. ,    0.7],       [  53. ,   84. ,   51. ,    1.4],       [  62. ,   85. ,   49. ,    0.7],       [  87. ,   82. ,   54. ,    1.5],       [  96. ,   79. ,   54. ,    0.9],       [   1. ,   97. ,   45. ,    1.3],       [  20. ,   99. ,   46. ,    1.2],       [  28. ,  102. ,   54. ,    0.7],       [  47. ,  102. ,   48. ,    0.8],       [  62. ,   98. ,   45. ,    1.1],       [  84. ,  104. ,   54. ,    1.3],       [  97. ,   96. ,   53. ,    1.4],       [   2. ,   -3. ,   76. ,    1.4],       [  16. ,   -4. ,   75. ,    0.7],       [  30. ,    3. ,   79. ,    0.8],       [  53. ,   -1. ,   75. ,    1. ],       [  68. ,    0. ,   74. ,    0.8],       [  82. ,    1. ,   71. ,    1.5],       [ 100. ,   -2. ,   77. ,    1.1],       [  -1. ,   17. ,   77. ,    1.3],       [  18. ,   13. ,   70. ,    1.5],       [  37. ,   18. ,   73. ,    1. ],       [  51. ,   21. ,   70. ,    1.3],       [  66. ,   16. ,   74. ,    1.4],       [  83. ,   14. ,   70. ,    1.4],       [  98. ,   18. ,   78. ,    0.7],       [  -4. ,   35. ,   73. ,    1.4],       [  14. ,   30. ,   76. ,    0.7],       [  31. ,   30. ,   77. ,    0.9],       [  48. ,   29. ,   78. ,    0.8],       [  68. ,   31. ,   76. ,    0.8],       [  80. ,   30. ,   70. ,    1.2],       [ 104. ,   30. ,   73. ,    0.9],       [   3. ,   48. ,   75. ,    1. ],       [  13. ,   50. ,   70. ,    1.2],       [  36. ,   45. ,   74. ,    0.8],       [  45. ,   50. ,   73. ,    0.8],       [  69. ,   50. ,   71. ,    1. ],       [  86. ,   46. ,   70. ,    1.5],       [  99. ,   50. ,   76. ,    1.2],       [  -3. ,   70. ,   74. ,    1.3],       [  19. ,   62. ,   79. ,    0.8],       [  34. ,   68. ,   79. ,    1.4],       [  51. ,   66. ,   75. ,    1.5],       [  67. ,   69. ,   73. ,    1.4],       [  81. ,   63. ,   76. ,    0.9],       [ 103. ,   69. ,   71. ,    1. ],       [  -2. ,   78. ,   79. ,    0.7],       [  15. ,   79. ,   70. ,    1.2],       [  35. ,   80. ,   70. ,    0.5],       [  51. ,   85. ,   78. ,    0.9],       [  68. ,   80. ,   76. ,    1.5],       [  83. ,   78. ,   75. ,    0.8],       [ 104. ,   80. ,   73. ,    1.3],       [  -2. ,   99. ,   72. ,    0.5],       [  12. ,   99. ,   74. ,    1.1],       [  35. ,  101. ,   72. ,    1.2],       [  45. ,  104. ,   73. ,    1.1],       [  67. ,  102. ,   72. ,    1. ],       [  80. ,  103. ,   70. ,    1.4],       [ 102. ,  104. ,   79. ,    1.3],       [   4. ,    2. ,  104. ,    1.4],       [  13. ,   -3. ,   99. ,    1.4],       [  35. ,   -3. ,  102. ,    1.3],       [  52. ,   -4. ,   97. ,    1. ],       [  66. ,    2. ,  102. ,    1. ],       [  85. ,   -3. ,  101. ,    1.5],       [  96. ,   -5. ,  104. ,    1.3],       [   0. ,   11. ,   96. ,    1.2],       [  15. ,   12. ,   96. ,    0.9],       [  28. ,   20. ,  103. ,    1.1],       [  46. ,   20. ,  102. ,    1.1],       [  67. ,   16. ,   98. ,    0.8],       [  78. ,   13. ,   95. ,    1.3],       [  98. ,   14. ,   97. ,    1.5],       [  -4. ,   30. ,  104. ,    1. ],       [  15. ,   31. ,  104. ,    0.6],       [  33. ,   33. ,  103. ,    1.3],       [  51. ,   32. ,   98. ,    0.7],       [  66. ,   29. ,  104. ,    0.9],       [  86. ,   31. ,   96. ,    0.6],       [ 101. ,   30. ,   96. ,    0.6],       [  -5. ,   46. ,  101. ,    1.2],       [  18. ,   46. ,   97. ,    0.9],       [  32. ,   48. ,   95. ,    0.8],       [  50. ,   49. ,   95. ,    1.4],       [  68. ,   50. ,   98. ,    0.7],       [  80. ,   50. ,  103. ,    1.4],       [ 103. ,   46. ,  103. ,    1.1],       [  -3. ,   67. ,  101. ,    1.1],       [  16. ,   64. ,   95. ,    0.6],       [  36. ,   70. ,  101. ,    0.9],       [  51. ,   67. ,   99. ,    0.6],       [  64. ,   67. ,  100. ,    0.6],       [  84. ,   70. ,   95. ,    1.1],       [ 100. ,   62. ,   96. ,    0.8],       [  -5. ,   87. ,  102. ,    0.6],       [  21. ,   84. ,   98. ,    0.8],       [  35. ,   82. ,  100. ,    0.7],       [  51. ,   86. ,   96. ,    0.7],       [  67. ,   84. ,  101. ,    1.3],       [  84. ,   87. ,   96. ,    0.9],       [ 100. ,   81. ,   98. ,    1.2],       [   3. ,   97. ,  103. ,    1. ],       [  14. ,  101. ,   95. ,    1.2],       [  30. ,  103. ,  102. ,    0.8],       [  45. ,  102. ,  103. ,    1.1],       [  71. ,   96. ,  102. ,    0.8],       [  81. ,   99. ,  100. ,    1.1],       [ 103. ,   97. ,   99. ,    0.8]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.6,  1.8,  3.4,  4. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.6,  2.2,  2.6,  3.9,  5.4,  6. ,  6. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  1.8,  2.7,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 7.8,  4.8,  6.9])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 7.800000
        pt2[...,1] /= 4.800000
        pt2[...,2] /= 6.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p2_rational_C0_periodic(self):
        controlpoints = np.array([[ 96. ,   0. ,  -3. ,   1.1],
       [-50. ,  91. ,   1. ,   1.2],
       [-53. , -86. ,   2. ,   0.7]])
        basis0 = BSplineBasis(2, np.array([-0.8,  0. ,  1.1,  2.2,  3. ,  4.1]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 2.8,  2.8,  4.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 2.800000
        pt2[...,1] -= 2.800000
        pt2[...,2] -= 4.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p3_rational_C0_periodic(self):
        controlpoints = np.array([[ 102. ,   -1. ,   -2. ,    1.1],
       [  33. ,   99. ,   -5. ,    1.1],
       [ -81. ,   55. ,    1. ,    1. ],
       [ -78. ,  -59. ,    4. ,    1. ],
       [  32. , -100. ,    2. ,    0.8]])
        basis0 = BSplineBasis(3, np.array([-1. ,  0. ,  0. ,  0.8,  1.7,  3. ,  4. ,  4. ,  4.8]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 3.1,  4.1,  2.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 3.100000
        pt2[...,1] /= 4.100000
        pt2[...,2] /= 2.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p43_rational_C0_periodic(self):
        controlpoints = np.array([[  60. ,    2. ,   -2. ,    0.7],       [  48. ,   42. ,    2. ,    0.9],       [  10. ,   62. ,   -1. ,    1.2],       [ -30. ,   55. ,   -1. ,    1.3],       [ -60. ,   18. ,    1. ,    1.1],       [ -61. ,  -16. ,   -2. ,    1. ],       [ -30. ,  -55. ,   -5. ,    0.6],       [   9. ,  -64. ,   -1. ,    0.7],       [  47. ,  -35. ,   -2. ,    0.6],       [  68. ,    3. ,   -3. ,    0.9],       [  50. ,   46. ,   -1. ,    0.8],       [  10. ,   67. ,    3. ,    1.1],       [ -37. ,   54. ,   -3. ,    1.2],       [ -64. ,   18. ,    2. ,    1. ],       [ -64. ,  -24. ,   -3. ,    1.4],       [ -29. ,  -54. ,    4. ,    0.7],       [  10. ,  -68. ,   -4. ,    0.9],       [  50. ,  -45. ,   -2. ,    0.7],       [  71. ,    2. ,   -5. ,    0.5],       [  58. ,   49. ,   -3. ,    0.8],       [  16. ,   67. ,    4. ,    0.7],       [ -37. ,   60. ,    0. ,    1.2],       [ -68. ,   27. ,   -2. ,    1. ],       [ -68. ,  -28. ,   -4. ,    1.1],       [ -39. ,  -65. ,    3. ,    1.2],       [  13. ,  -71. ,   -2. ,    0.8],       [  59. ,  -51. ,    3. ,    1. ],       [  75. ,    0. ,    2. ,    1.2],       [  60. ,   50. ,   -4. ,    1. ],       [   9. ,   71. ,   -4. ,    0.7],       [ -44. ,   69. ,   -2. ,    0.8],       [ -75. ,   21. ,    2. ,    1.1],       [ -77. ,  -27. ,    2. ,    1.3],       [ -39. ,  -68. ,   -1. ,    1.3],       [  17. ,  -73. ,    2. ,    1.2],       [  58. ,  -51. ,   -2. ,    1.4],       [  81. ,   -5. ,   -2. ,    1.4],       [  61. ,   49. ,    3. ,    1.2],       [  18. ,   83. ,    3. ,    1.2],       [ -47. ,   71. ,   -5. ,    1. ],       [ -77. ,   28. ,    0. ,    1.1],       [ -77. ,  -30. ,   -2. ,    0.9],       [ -47. ,  -71. ,   -1. ,    1.3],       [  13. ,  -86. ,   -1. ,    1.3],       [  62. ,  -59. ,   -2. ,    0.5],       [  88. ,    3. ,   -2. ,    0.7],       [  72. ,   57. ,    0. ,    0.8],       [  14. ,   91. ,   -5. ,    0.6],       [ -44. ,   79. ,    4. ,    1.1],       [ -84. ,   32. ,    1. ,    1. ],       [ -84. ,  -34. ,    0. ,    1.2],       [ -43. ,  -81. ,   -5. ,    1. ],       [  19. ,  -86. ,   -1. ,    1.1],       [  71. ,  -55. ,    4. ,    0.8],       [  97. ,    2. ,    3. ,    1.1],       [  71. ,   63. ,    1. ,    1. ],       [  15. ,   90. ,    4. ,    1.3],       [ -44. ,   82. ,   -2. ,    1.2],       [ -86. ,   32. ,    4. ,    0.7],       [ -92. ,  -31. ,   -2. ,    0.7],       [ -49. ,  -85. ,    1. ,    0.7],       [  20. ,  -94. ,    0. ,    0.8],       [  76. ,  -60. ,    0. ,    0.5],       [ 103. ,   -5. ,   -4. ,    1.1],       [  72. ,   68. ,   -2. ,    0.5],       [  16. ,  101. ,    0. ,    0.9],       [ -48. ,   88. ,   -5. ,    1.5],       [ -94. ,   34. ,   -3. ,    1.3],       [ -96. ,  -36. ,    3. ,    1. ],       [ -54. ,  -89. ,   -3. ,    1.5],       [  13. ,  -96. ,   -1. ,    0.8],       [  71. ,  -65. ,   -4. ,    1.3]])
        basis0 = BSplineBasis(4, np.array([-1.1,  0. ,  0. ,  0. ,  1.3,  2.2,  2.9,  3.6,  4.9,  5.9,  7. ,
        7. ,  7. ,  8.3]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  1.6,  3. ,  4.3,  5.3,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 2.4,  9.5,  6.7])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 2.400000
        pt2[...,1] -= 9.500000
        pt2[...,2] -= 6.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p22_rational_C0_periodic(self):
        controlpoints = np.array([[  58. ,   -5. ,   -2. ,    0.9],
       [   2. ,   59. ,    0. ,    1. ],
       [ -63. ,   -2. ,    4. ,    1.2],
       [  -2. ,  -57. ,    2. ,    0.9],
       [  77. ,    1. ,    0. ,    0.5],
       [  -3. ,   75. ,   -4. ,    0.8],
       [ -69. ,   -1. ,    4. ,    1.1],
       [   3. ,  -76. ,   -4. ,    0.8],
       [  90. ,   -4. ,    4. ,    0.6],
       [  -3. ,   84. ,   -5. ,    1.5],
       [ -91. ,   -4. ,    4. ,    1.1],
       [  -2. ,  -89. ,    1. ,    1. ],
       [ 103. ,    3. ,   -2. ,    1.1],
       [  -1. ,   99. ,    0. ,    1.1],
       [-103. ,    0. ,    1. ,    0.9],
       [  -1. ,  -96. ,    3. ,    0.6]])
        basis0 = BSplineBasis(2, np.array([-1. ,  0. ,  0.6,  2.1,  3. ,  4. ,  4.6]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.3,  2. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 3. ,  8.7,  3. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.000000
        pt2[...,1] /= 8.700000
        pt2[...,2] /= 3.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p423_rational_C0_periodic(self):
        controlpoints = np.array([[  47. ,    3. ,    1. ,    0.9],       [  31. ,   31. ,   -5. ,    1.4],       [  -1. ,   53. ,    3. ,    1.3],       [ -36. ,   34. ,    4. ,    1.1],       [ -48. ,   -5. ,   -1. ,    1. ],       [ -31. ,  -37. ,   -2. ,    1.2],       [   0. ,  -54. ,    3. ,    0.8],       [  34. ,  -33. ,    4. ,    0.6],       [  57. ,   -5. ,   -4. ,    1.1],       [  42. ,   39. ,   -3. ,    0.7],       [   0. ,   63. ,    0. ,    1. ],       [ -39. ,   45. ,    3. ,    1. ],       [ -61. ,   -2. ,    1. ,    1.4],       [ -48. ,  -47. ,   -5. ,    0.6],       [   4. ,  -59. ,   -1. ,    1.3],       [  44. ,  -44. ,   -4. ,    1.1],       [  72. ,   -1. ,   -4. ,    1.3],       [  51. ,   49. ,   -1. ,    1.1],       [  -1. ,   67. ,   -2. ,    1.4],       [ -47. ,   54. ,    4. ,    0.9],       [ -68. ,    3. ,    4. ,    0.9],       [ -55. ,  -53. ,    1. ,    1.3],       [  -2. ,  -69. ,    4. ,    1.2],       [  50. ,  -54. ,    0. ,    1. ],       [  75. ,    3. ,    0. ,    1.4],       [  60. ,   52. ,   -3. ,    0.8],       [   3. ,   82. ,    4. ,    1. ],       [ -57. ,   59. ,    4. ,    0.6],       [ -76. ,   -2. ,   -1. ,    0.9],       [ -60. ,  -53. ,    1. ,    0.8],       [  -3. ,  -80. ,   -2. ,    0.9],       [  54. ,  -53. ,   -1. ,    0.6],       [  89. ,    4. ,   -5. ,    0.8],       [  67. ,   64. ,   -5. ,    0.9],       [  -5. ,   94. ,    1. ,    1.4],       [ -64. ,   65. ,   -4. ,    1.4],       [ -87. ,   -1. ,   -5. ,    0.9],       [ -62. ,  -63. ,   -2. ,    0.9],       [  -4. ,  -92. ,    0. ,    1.1],       [  60. ,  -64. ,    3. ,    0.6],       [ 100. ,   -1. ,    0. ,    0.6],       [  74. ,   70. ,    1. ,    1. ],       [  -1. ,  103. ,    3. ,    1.4],       [ -70. ,   72. ,    2. ,    0.9],       [-100. ,    3. ,   -3. ,    1.3],       [ -72. ,  -74. ,   -1. ,    0.9],       [  -5. , -101. ,   -5. ,    0.9],       [  72. ,  -67. ,    1. ,    0.9],       [  54. ,   -5. ,    7. ,    0.8],       [  32. ,   38. ,    3. ,    0.7],       [   1. ,   45. ,    5. ,    0.6],       [ -35. ,   37. ,    5. ,    0.6],       [ -52. ,   -5. ,    4. ,    0.7],       [ -39. ,  -32. ,    4. ,    1.5],       [   1. ,  -49. ,    2. ,    1.2],       [  33. ,  -38. ,    0. ,    1.1],       [  59. ,   -1. ,   10. ,    1.5],       [  44. ,   42. ,    1. ,    1.2],       [   1. ,   59. ,    3. ,    1.3],       [ -38. ,   44. ,    2. ,    0.7],       [ -59. ,    4. ,    8. ,    1.4],       [ -47. ,  -46. ,    1. ,    0.6],       [   4. ,  -62. ,    3. ,    1.1],       [  40. ,  -39. ,    3. ,    1.4],       [  68. ,    1. ,    7. ,    1. ],       [  49. ,   45. ,    3. ,    0.9],       [   4. ,   69. ,    5. ,    1.4],       [ -54. ,   50. ,    6. ,    1.4],       [ -70. ,   -4. ,    1. ,    1. ],       [ -48. ,  -51. ,    5. ,    1.1],       [   4. ,  -73. ,    5. ,    1. ],       [  53. ,  -47. ,    4. ,    0.8],       [  82. ,    4. ,   10. ,    1.2],       [  60. ,   53. ,    5. ,    1.5],       [   3. ,   80. ,    4. ,    1.1],       [ -55. ,   51. ,    3. ,    1.1],       [ -77. ,   -3. ,   10. ,    0.5],       [ -59. ,  -55. ,    4. ,    0.7],       [   2. ,  -79. ,    5. ,    1.1],       [  54. ,  -59. ,    3. ,    1.3],       [  87. ,   -4. ,    6. ,    1.4],       [  60. ,   63. ,    7. ,    1. ],       [   3. ,   91. ,    9. ,    1.2],       [ -64. ,   61. ,    3. ,    1.2],       [ -92. ,   -5. ,    6. ,    0.8],       [ -67. ,  -67. ,    5. ,    1.3],       [   3. ,  -90. ,    3. ,    0.9],       [  67. ,  -66. ,    2. ,    1.2],       [  95. ,   -3. ,    9. ,    1. ],       [  69. ,   73. ,    3. ,    0.8],       [   1. ,   98. ,    1. ,    0.7],       [ -74. ,   75. ,    5. ,    1.1],       [ -96. ,   -5. ,    1. ,    1.4],       [ -72. ,  -68. ,    8. ,    0.7],       [   3. ,  -99. ,    9. ,    0.8],       [  73. ,  -71. ,    7. ,    0.7],       [  47. ,    1. ,    9. ,    1.4],       [  35. ,   33. ,   10. ,    1.5],       [  -1. ,   52. ,    8. ,    0.9],       [ -34. ,   32. ,    7. ,    0.6],       [ -49. ,    4. ,    8. ,    1.4],       [ -38. ,  -40. ,    7. ,    0.6],       [  -3. ,  -54. ,   15. ,    0.7],       [  31. ,  -31. ,    9. ,    1.1],       [  61. ,    3. ,    6. ,    0.9],       [  40. ,   40. ,    9. ,    1. ],       [   3. ,   59. ,   12. ,    0.8],       [ -45. ,   46. ,    7. ,    1.2],       [ -64. ,    2. ,   13. ,    0.9],       [ -46. ,  -45. ,    8. ,    0.9],       [   3. ,  -59. ,    9. ,    0.8],       [  45. ,  -45. ,    6. ,    0.7],       [  71. ,   -5. ,    7. ,    0.9],       [  47. ,   46. ,    9. ,    1.3],       [   1. ,   74. ,   11. ,    1.2],       [ -54. ,   45. ,   13. ,    0.9],       [ -66. ,    1. ,    7. ,    1. ],       [ -50. ,  -45. ,    8. ,    0.9],       [   2. ,  -67. ,    7. ,    0.6],       [  47. ,  -46. ,   11. ,    1.3],       [  79. ,    1. ,   12. ,    0.9],       [  56. ,   57. ,   12. ,    0.7],       [   3. ,   76. ,   11. ,    1.4],       [ -54. ,   61. ,    9. ,    1.1],       [ -78. ,    2. ,   15. ,    0.7],       [ -58. ,  -53. ,   11. ,    1.3],       [  -1. ,  -79. ,   11. ,    0.9],       [  60. ,  -60. ,   15. ,    1. ],       [  87. ,   -1. ,   16. ,    1.4],       [  61. ,   64. ,   11. ,    1.1],       [   4. ,   89. ,   10. ,    1. ],       [ -61. ,   67. ,    8. ,    1.1],       [ -94. ,    1. ,   11. ,    1.5],       [ -69. ,  -69. ,   11. ,    0.5],       [  -2. ,  -86. ,   14. ,    0.8],       [  66. ,  -65. ,    9. ,    0.9],       [  99. ,    1. ,   15. ,    1. ],       [  69. ,   72. ,   15. ,    1. ],       [  -3. ,   95. ,    9. ,    0.7],       [ -70. ,   68. ,    9. ,    1.3],       [-102. ,   -3. ,   13. ,    0.8],       [ -73. ,  -72. ,    9. ,    0.6],       [  -2. ,  -99. ,    9. ,    1. ],       [  67. ,  -72. ,   16. ,    0.8],       [  45. ,    3. ,   13. ,    1.2],       [  35. ,   37. ,   20. ,    1.1],       [   4. ,   52. ,   13. ,    1.4],       [ -34. ,   39. ,   17. ,    0.6],       [ -47. ,   -3. ,   14. ,    0.7],       [ -37. ,  -31. ,   18. ,    1.2],       [  -5. ,  -54. ,   14. ,    0.8],       [  34. ,  -33. ,   15. ,    1.3],       [  60. ,   -4. ,   18. ,    1. ],       [  42. ,   37. ,   15. ,    1.2],       [  -5. ,   60. ,   13. ,    1.2],       [ -40. ,   41. ,   13. ,    0.5],       [ -61. ,   -4. ,   21. ,    1. ],       [ -43. ,  -47. ,   12. ,    0.5],       [   3. ,  -60. ,   18. ,    0.7],       [  43. ,  -47. ,   13. ,    0.9],       [  67. ,   -2. ,   14. ,    1.1],       [  48. ,   52. ,   12. ,    1.3],       [  -4. ,   71. ,   15. ,    0.9],       [ -51. ,   48. ,   14. ,    1.4],       [ -73. ,   -5. ,   22. ,    1.1],       [ -47. ,  -55. ,   21. ,    0.9],       [   4. ,  -68. ,   16. ,    1.2],       [  53. ,  -53. ,   18. ,    1.3],       [  77. ,    4. ,   18. ,    1.2],       [  57. ,   51. ,   12. ,    0.9],       [  -5. ,   83. ,   21. ,    1.3],       [ -55. ,   54. ,   21. ,    1.1],       [ -77. ,    1. ,   12. ,    1.4],       [ -56. ,  -54. ,   15. ,    0.5],       [   0. ,  -80. ,   17. ,    0.8],       [  61. ,  -53. ,   21. ,    0.6],       [  90. ,   -1. ,   13. ,    0.6],       [  68. ,   67. ,   19. ,    1.2],       [  -1. ,   88. ,   14. ,    1.3],       [ -61. ,   60. ,   14. ,    1.3],       [ -93. ,   -4. ,   15. ,    1.3],       [ -63. ,  -68. ,   17. ,    1.4],       [  -3. ,  -94. ,   16. ,    1.3],       [  63. ,  -67. ,   12. ,    1. ],       [ 103. ,    1. ,   13. ,    1.2],       [  70. ,   74. ,   21. ,    1.4],       [  -2. ,   97. ,   19. ,    1.1],       [ -72. ,   72. ,   19. ,    0.7],       [-100. ,   -5. ,   20. ,    1.2],       [ -72. ,  -76. ,   19. ,    0.9],       [  -2. , -105. ,   15. ,    1.1],       [  66. ,  -73. ,   20. ,    1.1],       [  47. ,    1. ,   25. ,    1.4],       [  32. ,   37. ,   27. ,    1. ],       [  -2. ,   51. ,   21. ,    1.4],       [ -39. ,   31. ,   25. ,    1.1],       [ -51. ,   -1. ,   23. ,    1.4],       [ -34. ,  -31. ,   23. ,    0.8],       [   2. ,  -50. ,   24. ,    1.3],       [  38. ,  -38. ,   23. ,    1.4],       [  57. ,    1. ,   25. ,    0.7],       [  39. ,   39. ,   27. ,    1.3],       [  -3. ,   61. ,   23. ,    0.8],       [ -40. ,   45. ,   25. ,    1.1],       [ -59. ,   -4. ,   22. ,    1.2],       [ -40. ,  -39. ,   27. ,    0.9],       [   4. ,  -56. ,   24. ,    1.3],       [  42. ,  -42. ,   21. ,    0.8],       [  67. ,   -1. ,   18. ,    0.5],       [  52. ,   47. ,   26. ,    1.3],       [  -1. ,   68. ,   24. ,    1.3],       [ -52. ,   51. ,   22. ,    0.6],       [ -70. ,   -3. ,   21. ,    0.6],       [ -49. ,  -55. ,   23. ,    0.7],       [   2. ,  -66. ,   18. ,    0.7],       [  48. ,  -49. ,   19. ,    1.1],       [  81. ,   -4. ,   26. ,    0.6],       [  54. ,   61. ,   20. ,    1.4],       [  -4. ,   78. ,   21. ,    0.9],       [ -57. ,   58. ,   23. ,    0.9],       [ -76. ,   -5. ,   25. ,    1.1],       [ -57. ,  -59. ,   22. ,    0.6],       [  -2. ,  -85. ,   26. ,    1.4],       [  59. ,  -61. ,   25. ,    1.1],       [  86. ,   -1. ,   22. ,    0.8],       [  63. ,   65. ,   19. ,    1. ],       [  -5. ,   87. ,   23. ,    0.6],       [ -64. ,   66. ,   23. ,    1.4],       [ -86. ,   -5. ,   19. ,    0.8],       [ -60. ,  -63. ,   22. ,    1. ],       [  -3. ,  -89. ,   19. ,    1.5],       [  65. ,  -66. ,   27. ,    0.7],       [  96. ,   -2. ,   19. ,    0.6],       [  67. ,   72. ,   21. ,    0.5],       [  -5. ,  102. ,   27. ,    1.1],       [ -68. ,   75. ,   23. ,    1. ],       [-104. ,    3. ,   26. ,    0.9],       [ -72. ,  -69. ,   26. ,    1.3],       [   4. ,  -96. ,   18. ,    1.2],       [  72. ,  -67. ,   25. ,    0.7],       [  46. ,    4. ,   27. ,    0.8],       [  40. ,   38. ,   25. ,    0.5],       [   0. ,   48. ,   30. ,    1.1],       [ -33. ,   37. ,   32. ,    0.9],       [ -53. ,   -2. ,   25. ,    0.8],       [ -37. ,  -37. ,   33. ,    1.5],       [   4. ,  -55. ,   26. ,    1.2],       [  38. ,  -32. ,   27. ,    0.5],       [  58. ,    2. ,   33. ,    0.9],       [  38. ,   40. ,   27. ,    0.9],       [   2. ,   58. ,   27. ,    0.7],       [ -47. ,   37. ,   30. ,    1. ],       [ -60. ,    0. ,   32. ,    0.7],       [ -45. ,  -39. ,   33. ,    0.7],       [  -5. ,  -57. ,   27. ,    0.5],       [  40. ,  -43. ,   26. ,    1.1],       [  67. ,   -2. ,   23. ,    1.1],       [  46. ,   48. ,   24. ,    1.2],       [   0. ,   69. ,   31. ,    1.3],       [ -47. ,   47. ,   32. ,    1.3],       [ -69. ,    1. ,   29. ,    1.3],       [ -46. ,  -48. ,   24. ,    1.2],       [  -1. ,  -73. ,   27. ,    1.2],       [  50. ,  -48. ,   31. ,    1.3],       [  78. ,    3. ,   24. ,    1.1],       [  54. ,   58. ,   32. ,    1.3],       [  -1. ,   84. ,   30. ,    1.2],       [ -61. ,   52. ,   33. ,    1.2],       [ -83. ,    4. ,   28. ,    1.1],       [ -55. ,  -56. ,   26. ,    0.9],       [   0. ,  -76. ,   32. ,    1.2],       [  54. ,  -61. ,   30. ,    0.6],       [  90. ,    2. ,   26. ,    0.6],       [  60. ,   60. ,   29. ,    1.1],       [  -5. ,   90. ,   27. ,    1.1],       [ -66. ,   63. ,   24. ,    1.3],       [ -92. ,    1. ,   28. ,    1.2],       [ -64. ,  -65. ,   23. ,    1.1],       [  -5. ,  -95. ,   26. ,    1.3],       [  68. ,  -67. ,   27. ,    1.4],       [  97. ,    1. ,   25. ,    1.1],       [  66. ,   70. ,   30. ,    1.3],       [  -2. ,   98. ,   32. ,    1.4],       [ -74. ,   67. ,   24. ,    1.4],       [ -98. ,   -4. ,   28. ,    0.8],       [ -75. ,  -75. ,   28. ,    0.7],       [  -5. ,  -99. ,   24. ,    0.9],       [  74. ,  -75. ,   30. ,    1.1],       [  53. ,   -5. ,   31. ,    1.1],       [  32. ,   38. ,   32. ,    0.5],       [  -1. ,   51. ,   31. ,    1.3],       [ -38. ,   35. ,   35. ,    0.7],       [ -47. ,    1. ,   36. ,    1.3],       [ -32. ,  -35. ,   35. ,    1.3],       [  -5. ,  -47. ,   31. ,    1.2],       [  32. ,  -40. ,   35. ,    1.2],       [  60. ,    0. ,   37. ,    0.8],       [  43. ,   40. ,   30. ,    1.4],       [   2. ,   55. ,   35. ,    1.3],       [ -40. ,   41. ,   38. ,    1.1],       [ -59. ,    1. ,   35. ,    1.4],       [ -40. ,  -41. ,   31. ,    1.3],       [  -2. ,  -58. ,   35. ,    1. ],       [  42. ,  -42. ,   33. ,    1.4],       [  68. ,   -5. ,   38. ,    0.9],       [  45. ,   54. ,   38. ,    1.4],       [   4. ,   65. ,   38. ,    1.5],       [ -53. ,   53. ,   32. ,    0.5],       [ -75. ,    0. ,   36. ,    1. ],       [ -50. ,  -50. ,   30. ,    0.6],       [  -3. ,  -71. ,   30. ,    0.8],       [  47. ,  -45. ,   34. ,    1.5],       [  75. ,   -2. ,   36. ,    1. ],       [  61. ,   58. ,   33. ,    0.7],       [  -5. ,   84. ,   39. ,    0.5],       [ -62. ,   55. ,   32. ,    0.6],       [ -76. ,   -2. ,   36. ,    0.9],       [ -54. ,  -57. ,   35. ,    0.9],       [  -3. ,  -85. ,   34. ,    1. ],       [  54. ,  -57. ,   39. ,    0.9],       [  91. ,   -5. ,   31. ,    0.9],       [  59. ,   67. ,   38. ,    1.5],       [   2. ,   85. ,   29. ,    1.2],       [ -63. ,   68. ,   29. ,    1.5],       [ -93. ,    3. ,   29. ,    0.9],       [ -62. ,  -62. ,   31. ,    0.9],       [   4. ,  -87. ,   38. ,    1.4],       [  62. ,  -67. ,   33. ,    1.5],       [  95. ,   -2. ,   33. ,    1. ],       [  75. ,   73. ,   38. ,    0.6],       [  -5. ,   98. ,   32. ,    1.3],       [ -72. ,   71. ,   32. ,    0.8],       [ -99. ,    0. ,   30. ,    0.6],       [ -67. ,  -75. ,   31. ,    0.5],       [   4. ,  -98. ,   30. ,    0.9],       [  68. ,  -73. ,   37. ,    0.7],       [  52. ,   -4. ,   44. ,    1.4],       [  38. ,   31. ,   36. ,    1.4],       [   1. ,   48. ,   39. ,    1.2],       [ -39. ,   31. ,   35. ,    1. ],       [ -46. ,   -3. ,   35. ,    0.8],       [ -32. ,  -34. ,   43. ,    0.9],       [  -2. ,  -48. ,   37. ,    0.5],       [  34. ,  -37. ,   43. ,    0.9],       [  57. ,    1. ,   43. ,    1.1],       [  42. ,   38. ,   38. ,    1.1],       [   1. ,   59. ,   44. ,    0.9],       [ -44. ,   39. ,   40. ,    1.1],       [ -62. ,   -5. ,   42. ,    0.9],       [ -40. ,  -43. ,   37. ,    0.8],       [   2. ,  -56. ,   41. ,    0.6],       [  38. ,  -43. ,   42. ,    0.6],       [  73. ,    4. ,   43. ,    1.1],       [  50. ,   45. ,   35. ,    0.8],       [   3. ,   65. ,   43. ,    1.3],       [ -49. ,   48. ,   40. ,    0.6],       [ -66. ,   -1. ,   41. ,    0.7],       [ -51. ,  -47. ,   35. ,    0.6],       [   1. ,  -75. ,   37. ,    0.5],       [  46. ,  -46. ,   44. ,    0.9],       [  84. ,   -1. ,   42. ,    0.9],       [  54. ,   52. ,   43. ,    1.1],       [   4. ,   79. ,   42. ,    1.4],       [ -54. ,   54. ,   38. ,    0.7],       [ -83. ,   -3. ,   40. ,    1. ],       [ -55. ,  -60. ,   38. ,    0.8],       [   4. ,  -84. ,   42. ,    1.1],       [  58. ,  -57. ,   37. ,    1.2],       [  90. ,    2. ,   36. ,    0.6],       [  62. ,   64. ,   42. ,    1.1],       [   4. ,   85. ,   36. ,    0.6],       [ -63. ,   62. ,   38. ,    0.9],       [ -88. ,    3. ,   43. ,    1. ],       [ -61. ,  -64. ,   35. ,    0.7],       [  -2. ,  -94. ,   37. ,    0.9],       [  63. ,  -67. ,   39. ,    0.8],       [  96. ,    0. ,   39. ,    1. ],       [  68. ,   75. ,   36. ,    0.6],       [   4. ,   98. ,   37. ,    0.7],       [ -69. ,   66. ,   42. ,    1. ],       [-102. ,    2. ,   41. ,    0.8],       [ -76. ,  -70. ,   36. ,    1.1],       [  -2. ,  -96. ,   37. ,    0.7],       [  75. ,  -73. ,   44. ,    1.5]])
        basis0 = BSplineBasis(4, np.array([-1.1,  0. ,  0. ,  0. ,  0.8,  1.9,  2.8,  3.9,  4.9,  6. ,  6. ,
        6. ,  6.8]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  1.7,  3.4,  3.9,  5. ,  5. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  1.8,  2.7,  3.9,  5.2,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 0.1,  8.9,  7.2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 0.100000
        pt2[...,1] -= 8.900000
        pt2[...,2] -= 7.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p442_rational_C0_periodic(self):
        controlpoints = np.array([[  54. ,   -2. ,   -4. ,    1.3],       [  32. ,   43. ,    3. ,    1.1],       [ -13. ,   46. ,    1. ,    1.4],       [ -46. ,   22. ,    1. ,    0.8],       [ -46. ,  -19. ,    3. ,    0.8],       [  -7. ,  -50. ,   -3. ,    0.6],       [  28. ,  -35. ,   -4. ,    0.5],       [  56. ,   -2. ,    1. ,    1.4],       [  32. ,   48. ,    3. ,    1.2],       [ -15. ,   57. ,    4. ,    1.1],       [ -47. ,   29. ,   -3. ,    1.2],       [ -53. ,  -30. ,    0. ,    1.2],       [ -16. ,  -54. ,    4. ,    1.2],       [  35. ,  -47. ,   -5. ,    1. ],       [  66. ,    3. ,    2. ,    1.2],       [  42. ,   54. ,    4. ,    1.5],       [ -17. ,   65. ,    3. ,    0.8],       [ -58. ,   32. ,    0. ,    1.2],       [ -56. ,  -24. ,    0. ,    0.8],       [ -12. ,  -66. ,   -1. ,    1.1],       [  44. ,  -49. ,    0. ,    1.3],       [  67. ,   -5. ,   -2. ,    0.5],       [  43. ,   52. ,   -5. ,    0.9],       [ -17. ,   70. ,    2. ,    0.6],       [ -65. ,   32. ,    1. ,    1. ],       [ -68. ,  -27. ,    2. ,    1.1],       [ -20. ,  -66. ,   -3. ,    0.7],       [  48. ,  -52. ,   -3. ,    0.9],       [  78. ,   -1. ,    1. ,    0.7],       [  52. ,   61. ,    3. ,    1.4],       [ -21. ,   76. ,   -1. ,    1.1],       [ -73. ,   32. ,   -2. ,    0.8],       [ -74. ,  -34. ,   -5. ,    0.8],       [ -19. ,  -77. ,   -1. ,    0.5],       [  50. ,  -65. ,    3. ,    1.1],       [  90. ,   -3. ,   -1. ,    0.6],       [  52. ,   62. ,    4. ,    1.3],       [ -18. ,   86. ,   -3. ,    0.5],       [ -77. ,   34. ,   -5. ,    1.3],       [ -76. ,  -35. ,   -3. ,    0.6],       [ -15. ,  -85. ,    2. ,    1.3],       [  49. ,  -68. ,    1. ,    0.9],       [  90. ,   -1. ,   -2. ,    0.9],       [  58. ,   71. ,    0. ,    1.4],       [ -25. ,   89. ,   -2. ,    0.7],       [ -83. ,   43. ,   -5. ,    0.7],       [ -79. ,  -36. ,    1. ,    1.1],       [ -19. ,  -90. ,   -3. ,    0.9],       [  62. ,  -78. ,   -4. ,    0.8],       [  98. ,    1. ,    2. ,    1.2],       [  58. ,   80. ,   -5. ,    0.5],       [ -18. ,   97. ,    2. ,    1.1],       [ -86. ,   44. ,    0. ,    0.9],       [ -87. ,  -49. ,   -4. ,    0.7],       [ -22. ,  -98. ,   -3. ,    0.7],       [  64. ,  -83. ,   -1. ,    1. ],       [  48. ,    2. ,    6. ,    0.8],       [  33. ,   38. ,   10. ,    0.7],       [ -15. ,   49. ,    6. ,    1.1],       [ -45. ,   17. ,   11. ,    1.2],       [ -50. ,  -24. ,    9. ,    1.3],       [ -13. ,  -50. ,    9. ,    0.7],       [  34. ,  -38. ,    7. ,    1.3],       [  59. ,   -1. ,    9. ,    0.8],       [  34. ,   45. ,    7. ,    1.3],       [ -16. ,   55. ,    8. ,    0.6],       [ -57. ,   25. ,   11. ,    1.4],       [ -56. ,  -26. ,   10. ,    1.1],       [ -11. ,  -57. ,    7. ,    1.1],       [  38. ,  -46. ,    7. ,    1. ],       [  66. ,   -3. ,    8. ,    1.4],       [  38. ,   45. ,   14. ,    1.4],       [ -17. ,   64. ,   13. ,    0.5],       [ -57. ,   31. ,    6. ,    1. ],       [ -55. ,  -27. ,   13. ,    0.6],       [ -17. ,  -68. ,   10. ,    1.4],       [  35. ,  -49. ,   11. ,    0.8],       [  75. ,    0. ,   13. ,    0.6],       [  45. ,   57. ,   12. ,    1.1],       [ -19. ,   69. ,   12. ,    1.3],       [ -65. ,   33. ,   12. ,    0.9],       [ -63. ,  -27. ,   10. ,    0.8],       [ -12. ,  -70. ,    5. ,    0.6],       [  44. ,  -59. ,    8. ,    0.8],       [  80. ,    3. ,   14. ,    0.5],       [  46. ,   64. ,   13. ,    0.6],       [ -15. ,   80. ,    7. ,    1.2],       [ -72. ,   35. ,    9. ,    1.1],       [ -69. ,  -36. ,   14. ,    0.6],       [ -21. ,  -72. ,   14. ,    0.6],       [  50. ,  -66. ,   11. ,    1.1],       [  90. ,    2. ,    5. ,    0.9],       [  50. ,   71. ,    8. ,    1.4],       [ -23. ,   84. ,    8. ,    0.7],       [ -81. ,   39. ,    8. ,    1.4],       [ -78. ,  -39. ,   11. ,    1.1],       [ -17. ,  -86. ,    6. ,    1.4],       [  56. ,  -69. ,   12. ,    1.3],       [  96. ,    3. ,    5. ,    1.4],       [  59. ,   71. ,    8. ,    0.5],       [ -26. ,   86. ,    5. ,    0.6],       [ -87. ,   36. ,   12. ,    0.6],       [ -85. ,  -43. ,   13. ,    0.9],       [ -23. ,  -89. ,    6. ,    0.6],       [  55. ,  -77. ,    8. ,    1.4],       [ 102. ,   -3. ,   14. ,    1. ],       [  58. ,   80. ,   13. ,    0.9],       [ -19. ,   92. ,   12. ,    0.7],       [ -91. ,   38. ,   12. ,    0.9],       [ -91. ,  -48. ,    7. ,    1.2],       [ -20. ,  -94. ,   12. ,    1. ],       [  60. ,  -77. ,    9. ,    1.4],       [  47. ,    0. ,   24. ,    0.6],       [  30. ,   36. ,   21. ,    1.1],       [ -11. ,   52. ,   24. ,    1.3],       [ -49. ,   25. ,   16. ,    1.5],       [ -44. ,  -25. ,   21. ,    1.3],       [  -9. ,  -45. ,   20. ,    0.8],       [  29. ,  -35. ,   20. ,    1. ],       [  59. ,    0. ,   22. ,    1.2],       [  32. ,   48. ,   21. ,    0.9],       [ -11. ,   53. ,   22. ,    1.2],       [ -50. ,   28. ,   24. ,    0.7],       [ -48. ,  -22. ,   20. ,    1.1],       [ -10. ,  -54. ,   22. ,    0.9],       [  33. ,  -42. ,   16. ,    1.5],       [  66. ,   -1. ,   23. ,    0.9],       [  38. ,   52. ,   24. ,    0.6],       [ -20. ,   67. ,   23. ,    1.4],       [ -59. ,   32. ,   23. ,    0.9],       [ -55. ,  -24. ,   18. ,    1. ],       [ -10. ,  -64. ,   17. ,    1.3],       [  37. ,  -53. ,   20. ,    1.4],       [  71. ,   -2. ,   23. ,    0.7],       [  47. ,   54. ,   18. ,    1.4],       [ -12. ,   74. ,   21. ,    1. ],       [ -61. ,   32. ,   22. ,    1.3],       [ -61. ,  -33. ,   20. ,    1.4],       [ -21. ,  -70. ,   22. ,    0.7],       [  46. ,  -56. ,   23. ,    1. ],       [  74. ,    2. ,   22. ,    0.7],       [  50. ,   65. ,   21. ,    0.7],       [ -17. ,   71. ,   22. ,    1.2],       [ -69. ,   38. ,   20. ,    0.7],       [ -69. ,  -38. ,   24. ,    0.7],       [ -19. ,  -72. ,   21. ,    1.5],       [  47. ,  -58. ,   15. ,    0.9],       [  81. ,    0. ,   17. ,    0.7],       [  53. ,   70. ,   19. ,    1. ],       [ -20. ,   87. ,   22. ,    0.7],       [ -80. ,   35. ,   20. ,    0.9],       [ -77. ,  -42. ,   19. ,    0.5],       [ -24. ,  -87. ,   15. ,    1.4],       [  57. ,  -63. ,   23. ,    0.5],       [  94. ,   -5. ,   18. ,    0.8],       [  62. ,   73. ,   19. ,    1.4],       [ -22. ,   87. ,   22. ,    1.1],       [ -86. ,   39. ,   16. ,    1.4],       [ -87. ,  -44. ,   22. ,    0.8],       [ -23. ,  -87. ,   17. ,    0.6],       [  55. ,  -69. ,   16. ,    1. ],       [  96. ,   -4. ,   17. ,    0.7],       [  62. ,   73. ,   22. ,    1. ],       [ -20. ,  102. ,   22. ,    0.9],       [ -89. ,   48. ,   17. ,    0.9],       [ -90. ,  -42. ,   16. ,    1. ],       [ -25. , -100. ,   24. ,    0.6],       [  59. ,  -76. ,   23. ,    1. ],       [  52. ,   -5. ,   25. ,    1. ],       [  27. ,   36. ,   27. ,    0.9],       [  -7. ,   50. ,   31. ,    0.6],       [ -48. ,   26. ,   32. ,    0.7],       [ -41. ,  -25. ,   27. ,    0.7],       [  -8. ,  -47. ,   34. ,    1.1],       [  34. ,  -35. ,   25. ,    1.2],       [  59. ,    0. ,   25. ,    0.9],       [  38. ,   44. ,   26. ,    0.9],       [ -10. ,   57. ,   30. ,    0.5],       [ -57. ,   21. ,   28. ,    0.7],       [ -56. ,  -22. ,   25. ,    1.3],       [ -17. ,  -59. ,   30. ,    1.2],       [  40. ,  -48. ,   31. ,    1.1],       [  59. ,   -2. ,   32. ,    1.2],       [  44. ,   49. ,   26. ,    1.2],       [ -15. ,   67. ,   31. ,    0.9],       [ -55. ,   26. ,   33. ,    0.7],       [ -61. ,  -26. ,   33. ,    1. ],       [ -12. ,  -62. ,   27. ,    1.4],       [  41. ,  -46. ,   33. ,    0.8],       [  66. ,    3. ,   25. ,    0.7],       [  42. ,   57. ,   28. ,    1.2],       [ -14. ,   72. ,   31. ,    1. ],       [ -68. ,   30. ,   29. ,    0.9],       [ -64. ,  -31. ,   31. ,    1. ],       [ -15. ,  -68. ,   31. ,    1.2],       [  40. ,  -58. ,   34. ,    1.1],       [  82. ,   -4. ,   31. ,    1.2],       [  44. ,   62. ,   30. ,    0.7],       [ -16. ,   76. ,   27. ,    0.6],       [ -67. ,   36. ,   28. ,    0.9],       [ -68. ,  -39. ,   25. ,    1.2],       [ -20. ,  -75. ,   30. ,    1.4],       [  52. ,  -65. ,   31. ,    1.5],       [  87. ,   -4. ,   30. ,    1. ],       [  57. ,   65. ,   31. ,    0.7],       [ -17. ,   80. ,   26. ,    1.3],       [ -79. ,   37. ,   30. ,    0.8],       [ -80. ,  -33. ,   29. ,    0.9],       [ -23. ,  -81. ,   32. ,    1.3],       [  56. ,  -68. ,   26. ,    1.4],       [  89. ,   -4. ,   31. ,    1.4],       [  60. ,   77. ,   26. ,    1.1],       [ -24. ,   93. ,   25. ,    1. ],       [ -79. ,   38. ,   31. ,    1.1],       [ -83. ,  -44. ,   31. ,    0.6],       [ -21. ,  -93. ,   27. ,    0.6],       [  58. ,  -69. ,   25. ,    1. ],       [  95. ,   -4. ,   26. ,    0.6],       [  64. ,   75. ,   27. ,    1.3],       [ -24. ,   93. ,   27. ,    0.8],       [ -86. ,   40. ,   25. ,    1. ],       [ -93. ,  -47. ,   28. ,    1.1],       [ -26. ,  -99. ,   30. ,    0.7],       [  60. ,  -81. ,   27. ,    1.1],       [  49. ,    4. ,   44. ,    0.9],       [  31. ,   40. ,   35. ,    1. ],       [ -12. ,   49. ,   43. ,    0.7],       [ -43. ,   24. ,   40. ,    1.2],       [ -43. ,  -26. ,   44. ,    0.9],       [  -9. ,  -49. ,   44. ,    1.4],       [  27. ,  -40. ,   40. ,    0.7],       [  55. ,    2. ,   41. ,    1.4],       [  40. ,   48. ,   36. ,    1. ],       [ -12. ,   53. ,   40. ,    0.5],       [ -52. ,   26. ,   38. ,    1.1],       [ -52. ,  -30. ,   41. ,    0.9],       [ -16. ,  -56. ,   43. ,    0.8],       [  34. ,  -43. ,   38. ,    1.4],       [  65. ,   -4. ,   35. ,    0.8],       [  39. ,   51. ,   44. ,    0.5],       [ -16. ,   59. ,   38. ,    1.4],       [ -63. ,   25. ,   36. ,    0.6],       [ -56. ,  -30. ,   43. ,    0.9],       [ -13. ,  -65. ,   35. ,    1. ],       [  41. ,  -47. ,   37. ,    1.3],       [  76. ,    0. ,   35. ,    0.9],       [  44. ,   54. ,   44. ,    0.8],       [ -20. ,   67. ,   41. ,    1.1],       [ -68. ,   32. ,   42. ,    0.7],       [ -60. ,  -28. ,   35. ,    1.1],       [ -14. ,  -68. ,   43. ,    0.9],       [  41. ,  -60. ,   35. ,    0.9],       [  74. ,   -2. ,   40. ,    1.1],       [  52. ,   64. ,   36. ,    1.1],       [ -22. ,   75. ,   39. ,    0.7],       [ -72. ,   32. ,   42. ,    1.1],       [ -74. ,  -35. ,   40. ,    1. ],       [ -20. ,  -81. ,   44. ,    0.9],       [  50. ,  -66. ,   44. ,    0.6],       [  88. ,    1. ,   36. ,    0.6],       [  58. ,   64. ,   44. ,    1.4],       [ -24. ,   82. ,   37. ,    1.2],       [ -78. ,   33. ,   36. ,    0.6],       [ -77. ,  -34. ,   35. ,    1.2],       [ -25. ,  -86. ,   40. ,    0.6],       [  50. ,  -72. ,   37. ,    1. ],       [  95. ,   -3. ,   37. ,    1.3],       [  62. ,   67. ,   38. ,    1. ],       [ -19. ,   91. ,   41. ,    0.7],       [ -83. ,   44. ,   44. ,    0.9],       [ -79. ,  -43. ,   39. ,    1.4],       [ -24. ,  -94. ,   40. ,    0.9],       [  58. ,  -73. ,   38. ,    1.4],       [ 104. ,   -3. ,   42. ,    0.8],       [  60. ,   75. ,   44. ,    0.6],       [ -27. ,   99. ,   39. ,    0.8],       [ -91. ,   45. ,   39. ,    1. ],       [ -94. ,  -48. ,   44. ,    1. ],       [ -19. ,  -93. ,   41. ,    0.5],       [  60. ,  -74. ,   41. ,    1. ]])
        basis0 = BSplineBasis(4, np.array([-0.9,  0. ,  0. ,  0. ,  1.1,  1.9,  3.2,  4.1,  5. ,  5. ,  5. ,
        6.1]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  2.4,  3.4,  4.3,  5. ,  5. ,  5. ,
        5. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.3,  2.2,  2.7,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 6.1,  9.2,  7.9])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 6.100000
        pt2[...,1] /= 9.200000
        pt2[...,2] /= 7.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p4_rational_C1_periodic(self):
        controlpoints = np.array([[  95. ,    4. ,    4. ,    1.1],
       [  67. ,   65. ,    2. ,    1.5],
       [   3. ,   95. ,   -2. ,    1.3],
       [ -70. ,   66. ,   -4. ,    1.1],
       [ -98. ,   -2. ,   -2. ,    1.4],
       [ -69. ,  -68. ,    2. ,    1.3],
       [   4. , -100. ,    1. ,    0.8],
       [  71. ,  -73. ,   -1. ,    1.2]])
        basis0 = BSplineBasis(4, np.array([-1.7, -1.4,  0. ,  0. ,  1. ,  1.8,  2.9,  4. ,  5.3,  5.6,  7. ,
        7. ,  8. ,  8.8]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 4.3,  5.5,  2.5])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.300000
        pt2[...,1] /= 5.500000
        pt2[...,2] /= 2.500000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p34_rational_C1_periodic(self):
        controlpoints = np.array([[  55. ,    1. ,   -4. ,    0.9],       [  40. ,   42. ,    0. ,    1.3],       [ -10. ,   57. ,   -4. ,    1.4],       [ -57. ,   29. ,   -5. ,    1. ],       [ -54. ,  -24. ,    1. ,    1.5],       [ -12. ,  -59. ,   -1. ,    0.9],       [  38. ,  -50. ,   -4. ,    1.4],       [  63. ,   -5. ,   -4. ,    1.2],       [  45. ,   48. ,    0. ,    0.8],       [ -20. ,   60. ,   -5. ,    1.1],       [ -54. ,   25. ,    4. ,    1. ],       [ -58. ,  -26. ,   -3. ,    1. ],       [ -12. ,  -64. ,    4. ,    1.2],       [  43. ,  -49. ,   -2. ,    1.2],       [  73. ,    3. ,    0. ,    1.1],       [  46. ,   52. ,   -5. ,    1.4],       [ -19. ,   63. ,    0. ,    0.9],       [ -62. ,   32. ,   -3. ,    0.8],       [ -64. ,  -34. ,   -5. ,    1.5],       [ -12. ,  -66. ,    0. ,    1. ],       [  43. ,  -58. ,    3. ,    1.1],       [  70. ,   -1. ,    0. ,    1.5],       [  51. ,   55. ,    4. ,    0.7],       [ -16. ,   71. ,    2. ,    1.3],       [ -70. ,   37. ,    3. ,    1. ],       [ -70. ,  -32. ,   -4. ,    1.2],       [ -21. ,  -75. ,    3. ,    0.9],       [  48. ,  -57. ,    1. ,    1.3],       [  81. ,    0. ,   -2. ,    0.7],       [  50. ,   66. ,   -5. ,    1.4],       [ -17. ,   75. ,   -5. ,    0.9],       [ -77. ,   38. ,    0. ,    1. ],       [ -70. ,  -36. ,   -1. ,    0.7],       [ -23. ,  -77. ,   -3. ,    0.9],       [  48. ,  -62. ,   -5. ,    1. ],       [  83. ,    0. ,   -3. ,    1.5],       [  49. ,   65. ,   -3. ,    1.3],       [ -21. ,   80. ,    3. ,    1.2],       [ -76. ,   38. ,   -1. ,    0.7],       [ -76. ,  -36. ,    3. ,    1.5],       [ -20. ,  -80. ,   -3. ,    1.3],       [  54. ,  -63. ,   -4. ,    0.7],       [  93. ,   -3. ,    4. ,    0.7],       [  53. ,   74. ,   -2. ,    1. ],       [ -23. ,   88. ,    1. ,    0.7],       [ -78. ,   39. ,    1. ,    0.6],       [ -78. ,  -39. ,    4. ,    0.7],       [ -21. ,  -91. ,   -4. ,    1.5],       [  60. ,  -68. ,    2. ,    1. ],       [  98. ,   -2. ,   -4. ,    0.8],       [  59. ,   78. ,    4. ,    1.4],       [ -26. ,   94. ,   -3. ,    0.9],       [ -87. ,   38. ,    2. ,    1. ],       [ -84. ,  -41. ,    4. ,    1.3],       [ -17. ,  -89. ,    3. ,    1.3],       [  62. ,  -70. ,    4. ,    1.1],       [  95. ,   -5. ,   -5. ,    0.6],       [  61. ,   78. ,    2. ,    0.9],       [ -21. ,  102. ,    1. ,    1.1],       [ -91. ,   42. ,    3. ,    0.6],       [ -93. ,  -47. ,    3. ,    0.7],       [ -21. ,  -99. ,    2. ,    1.4],       [  66. ,  -83. ,   -3. ,    1.1]])
        basis0 = BSplineBasis(3, np.array([-2.1, -0.9,  0. ,  1. ,  1.8,  3.4,  3.7,  4.9,  6.1,  7. ,  8. ,
        8.8]),1)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.8,  2.3,  3.1,  4.3,  5.3,  6. ,  6. ,
        6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 8.6,  4. ,  5. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 8.600000
        pt2[...,1] -= 4.000000
        pt2[...,2] -= 5.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p32_rational_C1_periodic(self):
        controlpoints = np.array([[  57. ,   -5. ,    4. ,    1.2],
       [   2. ,   55. ,    0. ,    1. ],
       [ -62. ,    2. ,   -2. ,    0.7],
       [  -5. ,  -62. ,    2. ,    1.4],
       [  77. ,    2. ,    2. ,    0.6],
       [   4. ,   75. ,    3. ,    1.1],
       [ -85. ,   -5. ,    1. ,    1.4],
       [   2. ,  -79. ,   -3. ,    0.7],
       [  98. ,    1. ,   -3. ,    0.6],
       [   1. ,   99. ,    1. ,    1.2],
       [-102. ,    3. ,   -3. ,    1.3],
       [  -3. , -104. ,    4. ,    1.3]])
        basis0 = BSplineBasis(3, np.array([-2.3, -1.4,  0. ,  0.9,  1.7,  2.6,  4. ,  4.9,  5.7]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  0.7,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 11.8,   5.2,  11. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 11.800000
        pt2[...,1] /= 5.200000
        pt2[...,2] /= 11.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p343_rational_C1_periodic(self):
        controlpoints = np.array([[  51. ,    2. ,    1. ,    0.9],       [  32. ,   39. ,   -4. ,    0.8],       [  -5. ,   46. ,   -1. ,    1.1],       [ -32. ,   38. ,   -1. ,    1.3],       [ -52. ,    0. ,    4. ,    1.1],       [ -38. ,  -32. ,    3. ,    0.6],       [  -3. ,  -52. ,   -4. ,    1.3],       [  39. ,  -39. ,    3. ,    0.9],       [  54. ,    4. ,   -4. ,    0.9],       [  38. ,   37. ,    2. ,    1.2],       [  -5. ,   52. ,    3. ,    1.3],       [ -44. ,   39. ,   -3. ,    1. ],       [ -56. ,   -2. ,   -5. ,    1.3],       [ -43. ,  -44. ,   -1. ,    0.9],       [  -1. ,  -53. ,   -1. ,    0.9],       [  39. ,  -41. ,   -5. ,    1.4],       [  60. ,    3. ,   -4. ,    1.1],       [  50. ,   45. ,   -3. ,    1.1],       [   2. ,   61. ,   -2. ,    0.8],       [ -43. ,   42. ,   -3. ,    0.8],       [ -63. ,   -2. ,   -2. ,    0.7],       [ -50. ,  -49. ,    3. ,    1.2],       [   1. ,  -66. ,    0. ,    1.1],       [  44. ,  -48. ,    1. ,    0.6],       [  66. ,   -4. ,    1. ,    0.7],       [  52. ,   53. ,    4. ,    0.5],       [  -5. ,   69. ,    1. ,    1.2],       [ -48. ,   50. ,   -5. ,    1.3],       [ -69. ,    2. ,    3. ,    1.5],       [ -49. ,  -47. ,    1. ,    0.7],       [   4. ,  -75. ,   -1. ,    1.4],       [  46. ,  -54. ,    1. ,    0.7],       [  77. ,    3. ,    3. ,    0.6],       [  59. ,   54. ,    2. ,    1.3],       [   4. ,   82. ,    3. ,    1.3],       [ -54. ,   50. ,   -3. ,    1.4],       [ -83. ,    0. ,   -3. ,    1.3],       [ -59. ,  -58. ,   -5. ,    0.8],       [  -1. ,  -77. ,    1. ,    0.5],       [  57. ,  -58. ,    1. ,    0.6],       [  83. ,    2. ,   -3. ,    1.1],       [  61. ,   55. ,    4. ,    0.6],       [   1. ,   84. ,    1. ,    0.8],       [ -64. ,   61. ,   -1. ,    0.9],       [ -87. ,   -5. ,   -3. ,    1.1],       [ -64. ,  -57. ,   -1. ,    1.3],       [   0. ,  -84. ,    4. ,    1.4],       [  60. ,  -60. ,   -4. ,    1.2],       [  92. ,    3. ,    1. ,    0.6],       [  62. ,   70. ,    0. ,    0.9],       [   0. ,   90. ,   -5. ,    0.6],       [ -71. ,   63. ,    3. ,    1.4],       [ -93. ,    3. ,    2. ,    0.8],       [ -71. ,  -70. ,    2. ,    1. ],       [   3. ,  -96. ,    4. ,    0.8],       [  69. ,  -62. ,    1. ,    1.5],       [ 102. ,    0. ,   -3. ,    0.6],       [  74. ,   74. ,    1. ,    1.4],       [   0. ,  104. ,    2. ,    1.2],       [ -68. ,   66. ,    2. ,    1.4],       [-100. ,    4. ,   -2. ,    0.9],       [ -73. ,  -76. ,    2. ,    1.1],       [  -2. , -100. ,    2. ,    1.1],       [  72. ,  -72. ,   -3. ,    1.4],       [  50. ,    0. ,    2. ,    0.9],       [  36. ,   38. ,    6. ,    0.7],       [   3. ,   45. ,    7. ,    1. ],       [ -33. ,   32. ,    9. ,    1.3],       [ -51. ,    0. ,    1. ,    1. ],       [ -33. ,  -32. ,    1. ,    0.9],       [   2. ,  -49. ,    2. ,    1.3],       [  37. ,  -34. ,   10. ,    1.4],       [  60. ,    4. ,    8. ,    1.2],       [  44. ,   39. ,    9. ,    1.3],       [   2. ,   53. ,   10. ,    1.5],       [ -42. ,   38. ,   10. ,    0.8],       [ -55. ,    0. ,   11. ,    0.6],       [ -41. ,  -37. ,    7. ,    0.9],       [   0. ,  -53. ,    7. ,    1.2],       [  41. ,  -41. ,   10. ,    1.3],       [  68. ,    1. ,    2. ,    1.5],       [  50. ,   48. ,    7. ,    0.7],       [  -4. ,   63. ,    5. ,    0.8],       [ -47. ,   47. ,   10. ,    1.2],       [ -65. ,   -1. ,    6. ,    0.9],       [ -47. ,  -41. ,    9. ,    1. ],       [   1. ,  -68. ,    3. ,    1. ],       [  49. ,  -49. ,   10. ,    0.7],       [  75. ,    4. ,    7. ,    0.9],       [  46. ,   52. ,    4. ,    1.2],       [  -1. ,   75. ,    7. ,    1.5],       [ -50. ,   50. ,   11. ,    1.4],       [ -69. ,    4. ,    4. ,    1.5],       [ -55. ,  -56. ,    4. ,    1.5],       [  -3. ,  -74. ,    8. ,    1.3],       [  48. ,  -53. ,   10. ,    1.3],       [  74. ,    0. ,    9. ,    1. ],       [  55. ,   53. ,    3. ,    1.3],       [  -3. ,   78. ,    7. ,    1.3],       [ -55. ,   52. ,    3. ,    1.2],       [ -82. ,   -5. ,    8. ,    1.4],       [ -52. ,  -55. ,   11. ,    0.8],       [  -5. ,  -84. ,    6. ,    0.7],       [  58. ,  -58. ,    2. ,    1.3],       [  83. ,   -1. ,    5. ,    1.4],       [  62. ,   65. ,   10. ,    1.1],       [  -4. ,   87. ,    2. ,    1.3],       [ -63. ,   61. ,    3. ,    1.2],       [ -81. ,   -3. ,   10. ,    1.2],       [ -59. ,  -61. ,    8. ,    1.1],       [   3. ,  -90. ,    7. ,    0.9],       [  57. ,  -65. ,    6. ,    1.1],       [  92. ,    2. ,    2. ,    1.5],       [  66. ,   63. ,    1. ,    1.3],       [   1. ,   96. ,    5. ,    1.3],       [ -61. ,   62. ,    8. ,    0.8],       [ -93. ,   -1. ,    2. ,    0.6],       [ -67. ,  -64. ,    9. ,    0.6],       [   3. ,  -95. ,    3. ,    1.2],       [  64. ,  -65. ,   10. ,    0.9],       [  97. ,   -2. ,    7. ,    1.2],       [  67. ,   71. ,    7. ,    0.8],       [  -5. ,  104. ,    5. ,    0.6],       [ -72. ,   69. ,    6. ,    0.7],       [ -97. ,    3. ,    5. ,    1.2],       [ -73. ,  -76. ,    9. ,    1.4],       [  -3. ,  -97. ,    9. ,    1.1],       [  70. ,  -74. ,    5. ,    1.2],       [  50. ,   -4. ,   13. ,    1.3],       [  36. ,   38. ,   10. ,    0.8],       [  -3. ,   51. ,   11. ,    0.8],       [ -34. ,   37. ,   16. ,    1.5],       [ -54. ,    0. ,    8. ,    0.9],       [ -36. ,  -35. ,   11. ,    0.5],       [   1. ,  -47. ,   15. ,    1.1],       [  35. ,  -36. ,   13. ,    0.7],       [  62. ,    4. ,    8. ,    1.2],       [  40. ,   44. ,    9. ,    1.5],       [  -1. ,   61. ,   17. ,    0.8],       [ -41. ,   37. ,   14. ,    1.1],       [ -56. ,    0. ,   10. ,    1.3],       [ -46. ,  -41. ,   16. ,    1. ],       [   2. ,  -59. ,   14. ,    0.7],       [  45. ,  -43. ,   12. ,    1.1],       [  67. ,    1. ,    8. ,    0.7],       [  43. ,   43. ,   10. ,    1. ],       [  -4. ,   63. ,    8. ,    0.7],       [ -42. ,   40. ,   10. ,    0.6],       [ -62. ,    0. ,   11. ,    0.6],       [ -42. ,  -50. ,   16. ,    1.4],       [   3. ,  -64. ,   12. ,    1.4],       [  47. ,  -47. ,   16. ,    1.1],       [  70. ,    1. ,   14. ,    0.5],       [  50. ,   50. ,   14. ,    1.5],       [  -2. ,   75. ,   10. ,    1.4],       [ -49. ,   48. ,   10. ,    0.9],       [ -76. ,    4. ,   15. ,    1.1],       [ -52. ,  -54. ,   14. ,    1. ],       [  -5. ,  -74. ,   15. ,    1.1],       [  50. ,  -47. ,   15. ,    1.1],       [  74. ,    2. ,   13. ,    0.6],       [  58. ,   50. ,   10. ,    0.6],       [  -2. ,   76. ,   17. ,    0.9],       [ -54. ,   59. ,   14. ,    1. ],       [ -81. ,    2. ,    8. ,    0.7],       [ -61. ,  -54. ,   10. ,    1.1],       [  -5. ,  -80. ,   14. ,    1. ],       [  56. ,  -55. ,   16. ,    1.2],       [  90. ,   -5. ,   13. ,    0.9],       [  57. ,   57. ,   15. ,    0.9],       [   1. ,   90. ,   17. ,    0.9],       [ -60. ,   63. ,   10. ,    0.6],       [ -86. ,   -5. ,   17. ,    1.1],       [ -63. ,  -57. ,   15. ,    1. ],       [   3. ,  -86. ,   10. ,    1.2],       [  56. ,  -57. ,   10. ,    1.2],       [  92. ,    2. ,   10. ,    1.1],       [  61. ,   65. ,   14. ,    0.7],       [  -2. ,   93. ,   10. ,    1.3],       [ -63. ,   65. ,    8. ,    1.4],       [ -91. ,    3. ,   17. ,    1.1],       [ -69. ,  -67. ,    9. ,    0.7],       [  -1. ,  -91. ,   13. ,    1. ],       [  61. ,  -66. ,    9. ,    1.5],       [  95. ,    1. ,   15. ,    0.7],       [  68. ,   74. ,   10. ,    0.7],       [   4. ,   97. ,   13. ,    0.9],       [ -66. ,   71. ,   12. ,    0.7],       [ -99. ,    4. ,   17. ,    0.7],       [ -76. ,  -73. ,   14. ,    0.9],       [   3. , -100. ,   11. ,    1.2],       [  73. ,  -68. ,   17. ,    1.5],       [  54. ,    4. ,   17. ,    0.9],       [  40. ,   30. ,   20. ,    0.7],       [  -2. ,   48. ,   15. ,    1. ],       [ -39. ,   33. ,   16. ,    1. ],       [ -46. ,   -5. ,   22. ,    1.3],       [ -33. ,  -36. ,   17. ,    1.4],       [   4. ,  -53. ,   23. ,    1.2],       [  33. ,  -33. ,   21. ,    1.5],       [  60. ,   -2. ,   15. ,    0.9],       [  44. ,   43. ,   19. ,    0.7],       [  -5. ,   60. ,   22. ,    0.5],       [ -45. ,   40. ,   15. ,    0.8],       [ -54. ,   -3. ,   15. ,    1.3],       [ -36. ,  -43. ,   18. ,    0.7],       [  -3. ,  -61. ,   18. ,    0.5],       [  42. ,  -39. ,   20. ,    0.6],       [  62. ,   -2. ,   24. ,    0.7],       [  44. ,   43. ,   21. ,    1.4],       [   0. ,   61. ,   21. ,    1. ],       [ -46. ,   44. ,   17. ,    1. ],       [ -63. ,   -3. ,   24. ,    0.7],       [ -44. ,  -44. ,   20. ,    0.8],       [  -5. ,  -61. ,   17. ,    1.1],       [  44. ,  -49. ,   17. ,    1. ],       [  67. ,   -5. ,   16. ,    1.4],       [  49. ,   52. ,   21. ,    0.9],       [   1. ,   71. ,   20. ,    1.1],       [ -51. ,   54. ,   23. ,    1.2],       [ -75. ,   -3. ,   24. ,    0.9],       [ -48. ,  -50. ,   17. ,    1.1],       [   0. ,  -71. ,   21. ,    0.9],       [  51. ,  -53. ,   19. ,    0.6],       [  78. ,   -1. ,   22. ,    1.3],       [  60. ,   51. ,   24. ,    0.9],       [   2. ,   76. ,   15. ,    1.1],       [ -59. ,   52. ,   17. ,    0.8],       [ -80. ,   -3. ,   22. ,    0.9],       [ -61. ,  -55. ,   22. ,    1. ],       [   0. ,  -79. ,   24. ,    0.5],       [  55. ,  -54. ,   18. ,    0.7],       [  86. ,    2. ,   15. ,    0.6],       [  64. ,   65. ,   22. ,    1. ],       [   3. ,   88. ,   24. ,    1. ],       [ -64. ,   62. ,   16. ,    1.3],       [ -86. ,   -3. ,   18. ,    1.5],       [ -61. ,  -58. ,   16. ,    1.2],       [  -3. ,  -91. ,   22. ,    1.2],       [  57. ,  -58. ,   22. ,    0.5],       [  91. ,    3. ,   21. ,    1.3],       [  66. ,   62. ,   16. ,    1.3],       [  -3. ,   91. ,   17. ,    1. ],       [ -69. ,   63. ,   18. ,    0.8],       [ -98. ,   -5. ,   15. ,    1.5],       [ -70. ,  -62. ,   15. ,    1.4],       [  -1. ,  -90. ,   16. ,    1.1],       [  61. ,  -64. ,   20. ,    0.7],       [ 104. ,    4. ,   18. ,    1.3],       [  73. ,   65. ,   21. ,    0.8],       [   3. ,   98. ,   18. ,    0.8],       [ -73. ,   67. ,   24. ,    0.9],       [ -97. ,    3. ,   18. ,    0.8],       [ -69. ,  -69. ,   24. ,    0.8],       [  -5. , -101. ,   21. ,    1.2],       [  71. ,  -74. ,   17. ,    1. ],       [  49. ,    3. ,   30. ,    0.7],       [  37. ,   34. ,   22. ,    1. ],       [  -4. ,   51. ,   24. ,    1. ],       [ -33. ,   34. ,   23. ,    1.5],       [ -54. ,    2. ,   27. ,    1.3],       [ -36. ,  -36. ,   22. ,    0.7],       [  -2. ,  -46. ,   27. ,    1.1],       [  34. ,  -36. ,   23. ,    0.8],       [  56. ,    1. ,   30. ,    1.3],       [  39. ,   35. ,   28. ,    0.8],       [   2. ,   53. ,   21. ,    1.1],       [ -44. ,   44. ,   24. ,    0.5],       [ -59. ,   -1. ,   29. ,    0.8],       [ -45. ,  -46. ,   25. ,    1.3],       [   0. ,  -55. ,   27. ,    0.5],       [  43. ,  -36. ,   31. ,    1.1],       [  64. ,   -2. ,   22. ,    0.5],       [  44. ,   46. ,   23. ,    0.6],       [  -2. ,   60. ,   26. ,    0.5],       [ -42. ,   41. ,   21. ,    1.1],       [ -60. ,   -3. ,   25. ,    1.3],       [ -49. ,  -46. ,   29. ,    1. ],       [   4. ,  -68. ,   24. ,    0.6],       [  44. ,  -43. ,   23. ,    0.7],       [  68. ,    4. ,   29. ,    0.8],       [  50. ,   49. ,   28. ,    1.4],       [  -2. ,   70. ,   23. ,    0.5],       [ -47. ,   47. ,   26. ,    1. ],       [ -76. ,    3. ,   25. ,    0.7],       [ -51. ,  -53. ,   30. ,    0.6],       [   2. ,  -67. ,   25. ,    0.9],       [  51. ,  -49. ,   25. ,    1.5],       [  80. ,    1. ,   31. ,    0.8],       [  57. ,   55. ,   27. ,    1.2],       [   0. ,   81. ,   31. ,    1. ],       [ -57. ,   51. ,   27. ,    1. ],       [ -82. ,   -1. ,   31. ,    0.6],       [ -55. ,  -55. ,   28. ,    1.4],       [  -1. ,  -78. ,   24. ,    0.7],       [  58. ,  -57. ,   29. ,    1.3],       [  85. ,   -4. ,   22. ,    0.5],       [  64. ,   56. ,   26. ,    0.7],       [   1. ,   89. ,   26. ,    0.8],       [ -65. ,   56. ,   29. ,    0.6],       [ -91. ,   -3. ,   28. ,    1.4],       [ -62. ,  -60. ,   28. ,    1.3],       [  -5. ,  -86. ,   23. ,    1. ],       [  59. ,  -63. ,   22. ,    1.2],       [  93. ,    2. ,   30. ,    0.8],       [  70. ,   68. ,   27. ,    0.6],       [   1. ,   91. ,   25. ,    1. ],       [ -67. ,   60. ,   26. ,    0.6],       [ -90. ,   -1. ,   29. ,    0.8],       [ -63. ,  -62. ,   21. ,    0.9],       [  -2. ,  -98. ,   23. ,    0.6],       [  62. ,  -69. ,   22. ,    1.2],       [  97. ,   -3. ,   24. ,    0.5],       [  66. ,   73. ,   28. ,    1.4],       [  -1. ,  104. ,   27. ,    1.4],       [ -68. ,   68. ,   28. ,    0.7],       [-101. ,   -3. ,   28. ,    0.8],       [ -76. ,  -75. ,   27. ,    1. ],       [  -1. ,  -99. ,   22. ,    1.4],       [  66. ,  -68. ,   22. ,    1.2],       [  53. ,   -5. ,   36. ,    0.7],       [  35. ,   33. ,   37. ,    1.4],       [  -3. ,   51. ,   30. ,    1.3],       [ -33. ,   31. ,   30. ,    1.2],       [ -51. ,    1. ,   30. ,    1. ],       [ -40. ,  -38. ,   37. ,    1.3],       [  -5. ,  -47. ,   32. ,    1.1],       [  32. ,  -37. ,   36. ,    0.6],       [  55. ,    3. ,   28. ,    1. ],       [  38. ,   39. ,   37. ,    0.6],       [   4. ,   56. ,   34. ,    1.5],       [ -44. ,   37. ,   33. ,    1.3],       [ -53. ,    1. ,   34. ,    0.8],       [ -39. ,  -37. ,   34. ,    1. ],       [   2. ,  -60. ,   37. ,    0.7],       [  37. ,  -38. ,   34. ,    0.8],       [  66. ,   -4. ,   36. ,    1.3],       [  40. ,   41. ,   30. ,    1.4],       [  -5. ,   59. ,   29. ,    1.1],       [ -44. ,   40. ,   38. ,    0.5],       [ -66. ,    1. ,   35. ,    0.6],       [ -50. ,  -48. ,   30. ,    1. ],       [   0. ,  -68. ,   33. ,    1.2],       [  41. ,  -50. ,   31. ,    1. ],       [  74. ,    2. ,   38. ,    1. ],       [  53. ,   48. ,   36. ,    1.3],       [  -5. ,   74. ,   29. ,    0.6],       [ -46. ,   54. ,   32. ,    1.2],       [ -74. ,    1. ,   30. ,    0.7],       [ -56. ,  -52. ,   29. ,    1.3],       [   3. ,  -72. ,   35. ,    0.9],       [  51. ,  -52. ,   35. ,    1.4],       [  81. ,    4. ,   29. ,    1.2],       [  52. ,   52. ,   37. ,    0.8],       [   1. ,   76. ,   36. ,    1.3],       [ -56. ,   60. ,   31. ,    1.2],       [ -79. ,    3. ,   37. ,    1.3],       [ -51. ,  -52. ,   35. ,    1.3],       [   4. ,  -78. ,   37. ,    1.2],       [  57. ,  -60. ,   34. ,    1.2],       [  83. ,   -4. ,   33. ,    1.5],       [  59. ,   56. ,   38. ,    1.3],       [  -4. ,   82. ,   32. ,    0.8],       [ -65. ,   55. ,   36. ,    0.7],       [ -90. ,   -3. ,   38. ,    1.2],       [ -64. ,  -61. ,   34. ,    1.3],       [   2. ,  -91. ,   31. ,    0.7],       [  62. ,  -64. ,   28. ,    1.1],       [  93. ,   -3. ,   37. ,    0.7],       [  61. ,   64. ,   29. ,    0.5],       [  -2. ,   96. ,   29. ,    1.2],       [ -63. ,   69. ,   37. ,    0.8],       [ -98. ,    4. ,   34. ,    0.7],       [ -67. ,  -63. ,   34. ,    1.4],       [   1. ,  -93. ,   35. ,    0.6],       [  67. ,  -69. ,   33. ,    0.9],       [ 103. ,    2. ,   28. ,    0.7],       [  74. ,   70. ,   29. ,    0.9],       [   3. ,   97. ,   34. ,    1.2],       [ -76. ,   72. ,   32. ,    0.6],       [-104. ,    0. ,   31. ,    1.5],       [ -69. ,  -70. ,   30. ,    1.5],       [  -5. , -104. ,   29. ,    1.5],       [  74. ,  -75. ,   38. ,    0.6],       [  47. ,    2. ,   41. ,    1.4],       [  37. ,   31. ,   38. ,    0.8],       [  -3. ,   48. ,   39. ,    0.8],       [ -36. ,   36. ,   40. ,    1.3],       [ -51. ,   -2. ,   44. ,    0.8],       [ -35. ,  -32. ,   37. ,    1.2],       [   3. ,  -48. ,   36. ,    1.2],       [  32. ,  -39. ,   39. ,    0.6],       [  53. ,   -2. ,   40. ,    0.7],       [  36. ,   38. ,   41. ,    1.4],       [  -5. ,   61. ,   41. ,    1.4],       [ -40. ,   38. ,   40. ,    0.6],       [ -53. ,    0. ,   39. ,    1. ],       [ -44. ,  -41. ,   38. ,    0.7],       [  -5. ,  -56. ,   37. ,    1.1],       [  42. ,  -36. ,   37. ,    1.1],       [  61. ,    0. ,   43. ,    1.2],       [  46. ,   43. ,   36. ,    0.6],       [  -3. ,   60. ,   41. ,    1.1],       [ -43. ,   44. ,   35. ,    0.9],       [ -63. ,    2. ,   41. ,    0.6],       [ -48. ,  -48. ,   44. ,    0.6],       [  -1. ,  -60. ,   36. ,    0.8],       [  41. ,  -42. ,   35. ,    1.3],       [  67. ,    2. ,   41. ,    1. ],       [  49. ,   48. ,   36. ,    1.2],       [   1. ,   71. ,   36. ,    0.9],       [ -51. ,   50. ,   39. ,    1.1],       [ -72. ,   -4. ,   36. ,    1. ],       [ -53. ,  -53. ,   37. ,    1.3],       [   1. ,  -70. ,   40. ,    1.3],       [  46. ,  -52. ,   39. ,    0.9],       [  80. ,    2. ,   41. ,    1. ],       [  57. ,   56. ,   42. ,    1. ],       [   4. ,   75. ,   35. ,    1.2],       [ -60. ,   51. ,   37. ,    0.8],       [ -81. ,   -5. ,   36. ,    1.1],       [ -54. ,  -57. ,   41. ,    1.2],       [  -2. ,  -77. ,   36. ,    0.8],       [  51. ,  -59. ,   38. ,    0.6],       [  89. ,    4. ,   40. ,    1.5],       [  58. ,   60. ,   41. ,    0.9],       [  -4. ,   87. ,   37. ,    0.6],       [ -63. ,   62. ,   39. ,    0.9],       [ -89. ,   -3. ,   44. ,    0.9],       [ -62. ,  -61. ,   36. ,    1.5],       [   3. ,  -87. ,   40. ,    0.6],       [  55. ,  -59. ,   37. ,    0.7],       [  95. ,   -2. ,   38. ,    0.9],       [  68. ,   65. ,   44. ,    1.3],       [   1. ,   94. ,   39. ,    1.3],       [ -66. ,   67. ,   38. ,    0.8],       [ -95. ,   -5. ,   42. ,    0.6],       [ -64. ,  -66. ,   38. ,    0.7],       [   0. ,  -90. ,   38. ,    0.6],       [  67. ,  -69. ,   40. ,    1.3],       [  99. ,   -5. ,   43. ,    0.7],       [  71. ,   69. ,   36. ,    1. ],       [   0. ,   96. ,   39. ,    1. ],       [ -75. ,   72. ,   35. ,    1.5],       [ -96. ,    2. ,   44. ,    1.2],       [ -74. ,  -71. ,   43. ,    1.3],       [  -5. , -103. ,   39. ,    1.2],       [  67. ,  -68. ,   42. ,    1. ]])
        basis0 = BSplineBasis(3, np.array([ -2.1,  -1.3,   0. ,   1. ,   2.1,   2.7,   3.7,   5.4,   5.9,
         6.7,   8. ,   9. ,  10.1]),1)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.8,  1.9,  2.7,  3.7,  5. ,  5. ,  5. ,
        5. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  2. ,  2.7,  3.7,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 1.2,  3.6,  1.2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 1.200000
        pt2[...,1] -= 3.600000
        pt2[...,2] -= 1.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p323_rational_C1_periodic(self):
        controlpoints = np.array([[  50. ,   -1. ,   -3. ,    1.1],       [  27. ,   44. ,   -5. ,    0.7],       [ -22. ,   41. ,   -2. ,    1.3],       [ -54. ,   -4. ,    3. ,    0.5],       [ -28. ,  -40. ,   -5. ,    1.1],       [  26. ,  -49. ,    3. ,    1.1],       [  64. ,    3. ,    0. ,    0.7],       [  33. ,   51. ,   -4. ,    1.1],       [ -27. ,   50. ,    2. ,    0.9],       [ -63. ,   -4. ,   -5. ,    1.1],       [ -37. ,  -50. ,    0. ,    1.1],       [  34. ,  -57. ,   -3. ,    0.9],       [  75. ,   -4. ,   -5. ,    1.5],       [  37. ,   66. ,    1. ,    1. ],       [ -38. ,   61. ,    2. ,    1.3],       [ -74. ,    4. ,   -3. ,    0.5],       [ -40. ,  -68. ,   -2. ,    0.7],       [  33. ,  -66. ,    0. ,    0.7],       [  90. ,    2. ,   -3. ,    0.9],       [  45. ,   74. ,    0. ,    0.9],       [ -46. ,   73. ,   -2. ,    0.7],       [ -92. ,    2. ,   -2. ,    1. ],       [ -48. ,  -77. ,   -1. ,    0.8],       [  38. ,  -72. ,    2. ,    0.5],       [  96. ,    0. ,    2. ,    1.3],       [  54. ,   83. ,   -4. ,    0.5],       [ -49. ,   90. ,   -2. ,    0.6],       [ -97. ,   -4. ,    1. ,    0.6],       [ -55. ,  -85. ,    3. ,    1. ],       [  47. ,  -89. ,    1. ,    1.4],       [  49. ,   -1. ,    8. ,    0.7],       [  27. ,   46. ,    5. ,    1.3],       [ -23. ,   46. ,    3. ,    1.5],       [ -47. ,    2. ,    3. ,    0.5],       [ -25. ,  -48. ,    7. ,    1.1],       [  27. ,  -48. ,    8. ,    1.5],       [  62. ,    0. ,    2. ,    0.8],       [  35. ,   55. ,    6. ,    1.4],       [ -27. ,   50. ,    9. ,    0.9],       [ -60. ,   -3. ,    2. ,    1.1],       [ -30. ,  -57. ,    7. ,    0.8],       [  27. ,  -50. ,    6. ,    0.6],       [  74. ,    1. ,    5. ,    0.5],       [  40. ,   67. ,   10. ,    0.8],       [ -37. ,   60. ,    2. ,    0.7],       [ -78. ,    2. ,    5. ,    0.9],       [ -40. ,  -67. ,    1. ,    0.5],       [  41. ,  -65. ,   10. ,    1.1],       [  87. ,   -1. ,   10. ,    1.1],       [  43. ,   76. ,    5. ,    0.8],       [ -42. ,   79. ,    7. ,    1.2],       [ -91. ,    3. ,   11. ,    0.6],       [ -40. ,  -81. ,    6. ,    0.8],       [  48. ,  -80. ,   11. ,    1.3],       [  99. ,   -3. ,    6. ,    0.8],       [  51. ,   84. ,    4. ,    0.9],       [ -49. ,   83. ,    2. ,    0.8],       [ -96. ,    3. ,    3. ,    1.4],       [ -52. ,  -88. ,    9. ,    0.6],       [  46. ,  -86. ,    5. ,    1.4],       [  52. ,    4. ,   12. ,    1. ],       [  27. ,   46. ,   12. ,    0.5],       [ -28. ,   39. ,    9. ,    1. ],       [ -48. ,   -2. ,   14. ,    1.4],       [ -28. ,  -41. ,   11. ,    1. ],       [  21. ,  -46. ,   14. ,    0.7],       [  64. ,    1. ,   13. ,    0.9],       [  27. ,   56. ,   17. ,    1.3],       [ -33. ,   54. ,    9. ,    1.1],       [ -66. ,    4. ,   12. ,    0.5],       [ -33. ,  -50. ,   15. ,    1.4],       [  27. ,  -54. ,   18. ,    1.1],       [  75. ,    3. ,   10. ,    1.1],       [  41. ,   69. ,   12. ,    0.6],       [ -33. ,   61. ,   15. ,    1. ],       [ -73. ,    0. ,    8. ,    0.8],       [ -43. ,  -65. ,   12. ,    0.6],       [  40. ,  -66. ,   16. ,    1.2],       [  88. ,   -3. ,   16. ,    0.9],       [  45. ,   70. ,   13. ,    0.6],       [ -48. ,   77. ,   15. ,    1.1],       [ -89. ,   -5. ,   12. ,    0.8],       [ -40. ,  -72. ,   17. ,    1.4],       [  39. ,  -77. ,   13. ,    0.6],       [  99. ,   -3. ,    9. ,    1.3],       [  52. ,   89. ,   14. ,    0.9],       [ -52. ,   85. ,   11. ,    0.6],       [ -98. ,    0. ,   13. ,    1.2],       [ -48. ,  -85. ,   13. ,    0.7],       [  50. ,  -89. ,    9. ,    1.4],       [  46. ,    0. ,   18. ,    1.2],       [  24. ,   42. ,   21. ,    1. ],       [ -30. ,   39. ,   16. ,    0.5],       [ -48. ,   -2. ,   24. ,    1.2],       [ -28. ,  -44. ,   16. ,    0.7],       [  23. ,  -47. ,   19. ,    0.7],       [  65. ,   -5. ,   22. ,    1.3],       [  33. ,   55. ,   20. ,    1.4],       [ -31. ,   55. ,   16. ,    0.8],       [ -67. ,   -2. ,   22. ,    1.1],       [ -31. ,  -55. ,   15. ,    0.6],       [  32. ,  -55. ,   20. ,    1.5],       [  76. ,   -3. ,   23. ,    0.7],       [  35. ,   66. ,   18. ,    1.5],       [ -38. ,   68. ,   19. ,    1.2],       [ -73. ,    4. ,   24. ,    1.3],       [ -40. ,  -62. ,   17. ,    1. ],       [  38. ,  -65. ,   17. ,    0.8],       [  87. ,    1. ,   23. ,    1.2],       [  44. ,   79. ,   18. ,    0.8],       [ -47. ,   75. ,   15. ,    0.9],       [ -87. ,   -2. ,   23. ,    0.9],       [ -40. ,  -77. ,   18. ,    0.6],       [  47. ,  -79. ,   20. ,    0.9],       [  98. ,   -5. ,   23. ,    0.6],       [  48. ,   82. ,   16. ,    0.6],       [ -47. ,   84. ,   24. ,    1.2],       [ -99. ,   -1. ,   15. ,    1. ],       [ -47. ,  -92. ,   15. ,    1.3],       [  47. ,  -91. ,   23. ,    1.4],       [  48. ,    2. ,   29. ,    0.8],       [  22. ,   45. ,   24. ,    1.1],       [ -27. ,   45. ,   22. ,    1.2],       [ -52. ,    2. ,   24. ,    0.6],       [ -22. ,  -42. ,   25. ,    0.5],       [  25. ,  -39. ,   27. ,    1.4],       [  65. ,    2. ,   25. ,    1.1],       [  27. ,   53. ,   28. ,    0.9],       [ -31. ,   59. ,   30. ,    0.7],       [ -60. ,    0. ,   31. ,    1.1],       [ -32. ,  -59. ,   28. ,    1.3],       [  30. ,  -55. ,   28. ,    0.6],       [  74. ,    0. ,   28. ,    0.5],       [  41. ,   65. ,   27. ,    1.4],       [ -43. ,   61. ,   29. ,    1.4],       [ -78. ,    1. ,   21. ,    1.2],       [ -34. ,  -63. ,   21. ,    1.2],       [  36. ,  -66. ,   27. ,    1.2],       [  85. ,    4. ,   23. ,    1.5],       [  48. ,   77. ,   22. ,    1.3],       [ -44. ,   80. ,   26. ,    1.1],       [ -91. ,   -1. ,   27. ,    0.7],       [ -41. ,  -79. ,   28. ,    0.8],       [  39. ,  -76. ,   24. ,    1.2],       [  97. ,   -3. ,   31. ,    1.2],       [  54. ,   81. ,   31. ,    0.6],       [ -51. ,   87. ,   25. ,    1. ],       [ -96. ,   -3. ,   28. ,    1.2],       [ -53. ,  -83. ,   29. ,    1.1],       [  52. ,  -84. ,   25. ,    1. ],       [  47. ,   -2. ,   32. ,    1.5],       [  22. ,   39. ,   33. ,    1.1],       [ -23. ,   44. ,   36. ,    1. ],       [ -48. ,   -2. ,   32. ,    1.1],       [ -28. ,  -44. ,   30. ,    1.3],       [  20. ,  -39. ,   30. ,    1.1],       [  63. ,    0. ,   32. ,    0.7],       [  29. ,   57. ,   30. ,    0.6],       [ -28. ,   54. ,   32. ,    1.5],       [ -59. ,   -5. ,   37. ,    1.3],       [ -36. ,  -56. ,   37. ,    0.6],       [  33. ,  -52. ,   29. ,    1.4],       [  78. ,    4. ,   31. ,    0.9],       [  37. ,   63. ,   36. ,    0.9],       [ -33. ,   61. ,   31. ,    0.7],       [ -73. ,    3. ,   30. ,    1.4],       [ -38. ,  -69. ,   31. ,    0.7],       [  36. ,  -63. ,   34. ,    0.7],       [  82. ,    4. ,   37. ,    0.6],       [  40. ,   77. ,   31. ,    0.8],       [ -43. ,   78. ,   38. ,    1.1],       [ -91. ,   -2. ,   35. ,    1.2],       [ -46. ,  -72. ,   33. ,    0.9],       [  41. ,  -74. ,   28. ,    1.5],       [ 102. ,    4. ,   28. ,    1.4],       [  51. ,   87. ,   32. ,    1.4],       [ -50. ,   84. ,   31. ,    0.5],       [-100. ,   -4. ,   33. ,    1.2],       [ -48. ,  -92. ,   29. ,    1.2],       [  49. ,  -85. ,   29. ,    1.2],       [  45. ,   -4. ,   36. ,    0.8],       [  22. ,   46. ,   36. ,    1.1],       [ -29. ,   44. ,   35. ,    0.9],       [ -47. ,    2. ,   42. ,    0.9],       [ -23. ,  -47. ,   40. ,    1.4],       [  22. ,  -47. ,   38. ,    0.9],       [  62. ,   -4. ,   37. ,    0.9],       [  33. ,   54. ,   39. ,    0.9],       [ -29. ,   50. ,   38. ,    0.7],       [ -65. ,   -5. ,   44. ,    1.2],       [ -33. ,  -52. ,   41. ,    1.2],       [  31. ,  -53. ,   42. ,    0.8],       [  78. ,    1. ,   42. ,    0.9],       [  39. ,   62. ,   41. ,    1. ],       [ -42. ,   62. ,   36. ,    1.5],       [ -77. ,   -2. ,   43. ,    0.6],       [ -43. ,  -62. ,   44. ,    1.3],       [  33. ,  -70. ,   37. ,    1. ],       [  87. ,   -2. ,   41. ,    1.3],       [  48. ,   73. ,   43. ,    0.5],       [ -40. ,   80. ,   42. ,    1.2],       [ -84. ,   -5. ,   42. ,    0.8],       [ -40. ,  -73. ,   36. ,    0.6],       [  48. ,  -74. ,   37. ,    1.1],       [  96. ,    4. ,   41. ,    0.5],       [  53. ,   82. ,   39. ,    1. ],       [ -54. ,   88. ,   38. ,    0.6],       [-101. ,    0. ,   39. ,    0.8],       [ -47. ,  -88. ,   44. ,    1.2],       [  52. ,  -86. ,   42. ,    0.7]])
        basis0 = BSplineBasis(3, np.array([-2.3, -1.3,  0. ,  0.8,  1.8,  2.8,  3.7,  4.7,  6. ,  6.8,  7.8]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  2.2,  2.8,  4. ,  4. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  1.9,  3. ,  4.3,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 3.3,  5.7,  6.3])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 3.300000
        pt2[...,1] /= 5.700000
        pt2[...,2] /= 6.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p4(self):
        controlpoints = np.array([[  -2.,   -2.,   -1.],
       [  15.,    3.,   -1.],
       [  20.,   -3.,   -5.],
       [  35.,   -3.,   -1.],
       [  50.,   -1.,   -2.],
       [  60.,   -3.,    3.],
       [  72.,   -4.,    4.],
       [  91.,    2.,   -5.],
       [ 104.,    4.,   -1.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  2.1,  2.8,  3.9,  5.2,  6. ,  6. ,
        6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 2. ,  3.4,  7. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 2.000000
        pt2[...,1] -= 3.400000
        pt2[...,2] -= 7.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p3(self):
        controlpoints = np.array([[ -2.,  -2.,   3.],
       [ 21.,   1.,  -3.],
       [ 45.,   0.,   0.],
       [ 73.,   3.,  -3.],
       [ 97.,  -1.,  -5.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.1,  2.3,  3. ,  3. ,  3. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([  9.9,   6.9,  10.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 9.900000
        pt2[...,1] /= 6.900000
        pt2[...,2] /= 10.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p42(self):
        controlpoints = np.array([[   4.,   -1.,   -5.],
       [  21.,    3.,   -3.],
       [  48.,   -1.,   -5.],
       [  74.,    0.,   -1.],
       [ 100.,    4.,    1.],
       [  -2.,   25.,    1.],
       [  20.,   22.,   -3.],
       [  48.,   21.,   -1.],
       [  77.,   21.,    4.],
       [  98.,   24.,   -5.],
       [  -2.,   46.,    1.],
       [  27.,   49.,   -2.],
       [  48.,   46.,    0.],
       [  76.,   47.,    3.],
       [ 100.,   49.,   -2.],
       [  -4.,   78.,    0.],
       [  20.,   77.,    2.],
       [  48.,   78.,   -3.],
       [  77.,   77.,   -1.],
       [ 100.,   77.,   -3.],
       [   2.,  100.,    1.],
       [  21.,  102.,    0.],
       [  45.,   97.,    3.],
       [  76.,   99.,   -4.],
       [  97.,   97.,    2.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.6,  2. ,  2. ,  2. ,  2. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  1.9,  3.3,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 4.5,  9.9,  8. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 4.500000
        pt2[...,1] -= 9.900000
        pt2[...,2] -= 8.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p34(self):
        controlpoints = np.array([[  -3.,    1.,   -5.],       [  24.,    2.,    3.],       [  40.,   -1.,    0.],       [  60.,    1.,   -5.],       [  82.,    2.,    4.],       [ 104.,    2.,   -3.],       [   4.,   16.,    1.],       [  18.,   12.,    0.],       [  39.,   19.,   -1.],       [  64.,   15.,    4.],       [  82.,   17.,    0.],       [  99.,   10.,   -5.],       [   2.,   23.,   -2.],       [  16.,   28.,    0.],       [  39.,   32.,    1.],       [  63.,   23.,   -2.],       [  77.,   29.,    0.],       [  98.,   33.,   -4.],       [  -1.,   47.,   -2.],       [  24.,   47.,    0.],       [  42.,   38.,   -5.],       [  56.,   46.,   -2.],       [  76.,   41.,   -3.],       [ 103.,   38.,    2.],       [  -1.,   52.,    2.],       [  17.,   55.,    0.],       [  44.,   59.,   -1.],       [  62.,   52.,   -2.],       [  80.,   60.,    0.],       [  99.,   57.,    0.],       [  -3.,   71.,    3.],       [  23.,   70.,    1.],       [  37.,   72.,   -3.],       [  55.,   68.,    4.],       [  75.,   71.,    1.],       [ 101.,   67.,   -5.],       [   2.,   84.,    2.],       [  19.,   88.,    0.],       [  36.,   85.,   -2.],       [  62.,   86.,    1.],       [  79.,   84.,    4.],       [  99.,   83.,   -2.],       [   3.,   99.,    3.],       [  16.,   95.,    0.],       [  41.,   95.,   -1.],       [  64.,   99.,    2.],       [  75.,   99.,   -1.],       [ 104.,   99.,   -3.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.3,  1.9,  2.7,  4. ,  4. ,  4. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3.1,  3.9,  5. ,  5. ,  5. ,
        5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 3.5,  9.6,  8.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.500000
        pt2[...,1] /= 9.600000
        pt2[...,2] /= 8.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p422(self):
        controlpoints = np.array([[   3.,   -2.,    2.],       [  12.,    4.,   -2.],       [  27.,    1.,    0.],       [  35.,   -3.,    3.],       [  53.,   -1.,   -4.],       [  60.,    3.,   -4.],       [  75.,   -1.,    1.],       [  84.,   -3.,    2.],       [ 104.,   -2.,   -1.],       [  -4.,   15.,    2.],       [   9.,   22.,   -2.],       [  23.,   21.,   -3.],       [  40.,   19.,   -3.],       [  53.,   20.,   -2.],       [  58.,   24.,   -2.],       [  77.,   18.,    4.],       [  89.,   24.,    2.],       [  96.,   19.,    1.],       [  -2.,   42.,    4.],       [  15.,   41.,   -3.],       [  26.,   35.,   -3.],       [  33.,   38.,    1.],       [  54.,   37.,   -5.],       [  61.,   41.,   -3.],       [  72.,   37.,   -4.],       [  84.,   41.,    2.],       [ 101.,   38.,    2.],       [  -3.,   55.,   -5.],       [  12.,   64.,   -4.],       [  27.,   59.,    3.],       [  32.,   61.,    3.],       [  51.,   63.,   -4.],       [  62.,   57.,   -2.],       [  71.,   57.,   -2.],       [  82.,   61.,   -4.],       [ 100.,   64.,    0.],       [  -3.,   82.,   -4.],       [   8.,   83.,    3.],       [  21.,   75.,   -2.],       [  35.,   75.,   -4.],       [  45.,   76.,   -1.],       [  66.,   78.,    0.],       [  71.,   82.,    3.],       [  86.,   76.,    0.],       [ 101.,   76.,    1.],       [   1.,  104.,    3.],       [   9.,  100.,   -3.],       [  21.,  102.,    4.],       [  39.,  102.,   -5.],       [  49.,  104.,   -5.],       [  65.,  100.,   -5.],       [  74.,  103.,   -3.],       [  90.,   98.,    3.],       [ 102.,  101.,   -2.],       [   4.,   -4.,   24.],       [  17.,    2.,   26.],       [  27.,    1.,   23.],       [  36.,   -3.,   21.],       [  47.,    3.,   20.],       [  67.,   -3.,   28.],       [  73.,   -4.,   21.],       [  89.,    3.,   26.],       [ 100.,    0.,   25.],       [  -3.,   17.,   20.],       [  13.,   17.,   22.],       [  25.,   18.,   23.],       [  41.,   17.,   24.],       [  51.,   16.,   23.],       [  65.,   19.,   21.],       [  76.,   24.,   26.],       [  83.,   15.,   20.],       [ 100.,   16.,   28.],       [  -3.,   41.,   24.],       [  10.,   37.,   27.],       [  28.,   41.,   24.],       [  35.,   41.,   25.],       [  50.,   39.,   25.],       [  57.,   39.,   25.],       [  78.,   38.,   27.],       [  86.,   41.,   26.],       [  95.,   35.,   23.],       [  -2.,   55.,   24.],       [  10.,   59.,   22.],       [  21.,   60.,   24.],       [  42.,   61.,   28.],       [  47.,   55.,   26.],       [  63.,   56.,   29.],       [  75.,   55.,   20.],       [  84.,   56.,   25.],       [ 102.,   58.,   23.],       [   0.,   75.,   29.],       [  16.,   77.,   24.],       [  20.,   80.,   22.],       [  35.,   83.,   22.],       [  46.,   81.,   20.],       [  67.,   80.,   25.],       [  70.,   78.,   21.],       [  85.,   83.,   28.],       [ 101.,   79.,   23.],       [   1.,   95.,   28.],       [   8.,  104.,   29.],       [  25.,  104.,   26.],       [  34.,  103.,   25.],       [  50.,  103.,   23.],       [  67.,   99.,   23.],       [  78.,  100.,   27.],       [  86.,   99.,   28.],       [ 103.,  100.,   20.],       [  -3.,   -1.,   45.],       [   9.,   -4.,   54.],       [  29.,    1.,   47.],       [  36.,   -2.,   50.],       [  47.,   -4.,   45.],       [  64.,    0.,   46.],       [  72.,   -1.,   47.],       [  89.,   -2.,   47.],       [  99.,    3.,   45.],       [   1.,   15.,   48.],       [  11.,   23.,   52.],       [  26.,   17.,   53.],       [  33.,   17.,   50.],       [  46.,   15.,   47.],       [  65.,   22.,   46.],       [  71.,   23.,   46.],       [  90.,   17.,   53.],       [  97.,   21.,   48.],       [   2.,   43.,   53.],       [  12.,   41.,   49.],       [  24.,   43.,   48.],       [  34.,   40.,   45.],       [  45.,   39.,   54.],       [  64.,   44.,   47.],       [  70.,   40.,   49.],       [  87.,   39.,   46.],       [ 100.,   37.,   53.],       [  -3.,   60.,   45.],       [   8.,   63.,   47.],       [  22.,   59.,   49.],       [  42.,   57.,   52.],       [  47.,   59.,   46.],       [  66.,   56.,   52.],       [  74.,   63.,   50.],       [  90.,   57.,   46.],       [  98.,   64.,   48.],       [  -3.,   84.,   54.],       [  16.,   84.,   52.],       [  21.,   78.,   52.],       [  40.,   77.,   50.],       [  52.,   80.,   50.],       [  63.,   77.,   53.],       [  79.,   76.,   52.],       [  90.,   81.,   46.],       [  97.,   78.,   47.],       [  -3.,   95.,   46.],       [   9.,  100.,   45.],       [  21.,  100.,   53.],       [  40.,  103.,   50.],       [  54.,   97.,   53.],       [  63.,   95.,   51.],       [  79.,  103.,   48.],       [  90.,  100.,   49.],       [ 104.,  103.,   47.],       [  -2.,    0.,   78.],       [  16.,   -3.,   71.],       [  22.,   -2.,   79.],       [  39.,    0.,   77.],       [  47.,    4.,   74.],       [  64.,   -4.,   72.],       [  78.,    2.,   76.],       [  91.,    2.,   75.],       [  96.,   -2.,   75.],       [   2.,   22.,   76.],       [   8.,   17.,   78.],       [  20.,   22.,   78.],       [  41.,   24.,   76.],       [  52.,   19.,   72.],       [  60.,   18.,   77.],       [  77.,   15.,   75.],       [  89.,   22.,   71.],       [ 104.,   15.,   79.],       [  -5.,   38.,   76.],       [  10.,   36.,   76.],       [  29.,   43.,   74.],       [  42.,   37.,   74.],       [  49.,   43.,   76.],       [  61.,   42.,   72.],       [  76.,   39.,   72.],       [  83.,   36.,   72.],       [  96.,   41.,   75.],       [  -2.,   63.,   74.],       [   8.,   63.,   72.],       [  20.,   57.,   73.],       [  35.,   56.,   77.],       [  53.,   63.,   77.],       [  66.,   64.,   78.],       [  78.,   63.,   73.],       [  90.,   56.,   78.],       [  95.,   59.,   72.],       [   4.,   82.,   70.],       [  13.,   83.,   75.],       [  28.,   84.,   79.],       [  38.,   75.,   73.],       [  45.,   82.,   71.],       [  66.,   76.,   70.],       [  70.,   80.,   79.],       [  85.,   84.,   76.],       [  98.,   82.,   70.],       [   3.,  101.,   72.],       [  10.,  103.,   73.],       [  28.,   97.,   78.],       [  36.,  103.,   71.],       [  51.,   98.,   79.],       [  61.,   97.,   71.],       [  75.,   99.,   78.],       [  89.,   95.,   73.],       [  99.,  100.,   79.],       [  -4.,   -5.,   99.],       [   9.,    0.,  101.],       [  20.,   -2.,  101.],       [  35.,   -2.,   95.],       [  47.,    3.,   98.],       [  60.,    0.,  102.],       [  79.,   -5.,   96.],       [  85.,   -2.,   96.],       [ 104.,    0.,  102.],       [  -3.,   17.,  102.],       [  15.,   22.,  104.],       [  25.,   16.,  101.],       [  40.,   15.,  104.],       [  53.,   23.,   96.],       [  66.,   17.,   99.],       [  76.,   16.,   95.],       [  84.,   18.,   98.],       [  98.,   17.,   97.],       [  -2.,   35.,   99.],       [  11.,   41.,   95.],       [  25.,   36.,   98.],       [  34.,   37.,  102.],       [  47.,   35.,   99.],       [  66.,   42.,   96.],       [  72.,   35.,  104.],       [  86.,   44.,   95.],       [ 104.,   36.,  102.],       [  -3.,   62.,   98.],       [  13.,   60.,  103.],       [  26.,   58.,   99.],       [  40.,   62.,  102.],       [  45.,   55.,  101.],       [  59.,   57.,   96.],       [  73.,   64.,  100.],       [  87.,   62.,   95.],       [  95.,   56.,  103.],       [  -3.,   75.,  103.],       [  12.,   82.,  100.],       [  22.,   79.,   95.],       [  37.,   76.,  100.],       [  54.,   77.,   96.],       [  63.,   82.,  102.],       [  75.,   79.,   99.],       [  89.,   75.,   99.],       [ 101.,   83.,   96.],       [   0.,  100.,   96.],       [   9.,   96.,   97.],       [  29.,   96.,  100.],       [  38.,   98.,   97.],       [  50.,  101.,  102.],       [  63.,  101.,   95.],       [  79.,   99.,   95.],       [  92.,  100.,   99.],       [  97.,   97.,   95.]])
        basis0 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  2.7,  4. ,  4.9,  6. ,  6. ,
        6. ,  6. ]))
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1. ,  2.1,  2.8,  4.2,  5. ,  5. ]))
        basis2 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  1.9,  3.2,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 6.6,  6.3,  7.7])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 6.600000
        pt2[...,1] -= 6.300000
        pt2[...,2] -= 7.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p343(self):
        controlpoints = np.array([[  -1.,   -3.,   -2.],       [  26.,   -1.,    3.],       [  53.,    3.,   -3.],       [  77.,    2.,   -3.],       [  99.,    1.,   -5.],       [  -1.,   16.,   -1.],       [  24.,   21.,   -4.],       [  54.,   20.,   -2.],       [  70.,   11.,    1.],       [ 103.,   15.,    3.],       [  -4.,   34.,   -2.],       [  22.,   34.,   -2.],       [  45.,   37.,    1.],       [  75.,   37.,    3.],       [  99.,   32.,    2.],       [  -3.,   46.,    4.],       [  23.,   47.,   -2.],       [  46.,   46.,    4.],       [  72.,   45.,    0.],       [ 100.,   47.,    3.],       [  -3.,   63.,    4.],       [  23.,   61.,   -2.],       [  50.,   63.,   -4.],       [  77.,   69.,    1.],       [ 102.,   68.,   -1.],       [  -1.,   83.,   -2.],       [  27.,   83.,   -2.],       [  51.,   83.,    3.],       [  77.,   86.,   -5.],       [ 100.,   82.,   -5.],       [   4.,   97.,   -4.],       [  29.,  100.,    3.],       [  47.,  100.,   -2.],       [  76.,  104.,   -1.],       [  96.,  103.,    3.],       [  -1.,    3.,   14.],       [  20.,    4.,   16.],       [  53.,    1.,   18.],       [  76.,   -1.,   12.],       [ 100.,   -5.,   18.],       [  -3.,   17.,   12.],       [  29.,   19.,   14.],       [  45.,   15.,   10.],       [  78.,   17.,   13.],       [  95.,   19.,   17.],       [  -5.,   36.,   16.],       [  22.,   31.,   12.],       [  47.,   28.,    9.],       [  73.,   34.,   13.],       [  96.,   36.,   18.],       [  -2.,   50.,   12.],       [  20.,   49.,   10.],       [  50.,   52.,   10.],       [  74.,   49.,   18.],       [ 100.,   53.,   15.],       [  -5.,   64.,   17.],       [  28.,   71.,   13.],       [  54.,   65.,   13.],       [  77.,   68.,   17.],       [ 104.,   62.,   17.],       [   2.,   83.,    9.],       [  23.,   84.,   10.],       [  50.,   81.,   14.],       [  75.,   82.,   15.],       [ 104.,   82.,    9.],       [  -4.,   95.,   14.],       [  21.,   97.,    9.],       [  53.,  100.,    9.],       [  78.,   97.,   15.],       [ 104.,   98.,    9.],       [  -4.,   -4.,   26.],       [  27.,    4.,   32.],       [  49.,    4.,   33.],       [  70.,   -5.,   29.],       [  97.,    1.,   33.],       [  -5.,   18.,   24.],       [  28.,   13.,   27.],       [  51.,   14.,   27.],       [  77.,   18.,   29.],       [  98.,   12.,   30.],       [  -3.,   37.,   24.],       [  20.,   37.,   27.],       [  50.,   32.,   30.],       [  74.,   30.,   29.],       [  98.,   35.,   25.],       [  -3.,   47.,   28.],       [  22.,   50.,   30.],       [  48.,   50.,   33.],       [  78.,   45.,   32.],       [ 100.,   52.,   27.],       [   1.,   67.,   23.],       [  28.,   70.,   25.],       [  53.,   70.,   27.],       [  78.,   70.,   24.],       [  99.,   61.,   31.],       [   4.,   86.,   31.],       [  20.,   86.,   23.],       [  45.,   78.,   30.],       [  73.,   85.,   30.],       [ 103.,   87.,   32.],       [   2.,   99.,   29.],       [  27.,  104.,   32.],       [  51.,   99.,   32.],       [  72.,   98.,   25.],       [  97.,  104.,   31.],       [   1.,    1.,   41.],       [  20.,   -2.,   41.],       [  51.,   -2.,   45.],       [  71.,   -3.,   46.],       [  98.,   -1.,   45.],       [   3.,   21.,   45.],       [  23.,   12.,   40.],       [  53.,   19.,   42.],       [  75.,   17.,   47.],       [ 102.,   12.,   38.],       [  -5.,   32.,   41.],       [  24.,   35.,   39.],       [  54.,   37.,   39.],       [  79.,   29.,   47.],       [ 101.,   37.,   38.],       [  -1.,   49.,   39.],       [  24.,   45.,   45.],       [  48.,   50.,   43.],       [  73.,   52.,   42.],       [ 100.,   49.,   44.],       [  -5.,   66.,   44.],       [  25.,   64.,   40.],       [  48.,   66.,   47.],       [  73.,   71.,   41.],       [  96.,   69.,   40.],       [   1.,   86.,   40.],       [  23.,   79.,   40.],       [  51.,   80.,   37.],       [  71.,   83.,   45.],       [  95.,   80.,   41.],       [  -3.,   99.,   47.],       [  26.,   97.,   46.],       [  45.,  100.,   46.],       [  73.,   95.,   42.],       [  95.,   99.,   46.],       [   1.,    4.,   57.],       [  22.,    4.,   54.],       [  49.,   -5.,   58.],       [  76.,   -4.,   57.],       [  99.,    3.,   54.],       [   4.,   20.,   60.],       [  23.,   16.,   55.],       [  47.,   18.,   56.],       [  72.,   17.,   57.],       [ 102.,   13.,   57.],       [  -1.,   37.,   55.],       [  29.,   36.,   60.],       [  48.,   33.,   55.],       [  76.,   35.,   55.],       [  96.,   30.,   58.],       [   2.,   48.,   52.],       [  27.,   48.,   59.],       [  47.,   49.,   58.],       [  70.,   54.,   59.],       [ 103.,   52.,   57.],       [   3.,   65.,   55.],       [  24.,   62.,   53.],       [  51.,   71.,   54.],       [  76.,   67.,   57.],       [  99.,   67.,   54.],       [  -1.,   81.,   56.],       [  23.,   85.,   58.],       [  53.,   87.,   56.],       [  73.,   81.,   57.],       [  96.,   84.,   61.],       [  -4.,  104.,   54.],       [  23.,  101.,   61.],       [  47.,  102.,   55.],       [  79.,   99.,   61.],       [ 103.,  102.,   59.],       [   1.,   -2.,   68.],       [  22.,   -1.,   71.],       [  47.,    4.,   67.],       [  71.,   -4.,   67.],       [  95.,    2.,   69.],       [  -1.,   14.,   67.],       [  26.,   20.,   69.],       [  49.,   21.,   76.],       [  79.,   16.,   68.],       [ 100.,   14.,   67.],       [   2.,   34.,   69.],       [  22.,   37.,   67.],       [  47.,   32.,   67.],       [  70.,   34.,   67.],       [  99.,   38.,   72.],       [   1.,   46.,   70.],       [  25.,   47.,   72.],       [  47.,   46.,   72.],       [  72.,   54.,   72.],       [ 104.,   50.,   67.],       [  -2.,   69.,   68.],       [  22.,   71.,   68.],       [  48.,   68.,   74.],       [  70.,   62.,   73.],       [  97.,   63.,   71.],       [  -4.,   87.,   66.],       [  20.,   80.,   66.],       [  54.,   84.,   69.],       [  74.,   87.,   75.],       [ 103.,   86.,   70.],       [  -3.,  100.,   72.],       [  28.,  104.,   68.],       [  52.,   95.,   73.],       [  73.,   96.,   68.],       [ 103.,  100.,   70.],       [  -1.,    0.,   80.],       [  26.,    4.,   85.],       [  49.,   -5.,   88.],       [  77.,    4.,   90.],       [  99.,   -2.,   83.],       [  -1.,   18.,   85.],       [  21.,   13.,   84.],       [  51.,   20.,   89.],       [  74.,   14.,   90.],       [ 102.,   19.,   90.],       [   0.,   29.,   83.],       [  23.,   31.,   84.],       [  46.,   31.,   88.],       [  70.,   32.,   88.],       [  96.,   31.,   82.],       [   4.,   54.,   86.],       [  28.,   46.,   89.],       [  52.,   49.,   89.],       [  75.,   49.,   89.],       [  97.,   46.,   81.],       [   0.,   64.,   81.],       [  25.,   62.,   83.],       [  52.,   67.,   85.],       [  76.,   66.,   85.],       [  96.,   69.,   82.],       [  -5.,   85.,   82.],       [  28.,   83.,   89.],       [  52.,   83.,   84.],       [  73.,   84.,   85.],       [ 104.,   84.,   89.],       [  -4.,  103.,   85.],       [  29.,   96.,   83.],       [  48.,  100.,   89.],       [  71.,   95.,   83.],       [ 103.,  101.,   88.],       [   3.,    4.,   98.],       [  29.,   -4.,  104.],       [  48.,   -5.,  101.],       [  70.,   -3.,   97.],       [  98.,   -1.,   96.],       [  -5.,   16.,   99.],       [  21.,   17.,   97.],       [  49.,   15.,  103.],       [  73.,   19.,   99.],       [  96.,   15.,   96.],       [   0.,   31.,  100.],       [  21.,   35.,  103.],       [  45.,   38.,  104.],       [  74.,   35.,   98.],       [ 104.,   34.,  104.],       [   0.,   51.,  100.],       [  25.,   54.,  102.],       [  49.,   45.,   96.],       [  77.,   48.,  104.],       [  98.,   53.,  102.],       [  -1.,   64.,  104.],       [  22.,   62.,   98.],       [  52.,   64.,  103.],       [  77.,   65.,   99.],       [ 100.,   68.,  101.],       [   2.,   80.,   95.],       [  29.,   81.,  103.],       [  47.,   83.,   99.],       [  75.,   85.,  102.],       [ 103.,   85.,  103.],       [   1.,  100.,   96.],       [  26.,  100.,   96.],       [  45.,  102.,  104.],       [  75.,   97.,   97.],       [  97.,  104.,  100.]])
        basis0 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.9,  2. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  0.9,  2.2,  2.8,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1.2,  1.6,  3.2,  3.9,  5. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([ 2.9,  2.7,  5.2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 2.900000
        pt2[...,1] /= 2.700000
        pt2[...,2] /= 5.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p4_C0_periodic(self):
        controlpoints = np.array([[ 100.,    4.,   -2.],
       [  31.,   97.,   -3.],
       [ -81.,   63.,   -4.],
       [ -85.,  -58.,    3.],
       [  34.,  -94.,   -2.]])
        basis0 = BSplineBasis(4, np.array([-0.8,  0. ,  0. ,  0. ,  1.4,  2.2,  3. ,  3. ,  3. ,  4.4]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 9.2,  9.5,  5.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 9.200000
        pt2[...,1] -= 9.500000
        pt2[...,2] -= 5.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p4_C0_periodic(self):
        controlpoints = np.array([[ 103.,    2.,   -2.],
       [  54.,   91.,    0.],
       [ -52.,   88.,   -4.],
       [-103.,   -4.,   -4.],
       [ -54.,  -86.,    1.],
       [  51.,  -89.,    3.]])
        basis0 = BSplineBasis(4, np.array([-0.8,  0. ,  0. ,  0. ,  1.2,  1.8,  3.2,  4. ,  4. ,  4. ,  5.2]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 5.6,  9.6,  7.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 5.600000
        pt2[...,1] /= 9.600000
        pt2[...,2] /= 7.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p23_C0_periodic(self):
        controlpoints = np.array([[  62.,   -1.,   -5.],
       [  -3.,   59.,   -2.],
       [ -57.,   -4.,   -3.],
       [   1.,  -63.,    1.],
       [  66.,    0.,    2.],
       [   0.,   67.,    3.],
       [ -66.,    4.,   -2.],
       [  -5.,  -64.,   -3.],
       [  74.,   -5.,    0.],
       [   4.,   69.,   -5.],
       [ -77.,    3.,    2.],
       [  -1.,  -76.,    1.],
       [  80.,    4.,    2.],
       [   3.,   82.,   -3.],
       [ -77.,    0.,   -4.],
       [  -1.,  -84.,   -1.],
       [  87.,    4.,   -4.],
       [   2.,   90.,    1.],
       [ -87.,   -3.,    4.],
       [  -2.,  -87.,   -1.],
       [  95.,   -5.,   -2.],
       [  -1.,   91.,    3.],
       [ -96.,   -3.,    4.],
       [   4.,  -94.,   -2.],
       [  98.,    2.,    4.],
       [   0.,  100.,    3.],
       [ -98.,   -5.,    3.],
       [   1., -101.,   -2.]])
        basis0 = BSplineBasis(2, np.array([-0.6,  0. ,  0.6,  1.9,  3.4,  4. ,  4.6]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.6,  2.2,  3. ,  3.7,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 6. ,  9.9,  9.7])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 6.000000
        pt2[...,1] -= 9.900000
        pt2[...,2] -= 9.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p24_C0_periodic(self):
        controlpoints = np.array([[  63.,   -1.,    2.],       [  -1.,   57.,    1.],       [ -64.,   -1.,    2.],       [   3.,  -56.,    4.],       [  66.,   -1.,   -2.],       [   0.,   65.,   -5.],       [ -67.,    2.,   -3.],       [   1.,  -65.,   -4.],       [  67.,   -5.,   -5.],       [  -2.,   70.,    2.],       [ -69.,    1.,   -1.],       [  -2.,  -69.,   -2.],       [  79.,   -5.,    1.],       [   0.,   73.,   -4.],       [ -79.,    2.,    1.],       [  -4.,  -77.,    4.],       [  80.,   -1.,   -5.],       [   1.,   83.,   -1.],       [ -77.,   -4.,   -5.],       [  -1.,  -76.,    2.],       [  86.,    0.,   -2.],       [  -2.,   85.,    4.],       [ -86.,   -2.,    0.],       [   0.,  -82.,   -4.],       [  86.,   -2.,    0.],       [  -3.,   94.,   -2.],       [ -95.,    4.,   -2.],       [  -4.,  -91.,    0.],       [  96.,    1.,    3.],       [  -5.,   92.,   -1.],       [ -99.,   -1.,   -5.],       [  -2.,  -93.,    4.],       [ 100.,    1.,    4.],       [  -5.,   97.,   -2.],       [ -97.,   -4.,   -1.],       [  -5., -101.,    0.]])
        basis0 = BSplineBasis(2, np.array([-0.7,  0. ,  1. ,  1.9,  3.3,  4. ,  5. ]),0)
        basis1 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  3.1,  3.6,  5. ,  6. ,  6. ,
        6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([  3.6,   9.7,  11. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 3.600000
        pt2[...,1] /= 9.700000
        pt2[...,2] /= 11.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p333_C0_periodic(self):
        controlpoints = np.array([[  53.,   -4.,    0.],       [   1.,   46.,   -3.],       [ -48.,    3.,   -1.],       [   0.,  -52.,   -1.],       [  61.,   -2.,   -4.],       [  -1.,   62.,    1.],       [ -61.,    0.,    2.],       [   4.,  -62.,   -4.],       [  70.,    0.,   -5.],       [  -2.,   61.,   -2.],       [ -71.,    0.,    2.],       [   1.,  -68.,   -3.],       [  75.,   -1.,   -4.],       [  -4.,   71.,    0.],       [ -71.,   -4.,   -2.],       [  -4.,  -79.,   -4.],       [  85.,    4.,    0.],       [  -2.,   85.,    2.],       [ -80.,   -1.,   -4.],       [   2.,  -81.,   -5.],       [  91.,    4.,    1.],       [  -5.,   95.,   -3.],       [ -95.,   -4.,   -5.],       [  -2.,  -91.,   -5.],       [  98.,   -3.,    4.],       [   1.,  103.,    0.],       [-104.,    2.,    3.],       [   0., -105.,   -5.],       [  51.,    4.,    4.],       [   4.,   47.,    4.],       [ -55.,    3.,    3.],       [  -3.,  -53.,    4.],       [  62.,    3.,    6.],       [   1.,   53.,   11.],       [ -60.,    2.,    3.],       [  -1.,  -58.,   10.],       [  64.,    1.,   10.],       [   3.,   65.,    6.],       [ -71.,   -5.,    7.],       [  -2.,  -64.,    3.],       [  71.,   -2.,    9.],       [   3.,   70.,   11.],       [ -76.,    2.,    4.],       [   2.,  -72.,    8.],       [  83.,   -4.,   11.],       [  -1.,   79.,    7.],       [ -82.,   -2.,    6.],       [  -3.,  -80.,    9.],       [  95.,   -3.,    6.],       [   3.,   90.,    7.],       [ -92.,   -5.,    9.],       [   4.,  -91.,    6.],       [  95.,    3.,   10.],       [   1.,  101.,   11.],       [-100.,    3.,    5.],       [  -3., -101.,    7.],       [  49.,    1.,   12.],       [  -5.,   48.,   18.],       [ -51.,   -5.,   15.],       [  -2.,  -51.,   19.],       [  59.,   -4.,   11.],       [   1.,   60.,   20.],       [ -59.,    2.,   11.],       [  -2.,  -58.,   12.],       [  70.,   -4.,   16.],       [   1.,   63.,   12.],       [ -64.,   -3.,   18.],       [   0.,  -63.,   18.],       [  73.,    1.,   13.],       [   2.,   76.,   19.],       [ -77.,   -3.,   13.],       [   4.,  -77.,   13.],       [  85.,   -5.,   17.],       [   2.,   80.,   12.],       [ -87.,    3.,   13.],       [  -1.,  -80.,   15.],       [  93.,   -1.,   20.],       [  -2.,   92.,   14.],       [ -90.,   -3.,   17.],       [  -2.,  -93.,   14.],       [ 100.,    1.,   18.],       [  -3.,   97.,   17.],       [ -98.,   -4.,   14.],       [   3., -105.,   16.],       [  51.,    0.,   23.],       [   2.,   50.,   28.],       [ -54.,    4.,   19.],       [   3.,  -49.,   25.],       [  60.,    0.,   25.],       [   4.,   63.,   28.],       [ -57.,    1.,   20.],       [  -4.,  -64.,   25.],       [  66.,   -5.,   27.],       [   0.,   63.,   19.],       [ -64.,   -2.,   21.],       [  -4.,  -66.,   24.],       [  70.,    3.,   26.],       [  -4.,   72.,   24.],       [ -76.,   -5.,   25.],       [  -4.,  -71.,   28.],       [  87.,   -2.,   22.],       [   3.,   82.,   19.],       [ -83.,    1.,   27.],       [  -4.,  -79.,   22.],       [  95.,    3.,   20.],       [   1.,   94.,   20.],       [ -93.,    4.,   28.],       [   1.,  -88.,   23.],       [ 102.,    0.,   21.],       [   1.,   96.,   28.],       [-104.,    1.,   23.],       [  -2.,  -96.,   24.],       [  51.,   -1.,   35.],       [   0.,   46.,   33.],       [ -50.,    3.,   28.],       [  -2.,  -52.,   33.],       [  57.,   -1.,   30.],       [  -2.,   61.,   33.],       [ -54.,    1.,   29.],       [   3.,  -57.,   30.],       [  66.,   -4.,   34.],       [   0.,   71.,   31.],       [ -67.,    3.,   31.],       [  -4.,  -65.,   32.],       [  76.,    3.,   34.],       [   3.,   77.,   33.],       [ -74.,    3.,   36.],       [  -2.,  -73.,   31.],       [  78.,   -4.,   34.],       [  -4.,   84.,   27.],       [ -86.,   -2.,   34.],       [   2.,  -86.,   35.],       [  90.,   -1.,   30.],       [   3.,   88.,   36.],       [ -94.,    2.,   28.],       [  -5.,  -89.,   31.],       [  99.,   -5.,   29.],       [   1.,   98.,   35.],       [-105.,    2.,   30.],       [  -1.,  -99.,   31.],       [  52.,    0.,   35.],       [   1.,   51.,   41.],       [ -51.,   -4.,   38.],       [   1.,  -54.,   38.],       [  57.,   -2.,   43.],       [   3.,   59.,   39.],       [ -54.,    2.,   42.],       [  -2.,  -57.,   36.],       [  71.,   -4.,   44.],       [   0.,   63.,   42.],       [ -64.,   -5.,   40.],       [  -5.,  -71.,   40.],       [  70.,    0.,   37.],       [  -4.,   73.,   44.],       [ -75.,   -3.,   43.],       [   0.,  -80.,   37.],       [  81.,   -2.,   36.],       [   4.,   83.,   40.],       [ -88.,   -2.,   40.],       [  -4.,  -79.,   35.],       [  90.,   -4.,   37.],       [   4.,   94.,   41.],       [ -88.,    1.,   40.],       [  -3.,  -90.,   37.],       [  98.,   -2.,   41.],       [  -5.,   99.,   35.],       [-105.,    4.,   41.],       [  -4.,  -98.,   41.]])
        basis0 = BSplineBasis(3, np.array([-0.9,  0. ,  0. ,  1.3,  2.1,  3. ,  3. ,  4.3]),0)
        basis1 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  0.6,  2.4,  3.3,  3.7,  5. ,  5. ,  5. ]))
        basis2 = BSplineBasis(3, np.array([ 0. ,  0. ,  0. ,  1. ,  1.8,  3. ,  4. ,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 4. ,  6. ,  4.7])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 4.000000
        pt2[...,1] -= 6.000000
        pt2[...,2] -= 4.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p424_C0_periodic(self):
        controlpoints = np.array([[  47.,   -3.,   -1.],       [  19.,   46.,   -4.],       [ -41.,   30.,   -1.],       [ -45.,  -28.,    2.],       [  13.,  -52.,   -1.],       [  65.,    2.,    4.],       [  20.,   67.,   -5.],       [ -59.,   35.,   -4.],       [ -50.,  -39.,   -1.],       [  17.,  -67.,    3.],       [  86.,    4.,   -4.],       [  26.,   74.,   -4.],       [ -72.,   46.,   -2.],       [ -66.,  -47.,    4.],       [  25.,  -78.,    2.],       [  95.,   -1.,   -3.],       [  30.,   91.,   -3.],       [ -79.,   60.,    2.],       [ -79.,  -61.,    0.],       [  26.,  -96.,    0.],       [  51.,   -3.,    2.],       [  13.,   51.,    3.],       [ -37.,   31.,    6.],       [ -43.,  -30.,    4.],       [  11.,  -48.,    4.],       [  64.,    0.,    2.],       [  23.,   62.,   11.],       [ -57.,   39.,    9.],       [ -52.,  -36.,    9.],       [  18.,  -64.,    2.],       [  78.,   -5.,    1.],       [  23.,   83.,   11.],       [ -71.,   51.,    5.],       [ -65.,  -46.,    4.],       [  26.,  -76.,    8.],       [ 103.,    1.,    9.],       [  29.,   98.,    6.],       [ -83.,   59.,    5.],       [ -83.,  -60.,    9.],       [  27.,  -92.,    3.],       [  52.,   -5.,   16.],       [  15.,   51.,   16.],       [ -36.,   25.,    8.],       [ -39.,  -29.,    8.],       [  19.,  -45.,   10.],       [  62.,    1.,   13.],       [  16.,   61.,   17.],       [ -56.,   34.,   11.],       [ -52.,  -37.,    8.],       [  20.,  -68.,   15.],       [  79.,   -4.,   12.],       [  25.,   80.,   15.],       [ -63.,   45.,   11.],       [ -71.,  -46.,   15.],       [  27.,  -75.,   16.],       [ 102.,   -3.,   10.],       [  32.,   96.,    8.],       [ -78.,   59.,   12.],       [ -79.,  -56.,   15.],       [  31.,  -98.,   14.],       [  53.,   -4.,   16.],       [  16.,   49.,   21.],       [ -37.,   29.,   18.],       [ -38.,  -32.,   23.],       [  20.,  -44.,   17.],       [  62.,    4.,   17.],       [  19.,   58.,   19.],       [ -51.,   43.,   24.],       [ -51.,  -42.,   22.],       [  22.,  -63.,   16.],       [  87.,   -3.,   18.],       [  24.,   74.,   15.],       [ -72.,   51.,   15.],       [ -66.,  -45.,   17.],       [  22.,  -76.,   23.],       [ 103.,    1.,   18.],       [  28.,   99.,   24.],       [ -78.,   62.,   23.],       [ -81.,  -59.,   21.],       [  27.,  -93.,   15.],       [  53.,    0.,   28.],       [  13.,   49.,   29.],       [ -42.,   33.,   26.],       [ -45.,  -31.,   27.],       [  15.,  -49.,   28.],       [  71.,   -3.,   31.],       [  22.,   61.,   27.],       [ -54.,   39.,   24.],       [ -57.,  -40.,   28.],       [  21.,  -67.,   26.],       [  83.,   -5.,   24.],       [  22.,   78.,   23.],       [ -72.,   46.,   25.],       [ -68.,  -45.,   30.],       [  23.,  -80.,   29.],       [ 102.,    2.,   30.],       [  32.,   93.,   29.],       [ -82.,   62.,   29.],       [ -79.,  -59.,   23.],       [  34.,  -92.,   27.],       [  45.,   -2.,   30.],       [  14.,   49.,   30.],       [ -42.,   25.,   30.],       [ -37.,  -32.,   29.],       [  11.,  -49.,   37.],       [  63.,   -3.,   32.],       [  17.,   64.,   32.],       [ -57.,   39.,   35.],       [ -52.,  -38.,   32.],       [  18.,  -66.,   34.],       [  80.,   -3.,   30.],       [  23.,   75.,   33.],       [ -65.,   44.,   38.],       [ -63.,  -51.,   28.],       [  23.,  -80.,   30.],       [  97.,    4.,   30.],       [  30.,   90.,   36.],       [ -76.,   57.,   28.],       [ -84.,  -62.,   28.],       [  34.,  -96.,   37.],       [  46.,    0.,   38.],       [  16.,   47.,   44.],       [ -39.,   32.,   40.],       [ -40.,  -31.,   38.],       [  13.,  -50.,   39.],       [  69.,   -4.,   41.],       [  22.,   58.,   38.],       [ -52.,   42.,   38.],       [ -58.,  -42.,   42.],       [  15.,  -64.,   36.],       [  80.,    1.,   35.],       [  27.,   77.,   40.],       [ -64.,   51.,   42.],       [ -72.,  -50.,   35.],       [  27.,  -84.,   39.],       [  98.,   -2.,   39.],       [  28.,   96.,   38.],       [ -80.,   61.,   42.],       [ -86.,  -64.,   37.],       [  33.,  -96.,   39.]])
        basis0 = BSplineBasis(4, np.array([-1.1,  0. ,  0. ,  0. ,  0.9,  1.9,  3. ,  3. ,  3. ,  3.9]),0)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.1,  2. ,  3. ,  3. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.1,  1.8,  2.9,  4. ,  4. ,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([  9.4,  11.6,   9.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 9.400000
        pt2[...,1] /= 11.600000
        pt2[...,2] /= 9.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p3_C1_periodic(self):
        controlpoints = np.array([[ 102.,    0.,    4.],
       [  62.,   80.,    4.],
       [ -21.,   96.,   -3.],
       [ -88.,   41.,    1.],
       [ -86.,  -46.,   -4.],
       [ -19.,  -99.,    3.],
       [  62.,  -75.,    3.]])
        basis0 = BSplineBasis(3, np.array([-2.4, -0.8,  0. ,  1.2,  1.7,  3.4,  4.3,  4.6,  6.2,  7. ,  8.2,
        8.7]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 8. ,  8.7,  8.4])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 8.000000
        pt2[...,1] /= 8.700000
        pt2[...,2] /= 8.400000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p42_C1_periodic(self):
        controlpoints = np.array([[  58.,   -5.,    4.],       [  33.,   51.,   -4.],       [ -12.,   55.,    4.],       [ -56.,   22.,   -5.],       [ -50.,  -26.,    1.],       [ -18.,  -63.,   -3.],       [  41.,  -51.,    1.],       [  74.,    3.,    0.],       [  48.,   58.,   -4.],       [ -14.,   66.,   -3.],       [ -67.,   34.,    1.],       [ -60.,  -28.,   -2.],       [ -16.,  -68.,    1.],       [  42.,  -51.,   -5.],       [  78.,    3.,    2.],       [  48.,   67.,    2.],       [ -16.,   77.,    3.],       [ -73.,   39.,   -4.],       [ -68.,  -35.,    0.],       [ -22.,  -81.,    4.],       [  47.,  -63.,    3.],       [  93.,   -5.,   -4.],       [  55.,   75.,   -4.],       [ -16.,   92.,    1.],       [ -82.,   41.,   -4.],       [ -86.,  -40.,    4.],       [ -23.,  -93.,   -2.],       [  53.,  -76.,    1.],       [ 103.,    2.,   -5.],       [  62.,   76.,    2.],       [ -28.,  100.,    3.],       [ -88.,   46.,   -3.],       [ -92.,  -41.,   -2.],       [ -22.,  -94.,    2.],       [  61.,  -79.,   -3.]])
        basis0 = BSplineBasis(4, np.array([-1.7, -1.3,  0. ,  0. ,  1.3,  2.3,  3.2,  4.3,  4.7,  6. ,  6. ,
        7.3,  8.3]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.4,  1.7,  3.3,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 5.4,  3.1,  0.6])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 5.400000
        pt2[...,1] -= 3.100000
        pt2[...,2] -= 0.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p324_C1_periodic(self):
        controlpoints = np.array([[  51.,    2.,   -5.],       [  28.,   35.,   -3.],       [  -8.,   44.,   -5.],       [ -48.,   17.,   -5.],       [ -43.,  -20.,   -5.],       [ -11.,  -47.,    3.],       [  34.,  -38.,    1.],       [  71.,   -1.,   -2.],       [  46.,   53.,   -4.],       [ -13.,   61.,   -2.],       [ -64.,   24.,    0.],       [ -59.,  -25.,   -1.],       [ -20.,  -63.,   -3.],       [  36.,  -49.,   -2.],       [  82.,    3.,    2.],       [  47.,   63.,    1.],       [ -20.,   84.,    4.],       [ -71.,   36.,    3.],       [ -74.,  -35.,    3.],       [ -15.,  -80.,   -4.],       [  54.,  -66.,    2.],       [ 101.,   -5.,   -5.],       [  58.,   81.,    1.],       [ -20.,  100.,   -2.],       [ -87.,   39.,   -4.],       [ -95.,  -44.,   -4.],       [ -25.,  -99.,   -2.],       [  60.,  -82.,   -4.],       [  54.,   -2.,   13.],       [  34.,   40.,   14.],       [  -9.,   50.,    6.],       [ -48.,   23.,    8.],       [ -46.,  -23.,    5.],       [  -7.,  -47.,   14.],       [  34.,  -35.,    7.],       [  68.,    4.,    6.],       [  46.,   50.,   12.],       [ -17.,   61.,   13.],       [ -60.,   27.,    6.],       [ -60.,  -30.,   13.],       [ -11.,  -62.,   11.],       [  40.,  -55.,    5.],       [  80.,    3.,    9.],       [  53.,   62.,   11.],       [ -22.,   80.,    7.],       [ -78.,   37.,   10.],       [ -75.,  -41.,    6.],       [ -15.,  -84.,   14.],       [  47.,  -70.,   11.],       [  96.,   -5.,   10.],       [  64.,   74.,    8.],       [ -24.,   98.,    6.],       [ -92.,   48.,   11.],       [ -91.,  -44.,   13.],       [ -27., -102.,    7.],       [  62.,  -82.,    5.],       [  47.,   -5.,   19.],       [  33.,   40.,   15.],       [  -9.,   53.,   20.],       [ -48.,   17.,   24.],       [ -42.,  -18.,   16.],       [  -8.,  -49.,   22.],       [  33.,  -37.,   21.],       [  67.,   -2.,   19.],       [  44.,   56.,   19.],       [ -16.,   66.,   16.],       [ -63.,   33.,   20.],       [ -56.,  -27.,   17.],       [ -20.,  -63.,   23.],       [  45.,  -49.,   24.],       [  81.,    3.,   24.],       [  51.,   65.,   17.],       [ -17.,   79.,   23.],       [ -75.,   35.,   24.],       [ -74.,  -36.,   21.],       [ -17.,  -81.,   20.],       [  51.,  -70.,   15.],       [  98.,    2.,   23.],       [  58.,   74.,   24.],       [ -20.,  100.,   20.],       [ -88.,   47.,   23.],       [ -95.,  -49.,   21.],       [ -23., -100.,   17.],       [  58.,  -76.,   23.],       [  48.,   -3.,   31.],       [  29.,   40.,   25.],       [ -10.,   52.,   31.],       [ -43.,   21.,   31.],       [ -46.,  -25.,   33.],       [ -16.,  -45.,   33.],       [  30.,  -41.,   25.],       [  61.,    3.,   27.],       [  38.,   50.,   32.],       [ -10.,   64.,   28.],       [ -57.,   33.,   27.],       [ -59.,  -29.,   32.],       [ -14.,  -67.,   34.],       [  46.,  -56.,   27.],       [  80.,   -5.,   29.],       [  53.,   62.,   33.],       [ -22.,   82.,   31.],       [ -75.,   34.,   32.],       [ -74.,  -34.,   31.],       [ -20.,  -82.,   27.],       [  47.,  -64.,   31.],       [ 104.,    1.,   34.],       [  63.,   80.,   27.],       [ -28.,   95.,   34.],       [ -91.,   47.,   27.],       [ -90.,  -41.,   33.],       [ -27.,  -94.,   33.],       [  63.,  -80.,   28.],       [  48.,   -3.,   41.],       [  34.,   35.,   44.],       [  -9.,   52.,   42.],       [ -46.,   20.,   40.],       [ -42.,  -17.,   38.],       [ -13.,  -51.,   35.],       [  26.,  -39.,   36.],       [  69.,    3.,   44.],       [  42.,   55.,   43.],       [ -18.,   64.,   37.],       [ -61.,   27.,   44.],       [ -59.,  -25.,   37.],       [ -18.,  -68.,   38.],       [  40.,  -49.,   37.],       [  79.,   -2.,   37.],       [  52.,   66.,   41.],       [ -18.,   82.,   36.],       [ -71.,   38.,   40.],       [ -75.,  -41.,   38.],       [ -15.,  -82.,   37.],       [  54.,  -66.,   44.],       [ 101.,    4.,   43.],       [  64.,   74.,   43.],       [ -24.,   98.,   44.],       [ -93.,   43.,   41.],       [ -88.,  -48.,   41.],       [ -20.,  -95.,   44.],       [  60.,  -77.,   38.]])
        basis0 = BSplineBasis(3, np.array([-1.7, -1.1,  0. ,  1.1,  2.1,  3.3,  4. ,  5.3,  5.9,  7. ,  8.1,
        9.1]),1)
        basis1 = BSplineBasis(2, np.array([ 0. ,  0. ,  1.2,  1.8,  3. ,  3. ]))
        basis2 = BSplineBasis(4, np.array([ 0. ,  0. ,  0. ,  0. ,  1.3,  2. ,  2. ,  2. ,  2. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 0.3,  4.1,  4.4])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 0.300000
        pt2[...,1] -= 4.100000
        pt2[...,2] -= 4.400000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p7_rational(self):
        controlpoints = np.array([[  -5. ,   -5. ,    0.7],
       [  11. ,    1. ,    1.4],
       [  22. ,   -5. ,    1.2],
       [  26. ,   -2. ,    1.3],
       [  38. ,   -5. ,    1. ],
       [  47. ,   -3. ,    1.3],
       [  58. ,    2. ,    0.9],
       [  63. ,   -5. ,    1.4],
       [  69. ,   -2. ,    0.6],
       [  84. ,    0. ,    1.2],
       [  88. ,   -5. ,    1.5],
       [ 101. ,    1. ,    0.7]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.3,  3.2,  4. ,
        5.2,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 2.5,  9.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 2.500000
        pt2[...,1] -= 9.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_2D_p6_rational(self):
        controlpoints = np.array([[ -5. ,  -2. ,   0.9],
       [ 14. ,   0. ,   1.4],
       [ 19. ,  -3. ,   1.1],
       [ 25. ,   0. ,   1.3],
       [ 35. ,  -3. ,   1.4],
       [ 50. ,   2. ,   1.2],
       [ 60. ,   3. ,   0.9],
       [ 73. ,  -3. ,   1.1],
       [ 83. ,   1. ,   0.7],
       [ 89. ,   1. ,   0.9],
       [ 97. ,   0. ,   0.7]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.9,  3. ,  4.2,  4.8,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 11.1,   8.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 11.100000
        pt2[...,1] /= 8.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p76_rational(self):
        controlpoints = np.array([[   0. ,   -1. ,    0.6],       [  15. ,   -5. ,    1.2],       [  29. ,    4. ,    0.7],       [  35. ,   -4. ,    0.7],       [  49. ,    2. ,    0.8],       [  64. ,    4. ,    0.6],       [  72. ,    0. ,    1.3],       [  89. ,    2. ,    1.3],       [  95. ,   -4. ,    0.8],       [   2. ,   17. ,    0.6],       [  14. ,    7. ,    1.5],       [  24. ,   12. ,    1.3],       [  37. ,   14. ,    0.8],       [  48. ,   11. ,    1.3],       [  64. ,   14. ,    0.9],       [  75. ,    9. ,    1.3],       [  91. ,   17. ,    0.8],       [ 104. ,    9. ,    1.3],       [  -2. ,   22. ,    0.8],       [   9. ,   27. ,    1.4],       [  23. ,   20. ,    0.6],       [  36. ,   24. ,    1.1],       [  45. ,   21. ,    0.6],       [  60. ,   25. ,    1.2],       [  70. ,   20. ,    1.3],       [  91. ,   28. ,    0.6],       [ 101. ,   22. ,    1.4],       [   3. ,   33. ,    1.3],       [   8. ,   39. ,    1.2],       [  29. ,   34. ,    0.8],       [  35. ,   33. ,    0.6],       [  49. ,   36. ,    1.2],       [  62. ,   34. ,    1.3],       [  79. ,   37. ,    0.6],       [  82. ,   41. ,    1.1],       [ 101. ,   41. ,    0.6],       [  -4. ,   49. ,    1.4],       [  13. ,   50. ,    0.6],       [  23. ,   48. ,    1.4],       [  35. ,   48. ,    0.7],       [  46. ,   50. ,    1.3],       [  60. ,   50. ,    0.9],       [  79. ,   51. ,    1. ],       [  91. ,   52. ,    0.9],       [  97. ,   47. ,    1.1],       [  -5. ,   65. ,    1.4],       [  14. ,   58. ,    1. ],       [  28. ,   67. ,    0.5],       [  41. ,   60. ,    1.2],       [  47. ,   66. ,    1.2],       [  67. ,   64. ,    1. ],       [  76. ,   66. ,    1. ],       [  85. ,   60. ,    0.7],       [  97. ,   65. ,    1. ],       [   0. ,   71. ,    0.8],       [  11. ,   76. ,    0.6],       [  21. ,   76. ,    0.8],       [  34. ,   76. ,    0.5],       [  45. ,   74. ,    0.8],       [  65. ,   76. ,    1.3],       [  73. ,   71. ,    0.5],       [  88. ,   77. ,    1.1],       [  97. ,   73. ,    0.8],       [   3. ,   86. ,    0.8],       [   8. ,   87. ,    0.8],       [  23. ,   83. ,    1. ],       [  34. ,   85. ,    1.4],       [  53. ,   92. ,    0.8],       [  63. ,   83. ,    1.3],       [  71. ,   90. ,    1.3],       [  87. ,   88. ,    0.6],       [ 103. ,   89. ,    1.2],       [  -4. ,   96. ,    1.2],       [   8. ,   95. ,    1.4],       [  29. ,  104. ,    1.3],       [  36. ,  101. ,    1.3],       [  49. ,   95. ,    1.3],       [  61. ,  100. ,    0.5],       [  78. ,   95. ,    0.9],       [  91. ,   97. ,    1.2],       [  95. ,   95. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.7,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2.3,  2.8,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 5.9,  9. ,  4. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 5.900000
        pt2[...,1] -= 9.000000
        pt2[...,2] -= 4.000000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_surface_2D_p75_rational(self):
        controlpoints = np.array([[  -3. ,    3. ,    0.5],       [   4. ,   -1. ,    0.5],       [  18. ,    0. ,    0.8],       [  29. ,    4. ,    1.3],       [  32. ,   -2. ,    1.4],       [  41. ,   -1. ,    0.6],       [  54. ,   -4. ,    0.6],       [  60. ,   -5. ,    1.4],       [  72. ,    4. ,    1. ],       [  77. ,   -3. ,    0.7],       [  90. ,   -2. ,    1. ],       [ 104. ,    2. ,    1.4],       [  -5. ,   18. ,    0.6],       [   7. ,   10. ,    0.9],       [  21. ,   11. ,    1.2],       [  24. ,   12. ,    0.8],       [  34. ,   13. ,    0.8],       [  46. ,   18. ,    1.4],       [  50. ,   17. ,    0.5],       [  65. ,   17. ,    1.4],       [  68. ,   16. ,    0.7],       [  85. ,   10. ,    1. ],       [  88. ,   12. ,    0.6],       [  96. ,   11. ,    0.6],       [   3. ,   26. ,    0.5],       [  12. ,   27. ,    0.8],       [  18. ,   32. ,    0.9],       [  24. ,   24. ,    0.5],       [  37. ,   31. ,    1. ],       [  41. ,   29. ,    0.9],       [  58. ,   26. ,    1.1],       [  65. ,   25. ,    1.1],       [  67. ,   31. ,    1.4],       [  78. ,   32. ,    0.7],       [  89. ,   27. ,    1.1],       [  99. ,   25. ,    0.5],       [   1. ,   44. ,    1.2],       [  12. ,   44. ,    1.2],       [  16. ,   38. ,    1.1],       [  27. ,   38. ,    1.1],       [  31. ,   47. ,    1.3],       [  47. ,   41. ,    0.6],       [  58. ,   46. ,    1.1],       [  61. ,   39. ,    1.4],       [  70. ,   42. ,    0.7],       [  80. ,   42. ,    1.4],       [  89. ,   38. ,    1.2],       [  98. ,   43. ,    1.4],       [   2. ,   60. ,    0.7],       [  11. ,   55. ,    0.6],       [  22. ,   58. ,    0.7],       [  32. ,   52. ,    0.7],       [  36. ,   59. ,    1.2],       [  40. ,   61. ,    1.2],       [  50. ,   58. ,    0.5],       [  67. ,   59. ,    0.9],       [  70. ,   57. ,    0.9],       [  79. ,   59. ,    1.1],       [  86. ,   54. ,    1. ],       [ 101. ,   54. ,    1. ],       [  -5. ,   68. ,    0.7],       [   7. ,   70. ,    0.9],       [  20. ,   74. ,    0.9],       [  30. ,   74. ,    0.9],       [  40. ,   66. ,    1.2],       [  47. ,   72. ,    0.9],       [  55. ,   66. ,    1.4],       [  59. ,   71. ,    0.5],       [  74. ,   73. ,    0.6],       [  81. ,   75. ,    0.8],       [  87. ,   74. ,    1.4],       [  99. ,   69. ,    0.8],       [   1. ,   89. ,    1.1],       [   9. ,   88. ,    1. ],       [  22. ,   89. ,    1.5],       [  30. ,   88. ,    1.5],       [  38. ,   88. ,    1.4],       [  50. ,   82. ,    1.1],       [  57. ,   80. ,    1. ],       [  65. ,   86. ,    0.8],       [  69. ,   85. ,    0.5],       [  77. ,   82. ,    1.2],       [  93. ,   80. ,    0.9],       [  95. ,   83. ,    0.6],       [  -5. ,   99. ,    1. ],       [  10. ,   99. ,    1.1],       [  20. ,  104. ,    1.5],       [  31. ,   95. ,    1. ],       [  40. ,   99. ,    1. ],       [  43. ,  102. ,    1.3],       [  54. ,   99. ,    1.2],       [  67. ,   96. ,    1.1],       [  76. ,   99. ,    1.4],       [  86. ,  101. ,    0.8],       [  88. ,   97. ,    1.1],       [ 104. ,  102. ,    0.6]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.7,  3.3,  4.4,
        5.1,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.9,  2.7,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 4.9,  2.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.900000
        pt2[...,1] /= 2.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p6_rational_C0_periodic(self):
        controlpoints = np.array([[  99. ,    2. ,    0.7],
       [  79. ,   69. ,    0.8],
       [  19. ,   98. ,    1. ],
       [ -54. ,   83. ,    0.7],
       [ -98. ,   31. ,    0.8],
       [ -96. ,  -34. ,    0.9],
       [ -50. ,  -85. ,    1.3],
       [  20. , -102. ,    1.4],
       [  76. ,  -68. ,    1. ]])
        basis0 = BSplineBasis(6, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.8,  2.8,  4. ,  5. ,
        5. ,  5. ,  5. ,  5. ,  6. ]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 7.8,  9.4,  6.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 7.800000
        pt2[...,1] -= 9.400000
        pt2[...,2] -= 6.900000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_curve_2D_p6_rational_C0_periodic(self):
        controlpoints = np.array([[ 103. ,    0. ,    1. ],
       [  67. ,   78. ,    1. ],
       [ -25. ,   99. ,    0.7],
       [ -94. ,   39. ,    0.6],
       [ -86. ,  -40. ,    0.6],
       [ -26. , -100. ,    1. ],
       [  67. ,  -76. ,    1.2]])
        basis0 = BSplineBasis(6, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  3. ,  3. ,  3. ,
        3. ,  3. ,  4.2]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 6.9,  8.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 6.900000
        pt2[...,1] /= 8.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p67_rational_C0_periodic(self):
        controlpoints = np.array([[  61. ,   -3. ,    0.7],       [  45. ,   42. ,    0.9],       [  13. ,   55. ,    0.7],       [ -32. ,   53. ,    0.8],       [ -55. ,   21. ,    1.1],       [ -61. ,  -17. ,    0.8],       [ -26. ,  -52. ,    0.7],       [   6. ,  -64. ,    1.2],       [  46. ,  -35. ,    0.8],       [  63. ,    0. ,    1.1],       [  44. ,   39. ,    1.2],       [   9. ,   60. ,    0.6],       [ -28. ,   55. ,    0.6],       [ -63. ,   23. ,    1.1],       [ -63. ,  -19. ,    0.9],       [ -30. ,  -53. ,    0.6],       [   6. ,  -61. ,    1.2],       [  45. ,  -37. ,    0.6],       [  65. ,   -2. ,    1.2],       [  55. ,   44. ,    1. ],       [  13. ,   65. ,    0.8],       [ -30. ,   61. ,    1.4],       [ -69. ,   20. ,    1.2],       [ -67. ,  -23. ,    1.4],       [ -33. ,  -64. ,    0.6],       [  13. ,  -71. ,    0.7],       [  50. ,  -40. ,    0.6],       [  73. ,   -4. ,    1.4],       [  57. ,   50. ,    1.1],       [  16. ,   73. ,    1.4],       [ -37. ,   65. ,    1.5],       [ -73. ,   23. ,    0.7],       [ -64. ,  -23. ,    1.3],       [ -32. ,  -66. ,    1. ],       [  10. ,  -73. ,    0.8],       [  57. ,  -44. ,    0.7],       [  73. ,    3. ,    0.5],       [  53. ,   49. ,    1.4],       [  10. ,   78. ,    1. ],       [ -36. ,   70. ,    0.9],       [ -74. ,   24. ,    1.5],       [ -74. ,  -27. ,    0.9],       [ -43. ,  -66. ,    0.7],       [   9. ,  -73. ,    0.9],       [  60. ,  -52. ,    1. ],       [  75. ,   -3. ,    0.6],       [  56. ,   46. ,    0.6],       [  16. ,   81. ,    1.2],       [ -36. ,   68. ,    1.4],       [ -79. ,   25. ,    0.9],       [ -71. ,  -28. ,    1.4],       [ -37. ,  -68. ,    0.7],       [  13. ,  -78. ,    0.8],       [  61. ,  -49. ,    0.5],       [  85. ,   -1. ,    1.5],       [  67. ,   49. ,    1. ],       [  11. ,   84. ,    1. ],       [ -45. ,   71. ,    0.7],       [ -75. ,   25. ,    1.4],       [ -78. ,  -27. ,    0.7],       [ -42. ,  -69. ,    0.7],       [  14. ,  -81. ,    1.5],       [  60. ,  -52. ,    0.5],       [  92. ,    3. ,    1. ],       [  66. ,   55. ,    0.8],       [  19. ,   87. ,    1.2],       [ -45. ,   73. ,    1.3],       [ -86. ,   27. ,    0.6],       [ -84. ,  -29. ,    1.2],       [ -48. ,  -78. ,    1. ],       [  16. ,  -90. ,    0.7],       [  68. ,  -58. ,    0.8],       [  94. ,   -5. ,    1.1],       [  73. ,   62. ,    1.2],       [  15. ,   90. ,    0.9],       [ -46. ,   81. ,    1. ],       [ -86. ,   29. ,    1.3],       [ -82. ,  -29. ,    0.7],       [ -51. ,  -84. ,    1.4],       [  18. ,  -89. ,    0.8],       [  74. ,  -58. ,    1.5],       [  99. ,    0. ,    1.2],       [  70. ,   64. ,    0.6],       [  14. ,   99. ,    0.9],       [ -48. ,   84. ,    0.8],       [ -86. ,   30. ,    0.6],       [ -87. ,  -29. ,    0.8],       [ -45. ,  -87. ,    0.8],       [  21. ,  -97. ,    0.7],       [  69. ,  -62. ,    1.1],       [ 104. ,    2. ,    1.5],       [  77. ,   63. ,    0.6],       [  17. ,   95. ,    0.5],       [ -52. ,   83. ,    1.2],       [ -90. ,   35. ,    1.4],       [ -93. ,  -33. ,    0.9],       [ -49. ,  -83. ,    0.9],       [  20. , -101. ,    1. ],       [  72. ,  -66. ,    0.6]])
        basis0 = BSplineBasis(6, np.array([-1. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.9,  2.8,  4. ,  5. ,
        5. ,  5. ,  5. ,  5. ,  6.1]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3.2,  3.8,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 0.7,  9.1])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 0.700000
        pt2[...,1] -= 9.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_2D_p67_rational_C0_periodic(self):
        controlpoints = np.array([[  55. ,    2. ,    1.4],       [  45. ,   37. ,    1.1],       [  14. ,   56. ,    1.3],       [ -27. ,   53. ,    1.3],       [ -56. ,   16. ,    1.3],       [ -60. ,  -25. ,    1.5],       [ -34. ,  -56. ,    0.7],       [   5. ,  -62. ,    1.3],       [  44. ,  -36. ,    0.8],       [  65. ,   -3. ,    0.9],       [  48. ,   40. ,    1.2],       [  12. ,   68. ,    1.4],       [ -29. ,   53. ,    1.3],       [ -60. ,   25. ,    0.8],       [ -64. ,  -21. ,    1.3],       [ -35. ,  -60. ,    1.5],       [  13. ,  -67. ,    1.5],       [  46. ,  -44. ,    1.1],       [  70. ,   -5. ,    1.2],       [  52. ,   41. ,    1.3],       [   8. ,   71. ,    0.8],       [ -33. ,   62. ,    0.6],       [ -66. ,   25. ,    1.5],       [ -68. ,  -20. ,    0.5],       [ -31. ,  -63. ,    0.9],       [  14. ,  -70. ,    1.3],       [  57. ,  -42. ,    0.5],       [  76. ,   -1. ,    1.4],       [  59. ,   43. ,    0.6],       [  12. ,   76. ,    1.3],       [ -37. ,   66. ,    1.1],       [ -69. ,   26. ,    0.9],       [ -73. ,  -27. ,    1.4],       [ -42. ,  -66. ,    1.1],       [   8. ,  -77. ,    1.1],       [  54. ,  -46. ,    0.6],       [  84. ,    3. ,    1.1],       [  65. ,   49. ,    0.7],       [  13. ,   77. ,    1.4],       [ -39. ,   69. ,    0.6],       [ -79. ,   31. ,    0.9],       [ -72. ,  -25. ,    1. ],       [ -44. ,  -74. ,    1.2],       [  17. ,  -75. ,    0.5],       [  63. ,  -57. ,    0.5],       [  84. ,    1. ,    0.6],       [  63. ,   55. ,    0.6],       [  18. ,   79. ,    0.9],       [ -43. ,   72. ,    0.6],       [ -85. ,   30. ,    1.2],       [ -84. ,  -27. ,    1.5],       [ -44. ,  -71. ,    0.8],       [   9. ,  -85. ,    1.5],       [  62. ,  -54. ,    1.3],       [  85. ,   -2. ,    0.8],       [  73. ,   60. ,    0.7],       [  15. ,   93. ,    0.8],       [ -41. ,   77. ,    1. ],       [ -84. ,   33. ,    1. ],       [ -83. ,  -32. ,    1.5],       [ -49. ,  -81. ,    0.8],       [  13. ,  -86. ,    1.4],       [  67. ,  -57. ,    0.9],       [  98. ,   -3. ,    0.8],       [  76. ,   62. ,    1. ],       [  13. ,   97. ,    1. ],       [ -52. ,   82. ,    0.8],       [ -93. ,   35. ,    1.5],       [ -87. ,  -36. ,    1.3],       [ -49. ,  -86. ,    0.5],       [  12. ,  -99. ,    1. ],       [  75. ,  -58. ,    0.9],       [  96. ,    4. ,    0.8],       [  72. ,   62. ,    1.3],       [  18. ,   95. ,    1.3],       [ -54. ,   84. ,    1.2],       [ -93. ,   35. ,    1.1],       [ -95. ,  -32. ,    0.9],       [ -46. ,  -84. ,    1.2],       [  16. , -103. ,    1.2],       [  76. ,  -69. ,    1.4]])
        basis0 = BSplineBasis(6, np.array([-0.8,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.6,  2.9,  4.2,  5. ,
        5. ,  5. ,  5. ,  5. ,  6.1]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 9.9,  8.2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 9.900000
        pt2[...,1] /= 8.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p7_rational_C1_periodic(self):
        controlpoints = np.array([[ 98. ,   0. ,   1. ],
       [ 80. ,  66. ,   1.1],
       [ 21. ,  95. ,   1.4],
       [-51. ,  83. ,   1.4],
       [-93. ,  36. ,   1.4],
       [-90. , -35. ,   1.3],
       [-48. , -91. ,   1.3],
       [ 12. , -94. ,   1.4],
       [ 77. , -64. ,   0.6]])
        basis0 = BSplineBasis(7, np.array([-2.4, -1.4,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.9,  2.6,  3.6,
        5. ,  5. ,  5. ,  5. ,  5. ,  5.9,  6.9]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 9.8,  1.8,  4.5])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 9.800000
        pt2[...,1] -= 1.800000
        pt2[...,2] -= 4.500000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_curve_2D_p5_rational_C1_periodic(self):
        controlpoints = np.array([[ 104. ,    1. ,    1.3],
       [  77. ,   68. ,    1.2],
       [  15. ,   94. ,    1.2],
       [ -53. ,   86. ,    1.1],
       [ -95. ,   32. ,    0.8],
       [ -98. ,  -34. ,    0.9],
       [ -55. ,  -87. ,    0.6],
       [  19. , -101. ,    1.1],
       [  79. ,  -68. ,    0.6]])
        basis0 = BSplineBasis(5, np.array([-1.9, -1.2,  0. ,  0. ,  0. ,  1.1,  1.7,  3. ,  4.4,  5.1,  5.8,
        7. ,  7. ,  7. ,  8.1,  8.7]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 4.7,  7.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.700000
        pt2[...,1] /= 7.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p56_rational_C1_periodic(self):
        controlpoints = np.array([[  59. ,    0. ,    1.4],       [  37. ,   51. ,    1.3],       [ -12. ,   61. ,    1.3],       [ -59. ,   24. ,    1.2],       [ -54. ,  -24. ,    1.1],       [ -14. ,  -60. ,    1. ],       [  32. ,  -47. ,    0.8],       [  71. ,   -5. ,    0.9],       [  42. ,   54. ,    1. ],       [ -16. ,   68. ,    1.4],       [ -62. ,   27. ,    0.8],       [ -65. ,  -29. ,    0.9],       [ -15. ,  -69. ,    1. ],       [  39. ,  -53. ,    1.2],       [  73. ,   -4. ,    1.1],       [  48. ,   55. ,    0.5],       [ -20. ,   76. ,    1.2],       [ -70. ,   30. ,    1.2],       [ -64. ,  -33. ,    1.3],       [ -20. ,  -68. ,    1.1],       [  44. ,  -58. ,    0.9],       [  75. ,   -3. ,    0.9],       [  52. ,   67. ,    1.3],       [ -14. ,   73. ,    0.6],       [ -68. ,   39. ,    0.7],       [ -68. ,  -30. ,    1.2],       [ -15. ,  -82. ,    0.8],       [  47. ,  -58. ,    1. ],       [  91. ,    1. ,    0.9],       [  57. ,   69. ,    0.5],       [ -21. ,   82. ,    0.7],       [ -80. ,   34. ,    1.3],       [ -80. ,  -35. ,    1.1],       [ -19. ,  -83. ,    1.5],       [  49. ,  -73. ,    1.3],       [  93. ,    0. ,    1.4],       [  59. ,   68. ,    1.5],       [ -25. ,   95. ,    1.2],       [ -82. ,   39. ,    1.1],       [ -81. ,  -37. ,    0.6],       [ -19. ,  -94. ,    0.8],       [  59. ,  -74. ,    0.6],       [ 104. ,   -2. ,    0.8],       [  57. ,   80. ,    0.6],       [ -26. ,  100. ,    1.2],       [ -88. ,   40. ,    1.4],       [ -94. ,  -45. ,    1. ],       [ -26. , -102. ,    1.1],       [  62. ,  -75. ,    1.4]])
        basis0 = BSplineBasis(5, np.array([-2.3, -0.8,  0. ,  0. ,  0. ,  1.2,  2. ,  2.7,  4.2,  5. ,  5. ,
        5. ,  6.2,  7. ]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 5.5,  4.2])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 5.500000
        pt2[...,1] -= 4.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_2D_p66_rational_C1_periodic(self):
        controlpoints = np.array([[  55. ,    2. ,    1. ],       [  41. ,   42. ,    0.9],       [   0. ,   59. ,    0.7],       [ -41. ,   37. ,    1.3],       [ -60. ,   -5. ,    0.5],       [ -39. ,  -43. ,    0.6],       [   4. ,  -56. ,    1.1],       [  43. ,  -46. ,    1.1],       [  61. ,    4. ,    1.3],       [  43. ,   48. ,    1.4],       [  -3. ,   66. ,    1.4],       [ -43. ,   47. ,    1.5],       [ -60. ,    0. ,    1.5],       [ -42. ,  -44. ,    0.8],       [  -2. ,  -61. ,    1.5],       [  42. ,  -46. ,    1.2],       [  67. ,    3. ,    1.5],       [  49. ,   51. ,    1.1],       [   0. ,   70. ,    0.8],       [ -45. ,   43. ,    0.8],       [ -64. ,   -1. ,    1.4],       [ -47. ,  -49. ,    1.1],       [  -3. ,  -70. ,    0.7],       [  47. ,  -51. ,    1.1],       [  69. ,    3. ,    1.2],       [  49. ,   50. ,    1.2],       [  -5. ,   69. ,    1.2],       [ -50. ,   52. ,    1. ],       [ -68. ,   -3. ,    1.3],       [ -48. ,  -50. ,    1.4],       [  -3. ,  -72. ,    0.6],       [  47. ,  -48. ,    0.9],       [  74. ,    3. ,    0.8],       [  51. ,   52. ,    1.2],       [   0. ,   74. ,    0.8],       [ -54. ,   51. ,    0.6],       [ -81. ,   -1. ,    0.7],       [ -59. ,  -51. ,    0.9],       [  -3. ,  -80. ,    0.9],       [  51. ,  -52. ,    0.8],       [  83. ,   -1. ,    1.4],       [  58. ,   58. ,    0.7],       [  -1. ,   80. ,    1. ],       [ -57. ,   56. ,    1. ],       [ -84. ,    2. ,    1.3],       [ -56. ,  -59. ,    1.2],       [   0. ,  -80. ,    1.2],       [  55. ,  -59. ,    0.8],       [  86. ,   -5. ,    1.2],       [  61. ,   63. ,    0.9],       [   0. ,   86. ,    0.9],       [ -57. ,   54. ,    0.6],       [ -84. ,    3. ,    0.6],       [ -57. ,  -58. ,    1.4],       [  -1. ,  -84. ,    0.6],       [  56. ,  -56. ,    0.6],       [  87. ,    1. ,    1.2],       [  65. ,   63. ,    1.4],       [  -5. ,   91. ,    0.7],       [ -58. ,   57. ,    1.1],       [ -89. ,    0. ,    1.3],       [ -67. ,  -58. ,    1.5],       [  -4. ,  -91. ,    1.5],       [  63. ,  -61. ,    0.8],       [  90. ,   -1. ,    0.5],       [  63. ,   61. ,    0.6],       [   2. ,   91. ,    1.1],       [ -62. ,   66. ,    0.7],       [ -94. ,    3. ,    1.5],       [ -63. ,  -62. ,    0.8],       [   0. ,  -93. ,    0.8],       [  67. ,  -70. ,    1.1],       [  91. ,    1. ,    0.8],       [  71. ,   70. ,    1.4],       [  -2. ,   95. ,    0.6],       [ -69. ,   66. ,    1.3],       [ -98. ,    1. ,    1.5],       [ -63. ,  -69. ,    0.9],       [  -5. ,  -98. ,    1.2],       [  68. ,  -65. ,    1.2],       [ 104. ,    3. ,    0.9],       [  74. ,   69. ,    1.2],       [  -4. ,  101. ,    1.4],       [ -74. ,   70. ,    0.8],       [-104. ,    4. ,    1.3],       [ -74. ,  -73. ,    0.9],       [  -4. , -102. ,    1.4],       [  66. ,  -74. ,    0.8]])
        basis0 = BSplineBasis(6, np.array([-2.1, -1. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.7,  2.9,  4. ,  5. ,
        5. ,  5. ,  5. ,  6.3,  6.7]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2.1,  3. ,  4.2,  4.8,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 11.1,   5.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 11.100000
        pt2[...,1] /= 5.400000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p5(self):
        controlpoints = np.array([[   2.,    0.],
       [  17.,    1.],
       [  30.,    4.],
       [  45.,    2.],
       [  71.,    4.],
       [  85.,    3.],
       [ 100.,   -4.]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.2,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 6.4,  3.3,  1.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 6.400000
        pt2[...,1] -= 3.300000
        pt2[...,2] -= 1.200000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_curve_2D_p5(self):
        controlpoints = np.array([[  -5.,   -3.],
       [  19.,    4.],
       [  35.,    0.],
       [  58.,   -5.],
       [  77.,   -5.],
       [ 104.,    3.]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2. ,  2. ,  2. ,  2. ,  2. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 10. ,   3.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 10.000000
        pt2[...,1] /= 3.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p55(self):
        controlpoints = np.array([[   2.,   -4.],       [  14.,    3.],       [  29.,    2.],       [  39.,   -4.],       [  62.,   -2.],       [  71.,   -2.],       [  87.,    2.],       [  99.,   -1.],       [  -3.,   12.],       [  10.,    7.],       [  31.,   10.],       [  38.,    6.],       [  57.,    7.],       [  71.,   14.],       [  88.,    8.],       [ 104.,   10.],       [  -5.,   20.],       [  15.,   25.],       [  29.,   19.],       [  41.,   21.],       [  61.,   27.],       [  73.,   20.],       [  90.,   25.],       [ 104.,   19.],       [   4.,   29.],       [  16.,   28.],       [  25.,   31.],       [  44.,   33.],       [  54.,   31.],       [  73.,   32.],       [  85.,   35.],       [ 101.,   33.],       [   2.,   39.],       [   9.,   42.],       [  26.,   41.],       [  37.,   39.],       [  56.,   47.],       [  75.,   44.],       [  83.,   48.],       [  98.,   46.],       [   2.,   60.],       [  16.,   52.],       [  31.,   55.],       [  43.,   51.],       [  53.,   60.],       [  70.,   58.],       [  85.,   56.],       [ 101.,   54.],       [   4.,   69.],       [  16.,   62.],       [  33.,   70.],       [  42.,   65.],       [  55.,   65.],       [  75.,   66.],       [  81.,   67.],       [  99.,   70.],       [  -3.,   77.],       [  17.,   80.],       [  28.,   78.],       [  41.,   81.],       [  58.,   79.],       [  71.,   80.],       [  81.,   74.],       [  96.,   80.],       [   2.,   87.],       [  12.,   88.],       [  24.,   91.],       [  45.,   91.],       [  56.,   87.],       [  73.,   84.],       [  85.,   87.],       [ 101.,   89.],       [   1.,  102.],       [  16.,  104.],       [  27.,  103.],       [  43.,   98.],       [  61.,  101.],       [  68.,  101.],       [  88.,   99.],       [  98.,   97.]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.8,  2.7,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  2.9,  4.2,  4.9,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 6.9,  8. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 6.900000
        pt2[...,1] -= 8.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_2D_p77(self):
        controlpoints = np.array([[  -5.,    3.],       [   4.,   -3.],       [  13.,    1.],       [  32.,    0.],       [  33.,   -5.],       [  47.,   -5.],       [  50.,    1.],       [  60.,    0.],       [  69.,    2.],       [  82.,    2.],       [  86.,   -2.],       [ 103.,    0.],       [   3.,   14.],       [  11.,   10.],       [  18.,    9.],       [  27.,   11.],       [  37.,   13.],       [  50.,   15.],       [  50.,   10.],       [  59.,   12.],       [  76.,    7.],       [  80.,    7.],       [  88.,    8.],       [ 103.,   10.],       [  -3.,   20.],       [   9.,   22.],       [  15.,   17.],       [  26.,   24.],       [  36.,   19.],       [  49.,   23.],       [  52.,   22.],       [  66.,   18.],       [  76.,   20.],       [  78.,   17.],       [  89.,   22.],       [  96.,   26.],       [   3.,   32.],       [  13.,   34.],       [  19.,   36.],       [  28.,   34.],       [  41.,   31.],       [  42.,   32.],       [  50.,   34.],       [  59.,   28.],       [  69.,   33.],       [  77.,   34.],       [  93.,   32.],       [  95.,   29.],       [  -3.,   42.],       [  10.,   44.],       [  22.,   46.],       [  29.,   48.],       [  31.,   45.],       [  49.,   44.],       [  49.,   43.],       [  58.,   43.],       [  73.,   41.],       [  84.,   45.],       [  95.,   41.],       [  96.,   48.],       [  -4.,   54.],       [   6.,   58.],       [  20.,   55.],       [  24.,   55.],       [  37.,   55.],       [  43.,   51.],       [  50.,   55.],       [  68.,   54.],       [  74.,   51.],       [  81.,   59.],       [  91.,   52.],       [ 103.,   56.],       [  -3.,   66.],       [  12.,   62.],       [  17.,   63.],       [  28.,   64.],       [  33.,   71.],       [  45.,   66.],       [  51.,   69.],       [  63.,   62.],       [  71.,   67.],       [  78.,   66.],       [  87.,   62.],       [  99.,   67.],       [   1.,   82.],       [  13.,   74.],       [  16.,   73.],       [  28.,   77.],       [  33.,   80.],       [  48.,   80.],       [  50.,   77.],       [  67.,   80.],       [  75.,   80.],       [  78.,   75.],       [  88.,   76.],       [  99.,   81.],       [   0.,   91.],       [  11.,   85.],       [  21.,   92.],       [  31.,   93.],       [  41.,   93.],       [  42.,   93.],       [  51.,   85.],       [  62.,   89.],       [  73.,   85.],       [  82.,   89.],       [  94.,   92.],       [ 104.,   91.],       [   4.,  104.],       [  11.,  103.],       [  22.,  104.],       [  30.,  103.],       [  38.,  102.],       [  50.,  100.],       [  59.,  102.],       [  64.,   97.],       [  76.,  104.],       [  79.,  104.],       [  87.,   95.],       [  98.,  101.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.9,  3.3,  3.6,
        4.7,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.7,  3.3,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([  5.5,  10. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 5.500000
        pt2[...,1] /= 10.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p5_C0_periodic(self):
        controlpoints = np.array([[ 98.,   3.],
       [ 81.,  63.],
       [ 16.,  99.],
       [-50.,  88.],
       [-92.,  30.],
       [-91., -39.],
       [-55., -86.],
       [ 12., -98.],
       [ 76., -62.]])
        basis0 = BSplineBasis(5, np.array([-0.8,  0. ,  0. ,  0. ,  0. ,  0.7,  2.4,  3. ,  4.4,  5.2,  6. ,
        6. ,  6. ,  6. ,  6.7]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 7.1,  7.1,  9.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 7.100000
        pt2[...,1] -= 7.100000
        pt2[...,2] -= 9.800000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_curve_2D_p7_C0_periodic(self):
        controlpoints = np.array([[ 104.,    0.],
       [  76.,   64.],
       [  13.,   99.],
       [ -52.,   89.],
       [ -93.,   33.],
       [ -99.,  -39.],
       [ -50.,  -84.],
       [  19.,  -98.],
       [  79.,  -64.]])
        basis0 = BSplineBasis(7, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  3.3,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4.8]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 11.1,   9.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 11.100000
        pt2[...,1] /= 9.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p57_C0_periodic(self):
        controlpoints = np.array([[  58.,   -2.],       [  46.,   42.],       [   6.,   55.],       [ -32.,   56.],       [ -55.,   16.],       [ -55.,  -18.],       [ -26.,  -49.],       [  13.,  -59.],       [  48.,  -40.],       [  60.,    4.],       [  52.,   43.],       [  10.,   62.],       [ -33.,   50.],       [ -64.,   16.],       [ -58.,  -18.],       [ -34.,  -56.],       [  14.,  -61.],       [  48.,  -45.],       [  71.,   -3.],       [  55.,   39.],       [   9.,   66.],       [ -30.,   55.],       [ -60.,   24.],       [ -68.,  -21.],       [ -30.,  -56.],       [  14.,  -71.],       [  47.,  -45.],       [  74.,   -3.],       [  49.,   40.],       [  11.,   71.],       [ -39.,   57.],       [ -68.,   20.],       [ -64.,  -21.],       [ -39.,  -64.],       [  12.,  -69.],       [  56.,  -47.],       [  76.,    0.],       [  61.,   47.],       [  17.,   71.],       [ -38.,   68.],       [ -74.,   26.],       [ -67.,  -31.],       [ -35.,  -68.],       [  12.,  -73.],       [  55.,  -44.],       [  79.,    1.],       [  57.,   51.],       [   8.,   74.],       [ -37.,   65.],       [ -70.,   25.],       [ -78.,  -30.],       [ -42.,  -65.],       [  11.,  -73.],       [  61.,  -52.],       [  80.,   -5.],       [  60.,   55.],       [  14.,   82.],       [ -40.,   71.],       [ -79.,   26.],       [ -81.,  -32.],       [ -40.,  -70.],       [  17.,  -83.],       [  62.,  -56.],       [  81.,   -2.],       [  63.,   57.],       [  17.,   84.],       [ -44.,   74.],       [ -77.,   25.],       [ -79.,  -29.],       [ -44.,  -77.],       [  15.,  -83.],       [  63.,  -52.],       [  92.,   -2.],       [  70.,   59.],       [  13.,   85.],       [ -45.,   80.],       [ -83.,   35.],       [ -87.,  -35.],       [ -49.,  -74.],       [  14.,  -85.],       [  65.,  -60.],       [  95.,    3.],       [  69.,   58.],       [  15.,   95.],       [ -50.,   80.],       [ -91.,   36.],       [ -86.,  -35.],       [ -44.,  -83.],       [  16.,  -95.],       [  73.,  -56.],       [  93.,   -5.],       [  71.,   61.],       [  11.,   98.],       [ -49.,   81.],       [ -89.,   30.],       [ -89.,  -38.],       [ -50.,  -86.],       [  11.,  -99.],       [  73.,  -62.],       [ 101.,    2.],       [  77.,   61.],       [  15.,  100.],       [ -48.,   82.],       [ -92.,   38.],       [ -93.,  -31.],       [ -46.,  -83.],       [  15., -102.],       [  80.,  -63.]])
        basis0 = BSplineBasis(5, np.array([-0.8,  0. ,  0. ,  0. ,  0. ,  1.2,  1.9,  3.2,  4.1,  5.2,  6. ,
        6. ,  6. ,  6. ,  7.2]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2. ,  3.1,  4.3,
        4.8,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 6.3,  9.3,  9. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 6.300000
        pt2[...,1] -= 9.300000
        pt2[...,2] -= 9.000000
        allZero           = pt2
        allZero[...,:-1] -= pt 
        self.assertAlmostEqual(np.max(allZero), 0.0)

    def test_scale_surface_2D_p77_C0_periodic(self):
        controlpoints = np.array([[  55.,    2.],       [  52.,   31.],       [  21.,   58.],       [ -20.,   54.],       [ -47.,   39.],       [ -56.,   -1.],       [ -50.,  -35.],       [ -20.,  -62.],       [  13.,  -62.],       [  50.,  -39.],       [  63.,    4.],       [  54.,   39.],       [  19.,   64.],       [ -21.,   61.],       [ -53.,   38.],       [ -67.,    2.],       [ -51.,  -43.],       [ -23.,  -58.],       [  23.,  -61.],       [  51.,  -38.],       [  70.,   -2.],       [  58.,   43.],       [  23.,   68.],       [ -22.,   61.],       [ -54.,   42.],       [ -68.,   -3.],       [ -61.,  -41.],       [ -26.,  -63.],       [  18.,  -63.],       [  57.,  -46.],       [  71.,   -3.],       [  63.,   43.],       [  20.,   72.],       [ -28.,   68.],       [ -58.,   44.],       [ -78.,    0.],       [ -60.,  -40.],       [ -25.,  -76.],       [  22.,  -73.],       [  59.,  -40.],       [  83.,    3.],       [  64.,   42.],       [  29.,   74.],       [ -21.,   72.],       [ -65.,   42.],       [ -77.,    2.],       [ -69.,  -49.],       [ -26.,  -75.],       [  26.,  -73.],       [  64.,  -45.],       [  85.,   -5.],       [  66.,   51.],       [  29.,   78.],       [ -24.,   85.],       [ -73.,   54.],       [ -89.,    2.],       [ -70.,  -48.],       [ -26.,  -79.],       [  22.,  -82.],       [  68.,  -49.],       [  94.,    2.],       [  69.,   55.],       [  24.,   84.],       [ -28.,   86.],       [ -77.,   49.],       [ -90.,    4.],       [ -70.,  -51.],       [ -26.,  -87.],       [  24.,  -86.],       [  70.,  -53.],       [  94.,    3.],       [  77.,   56.],       [  27.,   95.],       [ -27.,   88.],       [ -78.,   55.],       [ -95.,   -3.],       [ -73.,  -56.],       [ -29.,  -90.],       [  32.,  -91.],       [  74.,  -57.],       [  99.,   -2.],       [  75.,   60.],       [  31.,   94.],       [ -28.,   90.],       [ -78.,   60.],       [ -97.,   -2.],       [ -81.,  -55.],       [ -28.,  -97.],       [  33., -100.],       [  82.,  -64.]])
        basis0 = BSplineBasis(7, np.array([-1.2,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  1.8,  3.4,  3.8,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  6.1]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 6. ,  7.5])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 6.000000
        pt2[...,1] /= 7.500000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_2D_p7_C1_periodic(self):
        controlpoints = np.array([[ 102.,   -1.],
       [  89.,   53.],
       [  51.,   85.],
       [  -2.,  103.],
       [ -49.,   83.],
       [ -91.,   50.],
       [-104.,   -3.],
       [ -89.,  -49.],
       [ -55.,  -88.],
       [  -5., -101.],
       [  54.,  -88.],
       [  82.,  -46.]])
        basis0 = BSplineBasis(7, np.array([-2. , -1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  1.7,  2.9,  3.9,
        5.3,  6. ,  6.7,  8. ,  8. ,  8. ,  8. ,  8. ,  9.4,  9.7]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 3.6,  7.6])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 3.600000
        pt2[...,1] -= 7.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_2D_p5_C1_periodic(self):
        controlpoints = np.array([[ 103.,    2.],
       [  62.,   73.],
       [ -19.,   97.],
       [ -89.,   40.],
       [ -95.,  -39.],
       [ -26., -103.],
       [  67.,  -77.]])
        basis0 = BSplineBasis(5, np.array([-2.1, -1.4,  0. ,  0. ,  0. ,  0.7,  1.9,  2.9,  3.6,  5. ,  5. ,
        5. ,  5.7,  6.9]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 11.9,   9.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 11.900000
        pt2[...,1] /= 9.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_2D_p67_C1_periodic(self):
        controlpoints = np.array([[  60.,   -5.],       [  33.,   51.],       [ -18.,   62.],       [ -54.,   22.],       [ -55.,  -24.],       [ -11.,  -63.],       [  35.,  -45.],       [  69.,   -2.],       [  45.,   47.],       [ -11.,   66.],       [ -60.,   31.],       [ -55.,  -26.],       [ -13.,  -59.],       [  41.,  -46.],       [  65.,   -1.],       [  41.,   54.],       [ -11.,   63.],       [ -58.,   28.],       [ -60.,  -31.],       [ -21.,  -71.],       [  43.,  -56.],       [  75.,   -3.],       [  46.,   57.],       [ -15.,   75.],       [ -67.,   32.],       [ -66.,  -34.],       [ -18.,  -75.],       [  43.,  -62.],       [  74.,   -1.],       [  50.,   62.],       [ -17.,   79.],       [ -74.,   36.],       [ -67.,  -32.],       [ -18.,  -72.],       [  50.,  -64.],       [  81.,   -1.],       [  48.,   63.],       [ -21.,   80.],       [ -72.,   33.],       [ -76.,  -33.],       [ -19.,  -76.],       [  48.,  -62.],       [  84.,    0.],       [  49.,   69.],       [ -19.,   85.],       [ -74.,   42.],       [ -83.,  -34.],       [ -22.,  -83.],       [  55.,  -65.],       [  93.,    0.],       [  54.,   71.],       [ -19.,   92.],       [ -81.,   39.],       [ -86.,  -38.],       [ -21.,  -94.],       [  56.,  -70.],       [  96.,    1.],       [  58.,   71.],       [ -18.,   93.],       [ -85.,   37.],       [ -87.,  -47.],       [ -19.,  -89.],       [  56.,  -78.],       [  98.,    3.],       [  57.,   75.],       [ -27.,  100.],       [ -86.,   45.],       [ -93.,  -41.],       [ -21., -100.],       [  64.,  -78.]])
        basis0 = BSplineBasis(6, np.array([-2.3, -1.3,  0. ,  0. ,  0. ,  0. ,  0.8,  1.7,  2.7,  4. ,  4. ,
        4. ,  4. ,  4.8,  5.7]),1)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  2.8,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 2.6,  0.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 2.600000
        pt2[...,1] -= 0.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_2D_p76_C1_periodic(self):
        controlpoints = np.array([[ 55.,  -3.],       [ 44.,  37.],       [ 19.,  52.],       [-17.,  56.],       [-44.,  36.],       [-65.,  -3.],       [-46., -34.],       [-23., -57.],       [ 18., -59.],       [ 51., -32.],       [ 64.,   2.],       [ 48.,  38.],       [ 17.,  65.],       [-24.,  59.],       [-50.,  35.],       [-71.,  -3.],       [-55., -42.],       [-20., -62.],       [ 16., -67.],       [ 55., -38.],       [ 67.,   3.],       [ 61.,  44.],       [ 20.,  64.],       [-22.,  70.],       [-55.,  39.],       [-72.,   0.],       [-60., -40.],       [-21., -72.],       [ 18., -70.],       [ 58., -45.],       [ 79.,  -2.],       [ 66.,  41.],       [ 18.,  74.],       [-20.,  72.],       [-60.,  49.],       [-76.,  -3.],       [-66., -47.],       [-29., -76.],       [ 24., -75.],       [ 67., -48.],       [ 81.,   0.],       [ 63.,  49.],       [ 27.,  78.],       [-30.,  81.],       [-64.,  50.],       [-79.,   3.],       [-66., -47.],       [-24., -78.],       [ 28., -81.],       [ 63., -45.],       [ 83.,   0.],       [ 76.,  55.],       [ 31.,  83.],       [-28.,  82.],       [-67.,  56.],       [-89.,  -2.],       [-77., -54.],       [-26., -88.],       [ 27., -81.],       [ 68., -54.],       [ 92.,  -3.],       [ 75.,  53.],       [ 31.,  85.],       [-34.,  87.],       [-78.,  52.],       [-99.,  -3.],       [-81., -60.],       [-27., -94.],       [ 29., -86.],       [ 72., -56.],       [ 96.,   2.],       [ 80.,  59.],       [ 32.,  96.],       [-33.,  92.],       [-83.,  54.],       [-99.,   2.],       [-78., -64.],       [-33., -96.],       [ 31., -97.],       [ 76., -56.]])
        basis0 = BSplineBasis(7, np.array([-2.2, -0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.7,  3.2,  3.8,
        5.3,  6. ,  6. ,  6. ,  6. ,  6. ,  7. ,  7.7]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2.1,  3. ,  3. ,  3. ,
        3. ,  3. ,  3. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 11.6,   6.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 11.600000
        pt2[...,1] /= 6.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p7_rational(self):
        controlpoints = np.array([[  -1. ,    1. ,    2. ,    0.6],
       [  18. ,   -1. ,   -5. ,    1.4],
       [  30. ,    4. ,    1. ,    0.9],
       [  42. ,   -3. ,    0. ,    0.6],
       [  55. ,    1. ,    3. ,    0.9],
       [  72. ,    4. ,    0. ,    1.2],
       [  88. ,   -1. ,    4. ,    0.9],
       [ 100. ,   -4. ,   -4. ,    1.1]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 3.4,  3.4,  2.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 3.400000
        pt2[...,1] -= 3.400000
        pt2[...,2] -= 2.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p5_rational(self):
        controlpoints = np.array([[ -1. ,   2. ,  -1. ,   1.3],
       [ 11. ,   0. ,  -2. ,   0.6],
       [ 25. ,   3. ,  -4. ,   1.4],
       [ 47. ,  -1. ,   1. ,   1.2],
       [ 55. ,  -2. ,   1. ,   1.5],
       [ 67. ,  -2. ,   0. ,   0.8],
       [ 88. ,  -3. ,  -2. ,   0.5],
       [ 99. ,  -2. ,  -1. ,   0.5]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.4,  2.9,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([  4. ,   5. ,  10.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 4.000000
        pt2[...,1] /= 5.000000
        pt2[...,2] /= 10.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p57_rational(self):
        controlpoints = np.array([[   2. ,    1. ,   -2. ,    1.3],       [  16. ,   -1. ,   -5. ,    1. ],       [  24. ,    1. ,    3. ,    0.7],       [  44. ,   -4. ,   -2. ,    1.5],       [  60. ,    0. ,    2. ,    0.6],       [  72. ,    2. ,    0. ,    0.6],       [  84. ,    3. ,    3. ,    0.6],       [ 102. ,    4. ,   -3. ,    1.3],       [   0. ,    8. ,    3. ,    1.2],       [  11. ,    9. ,   -3. ,    1. ],       [  26. ,   11. ,    1. ,    1. ],       [  40. ,   10. ,   -5. ,    0.7],       [  56. ,    5. ,   -2. ,    1.3],       [  76. ,   13. ,    3. ,    0.9],       [  84. ,   10. ,   -1. ,    1.4],       [  99. ,    7. ,   -1. ,    0.8],       [  -5. ,   24. ,   -1. ,    0.8],       [  15. ,   16. ,   -1. ,    0.9],       [  27. ,   19. ,   -3. ,    0.8],       [  38. ,   15. ,    1. ,    0.7],       [  56. ,   23. ,    2. ,    0.8],       [  69. ,   22. ,    2. ,    1. ],       [  83. ,   24. ,   -3. ,    1.5],       [ 100. ,   22. ,   -4. ,    0.9],       [  -3. ,   27. ,   -3. ,    0.9],       [  11. ,   26. ,    4. ,    1.2],       [  24. ,   29. ,   -1. ,    1.5],       [  45. ,   26. ,   -5. ,    0.6],       [  56. ,   31. ,   -5. ,    0.5],       [  71. ,   26. ,    4. ,    1.3],       [  90. ,   34. ,    3. ,    1.4],       [ 102. ,   31. ,    0. ,    1. ],       [  -4. ,   38. ,   -1. ,    1. ],       [  10. ,   38. ,    4. ,    1. ],       [  27. ,   37. ,    2. ,    1.1],       [  43. ,   37. ,    1. ,    0.8],       [  59. ,   36. ,    1. ,    1.4],       [  74. ,   39. ,    3. ,    0.9],       [  87. ,   44. ,   -2. ,    1.5],       [ 100. ,   36. ,    1. ,    0.6],       [   3. ,   53. ,   -5. ,    1. ],       [  16. ,   45. ,   -5. ,    1.5],       [  26. ,   47. ,   -4. ,    1.4],       [  40. ,   49. ,    3. ,    1.2],       [  61. ,   46. ,   -5. ,    0.8],       [  71. ,   45. ,    1. ,    1.4],       [  84. ,   46. ,    2. ,    1.3],       [ 103. ,   47. ,   -5. ,    1.2],       [  -3. ,   63. ,   -3. ,    0.8],       [  12. ,   55. ,   -4. ,    1. ],       [  26. ,   57. ,   -5. ,    0.7],       [  38. ,   57. ,    4. ,    1.4],       [  60. ,   64. ,    3. ,    1.1],       [  69. ,   58. ,   -3. ,    0.5],       [  85. ,   55. ,   -2. ,    0.9],       [ 103. ,   63. ,   -2. ,    1.4],       [  -4. ,   73. ,    2. ,    0.8],       [  17. ,   65. ,   -3. ,    1.4],       [  24. ,   68. ,   -5. ,    0.8],       [  43. ,   67. ,   -5. ,    1.1],       [  55. ,   67. ,    2. ,    0.8],       [  72. ,   69. ,   -5. ,    0.7],       [  82. ,   66. ,   -1. ,    1. ],       [ 100. ,   68. ,    3. ,    0.5],       [   3. ,   82. ,    0. ,    1.4],       [  16. ,   77. ,    1. ,    0.6],       [  23. ,   79. ,    4. ,    1.4],       [  39. ,   78. ,   -4. ,    1.3],       [  58. ,   80. ,    3. ,    1.5],       [  68. ,   84. ,   -1. ,    1.2],       [  89. ,   81. ,    1. ,    1.4],       [  96. ,   80. ,   -5. ,    0.6],       [  -5. ,   94. ,   -4. ,    0.9],       [   9. ,   92. ,    0. ,    0.6],       [  24. ,   90. ,    4. ,    1.1],       [  46. ,   94. ,   -5. ,    0.9],       [  52. ,   86. ,   -3. ,    1.4],       [  69. ,   92. ,    4. ,    1.3],       [  83. ,   85. ,    2. ,    0.7],       [ 103. ,   94. ,    2. ,    0.8],       [   0. ,   99. ,    3. ,    0.7],       [  17. ,  101. ,   -5. ,    1.3],       [  28. ,   98. ,    2. ,    1. ],       [  40. ,  104. ,    2. ,    1. ],       [  62. ,   97. ,   -5. ,    0.6],       [  76. ,   95. ,   -3. ,    1. ],       [  87. ,  103. ,   -4. ,    1.1],       [ 100. ,   99. ,   -1. ,    0.5]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2. ,  2.8,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.1,  3.1,  3.8,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 4.2,  8. ,  5.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 4.200000
        pt2[...,1] -= 8.000000
        pt2[...,2] -= 5.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p76_rational(self):
        controlpoints = np.array([[   3. ,    3. ,    0. ,    0.8],       [   8. ,    3. ,   -1. ,    1.4],       [  21. ,   -3. ,    1. ,    0.6],       [  40. ,    3. ,    3. ,    1. ],       [  48. ,   -5. ,    4. ,    0.9],       [  62. ,    1. ,   -3. ,    1.2],       [  70. ,    4. ,    3. ,    0.9],       [  92. ,   -1. ,    3. ,    0.7],       [  98. ,    0. ,    3. ,    1.4],       [  -2. ,   14. ,   -2. ,    1.4],       [   7. ,   13. ,   -2. ,    1.2],       [  28. ,    7. ,    4. ,    1.1],       [  33. ,    8. ,    2. ,    0.7],       [  53. ,    8. ,    1. ,    1.1],       [  63. ,    9. ,   -4. ,    0.7],       [  75. ,   10. ,   -4. ,    1.3],       [  89. ,    5. ,   -5. ,    0.5],       [  96. ,   10. ,    4. ,    0.6],       [  -5. ,   23. ,   -3. ,    1.3],       [  10. ,   17. ,   -1. ,    0.6],       [  24. ,   17. ,   -5. ,    0.7],       [  32. ,   21. ,   -3. ,    0.8],       [  50. ,   19. ,    0. ,    0.7],       [  62. ,   24. ,    3. ,    1.2],       [  77. ,   16. ,   -3. ,    0.7],       [  91. ,   18. ,   -1. ,    1. ],       [ 101. ,   20. ,   -3. ,    1. ],       [   1. ,   33. ,    4. ,    1.1],       [  12. ,   26. ,   -1. ,    1. ],       [  25. ,   25. ,    2. ,    0.6],       [  39. ,   32. ,    0. ,    0.8],       [  48. ,   25. ,   -2. ,    0.7],       [  67. ,   32. ,    4. ,    0.5],       [  78. ,   26. ,   -2. ,    1.2],       [  91. ,   31. ,   -4. ,    0.8],       [ 104. ,   29. ,    3. ,    1.5],       [   4. ,   40. ,    3. ,    1.3],       [  17. ,   38. ,    1. ,    1.3],       [  27. ,   35. ,   -3. ,    1.4],       [  33. ,   38. ,   -1. ,    1.1],       [  53. ,   44. ,    4. ,    0.6],       [  59. ,   35. ,   -5. ,    1.2],       [  73. ,   41. ,   -2. ,    0.8],       [  85. ,   40. ,    2. ,    0.6],       [  96. ,   36. ,   -1. ,    1.4],       [  -3. ,   46. ,   -4. ,    1.4],       [  11. ,   51. ,    3. ,    0.8],       [  28. ,   53. ,   -4. ,    1.2],       [  39. ,   46. ,   -3. ,    1.2],       [  45. ,   50. ,    1. ,    1.3],       [  59. ,   46. ,    3. ,    1. ],       [  77. ,   54. ,    1. ,    0.6],       [  86. ,   49. ,    4. ,    1.2],       [ 104. ,   47. ,   -4. ,    0.7],       [   0. ,   59. ,   -4. ,    1.1],       [  16. ,   59. ,    2. ,    0.9],       [  21. ,   56. ,    1. ,    1. ],       [  40. ,   63. ,   -1. ,    0.9],       [  50. ,   61. ,    1. ,    0.7],       [  65. ,   55. ,    4. ,    1.2],       [  72. ,   55. ,    3. ,    1.3],       [  85. ,   57. ,   -1. ,    1.4],       [ 102. ,   58. ,    4. ,    0.9],       [  -3. ,   67. ,   -3. ,    1.4],       [  14. ,   69. ,    3. ,    1.1],       [  24. ,   69. ,    2. ,    1.4],       [  35. ,   70. ,    4. ,    1. ],       [  45. ,   70. ,   -1. ,    1. ],       [  58. ,   66. ,   -2. ,    1.2],       [  71. ,   71. ,    0. ,    0.7],       [  88. ,   67. ,    3. ,    1.3],       [ 103. ,   70. ,   -4. ,    0.8],       [  -3. ,   79. ,    2. ,    0.7],       [  16. ,   75. ,   -1. ,    1. ],       [  27. ,   79. ,   -2. ,    1.2],       [  42. ,   76. ,   -2. ,    1.3],       [  51. ,   84. ,   -4. ,    1.5],       [  61. ,   83. ,   -1. ,    1.4],       [  70. ,   82. ,   -1. ,    1. ],       [  91. ,   81. ,   -1. ,    0.6],       [  97. ,   78. ,    3. ,    1.1],       [  -2. ,   86. ,   -4. ,    0.9],       [   9. ,   90. ,   -1. ,    1.1],       [  27. ,   93. ,    4. ,    0.9],       [  40. ,   90. ,   -2. ,    0.7],       [  52. ,   94. ,    0. ,    1.3],       [  61. ,   92. ,    2. ,    1.2],       [  76. ,   85. ,    3. ,    1. ],       [  89. ,   92. ,    4. ,    0.7],       [  98. ,   85. ,    0. ,    1.3],       [  -5. ,   97. ,    0. ,    0.8],       [   7. ,   98. ,   -4. ,    1.3],       [  24. ,   96. ,   -5. ,    0.5],       [  35. ,   97. ,    1. ,    0.7],       [  51. ,   95. ,   -5. ,    0.7],       [  67. ,   96. ,   -4. ,    0.9],       [  78. ,  102. ,    3. ,    0.9],       [  86. ,   95. ,   -5. ,    0.8],       [  97. ,   99. ,   -2. ,    1.5]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.8,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  1.7,  3. ,  4.2,  5.3,
        6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 9.8,  9.2,  4.7])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 9.800000
        pt2[...,1] /= 9.200000
        pt2[...,2] /= 4.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p757_rational(self):
        controlpoints = np.array([[  -3. ,    3. ,   -5. ,    1.4],       [  17. ,   -3. ,   -5. ,    0.5],       [  25. ,    0. ,    4. ,    1.1],       [  45. ,   -3. ,   -4. ,    0.5],       [  60. ,   -1. ,    4. ,    0.7],       [  74. ,   -1. ,    3. ,    1.3],       [  90. ,    1. ,   -3. ,    1.1],       [ 101. ,   -4. ,    4. ,    0.7],       [  -2. ,   20. ,   -4. ,    1.3],       [  13. ,   20. ,   -4. ,    0.8],       [  28. ,   20. ,   -1. ,    0.9],       [  44. ,   13. ,   -5. ,    0.9],       [  60. ,   11. ,    1. ,    0.9],       [  72. ,   13. ,   -2. ,    1.1],       [  84. ,   16. ,   -1. ,    0.9],       [ 103. ,   16. ,   -1. ,    1.1],       [   1. ,   30. ,    1. ,    1.2],       [  16. ,   31. ,   -1. ,    1.2],       [  25. ,   37. ,   -4. ,    1.1],       [  46. ,   36. ,   -4. ,    1.2],       [  59. ,   36. ,   -2. ,    0.9],       [  76. ,   34. ,    2. ,    1.3],       [  84. ,   34. ,    1. ,    1.4],       [ 101. ,   34. ,    1. ,    1. ],       [   0. ,   45. ,   -1. ,    1.2],       [  10. ,   48. ,   -2. ,    1.1],       [  30. ,   49. ,    2. ,    1.4],       [  39. ,   52. ,   -3. ,    1. ],       [  61. ,   46. ,   -3. ,    0.8],       [  68. ,   47. ,   -4. ,    1. ],       [  90. ,   46. ,   -1. ,    1.1],       [ 103. ,   48. ,    2. ,    0.9],       [  -4. ,   70. ,   -2. ,    1.2],       [  15. ,   65. ,   -2. ,    1.4],       [  25. ,   65. ,   -2. ,    0.9],       [  39. ,   69. ,    0. ,    0.6],       [  56. ,   70. ,    0. ,    0.9],       [  68. ,   63. ,   -3. ,    0.6],       [  85. ,   64. ,    0. ,    1.2],       [ 104. ,   68. ,   -1. ,    0.5],       [  -4. ,   80. ,    1. ,    1.3],       [  10. ,   80. ,   -1. ,    1.3],       [  25. ,   84. ,    3. ,    1.3],       [  47. ,   85. ,    1. ,    1.3],       [  56. ,   80. ,   -1. ,    1.1],       [  70. ,   79. ,   -1. ,    1.5],       [  84. ,   78. ,   -2. ,    0.6],       [  95. ,   83. ,    4. ,    1.1],       [   0. ,  100. ,    1. ,    1.4],       [  11. ,  101. ,   -1. ,    0.7],       [  33. ,   95. ,   -3. ,    0.8],       [  45. ,   97. ,    4. ,    0.5],       [  60. ,  101. ,   -3. ,    0.8],       [  75. ,  104. ,   -1. ,    1.1],       [  90. ,   99. ,    4. ,    1.1],       [ 103. ,   99. ,    0. ,    1.1],       [  -3. ,   -2. ,    9. ,    1.5],       [  13. ,   -3. ,   13. ,    0.9],       [  27. ,   -2. ,    9. ,    0.8],       [  47. ,    1. ,   10. ,    0.9],       [  60. ,    3. ,   16. ,    1.2],       [  67. ,    2. ,   10. ,    0.8],       [  84. ,    2. ,    8. ,    0.6],       [ 100. ,   -1. ,   12. ,    0.8],       [  -3. ,   21. ,   16. ,    1.5],       [  16. ,   14. ,   12. ,    1.3],       [  29. ,   14. ,    7. ,    0.8],       [  44. ,   16. ,   15. ,    0.9],       [  58. ,   19. ,   13. ,    1.4],       [  67. ,   12. ,    8. ,    1.2],       [  87. ,   14. ,    8. ,    0.5],       [ 102. ,   16. ,   15. ,    1.4],       [   1. ,   37. ,    9. ,    1. ],       [  16. ,   35. ,   14. ,    0.6],       [  27. ,   33. ,   12. ,    1.4],       [  38. ,   37. ,    9. ,    1. ],       [  54. ,   36. ,   15. ,    0.6],       [  73. ,   35. ,   11. ,    0.5],       [  82. ,   35. ,   11. ,    0.6],       [  96. ,   30. ,   12. ,    0.9],       [   0. ,   47. ,   13. ,    1.4],       [  11. ,   53. ,   10. ,    0.6],       [  31. ,   50. ,   10. ,    0.6],       [  46. ,   53. ,    7. ,    1.3],       [  54. ,   52. ,   12. ,    1.2],       [  75. ,   45. ,   11. ,    0.9],       [  85. ,   52. ,   12. ,    1.1],       [ 102. ,   50. ,   11. ,    0.7],       [  -3. ,   68. ,   14. ,    1.2],       [  17. ,   62. ,   17. ,    1.3],       [  26. ,   62. ,    7. ,    0.5],       [  40. ,   65. ,   10. ,    0.9],       [  60. ,   62. ,    8. ,    1.3],       [  68. ,   67. ,   14. ,    0.7],       [  88. ,   65. ,   16. ,    0.5],       [  95. ,   69. ,    9. ,    1.3],       [  -2. ,   83. ,    9. ,    0.9],       [  15. ,   84. ,   17. ,    1.4],       [  31. ,   79. ,    9. ,    0.7],       [  44. ,   87. ,    8. ,    1.1],       [  59. ,   86. ,    9. ,    1.1],       [  73. ,   84. ,   15. ,    1.5],       [  86. ,   78. ,   11. ,    1.2],       [ 102. ,   80. ,    9. ,    1.4],       [  -4. ,  100. ,   16. ,    0.8],       [  11. ,  103. ,   17. ,    0.7],       [  32. ,   95. ,   12. ,    0.9],       [  43. ,  100. ,    7. ,    1.4],       [  56. ,  103. ,    9. ,    0.9],       [  76. ,   98. ,   15. ,    1.2],       [  81. ,   96. ,    9. ,    1. ],       [  97. ,  104. ,   12. ,    0.9],       [  -3. ,    0. ,   26. ,    0.8],       [  15. ,   -5. ,   26. ,    1.2],       [  23. ,   -1. ,   22. ,    1.1],       [  45. ,    1. ,   21. ,    1.5],       [  60. ,    4. ,   29. ,    1.5],       [  70. ,   -1. ,   20. ,    0.8],       [  86. ,   -5. ,   24. ,    1. ],       [  96. ,    4. ,   22. ,    1.1],       [   3. ,   11. ,   24. ,    0.7],       [   9. ,   18. ,   20. ,    1.1],       [  30. ,   12. ,   29. ,    1.3],       [  45. ,   13. ,   21. ,    1.4],       [  53. ,   14. ,   26. ,    1.3],       [  67. ,   18. ,   26. ,    1.1],       [  80. ,   12. ,   24. ,    1. ],       [ 104. ,   20. ,   23. ,    1.5],       [  -3. ,   34. ,   24. ,    1.1],       [  16. ,   31. ,   25. ,    0.8],       [  26. ,   35. ,   29. ,    0.6],       [  41. ,   36. ,   26. ,    0.9],       [  58. ,   35. ,   28. ,    1.2],       [  67. ,   38. ,   23. ,    1.4],       [  87. ,   29. ,   26. ,    0.7],       [ 103. ,   30. ,   23. ,    1. ],       [  -2. ,   48. ,   29. ,    1.2],       [  16. ,   47. ,   28. ,    0.7],       [  28. ,   54. ,   24. ,    1.1],       [  43. ,   48. ,   22. ,    1. ],       [  58. ,   53. ,   27. ,    0.6],       [  68. ,   46. ,   20. ,    1.1],       [  85. ,   49. ,   22. ,    1.3],       [ 101. ,   46. ,   28. ,    0.8],       [  -5. ,   69. ,   26. ,    1.1],       [  15. ,   67. ,   20. ,    0.8],       [  25. ,   67. ,   22. ,    0.9],       [  42. ,   63. ,   28. ,    1. ],       [  52. ,   66. ,   27. ,    1.5],       [  70. ,   66. ,   24. ,    0.7],       [  89. ,   62. ,   22. ,    1.2],       [ 103. ,   70. ,   23. ,    1.2],       [   2. ,   80. ,   23. ,    1.2],       [   9. ,   85. ,   28. ,    1.1],       [  23. ,   84. ,   26. ,    0.8],       [  41. ,   87. ,   21. ,    1. ],       [  52. ,   86. ,   21. ,    0.7],       [  76. ,   84. ,   22. ,    1.2],       [  88. ,   85. ,   20. ,    0.6],       [ 102. ,   82. ,   20. ,    0.9],       [   4. ,   96. ,   24. ,    1.1],       [  10. ,   96. ,   29. ,    0.8],       [  26. ,  100. ,   28. ,    0.7],       [  41. ,  103. ,   28. ,    1.2],       [  58. ,  102. ,   26. ,    1.3],       [  74. ,   96. ,   29. ,    0.6],       [  89. ,  104. ,   21. ,    1.1],       [  96. ,   95. ,   23. ,    1.4],       [   2. ,    0. ,   39. ,    1.1],       [  16. ,   -3. ,   41. ,    0.7],       [  25. ,   -3. ,   41. ,    1.2],       [  45. ,    0. ,   41. ,    1.4],       [  57. ,    3. ,   33. ,    1.2],       [  73. ,    0. ,   32. ,    0.9],       [  82. ,    4. ,   35. ,    0.9],       [  99. ,    1. ,   33. ,    0.7],       [   3. ,   18. ,   35. ,    0.6],       [  16. ,   16. ,   37. ,    0.9],       [  29. ,   21. ,   40. ,    0.7],       [  44. ,   20. ,   35. ,    0.9],       [  54. ,   12. ,   39. ,    0.5],       [  68. ,   20. ,   41. ,    0.5],       [  87. ,   11. ,   40. ,    1.3],       [  98. ,   18. ,   40. ,    1.1],       [   3. ,   30. ,   35. ,    0.6],       [  15. ,   33. ,   35. ,    1.2],       [  29. ,   28. ,   34. ,    1.2],       [  46. ,   29. ,   42. ,    0.8],       [  61. ,   31. ,   33. ,    1.4],       [  75. ,   34. ,   40. ,    0.8],       [  87. ,   34. ,   36. ,    1.2],       [ 104. ,   35. ,   37. ,    0.8],       [   0. ,   45. ,   33. ,    1.3],       [  16. ,   46. ,   34. ,    0.5],       [  29. ,   45. ,   33. ,    0.7],       [  45. ,   47. ,   35. ,    1.2],       [  62. ,   53. ,   36. ,    1. ],       [  69. ,   49. ,   33. ,    1. ],       [  81. ,   50. ,   34. ,    1.2],       [ 103. ,   49. ,   38. ,    1.5],       [  -2. ,   66. ,   41. ,    1.1],       [  17. ,   69. ,   36. ,    0.9],       [  25. ,   66. ,   42. ,    0.8],       [  45. ,   69. ,   36. ,    1.3],       [  61. ,   63. ,   32. ,    1.2],       [  75. ,   69. ,   41. ,    1.3],       [  81. ,   64. ,   34. ,    1.3],       [  95. ,   63. ,   40. ,    1.2],       [   3. ,   81. ,   39. ,    1.3],       [  11. ,   84. ,   39. ,    0.7],       [  28. ,   83. ,   34. ,    0.6],       [  47. ,   86. ,   41. ,    1.5],       [  60. ,   79. ,   39. ,    1. ],       [  71. ,   85. ,   38. ,    0.8],       [  90. ,   84. ,   33. ,    0.5],       [ 102. ,   80. ,   34. ,    1.3],       [   3. ,  104. ,   38. ,    0.7],       [  17. ,   98. ,   36. ,    0.9],       [  28. ,  101. ,   37. ,    0.9],       [  41. ,   95. ,   40. ,    0.8],       [  60. ,   95. ,   36. ,    1.2],       [  76. ,  100. ,   39. ,    0.8],       [  83. ,  101. ,   38. ,    0.5],       [  97. ,  100. ,   39. ,    1.4],       [  -1. ,    4. ,   47. ,    0.7],       [  16. ,    4. ,   53. ,    0.5],       [  28. ,   -5. ,   48. ,    1.4],       [  44. ,    4. ,   50. ,    1.4],       [  60. ,   -3. ,   52. ,    0.6],       [  66. ,    1. ,   50. ,    0.9],       [  86. ,    0. ,   51. ,    1.1],       [  95. ,    4. ,   47. ,    0.6],       [  -2. ,   18. ,   49. ,    1. ],       [  16. ,   15. ,   52. ,    0.6],       [  27. ,   15. ,   50. ,    1.5],       [  38. ,   13. ,   51. ,    0.9],       [  61. ,   12. ,   49. ,    0.9],       [  67. ,   21. ,   47. ,    0.7],       [  87. ,   17. ,   50. ,    0.9],       [ 102. ,   14. ,   48. ,    1. ],       [  -5. ,   38. ,   45. ,    1.2],       [  12. ,   32. ,   49. ,    0.7],       [  32. ,   28. ,   54. ,    1. ],       [  40. ,   34. ,   54. ,    1. ],       [  54. ,   33. ,   47. ,    1.3],       [  68. ,   36. ,   45. ,    0.5],       [  84. ,   38. ,   51. ,    1.1],       [  97. ,   37. ,   45. ,    0.6],       [   0. ,   45. ,   45. ,    1.1],       [  14. ,   53. ,   54. ,    0.9],       [  31. ,   47. ,   46. ,    1.2],       [  43. ,   53. ,   47. ,    0.6],       [  60. ,   47. ,   53. ,    1.1],       [  68. ,   52. ,   49. ,    1.3],       [  84. ,   50. ,   52. ,    0.7],       [ 101. ,   46. ,   52. ,    0.8],       [   3. ,   65. ,   46. ,    0.9],       [  15. ,   63. ,   48. ,    0.6],       [  30. ,   67. ,   48. ,    1.3],       [  40. ,   64. ,   48. ,    1.2],       [  61. ,   69. ,   46. ,    0.9],       [  68. ,   65. ,   46. ,    0.6],       [  80. ,   64. ,   45. ,    1.2],       [ 102. ,   70. ,   45. ,    1.3],       [   4. ,   79. ,   47. ,    1.5],       [  14. ,   83. ,   45. ,    1.3],       [  30. ,   78. ,   54. ,    0.5],       [  42. ,   80. ,   49. ,    1.5],       [  57. ,   87. ,   45. ,    0.8],       [  75. ,   82. ,   48. ,    0.9],       [  87. ,   84. ,   46. ,    1.4],       [ 102. ,   81. ,   51. ,    0.6],       [  -2. ,   96. ,   52. ,    1.1],       [  15. ,  101. ,   45. ,    1. ],       [  23. ,  103. ,   54. ,    1.1],       [  38. ,  102. ,   54. ,    0.6],       [  57. ,  104. ,   50. ,    0.9],       [  67. ,  103. ,   46. ,    1. ],       [  85. ,   96. ,   49. ,    0.7],       [  95. ,   96. ,   47. ,    1.2],       [   4. ,   -1. ,   60. ,    1. ],       [  18. ,   -3. ,   65. ,    1.3],       [  33. ,    0. ,   61. ,    0.7],       [  44. ,    1. ,   63. ,    1.2],       [  57. ,    2. ,   61. ,    0.7],       [  67. ,    3. ,   64. ,    1.5],       [  90. ,   -4. ,   57. ,    1.4],       [ 101. ,   -1. ,   58. ,    0.7],       [   0. ,   14. ,   66. ,    0.7],       [  17. ,   16. ,   66. ,    0.9],       [  25. ,   21. ,   58. ,    1.1],       [  43. ,   19. ,   60. ,    0.7],       [  56. ,   17. ,   67. ,    0.6],       [  71. ,   17. ,   57. ,    1.2],       [  89. ,   18. ,   61. ,    1. ],       [  95. ,   20. ,   60. ,    0.8],       [   4. ,   36. ,   59. ,    1.1],       [  15. ,   37. ,   61. ,    0.6],       [  29. ,   29. ,   58. ,    1. ],       [  42. ,   37. ,   63. ,    1.3],       [  52. ,   33. ,   62. ,    1. ],       [  72. ,   32. ,   65. ,    1.1],       [  89. ,   28. ,   65. ,    0.9],       [ 103. ,   33. ,   66. ,    0.8],       [   0. ,   48. ,   62. ,    0.9],       [  11. ,   53. ,   61. ,    0.6],       [  23. ,   45. ,   67. ,    0.8],       [  42. ,   48. ,   64. ,    0.9],       [  54. ,   52. ,   61. ,    0.8],       [  76. ,   54. ,   60. ,    1.4],       [  88. ,   53. ,   67. ,    1.4],       [  96. ,   54. ,   63. ,    1.4],       [   2. ,   71. ,   61. ,    0.5],       [  13. ,   64. ,   60. ,    0.7],       [  24. ,   70. ,   62. ,    1.1],       [  39. ,   71. ,   59. ,    1. ],       [  54. ,   69. ,   59. ,    0.9],       [  67. ,   65. ,   63. ,    1.3],       [  87. ,   70. ,   60. ,    0.9],       [ 103. ,   67. ,   66. ,    0.6],       [  -3. ,   80. ,   66. ,    0.8],       [  12. ,   83. ,   63. ,    0.5],       [  30. ,   82. ,   63. ,    1.4],       [  47. ,   81. ,   64. ,    1.1],       [  59. ,   83. ,   66. ,    0.9],       [  71. ,   83. ,   65. ,    0.9],       [  88. ,   79. ,   58. ,    1.1],       [  96. ,   86. ,   57. ,    0.7],       [  -5. ,  102. ,   57. ,    1.4],       [  10. ,  103. ,   65. ,    0.6],       [  31. ,   96. ,   64. ,    0.9],       [  42. ,   95. ,   63. ,    0.6],       [  59. ,  100. ,   59. ,    1.2],       [  67. ,   96. ,   58. ,    0.8],       [  85. ,   98. ,   60. ,    1.1],       [ 103. ,  103. ,   63. ,    1.2],       [   0. ,   -1. ,   79. ,    0.6],       [  16. ,   -4. ,   76. ,    0.7],       [  24. ,    4. ,   71. ,    0.9],       [  40. ,    0. ,   74. ,    0.5],       [  55. ,   -1. ,   77. ,    1.1],       [  70. ,    3. ,   79. ,    1.1],       [  89. ,   -4. ,   71. ,    0.9],       [ 104. ,    1. ,   77. ,    0.7],       [   0. ,   14. ,   72. ,    0.7],       [  11. ,   12. ,   76. ,    0.9],       [  28. ,   12. ,   73. ,    0.6],       [  46. ,   15. ,   74. ,    1. ],       [  58. ,   13. ,   79. ,    1.4],       [  68. ,   13. ,   77. ,    1.4],       [  90. ,   14. ,   79. ,    1.4],       [  98. ,   17. ,   70. ,    1.4],       [  -2. ,   34. ,   75. ,    1.3],       [  11. ,   32. ,   76. ,    0.9],       [  31. ,   29. ,   73. ,    0.6],       [  38. ,   36. ,   71. ,    1. ],       [  59. ,   36. ,   76. ,    0.6],       [  72. ,   30. ,   72. ,    0.9],       [  85. ,   32. ,   74. ,    1.2],       [  96. ,   34. ,   75. ,    1.4],       [   2. ,   54. ,   73. ,    1.4],       [  14. ,   51. ,   77. ,    1.1],       [  25. ,   54. ,   71. ,    1.1],       [  42. ,   45. ,   75. ,    1.2],       [  53. ,   53. ,   76. ,    1.5],       [  66. ,   52. ,   72. ,    1.4],       [  89. ,   53. ,   76. ,    1.2],       [ 103. ,   51. ,   77. ,    0.5],       [   4. ,   68. ,   75. ,    1.1],       [   9. ,   61. ,   70. ,    0.7],       [  27. ,   66. ,   79. ,    0.8],       [  37. ,   63. ,   77. ,    1.4],       [  60. ,   62. ,   72. ,    1.4],       [  71. ,   64. ,   74. ,    1.4],       [  87. ,   68. ,   77. ,    1.1],       [ 101. ,   68. ,   70. ,    0.7],       [   2. ,   79. ,   76. ,    0.8],       [  13. ,   80. ,   79. ,    0.9],       [  28. ,   87. ,   72. ,    1.2],       [  45. ,   83. ,   72. ,    1.3],       [  52. ,   83. ,   76. ,    1.3],       [  72. ,   88. ,   72. ,    0.9],       [  82. ,   81. ,   73. ,    0.5],       [  97. ,   84. ,   70. ,    1.3],       [  -4. ,   96. ,   72. ,    1.3],       [  12. ,  102. ,   77. ,    1. ],       [  27. ,  101. ,   78. ,    1.1],       [  39. ,  104. ,   77. ,    1.5],       [  60. ,   96. ,   72. ,    1.2],       [  75. ,  103. ,   73. ,    1.5],       [  88. ,  100. ,   71. ,    1.2],       [ 102. ,   99. ,   74. ,    0.9],       [  -2. ,   -3. ,   85. ,    0.6],       [  12. ,   -5. ,   91. ,    1. ],       [  26. ,    4. ,   83. ,    0.8],       [  41. ,    3. ,   83. ,    1.5],       [  56. ,   -2. ,   89. ,    0.6],       [  69. ,    2. ,   87. ,    1.3],       [  84. ,    3. ,   88. ,    1. ],       [  98. ,   -3. ,   82. ,    0.5],       [   1. ,   19. ,   85. ,    1.4],       [  15. ,   19. ,   90. ,    1.3],       [  23. ,   18. ,   92. ,    1.2],       [  45. ,   13. ,   86. ,    0.8],       [  59. ,   16. ,   87. ,    1. ],       [  72. ,   18. ,   87. ,    0.5],       [  84. ,   15. ,   91. ,    0.6],       [ 100. ,   15. ,   88. ,    1.4],       [   1. ,   30. ,   86. ,    1. ],       [  15. ,   36. ,   92. ,    1.3],       [  27. ,   35. ,   92. ,    0.7],       [  46. ,   28. ,   83. ,    1.1],       [  59. ,   32. ,   88. ,    0.9],       [  69. ,   29. ,   88. ,    1.2],       [  87. ,   34. ,   89. ,    1.3],       [ 103. ,   28. ,   86. ,    0.8],       [   1. ,   49. ,   82. ,    1.2],       [  18. ,   46. ,   88. ,    1. ],       [  31. ,   54. ,   91. ,    0.9],       [  47. ,   47. ,   85. ,    0.5],       [  54. ,   54. ,   87. ,    0.6],       [  75. ,   46. ,   84. ,    1.4],       [  84. ,   54. ,   87. ,    0.6],       [ 102. ,   53. ,   89. ,    1.1],       [  -1. ,   70. ,   91. ,    1.3],       [  15. ,   68. ,   83. ,    0.6],       [  33. ,   66. ,   84. ,    1. ],       [  41. ,   70. ,   87. ,    0.8],       [  54. ,   65. ,   86. ,    0.7],       [  74. ,   63. ,   90. ,    0.7],       [  84. ,   69. ,   85. ,    0.6],       [  96. ,   65. ,   84. ,    0.8],       [  -4. ,   87. ,   86. ,    0.9],       [  10. ,   85. ,   83. ,    1. ],       [  31. ,   80. ,   85. ,    1.2],       [  38. ,   84. ,   91. ,    1.2],       [  54. ,   83. ,   92. ,    1.1],       [  75. ,   84. ,   83. ,    1. ],       [  86. ,   87. ,   88. ,    0.7],       [  96. ,   78. ,   89. ,    1. ],       [   2. ,   97. ,   86. ,    0.6],       [  12. ,   99. ,   86. ,    1.1],       [  28. ,   96. ,   87. ,    1.4],       [  38. ,  103. ,   89. ,    1.4],       [  52. ,   99. ,   86. ,    1.1],       [  67. ,  103. ,   88. ,    1. ],       [  84. ,   99. ,   88. ,    1.4],       [  96. ,  100. ,   88. ,    1.1],       [  -3. ,   -2. ,  103. ,    1.3],       [   9. ,    3. ,  103. ,    0.5],       [  33. ,    2. ,   98. ,    1.2],       [  46. ,   -5. ,   97. ,    0.6],       [  59. ,   -5. ,  102. ,    1.1],       [  74. ,    3. ,   96. ,    0.7],       [  90. ,    1. ,  101. ,    0.7],       [ 100. ,    4. ,  103. ,    1.1],       [   0. ,   18. ,  104. ,    1.3],       [  16. ,   13. ,  104. ,    1.1],       [  31. ,   16. ,   97. ,    1. ],       [  43. ,   19. ,   97. ,    0.8],       [  56. ,   18. ,   99. ,    1. ],       [  70. ,   17. ,  100. ,    0.7],       [  86. ,   12. ,  104. ,    1.2],       [  98. ,   12. ,   98. ,    0.6],       [   2. ,   33. ,  104. ,    1.1],       [  17. ,   38. ,   96. ,    1.3],       [  24. ,   37. ,   98. ,    0.8],       [  44. ,   28. ,   95. ,    1.1],       [  55. ,   29. ,  102. ,    1.5],       [  69. ,   37. ,   98. ,    0.7],       [  82. ,   28. ,  102. ,    0.8],       [  95. ,   28. ,   96. ,    1.1],       [  -4. ,   50. ,  101. ,    0.6],       [  18. ,   47. ,   99. ,    0.6],       [  32. ,   52. ,   95. ,    0.6],       [  45. ,   46. ,   98. ,    0.7],       [  52. ,   53. ,   98. ,    1.2],       [  74. ,   51. ,  103. ,    0.6],       [  85. ,   52. ,   99. ,    0.6],       [ 100. ,   51. ,  102. ,    1.4],       [   1. ,   65. ,  100. ,    0.7],       [  18. ,   67. ,  100. ,    1.1],       [  25. ,   62. ,  100. ,    0.7],       [  46. ,   63. ,   95. ,    1.1],       [  58. ,   64. ,   95. ,    0.7],       [  70. ,   68. ,   99. ,    0.8],       [  85. ,   66. ,  104. ,    1.2],       [  98. ,   66. ,  104. ,    1.5],       [   1. ,   83. ,  102. ,    0.7],       [  10. ,   80. ,  102. ,    1.5],       [  28. ,   87. ,   95. ,    1.3],       [  39. ,   78. ,   97. ,    1.2],       [  52. ,   84. ,   99. ,    0.8],       [  68. ,   86. ,  103. ,    1.2],       [  87. ,   81. ,   95. ,    1.4],       [  99. ,   84. ,   96. ,    1.3],       [   4. ,   99. ,  103. ,    1.2],       [  14. ,   99. ,   95. ,    1.1],       [  23. ,   99. ,  100. ,    0.9],       [  44. ,   97. ,  102. ,    1. ],       [  54. ,   99. ,  103. ,    1.3],       [  74. ,   98. ,  102. ,    1.3],       [  84. ,   98. ,  100. ,    0.5],       [  95. ,  103. ,   99. ,    0.7]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.2,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.4,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 0.1,  3.8,  4.5])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 0.100000
        pt2[...,1] -= 3.800000
        pt2[...,2] -= 4.500000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p556_rational(self):
        controlpoints = np.array([[  -5. ,    3. ,    1. ,    0.8],       [  13. ,   -4. ,    2. ,    1.1],       [  38. ,    2. ,   -4. ,    1. ],       [  50. ,   -4. ,   -2. ,    1.1],       [  66. ,    0. ,   -5. ,    0.6],       [  83. ,    2. ,    4. ,    0.7],       [ 103. ,   -2. ,    4. ,    1.3],       [  -1. ,   22. ,   -2. ,    1.4],       [  16. ,   15. ,    4. ,    0.7],       [  38. ,   24. ,    0. ,    0.6],       [  50. ,   17. ,    1. ,    0.7],       [  65. ,   22. ,   -3. ,    0.9],       [  87. ,   23. ,    0. ,    1. ],       [  98. ,   19. ,    0. ,    1.3],       [   3. ,   38. ,    3. ,    1.1],       [  15. ,   35. ,    3. ,    1.1],       [  31. ,   38. ,   -3. ,    1. ],       [  53. ,   44. ,    3. ,    0.9],       [  70. ,   39. ,    2. ,    0.5],       [  88. ,   39. ,    3. ,    0.7],       [ 102. ,   36. ,    2. ,    1.2],       [  -1. ,   56. ,   -4. ,    0.9],       [  13. ,   58. ,   -4. ,    0.8],       [  34. ,   64. ,   -5. ,    0.6],       [  52. ,   57. ,    2. ,    1.3],       [  71. ,   56. ,    1. ,    0.8],       [  86. ,   58. ,    4. ,    1.2],       [  95. ,   57. ,   -4. ,    1. ],       [  -5. ,   79. ,    0. ,    0.6],       [  15. ,   80. ,   -5. ,    0.6],       [  31. ,   83. ,    2. ,    0.9],       [  46. ,   79. ,   -4. ,    0.9],       [  62. ,   76. ,    3. ,    1.5],       [  85. ,   77. ,   -3. ,    1.2],       [  98. ,   79. ,    0. ,    1.4],       [   4. ,   97. ,   -1. ,    1.3],       [  17. ,  102. ,    1. ,    0.8],       [  35. ,   99. ,   -5. ,    1.3],       [  53. ,  100. ,   -5. ,    1.2],       [  68. ,   99. ,    3. ,    1. ],       [  82. ,  103. ,   -4. ,    0.7],       [ 100. ,   96. ,    2. ,    0.7],       [  -4. ,   -4. ,    9. ,    1.2],       [  13. ,    4. ,    6. ,    1.2],       [  37. ,    2. ,   11. ,    0.9],       [  46. ,    0. ,   15. ,    0.5],       [  63. ,   -1. ,   15. ,    0.8],       [  86. ,   -3. ,    7. ,    0.7],       [ 100. ,   -4. ,   13. ,    1.2],       [  -3. ,   17. ,   11. ,    1.4],       [  13. ,   24. ,   13. ,    0.8],       [  33. ,   17. ,    9. ,    1.2],       [  51. ,   21. ,   11. ,    0.6],       [  62. ,   18. ,    7. ,    0.6],       [  82. ,   17. ,   10. ,    1. ],       [ 100. ,   24. ,    6. ,    1.2],       [  -5. ,   35. ,    9. ,    0.6],       [  21. ,   41. ,   14. ,    0.7],       [  36. ,   36. ,   14. ,    0.7],       [  53. ,   38. ,    7. ,    0.9],       [  64. ,   39. ,   11. ,    1. ],       [  87. ,   44. ,   14. ,    0.7],       [  99. ,   44. ,   13. ,    1.3],       [   1. ,   64. ,   14. ,    1.2],       [  13. ,   63. ,    7. ,    1.3],       [  35. ,   61. ,   10. ,    1. ],       [  48. ,   57. ,    7. ,    1. ],       [  64. ,   64. ,    7. ,    0.9],       [  83. ,   58. ,   15. ,    1.1],       [  97. ,   64. ,   15. ,    0.7],       [   1. ,   83. ,   10. ,    1.1],       [  18. ,   84. ,    7. ,    0.6],       [  32. ,   75. ,   12. ,    1.3],       [  54. ,   76. ,   10. ,    1.2],       [  66. ,   79. ,   14. ,    1.2],       [  80. ,   81. ,   14. ,    0.6],       [  98. ,   79. ,    9. ,    0.8],       [  -4. ,   95. ,   11. ,    0.7],       [  14. ,   97. ,    6. ,    1.1],       [  38. ,  101. ,   11. ,    0.9],       [  48. ,  102. ,   14. ,    0.8],       [  61. ,  103. ,    6. ,    0.8],       [  78. ,   98. ,   13. ,    1.4],       [ 100. ,   95. ,    8. ,    0.9],       [  -5. ,    0. ,   25. ,    0.7],       [  12. ,   -2. ,   19. ,    0.9],       [  29. ,    3. ,   25. ,    0.6],       [  45. ,   -4. ,   20. ,    0.6],       [  61. ,   -5. ,   24. ,    1.1],       [  80. ,   -1. ,   20. ,    0.7],       [  96. ,    1. ,   22. ,    1. ],       [  -1. ,   23. ,   25. ,    1.5],       [  14. ,   18. ,   19. ,    0.6],       [  34. ,   19. ,   26. ,    1.5],       [  51. ,   19. ,   19. ,    1.1],       [  68. ,   19. ,   19. ,    0.7],       [  87. ,   19. ,   21. ,    1.2],       [  99. ,   17. ,   21. ,    1.1],       [  -2. ,   39. ,   23. ,    0.8],       [  16. ,   43. ,   23. ,    1. ],       [  29. ,   39. ,   22. ,    1.2],       [  54. ,   43. ,   21. ,    0.7],       [  64. ,   37. ,   21. ,    1.4],       [  83. ,   41. ,   25. ,    0.5],       [ 100. ,   41. ,   26. ,    0.5],       [   0. ,   59. ,   24. ,    1.1],       [  20. ,   58. ,   21. ,    1.2],       [  38. ,   59. ,   22. ,    1.5],       [  46. ,   59. ,   22. ,    1.5],       [  61. ,   61. ,   20. ,    1.2],       [  81. ,   57. ,   18. ,    1. ],       [  95. ,   59. ,   24. ,    0.5],       [  -2. ,   77. ,   27. ,    0.7],       [  19. ,   81. ,   22. ,    1. ],       [  32. ,   76. ,   17. ,    0.6],       [  50. ,   77. ,   23. ,    0.6],       [  71. ,   82. ,   23. ,    1.4],       [  86. ,   81. ,   26. ,    0.6],       [  98. ,   83. ,   19. ,    0.9],       [  -5. ,  100. ,   25. ,    0.6],       [  17. ,   95. ,   21. ,    1.5],       [  35. ,  101. ,   20. ,    0.7],       [  45. ,   95. ,   20. ,    1.5],       [  71. ,   96. ,   26. ,    0.8],       [  80. ,  101. ,   17. ,    0.9],       [ 103. ,  100. ,   25. ,    0.9],       [  -3. ,   -3. ,   38. ,    1.3],       [  12. ,   -3. ,   34. ,    1.2],       [  35. ,   -5. ,   30. ,    1.3],       [  49. ,    1. ,   35. ,    0.5],       [  71. ,   -3. ,   29. ,    0.6],       [  85. ,   -1. ,   37. ,    0.7],       [ 101. ,   -1. ,   34. ,    1.3],       [  -4. ,   21. ,   35. ,    0.6],       [  16. ,   23. ,   34. ,    1.4],       [  32. ,   23. ,   31. ,    1. ],       [  49. ,   15. ,   37. ,    0.6],       [  63. ,   20. ,   31. ,    1.1],       [  84. ,   15. ,   37. ,    0.9],       [  99. ,   20. ,   28. ,    1.4],       [  -4. ,   40. ,   32. ,    0.8],       [  12. ,   44. ,   31. ,    1.1],       [  31. ,   38. ,   36. ,    0.8],       [  50. ,   40. ,   37. ,    1.2],       [  70. ,   44. ,   29. ,    0.9],       [  86. ,   43. ,   35. ,    1.4],       [  98. ,   43. ,   29. ,    0.6],       [  -2. ,   64. ,   29. ,    0.5],       [  16. ,   56. ,   29. ,    0.9],       [  38. ,   63. ,   30. ,    1.2],       [  51. ,   58. ,   31. ,    1. ],       [  63. ,   57. ,   32. ,    0.8],       [  82. ,   56. ,   36. ,    1.1],       [ 101. ,   60. ,   36. ,    0.9],       [   4. ,   80. ,   28. ,    0.6],       [  17. ,   75. ,   36. ,    1.4],       [  30. ,   79. ,   29. ,    1.1],       [  47. ,   78. ,   37. ,    0.9],       [  67. ,   78. ,   35. ,    0.6],       [  79. ,   80. ,   36. ,    1.2],       [ 103. ,   76. ,   33. ,    0.7],       [  -3. ,  101. ,   36. ,    0.8],       [  19. ,   98. ,   36. ,    0.8],       [  33. ,   96. ,   30. ,    1.4],       [  45. ,   95. ,   30. ,    1.1],       [  67. ,   95. ,   33. ,    1.1],       [  78. ,   98. ,   33. ,    1.4],       [ 100. ,  100. ,   28. ,    1.2],       [   1. ,    0. ,   42. ,    0.9],       [  16. ,    2. ,   47. ,    1.1],       [  30. ,    1. ,   41. ,    0.9],       [  52. ,   -1. ,   48. ,    1. ],       [  66. ,   -3. ,   44. ,    0.7],       [  83. ,    3. ,   48. ,    1.5],       [ 101. ,    3. ,   48. ,    1. ],       [   2. ,   17. ,   45. ,    1.3],       [  17. ,   19. ,   48. ,    1.4],       [  31. ,   22. ,   44. ,    0.7],       [  52. ,   18. ,   39. ,    1. ],       [  69. ,   18. ,   43. ,    0.5],       [  79. ,   19. ,   43. ,    1. ],       [  97. ,   23. ,   46. ,    1.3],       [  -5. ,   44. ,   44. ,    0.9],       [  13. ,   43. ,   47. ,    1.3],       [  35. ,   44. ,   42. ,    1.1],       [  47. ,   41. ,   42. ,    1.1],       [  66. ,   44. ,   42. ,    1. ],       [  84. ,   40. ,   47. ,    0.9],       [  98. ,   42. ,   41. ,    0.8],       [  -4. ,   55. ,   48. ,    1.4],       [  20. ,   62. ,   49. ,    0.6],       [  37. ,   55. ,   41. ,    1.1],       [  47. ,   64. ,   39. ,    0.5],       [  67. ,   58. ,   43. ,    0.5],       [  84. ,   64. ,   46. ,    1.4],       [  99. ,   55. ,   42. ,    0.5],       [  -1. ,   80. ,   48. ,    1.4],       [  12. ,   81. ,   41. ,    0.8],       [  36. ,   84. ,   42. ,    0.7],       [  48. ,   79. ,   39. ,    1.4],       [  62. ,   83. ,   42. ,    1.4],       [  84. ,   83. ,   40. ,    1. ],       [  97. ,   83. ,   44. ,    0.5],       [   1. ,  101. ,   45. ,    1.5],       [  17. ,  102. ,   41. ,    1.1],       [  35. ,  103. ,   45. ,    1.3],       [  52. ,  101. ,   45. ,    1.4],       [  67. ,  102. ,   42. ,    0.6],       [  85. ,   98. ,   41. ,    0.8],       [ 100. ,  101. ,   44. ,    1.2],       [   2. ,   -5. ,   55. ,    0.7],       [  11. ,    4. ,   52. ,    0.9],       [  29. ,   -4. ,   59. ,    1.3],       [  45. ,   -4. ,   52. ,    1.4],       [  62. ,    0. ,   53. ,    0.7],       [  81. ,    4. ,   59. ,    0.8],       [ 100. ,    3. ,   58. ,    1.4],       [   4. ,   24. ,   57. ,    1.2],       [  21. ,   22. ,   58. ,    1.3],       [  32. ,   21. ,   58. ,    1.5],       [  53. ,   15. ,   54. ,    0.6],       [  69. ,   20. ,   54. ,    1.4],       [  87. ,   18. ,   55. ,    0.9],       [  99. ,   20. ,   54. ,    1.4],       [   4. ,   41. ,   54. ,    0.6],       [  20. ,   43. ,   56. ,    0.7],       [  28. ,   44. ,   58. ,    1.2],       [  45. ,   44. ,   59. ,    0.9],       [  69. ,   36. ,   57. ,    1.2],       [  79. ,   44. ,   54. ,    0.8],       [ 104. ,   35. ,   52. ,    1.2],       [   4. ,   64. ,   59. ,    1.4],       [  18. ,   60. ,   59. ,    0.9],       [  36. ,   60. ,   59. ,    1.4],       [  47. ,   63. ,   54. ,    0.9],       [  63. ,   57. ,   55. ,    1.2],       [  83. ,   63. ,   51. ,    1.5],       [  96. ,   61. ,   56. ,    0.6],       [   2. ,   76. ,   57. ,    1. ],       [  13. ,   79. ,   52. ,    0.8],       [  37. ,   80. ,   51. ,    1.2],       [  47. ,   77. ,   58. ,    0.9],       [  65. ,   83. ,   51. ,    0.8],       [  85. ,   78. ,   54. ,    0.6],       [ 101. ,   76. ,   53. ,    0.6],       [   3. ,  100. ,   59. ,    1.1],       [  14. ,   98. ,   51. ,    1.2],       [  36. ,   99. ,   58. ,    0.6],       [  52. ,   95. ,   53. ,    0.7],       [  70. ,  103. ,   59. ,    0.8],       [  84. ,   96. ,   54. ,    0.6],       [  95. ,  101. ,   53. ,    0.9],       [   4. ,   -1. ,   69. ,    0.8],       [  16. ,   -3. ,   71. ,    1. ],       [  35. ,    2. ,   68. ,    1.3],       [  52. ,   -4. ,   70. ,    1.3],       [  63. ,   -2. ,   70. ,    0.5],       [  83. ,    0. ,   65. ,    0.8],       [  97. ,   -5. ,   68. ,    1.4],       [  -4. ,   19. ,   63. ,    0.5],       [  21. ,   21. ,   67. ,    0.6],       [  37. ,   20. ,   62. ,    0.7],       [  45. ,   22. ,   64. ,    1.2],       [  62. ,   17. ,   69. ,    1.4],       [  81. ,   17. ,   69. ,    1.2],       [ 102. ,   24. ,   65. ,    0.7],       [  -3. ,   39. ,   70. ,    0.9],       [  21. ,   43. ,   63. ,    0.9],       [  31. ,   36. ,   70. ,    0.5],       [  52. ,   36. ,   70. ,    1.3],       [  62. ,   36. ,   66. ,    1.2],       [  78. ,   38. ,   69. ,    1. ],       [  95. ,   36. ,   67. ,    1.5],       [  -2. ,   58. ,   63. ,    0.9],       [  21. ,   61. ,   70. ,    1. ],       [  37. ,   57. ,   63. ,    0.6],       [  45. ,   60. ,   63. ,    0.6],       [  63. ,   63. ,   66. ,    0.6],       [  86. ,   63. ,   66. ,    0.6],       [  97. ,   63. ,   66. ,    0.7],       [  -2. ,   82. ,   68. ,    0.5],       [  19. ,   77. ,   68. ,    1.1],       [  31. ,   84. ,   63. ,    0.8],       [  54. ,   84. ,   69. ,    1.1],       [  64. ,   75. ,   63. ,    0.5],       [  87. ,   82. ,   63. ,    1.4],       [  97. ,   80. ,   66. ,    1.5],       [  -4. ,   96. ,   64. ,    1.1],       [  13. ,   98. ,   70. ,    1. ],       [  28. ,   95. ,   66. ,    1.3],       [  50. ,  103. ,   62. ,    1.2],       [  68. ,  101. ,   61. ,    0.8],       [  87. ,  104. ,   70. ,    1.4],       [ 102. ,   96. ,   69. ,    1.1],       [  -3. ,   -5. ,   80. ,    0.8],       [  18. ,    3. ,   72. ,    1.3],       [  37. ,    2. ,   73. ,    0.8],       [  53. ,    0. ,   82. ,    0.9],       [  71. ,   -3. ,   73. ,    1.2],       [  85. ,    3. ,   76. ,    0.8],       [ 100. ,    1. ,   81. ,    0.7],       [   3. ,   15. ,   74. ,    0.7],       [  20. ,   22. ,   73. ,    1.1],       [  29. ,   21. ,   78. ,    0.9],       [  51. ,   18. ,   76. ,    0.7],       [  63. ,   17. ,   78. ,    0.7],       [  84. ,   16. ,   79. ,    1.2],       [ 101. ,   22. ,   82. ,    1.2],       [   1. ,   40. ,   76. ,    1.2],       [  19. ,   44. ,   76. ,    0.8],       [  29. ,   43. ,   73. ,    1.1],       [  54. ,   42. ,   78. ,    1.4],       [  68. ,   38. ,   75. ,    0.5],       [  87. ,   37. ,   79. ,    1.5],       [ 101. ,   39. ,   79. ,    0.6],       [   3. ,   57. ,   75. ,    1.4],       [  15. ,   59. ,   78. ,    1.4],       [  33. ,   63. ,   80. ,    1.2],       [  52. ,   64. ,   77. ,    1.2],       [  66. ,   62. ,   76. ,    1.4],       [  82. ,   61. ,   78. ,    1.5],       [ 104. ,   58. ,   76. ,    0.9],       [   2. ,   76. ,   74. ,    1.3],       [  20. ,   79. ,   77. ,    0.8],       [  30. ,   79. ,   73. ,    1.2],       [  53. ,   75. ,   82. ,    1.4],       [  64. ,   76. ,   78. ,    0.6],       [  80. ,   79. ,   73. ,    1. ],       [  95. ,   82. ,   77. ,    0.7],       [  -3. ,   96. ,   78. ,    0.9],       [  21. ,  103. ,   77. ,    1. ],       [  32. ,  102. ,   73. ,    0.8],       [  49. ,  101. ,   76. ,    0.6],       [  67. ,  102. ,   77. ,    1.3],       [  87. ,  101. ,   79. ,    1.3],       [ 101. ,  102. ,   74. ,    1.3],       [   3. ,    3. ,   92. ,    1.4],       [  13. ,   -4. ,   91. ,    1.3],       [  31. ,    2. ,   89. ,    1. ],       [  45. ,    2. ,   90. ,    0.6],       [  68. ,    3. ,   88. ,    1. ],       [  85. ,    2. ,   85. ,    1.4],       [ 104. ,    2. ,   86. ,    1.3],       [  -3. ,   24. ,   90. ,    0.9],       [  19. ,   15. ,   92. ,    1.3],       [  36. ,   17. ,   86. ,    0.7],       [  50. ,   19. ,   87. ,    1.3],       [  70. ,   18. ,   87. ,    1. ],       [  83. ,   17. ,   87. ,    1.3],       [  97. ,   18. ,   90. ,    1.3],       [   1. ,   44. ,   87. ,    1.3],       [  19. ,   38. ,   91. ,    1.4],       [  29. ,   40. ,   88. ,    0.6],       [  54. ,   43. ,   92. ,    1. ],       [  66. ,   41. ,   90. ,    0.9],       [  80. ,   44. ,   91. ,    1.4],       [ 102. ,   40. ,   84. ,    0.9],       [  -2. ,   55. ,   91. ,    0.8],       [  11. ,   57. ,   90. ,    1.1],       [  35. ,   60. ,   89. ,    1.1],       [  46. ,   55. ,   87. ,    0.6],       [  65. ,   62. ,   91. ,    1.5],       [  82. ,   58. ,   88. ,    0.6],       [ 102. ,   62. ,   87. ,    0.8],       [   0. ,   75. ,   85. ,    1.2],       [  17. ,   81. ,   92. ,    0.8],       [  36. ,   83. ,   86. ,    1.5],       [  51. ,   81. ,   91. ,    1.4],       [  65. ,   81. ,   90. ,    1.3],       [  83. ,   81. ,   90. ,    1.3],       [  98. ,   81. ,   91. ,    1.4],       [   2. ,   97. ,   87. ,    1. ],       [  15. ,   95. ,   92. ,    0.6],       [  36. ,  104. ,   93. ,    0.8],       [  47. ,  102. ,   89. ,    1.5],       [  65. ,  100. ,   92. ,    1.1],       [  84. ,   98. ,   91. ,    0.9],       [ 100. ,  101. ,   88. ,    0.5],       [   4. ,   -5. ,   99. ,    0.6],       [  16. ,    0. ,  103. ,    1.4],       [  34. ,    2. ,   96. ,    1.1],       [  48. ,    0. ,  102. ,    1.1],       [  62. ,   -3. ,   97. ,    0.5],       [  78. ,    4. ,  100. ,    1.1],       [  97. ,   -4. ,   97. ,    1. ],       [  -1. ,   20. ,  101. ,    1.4],       [  11. ,   17. ,   98. ,    1.3],       [  34. ,   17. ,   95. ,    1. ],       [  49. ,   24. ,   96. ,    1.2],       [  70. ,   17. ,   98. ,    0.8],       [  83. ,   23. ,   97. ,    0.7],       [ 103. ,   15. ,   98. ,    1.2],       [   2. ,   35. ,   97. ,    1.2],       [  12. ,   37. ,  100. ,    0.5],       [  35. ,   43. ,  100. ,    1. ],       [  46. ,   37. ,   97. ,    0.9],       [  68. ,   39. ,   97. ,    1.4],       [  81. ,   43. ,  100. ,    1.5],       [  96. ,   42. ,   96. ,    1.4],       [   0. ,   58. ,  101. ,    1. ],       [  12. ,   63. ,  104. ,    0.8],       [  30. ,   58. ,  100. ,    0.5],       [  49. ,   56. ,  100. ,    0.7],       [  66. ,   57. ,   99. ,    1.4],       [  85. ,   58. ,  101. ,    1.4],       [ 103. ,   58. ,   96. ,    0.6],       [   3. ,   76. ,  103. ,    1.5],       [  15. ,   83. ,   97. ,    1.1],       [  34. ,   77. ,   95. ,    0.7],       [  52. ,   81. ,   98. ,    1.3],       [  69. ,   81. ,   95. ,    1.4],       [  81. ,   78. ,   97. ,    1.5],       [  95. ,   81. ,   99. ,    1.2],       [  -4. ,   95. ,  102. ,    0.7],       [  20. ,  102. ,  101. ,    0.7],       [  30. ,  104. ,   97. ,    0.7],       [  52. ,   95. ,  102. ,    1.5],       [  65. ,   98. ,   99. ,    1.1],       [  85. ,  104. ,   96. ,    1.5],       [ 101. ,  103. ,   99. ,    1.3]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.4,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2. ,  2. ,  2. ,  2. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2.8,  4.4,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 10. ,  10.9,   8.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 10.000000
        pt2[...,1] /= 10.900000
        pt2[...,2] /= 8.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p5_rational_C0_periodic(self):
        controlpoints = np.array([[  95. ,   -4. ,   -1. ,    0.5],
       [  72. ,   72. ,    0. ,    1.1],
       [  -1. ,   97. ,   -2. ,    1.1],
       [ -73. ,   67. ,   -4. ,    0.8],
       [-103. ,   -5. ,   -2. ,    1.3],
       [ -66. ,  -73. ,    2. ,    0.6],
       [  -4. ,  -98. ,   -5. ,    1.2],
       [  74. ,  -68. ,    3. ,    1.5]])
        basis0 = BSplineBasis(5, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  1.4,  1.8,  3.2,  4.3,  5. ,  5. ,
        5. ,  5. ,  6.4]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 2.4,  3.1,  7.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 2.400000
        pt2[...,1] -= 3.100000
        pt2[...,2] -= 7.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p7_rational_C0_periodic(self):
        controlpoints = np.array([[  95. ,   -4. ,    4. ,    1.2],
       [  79. ,   60. ,    1. ,    0.7],
       [  18. ,   96. ,   -5. ,    1.1],
       [ -51. ,   86. ,    0. ,    1.4],
       [ -90. ,   32. ,   -4. ,    1.4],
       [ -96. ,  -39. ,    0. ,    0.5],
       [ -46. ,  -83. ,    0. ,    1.2],
       [  15. , -102. ,    3. ,    0.6],
       [  80. ,  -60. ,   -2. ,    1.3]])
        basis0 = BSplineBasis(7, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.6,  3.3,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4.8]),0)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 2.2,  3.8,  2.2])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 2.200000
        pt2[...,1] /= 3.800000
        pt2[...,2] /= 2.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p56_rational_C0_periodic(self):
        controlpoints = np.array([[  60. ,   -2. ,   -3. ,    0.6],       [  49. ,   36. ,    4. ,    1.4],       [   7. ,   62. ,   -1. ,    1.4],       [ -33. ,   56. ,   -1. ,    1.5],       [ -53. ,   24. ,   -3. ,    1.3],       [ -58. ,  -22. ,   -4. ,    0.6],       [ -33. ,  -51. ,   -2. ,    0.6],       [  10. ,  -59. ,   -2. ,    0.9],       [  42. ,  -43. ,    2. ,    1.1],       [  68. ,   -5. ,   -1. ,    0.8],       [  45. ,   37. ,   -5. ,    1. ],       [   6. ,   63. ,   -5. ,    1.1],       [ -29. ,   56. ,   -5. ,    0.8],       [ -64. ,   17. ,    2. ,    0.9],       [ -60. ,  -22. ,   -2. ,    1.3],       [ -29. ,  -61. ,    1. ,    1.3],       [  10. ,  -64. ,   -5. ,    0.6],       [  53. ,  -43. ,    2. ,    1.3],       [  69. ,    0. ,   -2. ,    0.9],       [  50. ,   44. ,   -2. ,    1.2],       [  16. ,   67. ,    4. ,    1. ],       [ -39. ,   56. ,    0. ,    1.2],       [ -71. ,   27. ,    4. ,    1.1],       [ -66. ,  -27. ,    3. ,    1. ],       [ -38. ,  -58. ,    2. ,    1.4],       [  16. ,  -65. ,    3. ,    1.2],       [  51. ,  -43. ,    2. ,    0.8],       [  77. ,   -5. ,   -4. ,    1. ],       [  56. ,   47. ,   -4. ,    1. ],       [  14. ,   71. ,   -5. ,    0.7],       [ -42. ,   63. ,    1. ,    1.3],       [ -73. ,   25. ,   -5. ,    0.8],       [ -69. ,  -27. ,   -1. ,    0.5],       [ -35. ,  -66. ,    0. ,    1. ],       [  13. ,  -76. ,    2. ,    0.8],       [  53. ,  -44. ,    1. ,    1.2],       [  77. ,   -4. ,    2. ,    0.9],       [  62. ,   52. ,    1. ,    0.6],       [  11. ,   81. ,    0. ,    1.3],       [ -36. ,   69. ,    4. ,    1.3],       [ -78. ,   24. ,   -1. ,    0.6],       [ -77. ,  -32. ,   -3. ,    0.6],       [ -44. ,  -69. ,    0. ,    1. ],       [  11. ,  -78. ,   -5. ,    0.9],       [  58. ,  -49. ,    2. ,    0.9],       [  82. ,   -3. ,    0. ,    0.9],       [  68. ,   55. ,   -1. ,    0.9],       [  11. ,   86. ,   -4. ,    1.1],       [ -41. ,   76. ,   -1. ,    1. ],       [ -79. ,   27. ,   -5. ,    1.1],       [ -80. ,  -32. ,   -2. ,    1.1],       [ -45. ,  -70. ,    1. ,    0.6],       [  19. ,  -84. ,    0. ,    1.4],       [  67. ,  -52. ,   -1. ,    0.6],       [  92. ,   -5. ,    2. ,    0.7],       [  72. ,   58. ,   -2. ,    0.5],       [  16. ,   86. ,    0. ,    0.5],       [ -50. ,   74. ,   -1. ,    1.5],       [ -87. ,   32. ,   -4. ,    0.7],       [ -86. ,  -28. ,   -2. ,    1. ],       [ -47. ,  -81. ,    3. ,    0.8],       [  18. ,  -84. ,   -5. ,    0.9],       [  63. ,  -62. ,    4. ,    1.3],       [  98. ,   -5. ,    3. ,    0.7],       [  77. ,   58. ,   -4. ,    1. ],       [  15. ,   88. ,    4. ,    1.2],       [ -50. ,   84. ,    1. ,    0.8],       [ -87. ,   31. ,   -5. ,    0.8],       [ -87. ,  -29. ,    1. ,    0.6],       [ -48. ,  -84. ,   -1. ,    1.1],       [  15. ,  -91. ,   -4. ,    0.6],       [  68. ,  -66. ,    3. ,    1.4],       [ 100. ,    3. ,    3. ,    1.4],       [  75. ,   65. ,    0. ,    0.6],       [  14. ,   96. ,   -5. ,    0.6],       [ -49. ,   88. ,   -5. ,    0.8],       [ -95. ,   38. ,   -5. ,    0.5],       [ -98. ,  -38. ,    0. ,    1.2],       [ -47. ,  -89. ,    2. ,    0.7],       [  21. , -101. ,    2. ,    1.2],       [  77. ,  -67. ,    4. ,    1.1]])
        basis0 = BSplineBasis(5, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  1.2,  2.1,  3.2,  4.3,  4.7,  6. ,
        6. ,  6. ,  6. ,  7.2]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.3,  3.3,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 8.5,  8.7,  3.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 8.500000
        pt2[...,1] -= 8.700000
        pt2[...,2] -= 3.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p65_rational_C0_periodic(self):
        controlpoints = np.array([[  55. ,   -4. ,    4. ,    0.6],       [  51. ,   29. ,   -5. ,    1. ],       [  20. ,   56. ,    0. ,    0.9],       [ -13. ,   59. ,   -1. ,    1.1],       [ -38. ,   46. ,   -3. ,    0.7],       [ -57. ,   12. ,    1. ,    1. ],       [ -57. ,  -13. ,   -4. ,    0.9],       [ -43. ,  -41. ,    1. ,    1.2],       [  -5. ,  -62. ,    4. ,    1.3],       [  26. ,  -51. ,   -3. ,    0.9],       [  53. ,  -31. ,    1. ,    0.6],       [  63. ,    3. ,   -1. ,    1.5],       [  55. ,   34. ,    4. ,    0.6],       [  28. ,   59. ,   -4. ,    1.5],       [ -10. ,   68. ,   -2. ,    0.7],       [ -49. ,   50. ,   -5. ,    1.3],       [ -62. ,   19. ,   -5. ,    0.5],       [ -70. ,  -17. ,    1. ,    1. ],       [ -43. ,  -51. ,   -5. ,    1.1],       [ -12. ,  -63. ,    1. ,    0.7],       [  29. ,  -60. ,    0. ,    0.9],       [  57. ,  -41. ,   -5. ,    0.7],       [  74. ,    3. ,   -2. ,    0.8],       [  64. ,   39. ,   -5. ,    1. ],       [  29. ,   72. ,   -3. ,    0.7],       [ -11. ,   75. ,    2. ,    1.3],       [ -47. ,   55. ,    4. ,    0.9],       [ -70. ,   17. ,    3. ,    1.1],       [ -75. ,  -19. ,   -5. ,    1.2],       [ -50. ,  -59. ,   -2. ,    0.9],       [  -9. ,  -73. ,   -5. ,    1.2],       [  29. ,  -70. ,    2. ,    0.7],       [  63. ,  -40. ,   -5. ,    1.1],       [  85. ,    2. ,    3. ,    1.3],       [  68. ,   47. ,    4. ,    1. ],       [  35. ,   73. ,    3. ,    1.4],       [ -14. ,   83. ,   -3. ,    0.8],       [ -58. ,   65. ,    1. ,    1.2],       [ -81. ,   25. ,   -3. ,    1.3],       [ -83. ,  -25. ,   -3. ,    1. ],       [ -57. ,  -66. ,    3. ,    0.7],       [ -14. ,  -85. ,   -1. ,    1.5],       [  35. ,  -78. ,   -2. ,    0.6],       [  70. ,  -41. ,   -5. ,    1.3],       [  93. ,    3. ,    3. ,    0.7],       [  76. ,   49. ,    3. ,    1.1],       [  33. ,   80. ,    0. ,    0.8],       [ -12. ,   95. ,    3. ,    0.7],       [ -64. ,   70. ,   -2. ,    1.3],       [ -86. ,   26. ,    3. ,    0.7],       [ -91. ,  -23. ,   -4. ,    1.3],       [ -58. ,  -66. ,   -2. ,    1.4],       [ -18. ,  -94. ,    1. ,    1.4],       [  33. ,  -88. ,    3. ,    1. ],       [  72. ,  -46. ,   -1. ,    0.6],       [  97. ,    0. ,    2. ,    0.6],       [  81. ,   49. ,    3. ,    0.8],       [  44. ,   93. ,   -5. ,    1.5],       [ -10. ,   97. ,   -2. ,    1.1],       [ -67. ,   71. ,   -2. ,    1.2],       [ -93. ,   24. ,    3. ,    1.4],       [ -97. ,  -33. ,   -4. ,    0.9],       [ -67. ,  -75. ,   -4. ,    1. ],       [ -14. , -102. ,    3. ,    1.1],       [  38. ,  -92. ,    2. ,    0.7],       [  87. ,  -50. ,    4. ,    1.1]])
        basis0 = BSplineBasis(6, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.8,  3.1,  4.1,  4.9,
        5.7,  7. ,  7. ,  7. ,  7. ,  7. ,  8.3]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 10.6,  10.7,   3.6])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 10.600000
        pt2[...,1] /= 10.700000
        pt2[...,2] /= 3.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p565_rational_C0_periodic(self):
        controlpoints = np.array([[  48. ,    1. ,    1. ,    0.5],       [  39. ,   33. ,   -2. ,    1.3],       [   3. ,   54. ,   -2. ,    0.5],       [ -34. ,   34. ,    0. ,    0.6],       [ -47. ,    2. ,   -2. ,    0.8],       [ -32. ,  -35. ,    3. ,    1.2],       [   2. ,  -47. ,   -1. ,    1.3],       [  32. ,  -40. ,    1. ,    0.9],       [  56. ,    2. ,    3. ,    0.9],       [  35. ,   37. ,   -2. ,    1.2],       [   0. ,   57. ,    0. ,    1.1],       [ -38. ,   38. ,    1. ,    1.1],       [ -57. ,    0. ,    1. ,    0.9],       [ -37. ,  -40. ,    2. ,    1.5],       [  -4. ,  -56. ,   -5. ,    1.4],       [  36. ,  -42. ,   -1. ,    0.8],       [  60. ,    3. ,   -4. ,    1.1],       [  46. ,   43. ,    1. ,    1.2],       [  -2. ,   59. ,    0. ,    0.8],       [ -50. ,   47. ,    0. ,    1.1],       [ -62. ,    0. ,   -3. ,    1.1],       [ -48. ,  -51. ,   -3. ,    0.9],       [   2. ,  -69. ,   -5. ,    1. ],       [  45. ,  -45. ,   -4. ,    1.3],       [  76. ,    4. ,    0. ,    0.7],       [  46. ,   53. ,   -2. ,    1.1],       [   2. ,   70. ,    1. ,    0.6],       [ -47. ,   46. ,   -3. ,    0.5],       [ -76. ,    4. ,    0. ,    0.9],       [ -52. ,  -53. ,    4. ,    0.7],       [  -5. ,  -71. ,   -2. ,    1.4],       [  50. ,  -56. ,    4. ,    1.1],       [  74. ,   -4. ,    0. ,    1.4],       [  51. ,   59. ,   -2. ,    0.5],       [  -4. ,   81. ,    2. ,    0.9],       [ -56. ,   58. ,   -1. ,    0.6],       [ -84. ,    3. ,   -1. ,    0.9],       [ -56. ,  -58. ,    3. ,    1. ],       [   0. ,  -75. ,    4. ,    1.2],       [  56. ,  -52. ,   -2. ,    0.9],       [  85. ,   -5. ,   -2. ,    1.2],       [  64. ,   64. ,    2. ,    1.4],       [   3. ,   82. ,    1. ,    1.4],       [ -57. ,   61. ,    2. ,    0.7],       [ -83. ,    0. ,   -1. ,    1.1],       [ -65. ,  -57. ,   -5. ,    1. ],       [   1. ,  -84. ,    0. ,    0.8],       [  64. ,  -60. ,   -1. ,    0.7],       [  89. ,   -2. ,    4. ,    0.6],       [  62. ,   69. ,    0. ,    0.9],       [  -2. ,   96. ,   -2. ,    1.3],       [ -71. ,   70. ,   -5. ,    0.7],       [ -96. ,    1. ,    2. ,    0.6],       [ -64. ,  -70. ,    0. ,    0.6],       [   1. ,  -89. ,   -4. ,    1.1],       [  70. ,  -63. ,   -5. ,    1.3],       [ 103. ,   -3. ,   -5. ,    1.2],       [  67. ,   72. ,   -5. ,    0.5],       [  -4. ,  100. ,    3. ,    0.9],       [ -72. ,   70. ,   -4. ,    1.3],       [-100. ,    1. ,    0. ,    0.5],       [ -67. ,  -74. ,    2. ,    1.4],       [   2. , -104. ,   -1. ,    1.1],       [  69. ,  -66. ,    0. ,    0.9],       [  46. ,    1. ,    3. ,    1. ],       [  35. ,   32. ,   11. ,    1. ],       [  -1. ,   45. ,    2. ,    0.6],       [ -34. ,   39. ,   11. ,    0.8],       [ -51. ,    2. ,    9. ,    1. ],       [ -37. ,  -32. ,    1. ,    1.5],       [   3. ,  -49. ,   10. ,    0.9],       [  31. ,  -38. ,    3. ,    1.1],       [  53. ,   -5. ,    4. ,    0.6],       [  42. ,   43. ,    6. ,    1. ],       [   4. ,   53. ,    5. ,    1.3],       [ -40. ,   36. ,    3. ,    0.6],       [ -62. ,    4. ,    6. ,    0.9],       [ -38. ,  -37. ,    3. ,    0.8],       [   0. ,  -58. ,    2. ,    0.7],       [  40. ,  -39. ,    3. ,    0.9],       [  68. ,    0. ,    1. ,    0.7],       [  49. ,   47. ,    6. ,    1.2],       [  -1. ,   60. ,   11. ,    1.2],       [ -43. ,   49. ,    9. ,    0.7],       [ -62. ,   -5. ,    7. ,    1.3],       [ -42. ,  -49. ,    9. ,    1.4],       [   2. ,  -65. ,    6. ,    1. ],       [  40. ,  -44. ,   10. ,    1.5],       [  71. ,    4. ,    3. ,    0.7],       [  52. ,   51. ,    9. ,    1.1],       [  -2. ,   67. ,    2. ,    1.3],       [ -53. ,   52. ,    5. ,    1.3],       [ -68. ,   -5. ,    2. ,    0.6],       [ -52. ,  -56. ,    9. ,    0.7],       [  -5. ,  -68. ,    8. ,    0.5],       [  51. ,  -54. ,    6. ,    1.1],       [  74. ,   -2. ,    6. ,    1.2],       [  56. ,   58. ,   10. ,    1.2],       [   4. ,   76. ,    3. ,    1.1],       [ -55. ,   59. ,   11. ,    1.1],       [ -74. ,   -1. ,    6. ,    0.9],       [ -56. ,  -54. ,    8. ,    0.7],       [   0. ,  -80. ,    9. ,    0.8],       [  54. ,  -59. ,    7. ,    1.1],       [  84. ,   -3. ,   11. ,    1.4],       [  55. ,   58. ,   11. ,    1.5],       [   3. ,   83. ,    8. ,    1.2],       [ -66. ,   56. ,    2. ,    0.5],       [ -90. ,   -5. ,    5. ,    1.3],       [ -64. ,  -61. ,    6. ,    1. ],       [  -4. ,  -84. ,    4. ,    1. ],       [  60. ,  -64. ,    2. ,    1. ],       [  90. ,   -5. ,    9. ,    1.3],       [  66. ,   62. ,    1. ,    1.3],       [  -2. ,   91. ,    3. ,    1. ],       [ -69. ,   69. ,    7. ,    0.9],       [ -98. ,   -2. ,    5. ,    0.9],       [ -64. ,  -66. ,    7. ,    1. ],       [  -1. ,  -91. ,    9. ,    0.7],       [  60. ,  -69. ,   10. ,    1.5],       [  99. ,    0. ,    2. ,    0.6],       [  71. ,   69. ,    1. ,    1.3],       [  -4. ,  102. ,    7. ,    0.6],       [ -72. ,   75. ,    3. ,    0.8],       [-102. ,   -5. ,   10. ,    0.7],       [ -75. ,  -70. ,    9. ,    0.9],       [  -3. , -105. ,    5. ,    1. ],       [  69. ,  -76. ,    3. ,    0.9],       [  48. ,   -2. ,   12. ,    1.1],       [  30. ,   32. ,   11. ,    1.3],       [   2. ,   45. ,   13. ,    1.2],       [ -41. ,   38. ,   11. ,    1.4],       [ -50. ,   -4. ,   11. ,    1.2],       [ -39. ,  -32. ,   10. ,    1.2],       [   0. ,  -47. ,   11. ,    0.6],       [  38. ,  -35. ,   14. ,    1.4],       [  54. ,    0. ,   13. ,    1.3],       [  43. ,   45. ,   17. ,    0.9],       [  -2. ,   56. ,   15. ,    1.3],       [ -38. ,   41. ,    8. ,    0.7],       [ -58. ,    3. ,    9. ,    1.4],       [ -40. ,  -46. ,    8. ,    1. ],       [   3. ,  -54. ,   16. ,    1.5],       [  38. ,  -37. ,    9. ,    1.1],       [  63. ,   -5. ,   16. ,    1.5],       [  50. ,   47. ,   16. ,    1.4],       [  -1. ,   60. ,   10. ,    0.8],       [ -48. ,   47. ,   14. ,    1.5],       [ -60. ,   -1. ,   12. ,    1.4],       [ -51. ,  -48. ,   12. ,    1.1],       [  -2. ,  -64. ,   16. ,    0.8],       [  47. ,  -43. ,   11. ,    1.3],       [  66. ,   -4. ,   15. ,    0.6],       [  47. ,   49. ,   15. ,    0.8],       [   1. ,   71. ,   16. ,    1.4],       [ -53. ,   50. ,   17. ,    1.1],       [ -71. ,    0. ,    9. ,    0.6],       [ -48. ,  -50. ,   17. ,    0.8],       [   2. ,  -70. ,   11. ,    0.7],       [  51. ,  -46. ,    9. ,    1.4],       [  81. ,    4. ,   16. ,    0.6],       [  54. ,   56. ,   17. ,    0.8],       [  -4. ,   78. ,   16. ,    0.9],       [ -59. ,   51. ,   15. ,    1.5],       [ -83. ,    4. ,    9. ,    1.1],       [ -59. ,  -53. ,   10. ,    1.5],       [  -2. ,  -80. ,   11. ,    0.5],       [  53. ,  -52. ,   10. ,    0.8],       [  89. ,    2. ,   12. ,    1. ],       [  62. ,   57. ,   16. ,    0.6],       [   0. ,   85. ,    9. ,    1.3],       [ -57. ,   61. ,   15. ,    0.7],       [ -82. ,    4. ,   17. ,    1.3],       [ -59. ,  -58. ,    9. ,    1.4],       [  -3. ,  -85. ,   17. ,    1. ],       [  62. ,  -57. ,   11. ,    1.5],       [  94. ,   -1. ,   17. ,    1.2],       [  68. ,   64. ,   11. ,    1. ],       [   3. ,   94. ,    9. ,    0.8],       [ -70. ,   67. ,    8. ,    0.6],       [ -94. ,   -4. ,   10. ,    1.1],       [ -63. ,  -62. ,    9. ,    0.6],       [   2. ,  -94. ,   10. ,    1.1],       [  64. ,  -68. ,   15. ,    1.2],       [  99. ,   -1. ,   18. ,    1.3],       [  71. ,   69. ,   16. ,    1.5],       [  -5. ,   98. ,   16. ,    1.2],       [ -75. ,   72. ,   10. ,    0.7],       [ -96. ,    0. ,   11. ,    0.8],       [ -68. ,  -71. ,   17. ,    1.5],       [   0. ,  -96. ,   11. ,    0.6],       [  67. ,  -70. ,   18. ,    0.7],       [  50. ,   -5. ,   24. ,    1.3],       [  38. ,   37. ,   17. ,    0.5],       [  -4. ,   48. ,   21. ,    0.8],       [ -41. ,   32. ,   24. ,    0.6],       [ -52. ,    4. ,   24. ,    1.5],       [ -31. ,  -31. ,   15. ,    0.7],       [  -4. ,  -51. ,   15. ,    1.4],       [  39. ,  -35. ,   16. ,    0.7],       [  59. ,   -5. ,   15. ,    1.1],       [  43. ,   43. ,   24. ,    0.5],       [   0. ,   52. ,   17. ,    0.7],       [ -38. ,   43. ,   18. ,    1.3],       [ -59. ,    2. ,   15. ,    0.8],       [ -39. ,  -40. ,   17. ,    1.5],       [  -1. ,  -58. ,   15. ,    0.8],       [  42. ,  -41. ,   16. ,    1.4],       [  64. ,    2. ,   23. ,    0.8],       [  41. ,   45. ,   24. ,    0.6],       [  -5. ,   68. ,   20. ,    1.3],       [ -43. ,   40. ,   21. ,    1.1],       [ -63. ,    1. ,   16. ,    1.2],       [ -41. ,  -46. ,   24. ,    1.3],       [  -3. ,  -67. ,   19. ,    0.5],       [  48. ,  -49. ,   18. ,    1.3],       [  69. ,   -3. ,   15. ,    0.7],       [  49. ,   51. ,   20. ,    1.2],       [  -2. ,   74. ,   21. ,    0.6],       [ -55. ,   47. ,   19. ,    1. ],       [ -72. ,   -4. ,   23. ,    1.2],       [ -55. ,  -55. ,   22. ,    0.8],       [  -3. ,  -71. ,   19. ,    1.1],       [  46. ,  -53. ,   19. ,    0.9],       [  80. ,   -1. ,   19. ,    0.6],       [  55. ,   51. ,   16. ,    1.4],       [  -5. ,   80. ,   21. ,    1.2],       [ -52. ,   56. ,   15. ,    1.2],       [ -78. ,   -3. ,   21. ,    1.4],       [ -57. ,  -59. ,   18. ,    1.1],       [   1. ,  -75. ,   19. ,    1.1],       [  56. ,  -51. ,   16. ,    1.3],       [  89. ,   -1. ,   20. ,    1. ],       [  58. ,   57. ,   18. ,    0.6],       [  -3. ,   86. ,   18. ,    1.1],       [ -65. ,   62. ,   15. ,    0.9],       [ -87. ,   -1. ,   19. ,    0.8],       [ -63. ,  -60. ,   18. ,    1.1],       [  -4. ,  -81. ,   17. ,    0.6],       [  58. ,  -64. ,   16. ,    0.7],       [  94. ,    0. ,   22. ,    0.9],       [  63. ,   62. ,   16. ,    1.4],       [   1. ,   89. ,   21. ,    0.8],       [ -64. ,   70. ,   24. ,    0.6],       [ -96. ,   -2. ,   24. ,    1.2],       [ -70. ,  -66. ,   19. ,    0.6],       [  -1. ,  -89. ,   15. ,    1. ],       [  65. ,  -66. ,   22. ,    0.7],       [  99. ,    2. ,   22. ,    0.5],       [  69. ,   74. ,   21. ,    1.4],       [  -5. ,   99. ,   16. ,    0.6],       [ -72. ,   68. ,   15. ,    0.5],       [ -96. ,    0. ,   19. ,    1. ],       [ -75. ,  -68. ,   22. ,    1.5],       [  -1. ,  -97. ,   16. ,    1.4],       [  67. ,  -68. ,   19. ,    1. ],       [  47. ,   -2. ,   24. ,    0.9],       [  32. ,   34. ,   28. ,    0.7],       [   1. ,   51. ,   31. ,    0.6],       [ -35. ,   31. ,   22. ,    1.4],       [ -51. ,   -2. ,   24. ,    0.8],       [ -33. ,  -36. ,   22. ,    1. ],       [  -1. ,  -47. ,   22. ,    1.4],       [  30. ,  -34. ,   26. ,    1.1],       [  59. ,   -1. ,   27. ,    1. ],       [  44. ,   39. ,   31. ,    0.5],       [  -1. ,   59. ,   29. ,    1.1],       [ -39. ,   44. ,   25. ,    0.6],       [ -55. ,   -1. ,   21. ,    0.8],       [ -38. ,  -44. ,   27. ,    1.4],       [  -4. ,  -57. ,   25. ,    0.7],       [  37. ,  -44. ,   28. ,    1.1],       [  67. ,    2. ,   29. ,    1.3],       [  43. ,   44. ,   28. ,    0.7],       [  -3. ,   66. ,   29. ,    1.5],       [ -46. ,   46. ,   23. ,    0.5],       [ -64. ,   -1. ,   31. ,    1.1],       [ -48. ,  -50. ,   25. ,    0.7],       [  -3. ,  -60. ,   22. ,    0.5],       [  49. ,  -50. ,   24. ,    0.8],       [  70. ,   -1. ,   22. ,    0.9],       [  52. ,   54. ,   26. ,    0.6],       [   0. ,   70. ,   26. ,    0.7],       [ -50. ,   53. ,   27. ,    1.1],       [ -75. ,    2. ,   29. ,    1.5],       [ -55. ,  -47. ,   22. ,    1.5],       [  -1. ,  -76. ,   25. ,    1.4],       [  52. ,  -52. ,   30. ,    0.9],       [  73. ,    4. ,   30. ,    0.9],       [  55. ,   57. ,   24. ,    0.6],       [  -5. ,   83. ,   28. ,    1.4],       [ -52. ,   53. ,   26. ,    0.7],       [ -81. ,    3. ,   27. ,    1.2],       [ -52. ,  -60. ,   26. ,    0.6],       [  -4. ,  -80. ,   29. ,    0.8],       [  55. ,  -53. ,   23. ,    1.5],       [  84. ,    1. ,   23. ,    1.4],       [  63. ,   59. ,   27. ,    1.5],       [   0. ,   86. ,   25. ,    0.6],       [ -61. ,   62. ,   28. ,    0.8],       [ -89. ,   -5. ,   23. ,    0.6],       [ -60. ,  -59. ,   23. ,    0.9],       [  -5. ,  -82. ,   28. ,    1.5],       [  63. ,  -64. ,   30. ,    1. ],       [  91. ,   -2. ,   22. ,    0.8],       [  69. ,   68. ,   26. ,    0.9],       [  -2. ,   93. ,   26. ,    1.4],       [ -70. ,   62. ,   30. ,    1. ],       [ -95. ,    0. ,   30. ,    0.8],       [ -68. ,  -62. ,   23. ,    1.1],       [   3. ,  -93. ,   28. ,    0.8],       [  61. ,  -62. ,   29. ,    0.5],       [  99. ,   -5. ,   24. ,    0.9],       [  66. ,   71. ,   23. ,    1.3],       [   3. ,  103. ,   31. ,    1. ],       [ -67. ,   74. ,   24. ,    1.1],       [ -98. ,    4. ,   24. ,    1.2],       [ -70. ,  -67. ,   29. ,    1.2],       [   3. , -104. ,   24. ,    0.8],       [  70. ,  -74. ,   27. ,    0.9],       [  49. ,    0. ,   35. ,    1.4],       [  39. ,   35. ,   37. ,    0.7],       [   4. ,   52. ,   30. ,    0.7],       [ -36. ,   33. ,   37. ,    1.1],       [ -48. ,   -5. ,   38. ,    1. ],       [ -34. ,  -39. ,   38. ,    0.7],       [  -4. ,  -51. ,   29. ,    1.4],       [  33. ,  -35. ,   37. ,    1. ],       [  57. ,    0. ,   38. ,    1.5],       [  43. ,   38. ,   38. ,    0.8],       [  -4. ,   60. ,   30. ,    0.6],       [ -41. ,   38. ,   29. ,    1.4],       [ -59. ,   -1. ,   37. ,    1.3],       [ -45. ,  -46. ,   30. ,    1.2],       [  -3. ,  -54. ,   33. ,    1.4],       [  35. ,  -36. ,   28. ,    0.6],       [  60. ,    4. ,   34. ,    1.5],       [  47. ,   49. ,   33. ,    1.3],       [  -4. ,   62. ,   38. ,    0.8],       [ -44. ,   46. ,   28. ,    1.3],       [ -66. ,    2. ,   33. ,    0.7],       [ -50. ,  -50. ,   28. ,    1.4],       [   0. ,  -67. ,   36. ,    1.4],       [  49. ,  -42. ,   29. ,    0.6],       [  73. ,    1. ,   30. ,    0.6],       [  54. ,   49. ,   30. ,    0.9],       [   2. ,   71. ,   32. ,    1. ],       [ -54. ,   54. ,   35. ,    1.4],       [ -76. ,    0. ,   37. ,    1. ],       [ -53. ,  -52. ,   35. ,    0.9],       [  -5. ,  -68. ,   30. ,    1.2],       [  50. ,  -56. ,   30. ,    1.1],       [  83. ,    0. ,   31. ,    0.6],       [  51. ,   51. ,   34. ,    1.1],       [   4. ,   74. ,   37. ,    1.3],       [ -60. ,   55. ,   32. ,    1.3],       [ -76. ,    2. ,   36. ,    0.9],       [ -59. ,  -59. ,   37. ,    0.5],       [   0. ,  -81. ,   37. ,    1.2],       [  58. ,  -57. ,   37. ,    1.3],       [  90. ,    2. ,   30. ,    1.4],       [  64. ,   62. ,   29. ,    1.4],       [  -4. ,   83. ,   36. ,    0.7],       [ -57. ,   64. ,   30. ,    1.5],       [ -88. ,    3. ,   38. ,    0.6],       [ -57. ,  -64. ,   33. ,    1.4],       [  -3. ,  -89. ,   31. ,    0.6],       [  61. ,  -57. ,   36. ,    0.9],       [  92. ,    3. ,   36. ,    0.9],       [  68. ,   64. ,   31. ,    0.7],       [  -1. ,   95. ,   31. ,    1.2],       [ -68. ,   69. ,   33. ,    1.4],       [ -88. ,   -3. ,   36. ,    1. ],       [ -64. ,  -69. ,   30. ,    0.8],       [   1. ,  -90. ,   31. ,    1.3],       [  62. ,  -63. ,   31. ,    0.9],       [ 104. ,   -1. ,   31. ,    0.5],       [  66. ,   73. ,   31. ,    0.9],       [  -2. ,   98. ,   34. ,    0.5],       [ -76. ,   68. ,   34. ,    1.4],       [-103. ,    1. ,   29. ,    1.1],       [ -68. ,  -67. ,   35. ,    1.2],       [   4. , -102. ,   33. ,    0.6],       [  75. ,  -75. ,   32. ,    0.7],       [  51. ,    2. ,   43. ,    0.6],       [  31. ,   36. ,   41. ,    1.2],       [  -3. ,   49. ,   37. ,    0.8],       [ -38. ,   40. ,   37. ,    1. ],       [ -47. ,   -4. ,   40. ,    1.2],       [ -38. ,  -39. ,   35. ,    0.9],       [   3. ,  -51. ,   40. ,    0.9],       [  34. ,  -39. ,   41. ,    0.5],       [  53. ,    1. ,   35. ,    1. ],       [  44. ,   38. ,   40. ,    1.3],       [   3. ,   53. ,   39. ,    0.6],       [ -40. ,   45. ,   40. ,    1.2],       [ -59. ,   -5. ,   35. ,    0.7],       [ -36. ,  -38. ,   40. ,    0.5],       [  -4. ,  -60. ,   41. ,    0.5],       [  41. ,  -37. ,   35. ,    1. ],       [  62. ,    3. ,   39. ,    1.1],       [  48. ,   48. ,   41. ,    0.7],       [  -1. ,   62. ,   40. ,    0.6],       [ -41. ,   46. ,   42. ,    1.3],       [ -66. ,   -2. ,   35. ,    1. ],       [ -47. ,  -43. ,   38. ,    1.2],       [  -5. ,  -62. ,   40. ,    0.7],       [  46. ,  -46. ,   38. ,    1.3],       [  68. ,    2. ,   35. ,    0.5],       [  51. ,   52. ,   40. ,    0.9],       [  -2. ,   67. ,   44. ,    0.5],       [ -56. ,   53. ,   41. ,    0.8],       [ -76. ,    1. ,   36. ,    0.8],       [ -47. ,  -49. ,   37. ,    1.1],       [  -4. ,  -69. ,   44. ,    0.8],       [  54. ,  -54. ,   35. ,    0.8],       [  81. ,    2. ,   43. ,    1.2],       [  59. ,   54. ,   36. ,    0.7],       [  -1. ,   82. ,   40. ,    1.3],       [ -60. ,   55. ,   40. ,    0.8],       [ -74. ,    1. ,   36. ,    1.3],       [ -54. ,  -58. ,   37. ,    1.4],       [  -3. ,  -81. ,   38. ,    0.6],       [  57. ,  -54. ,   40. ,    0.5],       [  83. ,   -2. ,   36. ,    0.8],       [  61. ,   62. ,   39. ,    1.5],       [   0. ,   88. ,   36. ,    1.3],       [ -58. ,   64. ,   44. ,    1.4],       [ -84. ,    0. ,   40. ,    0.9],       [ -59. ,  -60. ,   35. ,    0.9],       [   2. ,  -82. ,   41. ,    1.1],       [  60. ,  -64. ,   38. ,    0.5],       [  89. ,   -4. ,   39. ,    1. ],       [  60. ,   70. ,   38. ,    0.8],       [  -2. ,   96. ,   42. ,    1.4],       [ -63. ,   60. ,   38. ,    1.4],       [ -95. ,    4. ,   41. ,    0.5],       [ -68. ,  -66. ,   37. ,    0.9],       [  -3. ,  -91. ,   42. ,    0.7],       [  63. ,  -71. ,   36. ,    1.1],       [ 103. ,   -1. ,   40. ,    1.3],       [  65. ,   68. ,   42. ,    1.2],       [   0. ,   96. ,   35. ,    1.4],       [ -73. ,   73. ,   44. ,    0.9],       [-102. ,   -1. ,   35. ,    0.7],       [ -67. ,  -71. ,   41. ,    0.9],       [   4. , -100. ,   44. ,    1.5],       [  71. ,  -68. ,   38. ,    1.4]])
        basis0 = BSplineBasis(5, np.array([-1.1,  0. ,  0. ,  0. ,  0. ,  1.2,  1.9,  3.3,  3.9,  5. ,  5. ,
        5. ,  5. ,  6.2]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.1,  3. ,  3. ,  3. ,
        3. ,  3. ,  3. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.3,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 7.1,  1. ,  6.7])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 7.100000
        pt2[...,1] -= 1.000000
        pt2[...,2] -= 6.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p767_rational_C0_periodic(self):
        controlpoints = np.array([[  45. ,   -5. ,   -5. ,    1.3],       [  39. ,   28. ,   -4. ,    0.8],       [   4. ,   48. ,    3. ,    1.2],       [ -26. ,   39. ,   -2. ,    1.4],       [ -46. ,   20. ,   -1. ,    1. ],       [ -44. ,  -18. ,    0. ,    1.3],       [ -29. ,  -39. ,    3. ,    0.8],       [   6. ,  -54. ,    0. ,    0.7],       [  38. ,  -36. ,    2. ,    0.7],       [  54. ,    2. ,   -3. ,    0.8],       [  46. ,   32. ,   -3. ,    1.2],       [   9. ,   53. ,    1. ,    1.1],       [ -27. ,   53. ,   -5. ,    1.1],       [ -56. ,   23. ,    2. ,    1. ],       [ -54. ,  -19. ,   -3. ,    1.5],       [ -34. ,  -51. ,    4. ,    1. ],       [   8. ,  -59. ,   -2. ,    0.6],       [  44. ,  -39. ,    1. ,    0.8],       [  70. ,    1. ,    0. ,    1.4],       [  55. ,   45. ,   -2. ,    1.4],       [  14. ,   70. ,    1. ,    1. ],       [ -36. ,   60. ,    0. ,    1.2],       [ -63. ,   18. ,    3. ,    0.6],       [ -68. ,  -23. ,    0. ,    1.2],       [ -31. ,  -59. ,   -1. ,    0.6],       [   9. ,  -67. ,   -1. ,    1.2],       [  47. ,  -40. ,    2. ,    0.6],       [  75. ,    4. ,    4. ,    1.3],       [  60. ,   49. ,   -4. ,    1.3],       [  13. ,   71. ,    4. ,    0.5],       [ -34. ,   64. ,   -1. ,    0.6],       [ -74. ,   27. ,    3. ,    0.6],       [ -68. ,  -22. ,   -5. ,    0.8],       [ -38. ,  -66. ,    1. ,    1.1],       [  16. ,  -79. ,   -5. ,    1. ],       [  60. ,  -44. ,    2. ,    1.5],       [  82. ,   -4. ,   -1. ,    0.9],       [  65. ,   56. ,    2. ,    1.4],       [  17. ,   81. ,   -4. ,    1.1],       [ -40. ,   74. ,    1. ,    1.5],       [ -80. ,   27. ,   -1. ,    1.4],       [ -82. ,  -25. ,   -4. ,    1.5],       [ -43. ,  -73. ,    3. ,    1.1],       [   9. ,  -84. ,    0. ,    0.8],       [  65. ,  -56. ,   -4. ,    0.9],       [  88. ,   -5. ,    4. ,    1. ],       [  74. ,   61. ,   -3. ,    0.8],       [  18. ,   93. ,   -1. ,    1.4],       [ -44. ,   74. ,    0. ,    1.5],       [ -90. ,   35. ,    3. ,    0.9],       [ -91. ,  -29. ,    1. ,    1.1],       [ -51. ,  -80. ,    2. ,    1.3],       [  14. ,  -95. ,   -5. ,    0.8],       [  72. ,  -55. ,   -4. ,    0.8],       [  95. ,   -2. ,   -5. ,    1.5],       [  73. ,   67. ,    0. ,    1.3],       [  15. ,  102. ,   -5. ,    1.3],       [ -52. ,   83. ,    1. ,    0.8],       [ -98. ,   37. ,   -3. ,    1.5],       [ -95. ,  -30. ,    4. ,    0.9],       [ -54. ,  -90. ,   -3. ,    0.6],       [  16. , -101. ,    4. ,    1.2],       [  75. ,  -65. ,    2. ,    0.7],       [  54. ,   -5. ,    8. ,    0.6],       [  41. ,   31. ,    3. ,    0.7],       [   7. ,   50. ,   -1. ,    0.9],       [ -22. ,   41. ,    3. ,    1. ],       [ -50. ,   12. ,    5. ,    1.4],       [ -48. ,  -14. ,    4. ,    1.1],       [ -25. ,  -43. ,    5. ,    0.8],       [   7. ,  -49. ,    4. ,    1.2],       [  34. ,  -34. ,    2. ,    0.7],       [  60. ,    3. ,   -2. ,    0.6],       [  47. ,   39. ,    4. ,    0.9],       [  12. ,   60. ,    3. ,    1.1],       [ -26. ,   50. ,   -1. ,    1.3],       [ -60. ,   16. ,    3. ,    1.3],       [ -53. ,  -18. ,    5. ,    0.5],       [ -25. ,  -47. ,    3. ,    0.5],       [   6. ,  -56. ,   -1. ,    0.8],       [  44. ,  -34. ,    1. ,    0.9],       [  69. ,   -1. ,    2. ,    0.5],       [  49. ,   43. ,    2. ,    1.2],       [   6. ,   65. ,    0. ,    1.3],       [ -39. ,   60. ,    6. ,    1.4],       [ -63. ,   18. ,    1. ,    1.1],       [ -61. ,  -25. ,    3. ,    0.9],       [ -30. ,  -57. ,    2. ,    1.3],       [   7. ,  -69. ,    0. ,    1.2],       [  54. ,  -44. ,    1. ,    0.7],       [  78. ,   -1. ,    7. ,    1. ],       [  53. ,   46. ,    0. ,    1.2],       [  16. ,   78. ,   -2. ,    1.1],       [ -33. ,   60. ,    1. ,    0.6],       [ -70. ,   21. ,    1. ,    0.9],       [ -66. ,  -23. ,    3. ,    1.4],       [ -35. ,  -62. ,    0. ,    1.5],       [  17. ,  -75. ,    5. ,    1.4],       [  58. ,  -49. ,    7. ,    0.8],       [  88. ,    0. ,    8. ,    1.5],       [  63. ,   58. ,    7. ,    1.2],       [  11. ,   85. ,    6. ,    0.7],       [ -46. ,   71. ,    0. ,    1. ],       [ -79. ,   27. ,    0. ,    1.3],       [ -74. ,  -24. ,   -2. ,    0.7],       [ -40. ,  -71. ,   -1. ,    0.5],       [  16. ,  -81. ,    4. ,    0.5],       [  59. ,  -52. ,    0. ,    0.5],       [  91. ,   -2. ,    3. ,    1.1],       [  67. ,   62. ,    4. ,    1.5],       [  20. ,   90. ,   -2. ,    1.1],       [ -43. ,   80. ,    5. ,    1.3],       [ -86. ,   32. ,    3. ,    1. ],       [ -83. ,  -30. ,    3. ,    1.2],       [ -50. ,  -79. ,    1. ,    1.5],       [  13. ,  -86. ,    6. ,    1.5],       [  65. ,  -64. ,    5. ,    1.4],       [ 103. ,    1. ,    2. ,    0.8],       [  79. ,   60. ,    3. ,    1.3],       [  20. ,   98. ,    0. ,    0.8],       [ -51. ,   87. ,    1. ,    1.1],       [ -98. ,   36. ,    7. ,    1. ],       [ -93. ,  -30. ,    8. ,    1.3],       [ -49. ,  -84. ,    8. ,    0.9],       [  18. ,  -94. ,   -1. ,    1.5],       [  73. ,  -62. ,   -1. ,    0.8],       [  53. ,    3. ,    6. ,    0.6],       [  42. ,   27. ,   10. ,    0.8],       [  12. ,   50. ,   12. ,    1. ],       [ -23. ,   43. ,   10. ,    1. ],       [ -48. ,   18. ,    4. ,    1.2],       [ -49. ,  -14. ,   10. ,    1.3],       [ -28. ,  -40. ,    6. ,    1.1],       [   9. ,  -47. ,   10. ,    1.4],       [  34. ,  -31. ,    8. ,    0.5],       [  55. ,    0. ,    3. ,    1.4],       [  49. ,   33. ,    2. ,    0.8],       [   8. ,   61. ,    9. ,    1.1],       [ -25. ,   48. ,    2. ,    0.5],       [ -54. ,   17. ,    3. ,    1. ],       [ -53. ,  -16. ,   10. ,    0.9],       [ -28. ,  -54. ,    4. ,    1.4],       [   7. ,  -57. ,   11. ,    1.1],       [  43. ,  -41. ,    8. ,    0.6],       [  68. ,    3. ,   11. ,    0.9],       [  47. ,   39. ,    2. ,    1.2],       [  16. ,   62. ,    9. ,    1.3],       [ -31. ,   57. ,   12. ,    0.9],       [ -59. ,   23. ,    4. ,    1.4],       [ -63. ,  -23. ,    2. ,    1.2],       [ -30. ,  -55. ,    7. ,    0.6],       [  16. ,  -61. ,   10. ,    1.5],       [  53. ,  -40. ,    4. ,    1.1],       [  76. ,    3. ,    5. ,    1. ],       [  52. ,   48. ,    3. ,    0.7],       [  16. ,   72. ,   11. ,    1.4],       [ -38. ,   61. ,    4. ,    1.3],       [ -71. ,   28. ,    3. ,    1.2],       [ -67. ,  -23. ,    2. ,    1. ],       [ -39. ,  -69. ,    8. ,    1. ],       [  14. ,  -71. ,   12. ,    1.2],       [  58. ,  -51. ,    8. ,    1.1],       [  81. ,   -5. ,    3. ,    1.4],       [  63. ,   57. ,   11. ,    0.8],       [  18. ,   84. ,    3. ,    1.5],       [ -45. ,   67. ,   10. ,    1.1],       [ -74. ,   27. ,    6. ,    0.6],       [ -76. ,  -24. ,   10. ,    0.9],       [ -43. ,  -77. ,    6. ,    0.7],       [  18. ,  -83. ,    8. ,    0.7],       [  67. ,  -55. ,   10. ,    0.5],       [  92. ,    0. ,    5. ,    1.2],       [  70. ,   56. ,   10. ,    0.5],       [  16. ,   90. ,   11. ,    0.6],       [ -43. ,   82. ,    8. ,    0.9],       [ -85. ,   34. ,    9. ,    0.9],       [ -91. ,  -27. ,    7. ,    1.5],       [ -42. ,  -76. ,    8. ,    1. ],       [  16. ,  -87. ,    3. ,    1.4],       [  71. ,  -58. ,    8. ,    0.7],       [  97. ,    0. ,    6. ,    0.8],       [  72. ,   60. ,   12. ,    0.6],       [  17. ,   98. ,   11. ,    0.6],       [ -47. ,   83. ,    4. ,    1.3],       [ -98. ,   31. ,    9. ,    1. ],       [ -99. ,  -31. ,   10. ,    1.1],       [ -53. ,  -82. ,   11. ,    1.1],       [  17. ,  -99. ,    4. ,    1.2],       [  74. ,  -60. ,    9. ,    1. ],       [  47. ,   -1. ,    9. ,    1. ],       [  43. ,   34. ,   15. ,    0.7],       [   9. ,   48. ,   13. ,    0.7],       [ -21. ,   46. ,   14. ,    0.8],       [ -52. ,   12. ,    9. ,    0.9],       [ -52. ,  -19. ,    7. ,    1.1],       [ -28. ,  -43. ,   10. ,    0.7],       [  12. ,  -49. ,   14. ,    1.1],       [  38. ,  -37. ,   12. ,    1.5],       [  60. ,   -3. ,   13. ,    0.6],       [  46. ,   34. ,   11. ,    1.1],       [   6. ,   56. ,   11. ,    1.4],       [ -26. ,   52. ,   12. ,    0.7],       [ -56. ,   23. ,    9. ,    1. ],       [ -51. ,  -17. ,    7. ,    0.8],       [ -34. ,  -55. ,   14. ,    1.3],       [   6. ,  -56. ,   12. ,    1. ],       [  42. ,  -37. ,    9. ,    1. ],       [  70. ,    4. ,   10. ,    0.7],       [  47. ,   46. ,    9. ,    0.9],       [  10. ,   67. ,    9. ,    1.3],       [ -37. ,   60. ,   15. ,    1.2],       [ -64. ,   20. ,   15. ,    0.6],       [ -61. ,  -21. ,    8. ,    0.8],       [ -31. ,  -61. ,   15. ,    1.1],       [   8. ,  -64. ,   11. ,    0.8],       [  49. ,  -46. ,    7. ,    1. ],       [  72. ,   -4. ,    8. ,    1.2],       [  58. ,   46. ,   11. ,    0.9],       [  13. ,   72. ,   15. ,    1.1],       [ -34. ,   61. ,   13. ,    0.7],       [ -73. ,   21. ,    8. ,    0.8],       [ -71. ,  -28. ,    6. ,    1. ],       [ -40. ,  -68. ,   12. ,    0.7],       [  10. ,  -78. ,    6. ,    0.9],       [  55. ,  -45. ,    9. ,    0.7],       [  79. ,   -5. ,   13. ,    1.1],       [  62. ,   55. ,    8. ,    1.2],       [  11. ,   82. ,   12. ,    0.8],       [ -47. ,   69. ,    8. ,    1.1],       [ -76. ,   29. ,   11. ,    1.2],       [ -75. ,  -27. ,   11. ,    1.5],       [ -47. ,  -75. ,   10. ,    1.3],       [  14. ,  -85. ,    7. ,    0.5],       [  68. ,  -53. ,    8. ,    0.7],       [  95. ,   -2. ,   15. ,    0.5],       [  71. ,   62. ,   14. ,    1.2],       [  19. ,   91. ,   13. ,    1.4],       [ -50. ,   79. ,   11. ,    1.4],       [ -91. ,   33. ,   11. ,    1.3],       [ -86. ,  -31. ,   10. ,    0.8],       [ -48. ,  -83. ,    9. ,    0.5],       [  19. ,  -89. ,   10. ,    0.7],       [  69. ,  -57. ,   14. ,    0.8],       [ 104. ,    3. ,    7. ,    1.4],       [  74. ,   66. ,   15. ,    1.2],       [  21. ,  102. ,   10. ,    1.4],       [ -47. ,   90. ,   15. ,    0.6],       [ -94. ,   35. ,    6. ,    0.8],       [ -93. ,  -34. ,    7. ,    1. ],       [ -47. ,  -82. ,   12. ,    1.1],       [  15. , -100. ,    9. ,    0.7],       [  78. ,  -64. ,   15. ,    0.7],       [  46. ,   -4. ,   19. ,    0.7],       [  42. ,   29. ,   15. ,    0.7],       [  12. ,   49. ,   17. ,    1.1],       [ -25. ,   47. ,    9. ,    0.5],       [ -43. ,   12. ,   13. ,    1.3],       [ -48. ,  -19. ,   15. ,    1.2],       [ -28. ,  -42. ,   15. ,    1.4],       [  10. ,  -50. ,   18. ,    1.3],       [  33. ,  -29. ,   11. ,    0.6],       [  61. ,   -5. ,   17. ,    0.8],       [  41. ,   40. ,   14. ,    0.7],       [  14. ,   61. ,    9. ,    0.7],       [ -32. ,   53. ,   17. ,    1. ],       [ -55. ,   20. ,   11. ,    1.3],       [ -53. ,  -21. ,   12. ,    1.4],       [ -26. ,  -49. ,   18. ,    0.7],       [  12. ,  -55. ,   18. ,    1.2],       [  47. ,  -38. ,   12. ,    1. ],       [  63. ,   -5. ,   17. ,    1.3],       [  48. ,   38. ,   12. ,    1.2],       [  14. ,   63. ,   12. ,    1.1],       [ -32. ,   60. ,   17. ,    0.7],       [ -67. ,   20. ,   18. ,    1.3],       [ -61. ,  -20. ,   13. ,    0.6],       [ -38. ,  -58. ,   12. ,    0.7],       [  11. ,  -66. ,   17. ,    0.9],       [  53. ,  -44. ,    9. ,    0.6],       [  76. ,   -2. ,   14. ,    1.5],       [  60. ,   48. ,   13. ,    1.4],       [  13. ,   71. ,   15. ,    0.8],       [ -43. ,   61. ,   11. ,    0.6],       [ -76. ,   22. ,   13. ,    0.8],       [ -70. ,  -23. ,   15. ,    0.9],       [ -34. ,  -65. ,   13. ,    0.6],       [  17. ,  -78. ,   18. ,    0.8],       [  62. ,  -44. ,   16. ,    1. ],       [  83. ,    2. ,   11. ,    1.3],       [  63. ,   52. ,   11. ,    0.5],       [  12. ,   82. ,   13. ,    1.1],       [ -43. ,   70. ,   17. ,    1.4],       [ -76. ,   24. ,   16. ,    0.8],       [ -77. ,  -32. ,   11. ,    1.4],       [ -42. ,  -70. ,   18. ,    0.9],       [  17. ,  -85. ,   10. ,    1.3],       [  61. ,  -53. ,   12. ,    1.4],       [  94. ,   -5. ,   10. ,    0.7],       [  72. ,   61. ,   17. ,    1.3],       [  18. ,   92. ,   16. ,    1.4],       [ -44. ,   83. ,   14. ,    1.3],       [ -92. ,   30. ,   15. ,    1.2],       [ -89. ,  -32. ,   17. ,    1.3],       [ -42. ,  -79. ,   14. ,    1.2],       [  12. ,  -88. ,    9. ,    0.8],       [  66. ,  -60. ,   17. ,    0.9],       [ 104. ,    3. ,   15. ,    1.5],       [  76. ,   60. ,   10. ,    0.8],       [  17. ,  101. ,   11. ,    1.4],       [ -48. ,   91. ,   17. ,    1.3],       [ -99. ,   34. ,   11. ,    0.6],       [ -99. ,  -34. ,   18. ,    0.8],       [ -48. ,  -89. ,   17. ,    1. ],       [  14. ,  -94. ,   17. ,    0.9],       [  78. ,  -62. ,   11. ,    1.2],       [  49. ,    0. ,   14. ,    0.7],       [  35. ,   29. ,   22. ,    1.5],       [   4. ,   47. ,   17. ,    0.6],       [ -23. ,   44. ,   19. ,    0.6],       [ -51. ,   16. ,   18. ,    1.3],       [ -47. ,  -16. ,   14. ,    0.8],       [ -21. ,  -43. ,   23. ,    1.1],       [  10. ,  -52. ,   20. ,    1.2],       [  37. ,  -29. ,   14. ,    1.4],       [  56. ,    2. ,   19. ,    0.6],       [  43. ,   32. ,   21. ,    1. ],       [  11. ,   55. ,   15. ,    1. ],       [ -34. ,   51. ,   21. ,    0.8],       [ -51. ,   17. ,   14. ,    0.8],       [ -58. ,  -25. ,   20. ,    1.5],       [ -31. ,  -51. ,   17. ,    1.4],       [   9. ,  -55. ,   22. ,    0.8],       [  41. ,  -36. ,   20. ,    1.4],       [  68. ,    2. ,   14. ,    1.2],       [  54. ,   44. ,   19. ,    1.1],       [   8. ,   70. ,   19. ,    1.2],       [ -30. ,   56. ,   17. ,    0.8],       [ -65. ,   18. ,   23. ,    0.5],       [ -60. ,  -22. ,   20. ,    0.7],       [ -38. ,  -60. ,   19. ,    0.6],       [  15. ,  -62. ,   15. ,    1.2],       [  53. ,  -42. ,   18. ,    1.1],       [  73. ,   -4. ,   14. ,    0.8],       [  60. ,   51. ,   20. ,    0.8],       [  15. ,   70. ,   22. ,    1.2],       [ -37. ,   67. ,   20. ,    1. ],       [ -75. ,   28. ,   16. ,    1.3],       [ -68. ,  -31. ,   22. ,    0.9],       [ -33. ,  -70. ,   22. ,    1.4],       [  11. ,  -74. ,   17. ,    1.4],       [  62. ,  -52. ,   20. ,    1.4],       [  88. ,    0. ,   14. ,    1.4],       [  64. ,   48. ,   16. ,    1.4],       [  19. ,   86. ,   17. ,    0.5],       [ -44. ,   69. ,   21. ,    1.5],       [ -76. ,   30. ,   14. ,    1. ],       [ -78. ,  -24. ,   22. ,    1. ],       [ -38. ,  -77. ,   20. ,    0.9],       [  18. ,  -79. ,   15. ,    0.7],       [  64. ,  -49. ,   15. ,    0.9],       [  95. ,    1. ,   16. ,    1.5],       [  66. ,   54. ,   17. ,    1.5],       [  16. ,   87. ,   22. ,    0.6],       [ -47. ,   83. ,   13. ,    1.2],       [ -88. ,   29. ,   23. ,    1.4],       [ -87. ,  -33. ,   16. ,    1.4],       [ -46. ,  -79. ,   20. ,    1.4],       [  17. ,  -86. ,   18. ,    0.9],       [  71. ,  -59. ,   13. ,    0.6],       [ 100. ,   -2. ,   16. ,    1.4],       [  78. ,   62. ,   16. ,    0.9],       [  14. ,   99. ,   15. ,    0.9],       [ -47. ,   85. ,   19. ,    0.7],       [ -92. ,   37. ,   23. ,    0.8],       [ -95. ,  -33. ,   22. ,    0.7],       [ -55. ,  -92. ,   14. ,    1.5],       [  21. ,  -95. ,   20. ,    0.9],       [  78. ,  -68. ,   17. ,    0.7],       [  49. ,    3. ,   26. ,    1. ],       [  39. ,   32. ,   23. ,    0.7],       [   4. ,   49. ,   24. ,    1.3],       [ -27. ,   43. ,   19. ,    1.5],       [ -48. ,   12. ,   17. ,    0.6],       [ -44. ,  -21. ,   23. ,    1. ],       [ -27. ,  -48. ,   24. ,    1.2],       [  10. ,  -50. ,   22. ,    1.3],       [  43. ,  -31. ,   23. ,    0.6],       [  54. ,   -2. ,   21. ,    1.3],       [  46. ,   36. ,   24. ,    0.8],       [   6. ,   59. ,   21. ,    0.8],       [ -34. ,   51. ,   18. ,    0.8],       [ -60. ,   20. ,   19. ,    1.3],       [ -56. ,  -22. ,   18. ,    0.7],       [ -34. ,  -52. ,   23. ,    1.1],       [  14. ,  -57. ,   23. ,    1.3],       [  39. ,  -39. ,   21. ,    0.7],       [  65. ,   -2. ,   26. ,    1.3],       [  52. ,   38. ,   19. ,    1. ],       [  10. ,   61. ,   22. ,    0.9],       [ -31. ,   58. ,   24. ,    1.2],       [ -61. ,   26. ,   23. ,    0.7],       [ -64. ,  -27. ,   26. ,    0.9],       [ -32. ,  -59. ,   20. ,    1.3],       [  11. ,  -63. ,   25. ,    0.9],       [  48. ,  -47. ,   24. ,    0.7],       [  71. ,   -2. ,   21. ,    0.7],       [  52. ,   48. ,   20. ,    0.6],       [  10. ,   70. ,   18. ,    1.3],       [ -40. ,   66. ,   23. ,    1.2],       [ -70. ,   29. ,   20. ,    1.1],       [ -75. ,  -26. ,   26. ,    1.1],       [ -33. ,  -70. ,   18. ,    1.4],       [  15. ,  -75. ,   16. ,    1.4],       [  58. ,  -48. ,   23. ,    0.5],       [  85. ,   -5. ,   25. ,    1.5],       [  59. ,   55. ,   17. ,    1.3],       [  18. ,   78. ,   17. ,    1.3],       [ -46. ,   73. ,   18. ,    1.1],       [ -83. ,   27. ,   23. ,    1. ],       [ -84. ,  -29. ,   25. ,    1.5],       [ -38. ,  -71. ,   17. ,    1.3],       [  18. ,  -81. ,   23. ,    1.3],       [  64. ,  -53. ,   18. ,    1.4],       [  93. ,   -2. ,   20. ,    1.3],       [  74. ,   58. ,   24. ,    1.2],       [  14. ,   89. ,   23. ,    1.4],       [ -49. ,   78. ,   17. ,    1.2],       [ -87. ,   32. ,   23. ,    0.8],       [ -90. ,  -37. ,   20. ,    1.5],       [ -51. ,  -76. ,   22. ,    1.2],       [  15. ,  -94. ,   20. ,    0.7],       [  71. ,  -60. ,   23. ,    0.6],       [  99. ,   -1. ,   25. ,    0.8],       [  80. ,   62. ,   23. ,    0.7],       [  19. ,   97. ,   17. ,    1. ],       [ -52. ,   88. ,   20. ,    1.5],       [ -97. ,   37. ,   20. ,    1. ],       [ -92. ,  -39. ,   18. ,    0.6],       [ -47. ,  -87. ,   22. ,    0.6],       [  15. , -101. ,   18. ,    0.8],       [  80. ,  -66. ,   20. ,    1. ],       [  50. ,    3. ,   26. ,    1.3],       [  33. ,   33. ,   26. ,    1.3],       [  13. ,   44. ,   29. ,    1.3],       [ -23. ,   44. ,   28. ,    0.7],       [ -46. ,   12. ,   27. ,    1.2],       [ -51. ,  -16. ,   27. ,    1.3],       [ -28. ,  -39. ,   25. ,    1.5],       [   9. ,  -46. ,   29. ,    1.2],       [  33. ,  -33. ,   20. ,    1.1],       [  58. ,    0. ,   28. ,    0.7],       [  44. ,   40. ,   25. ,    1.3],       [  12. ,   59. ,   26. ,    0.7],       [ -31. ,   53. ,   29. ,    1.5],       [ -54. ,   24. ,   25. ,    0.6],       [ -53. ,  -22. ,   29. ,    0.9],       [ -29. ,  -53. ,   25. ,    0.8],       [   6. ,  -61. ,   24. ,    0.7],       [  39. ,  -34. ,   28. ,    1.1],       [  61. ,   -3. ,   28. ,    0.7],       [  49. ,   38. ,   25. ,    1.3],       [  10. ,   69. ,   25. ,    1.4],       [ -39. ,   59. ,   24. ,    0.9],       [ -62. ,   22. ,   21. ,    0.8],       [ -65. ,  -25. ,   27. ,    0.9],       [ -32. ,  -55. ,   25. ,    0.6],       [  13. ,  -61. ,   25. ,    0.9],       [  54. ,  -45. ,   25. ,    1. ],       [  72. ,    4. ,   28. ,    1. ],       [  52. ,   43. ,   26. ,    0.7],       [  11. ,   78. ,   27. ,    0.6],       [ -34. ,   65. ,   25. ,    1.5],       [ -67. ,   25. ,   25. ,    0.7],       [ -70. ,  -29. ,   29. ,    1.2],       [ -36. ,  -66. ,   25. ,    1. ],       [  11. ,  -78. ,   20. ,    1.4],       [  56. ,  -52. ,   29. ,    1.3],       [  85. ,   -4. ,   23. ,    1.3],       [  64. ,   53. ,   28. ,    0.8],       [  13. ,   78. ,   29. ,    0.9],       [ -38. ,   67. ,   26. ,    0.6],       [ -82. ,   23. ,   29. ,    1.2],       [ -82. ,  -33. ,   23. ,    0.9],       [ -39. ,  -74. ,   24. ,    0.6],       [  16. ,  -81. ,   23. ,    0.5],       [  65. ,  -57. ,   28. ,    0.8],       [  93. ,   -3. ,   28. ,    1.1],       [  71. ,   54. ,   25. ,    0.9],       [  16. ,   85. ,   27. ,    1. ],       [ -44. ,   79. ,   20. ,    1.3],       [ -88. ,   35. ,   30. ,    1.1],       [ -91. ,  -37. ,   24. ,    1.2],       [ -44. ,  -82. ,   26. ,    0.8],       [  12. ,  -93. ,   26. ,    0.9],       [  71. ,  -56. ,   24. ,    0.5],       [  97. ,    1. ,   28. ,    1.1],       [  76. ,   69. ,   21. ,    0.6],       [  16. ,  102. ,   22. ,    1.4],       [ -53. ,   85. ,   25. ,    1.3],       [ -92. ,   37. ,   27. ,    0.5],       [ -92. ,  -37. ,   22. ,    1.1],       [ -54. ,  -90. ,   21. ,    1.1],       [  18. ,  -99. ,   27. ,    1. ],       [  74. ,  -64. ,   24. ,    0.8],       [  46. ,   -3. ,   26. ,    1.2],       [  34. ,   28. ,   24. ,    0.8],       [   5. ,   51. ,   33. ,    0.9],       [ -24. ,   41. ,   32. ,    0.8],       [ -47. ,   13. ,   33. ,    0.6],       [ -50. ,  -17. ,   26. ,    0.6],       [ -30. ,  -44. ,   31. ,    1.3],       [   7. ,  -50. ,   28. ,    1.3],       [  36. ,  -30. ,   32. ,    0.5],       [  60. ,    2. ,   24. ,    1.2],       [  41. ,   35. ,   28. ,    1.4],       [   9. ,   56. ,   27. ,    0.7],       [ -27. ,   50. ,   32. ,    1.2],       [ -59. ,   22. ,   32. ,    1.3],       [ -54. ,  -24. ,   25. ,    0.7],       [ -30. ,  -54. ,   28. ,    0.7],       [   9. ,  -57. ,   31. ,    0.9],       [  46. ,  -37. ,   27. ,    1.5],       [  64. ,    2. ,   29. ,    0.7],       [  52. ,   39. ,   27. ,    0.9],       [  16. ,   69. ,   33. ,    0.9],       [ -31. ,   55. ,   24. ,    0.9],       [ -67. ,   25. ,   32. ,    0.8],       [ -68. ,  -25. ,   32. ,    0.8],       [ -34. ,  -56. ,   33. ,    1.4],       [  14. ,  -71. ,   29. ,    0.6],       [  54. ,  -45. ,   29. ,    1.3],       [  73. ,    3. ,   28. ,    0.6],       [  60. ,   46. ,   30. ,    0.6],       [   9. ,   72. ,   29. ,    0.7],       [ -38. ,   61. ,   29. ,    1.2],       [ -66. ,   27. ,   33. ,    0.9],       [ -73. ,  -21. ,   25. ,    1.1],       [ -39. ,  -63. ,   28. ,    1.1],       [   8. ,  -79. ,   28. ,    1.1],       [  59. ,  -51. ,   25. ,    1.3],       [  85. ,   -1. ,   24. ,    0.7],       [  62. ,   57. ,   33. ,    1. ],       [  16. ,   81. ,   28. ,    0.7],       [ -44. ,   67. ,   28. ,    1.4],       [ -76. ,   32. ,   27. ,    1.4],       [ -74. ,  -28. ,   26. ,    1.5],       [ -46. ,  -73. ,   32. ,    1.4],       [  12. ,  -78. ,   29. ,    0.6],       [  64. ,  -56. ,   30. ,    1.1],       [  93. ,    0. ,   31. ,    1.2],       [  74. ,   59. ,   27. ,    0.6],       [  19. ,   92. ,   29. ,    0.7],       [ -44. ,   75. ,   26. ,    1.3],       [ -91. ,   36. ,   30. ,    0.5],       [ -82. ,  -28. ,   24. ,    1.5],       [ -45. ,  -78. ,   28. ,    1.4],       [  14. ,  -93. ,   28. ,    0.5],       [  73. ,  -56. ,   32. ,    0.6],       [ 102. ,   -3. ,   32. ,    1.2],       [  72. ,   68. ,   24. ,    0.5],       [  14. ,  101. ,   26. ,    1. ],       [ -51. ,   90. ,   30. ,    1.2],       [ -92. ,   38. ,   25. ,    1.4],       [ -97. ,  -36. ,   26. ,    1.3],       [ -46. ,  -84. ,   28. ,    0.8],       [  21. , -103. ,   26. ,    1.1],       [  74. ,  -65. ,   33. ,    0.5],       [  47. ,    0. ,   30. ,    0.9],       [  33. ,   29. ,   28. ,    1. ],       [   7. ,   51. ,   31. ,    1.3],       [ -26. ,   38. ,   34. ,    0.8],       [ -49. ,   13. ,   36. ,    1. ],       [ -45. ,  -14. ,   35. ,    1.4],       [ -28. ,  -39. ,   35. ,    0.7],       [   9. ,  -51. ,   34. ,    1.1],       [  41. ,  -28. ,   34. ,    1. ],       [  58. ,   -4. ,   32. ,    1.3],       [  48. ,   41. ,   37. ,    1.2],       [  11. ,   59. ,   37. ,    1.5],       [ -33. ,   46. ,   33. ,    0.6],       [ -57. ,   21. ,   32. ,    1.3],       [ -59. ,  -20. ,   30. ,    1.4],       [ -29. ,  -49. ,   32. ,    0.9],       [   8. ,  -60. ,   31. ,    0.9],       [  47. ,  -35. ,   32. ,    0.7],       [  67. ,   -1. ,   33. ,    0.7],       [  55. ,   44. ,   32. ,    1.2],       [  12. ,   62. ,   37. ,    0.9],       [ -33. ,   58. ,   29. ,    1.5],       [ -67. ,   22. ,   28. ,    1.1],       [ -62. ,  -21. ,   31. ,    1.5],       [ -32. ,  -54. ,   30. ,    0.6],       [  12. ,  -69. ,   30. ,    0.7],       [  52. ,  -44. ,   33. ,    0.9],       [  79. ,    3. ,   28. ,    0.8],       [  55. ,   43. ,   37. ,    0.5],       [  17. ,   77. ,   33. ,    1.4],       [ -37. ,   64. ,   35. ,    1.3],       [ -76. ,   28. ,   31. ,    1.2],       [ -70. ,  -26. ,   37. ,    1.3],       [ -39. ,  -64. ,   30. ,    0.8],       [  15. ,  -72. ,   33. ,    0.7],       [  54. ,  -51. ,   32. ,    1.4],       [  80. ,    4. ,   32. ,    0.5],       [  59. ,   58. ,   35. ,    0.7],       [  16. ,   82. ,   32. ,    0.5],       [ -41. ,   72. ,   33. ,    1.3],       [ -82. ,   29. ,   36. ,    0.8],       [ -81. ,  -25. ,   31. ,    0.7],       [ -44. ,  -71. ,   35. ,    0.8],       [  12. ,  -83. ,   36. ,    0.8],       [  67. ,  -54. ,   29. ,    0.8],       [  93. ,    1. ,   30. ,    1.4],       [  72. ,   62. ,   33. ,    0.5],       [  11. ,   88. ,   34. ,    1. ],       [ -49. ,   75. ,   33. ,    0.8],       [ -82. ,   36. ,   30. ,    0.8],       [ -89. ,  -35. ,   37. ,    1.2],       [ -43. ,  -78. ,   34. ,    0.8],       [  14. ,  -96. ,   36. ,    1.3],       [  72. ,  -56. ,   35. ,    0.8],       [ 101. ,   -3. ,   37. ,    0.8],       [  77. ,   66. ,   34. ,    1.2],       [  18. ,   97. ,   30. ,    1.4],       [ -51. ,   87. ,   28. ,    1. ],       [ -90. ,   30. ,   37. ,    1.1],       [ -96. ,  -35. ,   34. ,    0.8],       [ -49. ,  -85. ,   30. ,    1. ],       [  15. , -102. ,   28. ,    1.4],       [  76. ,  -69. ,   33. ,    0.7],       [  51. ,   -3. ,   41. ,    1.5],       [  38. ,   27. ,   39. ,    1.1],       [   9. ,   52. ,   41. ,    1.1],       [ -30. ,   38. ,   41. ,    1.1],       [ -43. ,   13. ,   37. ,    0.8],       [ -50. ,  -16. ,   35. ,    1. ],       [ -30. ,  -40. ,   32. ,    1.1],       [  11. ,  -52. ,   32. ,    0.8],       [  37. ,  -31. ,   40. ,    0.8],       [  59. ,   -1. ,   34. ,    0.5],       [  48. ,   34. ,   32. ,    1. ],       [  11. ,   54. ,   32. ,    0.9],       [ -31. ,   49. ,   33. ,    1.2],       [ -59. ,   15. ,   36. ,    0.9],       [ -54. ,  -25. ,   33. ,    1. ],       [ -29. ,  -50. ,   33. ,    0.5],       [  11. ,  -54. ,   32. ,    1.1],       [  39. ,  -41. ,   34. ,    0.9],       [  65. ,   -1. ,   34. ,    1.2],       [  53. ,   39. ,   37. ,    1.4],       [   7. ,   62. ,   39. ,    1.2],       [ -33. ,   56. ,   36. ,    1.1],       [ -64. ,   23. ,   32. ,    1.1],       [ -67. ,  -28. ,   34. ,    0.8],       [ -34. ,  -62. ,   35. ,    0.7],       [  10. ,  -66. ,   41. ,    0.8],       [  55. ,  -39. ,   38. ,    1.2],       [  75. ,   -5. ,   37. ,    0.7],       [  61. ,   44. ,   37. ,    0.9],       [  12. ,   75. ,   37. ,    0.5],       [ -43. ,   62. ,   32. ,    0.9],       [ -69. ,   26. ,   35. ,    1.3],       [ -72. ,  -29. ,   36. ,    1.4],       [ -39. ,  -67. ,   39. ,    1.2],       [  10. ,  -73. ,   34. ,    1.5],       [  56. ,  -44. ,   35. ,    0.5],       [  81. ,    2. ,   39. ,    1.4],       [  63. ,   50. ,   38. ,    1.4],       [  18. ,   84. ,   39. ,    1. ],       [ -45. ,   69. ,   37. ,    0.9],       [ -74. ,   30. ,   33. ,    0.8],       [ -74. ,  -28. ,   39. ,    1. ],       [ -37. ,  -74. ,   40. ,    0.6],       [  12. ,  -86. ,   35. ,    1.1],       [  65. ,  -50. ,   32. ,    0.6],       [  94. ,   -3. ,   34. ,    1.4],       [  65. ,   61. ,   37. ,    1.4],       [  14. ,   92. ,   40. ,    0.6],       [ -45. ,   79. ,   35. ,    0.9],       [ -88. ,   32. ,   41. ,    1.4],       [ -82. ,  -30. ,   32. ,    1.1],       [ -47. ,  -83. ,   35. ,    0.9],       [  12. ,  -87. ,   33. ,    1.4],       [  72. ,  -64. ,   39. ,    0.7],       [ 102. ,   -2. ,   36. ,    1. ],       [  74. ,   67. ,   39. ,    1.1],       [  17. ,  102. ,   37. ,    1.3],       [ -53. ,   84. ,   33. ,    0.6],       [ -93. ,   30. ,   35. ,    1.5],       [ -90. ,  -30. ,   32. ,    1.3],       [ -52. ,  -90. ,   38. ,    0.9],       [  21. , -102. ,   31. ,    1.2],       [  72. ,  -63. ,   36. ,    1.1],       [  53. ,   -2. ,   42. ,    0.6],       [  42. ,   31. ,   36. ,    1. ],       [   3. ,   46. ,   35. ,    1.1],       [ -24. ,   45. ,   43. ,    0.7],       [ -50. ,   18. ,   38. ,    0.8],       [ -43. ,  -18. ,   44. ,    1.3],       [ -21. ,  -45. ,   37. ,    0.6],       [  12. ,  -50. ,   38. ,    0.9],       [  42. ,  -35. ,   35. ,    1. ],       [  53. ,    3. ,   42. ,    1.1],       [  44. ,   39. ,   38. ,    0.9],       [  13. ,   54. ,   37. ,    0.9],       [ -35. ,   45. ,   38. ,    0.6],       [ -52. ,   17. ,   40. ,    0.7],       [ -54. ,  -17. ,   42. ,    1.4],       [ -30. ,  -56. ,   36. ,    1.5],       [  12. ,  -56. ,   35. ,    1.3],       [  45. ,  -39. ,   35. ,    1. ],       [  63. ,    2. ,   35. ,    0.8],       [  47. ,   43. ,   39. ,    1. ],       [  11. ,   63. ,   44. ,    0.6],       [ -35. ,   62. ,   44. ,    0.6],       [ -65. ,   25. ,   44. ,    1.5],       [ -65. ,  -23. ,   38. ,    0.7],       [ -30. ,  -62. ,   43. ,    0.8],       [  14. ,  -62. ,   37. ,    0.8],       [  54. ,  -44. ,   36. ,    0.5],       [  71. ,   -3. ,   36. ,    1.4],       [  55. ,   50. ,   40. ,    0.8],       [   8. ,   73. ,   40. ,    1.4],       [ -35. ,   67. ,   41. ,    1.2],       [ -66. ,   27. ,   35. ,    1.1],       [ -76. ,  -22. ,   42. ,    0.9],       [ -39. ,  -65. ,   43. ,    0.7],       [  10. ,  -77. ,   40. ,    0.6],       [  54. ,  -52. ,   41. ,    1. ],       [  82. ,   -4. ,   44. ,    0.7],       [  68. ,   52. ,   37. ,    1. ],       [  11. ,   81. ,   44. ,    0.9],       [ -38. ,   71. ,   41. ,    1.2],       [ -79. ,   28. ,   40. ,    0.9],       [ -81. ,  -31. ,   40. ,    0.9],       [ -44. ,  -73. ,   41. ,    1.3],       [   9. ,  -83. ,   44. ,    0.7],       [  60. ,  -50. ,   39. ,    0.9],       [  90. ,   -4. ,   42. ,    1.1],       [  66. ,   57. ,   41. ,    0.8],       [  13. ,   91. ,   39. ,    1.5],       [ -50. ,   80. ,   44. ,    0.5],       [ -88. ,   28. ,   39. ,    1.4],       [ -90. ,  -33. ,   40. ,    0.8],       [ -51. ,  -80. ,   36. ,    0.8],       [  15. ,  -86. ,   37. ,    1.4],       [  70. ,  -55. ,   43. ,    1.2],       [ 101. ,    4. ,   44. ,    1.4],       [  74. ,   67. ,   40. ,    1.5],       [  17. ,   98. ,   43. ,    1.1],       [ -47. ,   85. ,   41. ,    1.2],       [ -96. ,   31. ,   44. ,    1. ],       [ -90. ,  -36. ,   35. ,    0.8],       [ -49. ,  -89. ,   44. ,    0.8],       [  16. ,  -96. ,   43. ,    1.2],       [  80. ,  -61. ,   43. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.9,  2.7,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4.8]),0)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2. ,  3.1,  3.8,
        5.1,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([ 6.4,  4. ,  7.9])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 6.400000
        pt2[...,1] /= 4.000000
        pt2[...,2] /= 7.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p6_rational_C1_periodic(self):
        controlpoints = np.array([[ 104. ,   -3. ,    0. ,    0.7],
       [  84. ,   53. ,    4. ,    1.2],
       [  41. ,   91. ,    3. ,    1.4],
       [ -11. ,   94. ,    4. ,    1.4],
       [ -66. ,   74. ,   -5. ,    1.4],
       [ -97. ,   29. ,   -2. ,    1.1],
       [-101. ,  -29. ,    0. ,    1.2],
       [ -65. ,  -75. ,    1. ,    0.7],
       [ -11. , -102. ,   -5. ,    0.6],
       [  37. ,  -93. ,   -4. ,    1.3],
       [  83. ,  -58. ,   -2. ,    0.9]])
        basis0 = BSplineBasis(6, np.array([ -2.1,  -1.1,   0. ,   0. ,   0. ,   0. ,   0.7,   2.4,   2.8,
         3.9,   5.2,   5.9,   6.9,   8. ,   8. ,   8. ,   8. ,   8.7,  10.4]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 += np.array([ 7.9,  0. ,  6.8])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 7.900000
        pt2[...,1] -= 0.000000
        pt2[...,2] -= 6.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p6_rational_C1_periodic(self):
        controlpoints = np.array([[  97. ,    3. ,   -3. ,    1.2],
       [  57. ,   75. ,    1. ,    1.1],
       [ -21. ,  101. ,   -1. ,    0.9],
       [ -93. ,   38. ,    4. ,    0.7],
       [ -95. ,  -46. ,    0. ,    1. ],
       [ -23. ,  -96. ,    1. ,    1.3],
       [  64. ,  -75. ,   -4. ,    0.9]])
        basis0 = BSplineBasis(6, np.array([-2. , -0.8,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  3.2,  4. ,  4. ,
        4. ,  4. ,  4.9,  6. ]),1)
        crv  = Curve(basis0, controlpoints,True)
        crv2 = crv.clone()
        crv2 *= np.array([ 10.2,  10.6,   2.5])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 10.200000
        pt2[...,1] /= 10.600000
        pt2[...,2] /= 2.500000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p77_rational_C1_periodic(self):
        controlpoints = np.array([[  61. ,    2. ,    1. ,    1. ],       [  47. ,   40. ,    4. ,    1.4],       [  11. ,   54. ,   -3. ,    0.8],       [ -29. ,   55. ,    2. ,    0.8],       [ -53. ,   22. ,   -1. ,    0.9],       [ -54. ,  -23. ,    2. ,    0.6],       [ -26. ,  -52. ,   -1. ,    0.5],       [  12. ,  -62. ,    1. ,    1.4],       [  48. ,  -38. ,   -2. ,    1.3],       [  61. ,   -1. ,   -2. ,    1.1],       [  45. ,   42. ,    0. ,    1.4],       [   8. ,   65. ,    1. ,    0.7],       [ -31. ,   57. ,    4. ,    1.4],       [ -58. ,   23. ,   -1. ,    1.3],       [ -61. ,  -20. ,   -3. ,    1.4],       [ -35. ,  -58. ,    2. ,    1.1],       [   8. ,  -63. ,    1. ,    1.1],       [  44. ,  -39. ,    4. ,    0.8],       [  69. ,   -1. ,   -2. ,    0.9],       [  53. ,   42. ,   -3. ,    1.1],       [   9. ,   69. ,   -1. ,    1.1],       [ -36. ,   56. ,    0. ,    1.2],       [ -68. ,   25. ,   -2. ,    0.7],       [ -63. ,  -24. ,   -5. ,    1.2],       [ -31. ,  -61. ,   -4. ,    1.3],       [  11. ,  -64. ,   -2. ,    0.5],       [  57. ,  -42. ,    1. ,    1.4],       [  77. ,    2. ,    0. ,    0.9],       [  55. ,   50. ,   -5. ,    1. ],       [  14. ,   68. ,    0. ,    1.2],       [ -33. ,   65. ,   -4. ,    0.7],       [ -70. ,   21. ,   -3. ,    0.7],       [ -69. ,  -23. ,   -3. ,    1.4],       [ -34. ,  -64. ,   -4. ,    0.8],       [  15. ,  -70. ,   -5. ,    1.3],       [  58. ,  -49. ,   -4. ,    0.8],       [  81. ,    2. ,    0. ,    0.8],       [  57. ,   46. ,    2. ,    1.1],       [   9. ,   73. ,   -5. ,    0.8],       [ -44. ,   65. ,   -3. ,    0.7],       [ -72. ,   23. ,   -5. ,    0.7],       [ -72. ,  -22. ,    3. ,    1.4],       [ -34. ,  -72. ,   -1. ,    0.9],       [  13. ,  -77. ,   -5. ,    0.6],       [  55. ,  -46. ,   -4. ,    0.8],       [  81. ,   -2. ,    4. ,    0.9],       [  58. ,   54. ,    0. ,    0.7],       [  19. ,   85. ,    3. ,    1.5],       [ -43. ,   68. ,   -4. ,    1.4],       [ -78. ,   31. ,   -1. ,    1. ],       [ -78. ,  -32. ,    2. ,    0.9],       [ -44. ,  -69. ,    1. ,    0.8],       [  10. ,  -84. ,    1. ,    0.6],       [  63. ,  -51. ,    1. ,    1.2],       [  90. ,    1. ,   -1. ,    1.4],       [  71. ,   56. ,   -2. ,    0.6],       [  13. ,   83. ,    4. ,    1.3],       [ -46. ,   74. ,    4. ,    1.3],       [ -78. ,   33. ,    0. ,    1.2],       [ -86. ,  -28. ,   -1. ,    1.1],       [ -40. ,  -74. ,   -3. ,    0.9],       [  15. ,  -88. ,   -1. ,    1.1],       [  64. ,  -54. ,   -4. ,    0.9],       [  92. ,    0. ,    3. ,    1.4],       [  71. ,   55. ,   -4. ,    1.1],       [  11. ,   92. ,   -4. ,    1.1],       [ -47. ,   79. ,   -3. ,    1.2],       [ -85. ,   34. ,   -5. ,    1.3],       [ -85. ,  -33. ,    1. ,    1.2],       [ -50. ,  -80. ,    1. ,    1. ],       [  19. ,  -93. ,   -3. ,    0.9],       [  67. ,  -58. ,    4. ,    1.4],       [ 100. ,   -1. ,    3. ,    1.4],       [  76. ,   64. ,   -2. ,    1.2],       [  19. ,   95. ,   -4. ,    0.9],       [ -47. ,   87. ,    0. ,    1.3],       [ -89. ,   30. ,    4. ,    1.4],       [ -92. ,  -38. ,   -3. ,    1.4],       [ -50. ,  -83. ,   -1. ,    1.4],       [  14. ,  -99. ,   -3. ,    1.2],       [  72. ,  -58. ,   -3. ,    0.5],       [  99. ,    1. ,    4. ,    1.5],       [  72. ,   59. ,   -4. ,    1.3],       [  15. ,  103. ,   -3. ,    1. ],       [ -55. ,   91. ,   -1. ,    1.4],       [ -98. ,   36. ,   -4. ,    1.1],       [ -97. ,  -38. ,   -3. ,    1.2],       [ -53. ,  -91. ,    4. ,    1.4],       [  15. ,  -98. ,    0. ,    0.7],       [  80. ,  -64. ,   -3. ,    1. ]])
        basis0 = BSplineBasis(7, np.array([-2.1, -0.6,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.1,  2.9,  4.4,
        5. ,  5. ,  5. ,  5. ,  5. ,  5.8,  7.1]),1)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2.2,  3.1,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 += np.array([ 8.4,  0.6,  2. ])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 8.400000
        pt2[...,1] -= 0.600000
        pt2[...,2] -= 2.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p55_rational_C1_periodic(self):
        controlpoints = np.array([[ 60. ,   1. ,   0. ,   1.3],       [ 33. ,  56. ,  -2. ,   1.4],       [-32. ,  55. ,   3. ,   0.8],       [-64. ,   3. ,   4. ,   0.8],       [-28. , -56. ,   0. ,   1.1],       [ 32. , -53. ,   0. ,   1.2],       [ 69. ,   0. ,   4. ,   0.8],       [ 35. ,  59. ,  -2. ,   1.1],       [-33. ,  56. ,  -4. ,   1.4],       [-73. ,   1. ,   4. ,   0.8],       [-38. , -58. ,  -2. ,   1.5],       [ 36. , -60. ,  -5. ,   0.9],       [ 80. ,  -1. ,  -3. ,   0.6],       [ 36. ,  60. ,  -5. ,   1. ],       [-41. ,  61. ,  -5. ,   0.9],       [-78. ,  -2. ,   0. ,   1.3],       [-38. , -70. ,  -3. ,   0.8],       [ 34. , -63. ,   2. ,   1.4],       [ 83. ,   0. ,   3. ,   0.5],       [ 39. ,  70. ,  -2. ,   0.6],       [-44. ,  70. ,  -2. ,   0.8],       [-88. ,   0. ,   3. ,   0.6],       [-42. , -75. ,  -3. ,   1. ],       [ 39. , -71. ,  -1. ,   1. ],       [ 96. ,  -2. ,   4. ,   1.1],       [ 50. ,  81. ,   2. ,   0.8],       [-43. ,  84. ,  -2. ,   1. ],       [-89. ,   2. ,  -2. ,   1.3],       [-50. , -76. ,   2. ,   1.2],       [ 45. , -81. ,  -2. ,   0.8],       [ 96. ,   3. ,  -5. ,   0.8],       [ 53. ,  89. ,   1. ,   1. ],       [-49. ,  89. ,  -2. ,   0.6],       [-96. ,  -2. ,   3. ,   1.4],       [-51. , -91. ,   2. ,   0.8],       [ 50. , -86. ,   4. ,   0.7]])
        basis0 = BSplineBasis(5, np.array([-1.6, -1.3,  0. ,  0. ,  0. ,  0.9,  2.4,  2.7,  4. ,  4. ,  4. ,
        4.9,  6.4]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,True)
        surf2 = surf.clone()
        surf2 *= np.array([ 10.7,   7.7,   9.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 10.700000
        pt2[...,1] /= 7.700000
        pt2[...,2] /= 9.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p765_rational_C1_periodic(self):
        controlpoints = np.array([[  53. ,   -1. ,   -4. ,    1.2],       [  44. ,   28. ,   -5. ,    1. ],       [  12. ,   48. ,    1. ,    0.6],       [ -20. ,   43. ,   -4. ,    0.5],       [ -43. ,   27. ,    0. ,    1.5],       [ -54. ,    1. ,    1. ,    1.1],       [ -38. ,  -27. ,    4. ,    1.5],       [ -14. ,  -45. ,    1. ,    1.2],       [  13. ,  -44. ,   -1. ,    1.3],       [  39. ,  -26. ,   -5. ,    1.2],       [  57. ,   -3. ,    3. ,    1.1],       [  44. ,   35. ,    3. ,    1.1],       [  18. ,   59. ,    4. ,    1.5],       [ -23. ,   55. ,    0. ,    1.5],       [ -52. ,   29. ,   -3. ,    0.6],       [ -57. ,   -3. ,    3. ,    0.7],       [ -49. ,  -39. ,    1. ,    1.4],       [ -19. ,  -51. ,   -3. ,    1.4],       [  13. ,  -56. ,   -5. ,    1.2],       [  50. ,  -32. ,    3. ,    0.6],       [  64. ,    2. ,    2. ,    0.5],       [  55. ,   39. ,    3. ,    1.4],       [  16. ,   59. ,    3. ,    1.2],       [ -26. ,   67. ,    1. ,    0.6],       [ -55. ,   39. ,   -5. ,    0.6],       [ -69. ,    0. ,    3. ,    0.5],       [ -50. ,  -44. ,   -3. ,    1.1],       [ -23. ,  -64. ,   -1. ,    1.2],       [  18. ,  -67. ,    4. ,    1.5],       [  50. ,  -42. ,    4. ,    1.5],       [  71. ,   -2. ,    2. ,    1.4],       [  62. ,   46. ,   -1. ,    0.6],       [  24. ,   75. ,    2. ,    0.7],       [ -27. ,   72. ,   -2. ,    0.9],       [ -57. ,   40. ,   -4. ,    0.7],       [ -74. ,   -5. ,   -2. ,    0.6],       [ -56. ,  -42. ,   -4. ,    1.5],       [ -26. ,  -70. ,   -4. ,    0.8],       [  25. ,  -72. ,   -3. ,    0.8],       [  59. ,  -40. ,    0. ,    0.9],       [  87. ,    1. ,    3. ,    0.9],       [  72. ,   45. ,   -4. ,    0.9],       [  22. ,   76. ,   -5. ,    1.4],       [ -24. ,   75. ,    3. ,    0.6],       [ -65. ,   46. ,    4. ,    1.3],       [ -81. ,    2. ,   -5. ,    0.9],       [ -72. ,  -50. ,    3. ,    1.4],       [ -30. ,  -84. ,   -1. ,    1.1],       [  22. ,  -76. ,    3. ,    0.9],       [  66. ,  -46. ,    3. ,    1.1],       [  95. ,    0. ,    0. ,    1.3],       [  72. ,   55. ,   -3. ,    0.7],       [  28. ,   90. ,    4. ,    1.2],       [ -26. ,   85. ,   -4. ,    1.3],       [ -77. ,   58. ,   -5. ,    1.4],       [ -97. ,   -5. ,   -3. ,    1. ],       [ -71. ,  -49. ,    4. ,    1.1],       [ -28. ,  -85. ,   -4. ,    0.6],       [  30. ,  -91. ,   -4. ,    0.6],       [  77. ,  -59. ,   -4. ,    1. ],       [ 102. ,   -5. ,    2. ,    1.4],       [  84. ,   58. ,   -5. ,    1.2],       [  33. ,   90. ,   -3. ,    0.8],       [ -31. ,   95. ,    0. ,    0.9],       [ -78. ,   54. ,    3. ,    0.5],       [-101. ,    0. ,   -2. ,    0.8],       [ -84. ,  -56. ,    3. ,    1.1],       [ -33. ,  -99. ,   -5. ,    0.9],       [  28. ,  -96. ,    1. ,    0.7],       [  83. ,  -64. ,    4. ,    1.4],       [  45. ,   -4. ,    0. ,    0.9],       [  37. ,   33. ,    9. ,    1.2],       [  16. ,   47. ,    2. ,    1. ],       [ -11. ,   49. ,    0. ,    1. ],       [ -39. ,   30. ,    5. ,    1. ],       [ -54. ,    2. ,    7. ,    0.8],       [ -42. ,  -33. ,    5. ,    0.8],       [ -11. ,  -43. ,    0. ,    0.7],       [  12. ,  -53. ,    6. ,    0.8],       [  37. ,  -32. ,    0. ,    1. ],       [  57. ,    4. ,    5. ,    0.9],       [  45. ,   35. ,   -1. ,    1.2],       [  16. ,   56. ,    1. ,    0.8],       [ -21. ,   59. ,    3. ,    1.3],       [ -43. ,   38. ,    8. ,    0.8],       [ -57. ,    2. ,    1. ,    1.4],       [ -45. ,  -32. ,    7. ,    0.7],       [ -19. ,  -52. ,    2. ,    0.7],       [  20. ,  -59. ,    3. ,    0.8],       [  48. ,  -32. ,    3. ,    1.1],       [  69. ,    4. ,    8. ,    1. ],       [  53. ,   41. ,   -1. ,    1. ],       [  21. ,   62. ,    1. ,    1.4],       [ -19. ,   68. ,    6. ,    1. ],       [ -54. ,   40. ,    8. ,    1.4],       [ -65. ,    2. ,    6. ,    0.8],       [ -51. ,  -41. ,    2. ,    0.8],       [ -19. ,  -60. ,    3. ,    0.6],       [  22. ,  -60. ,    8. ,    1. ],       [  56. ,  -36. ,    4. ,    0.7],       [  72. ,   -1. ,    5. ,    0.7],       [  58. ,   39. ,    3. ,    0.8],       [  23. ,   68. ,    5. ,    1.5],       [ -23. ,   71. ,    1. ,    1.3],       [ -57. ,   48. ,    5. ,    1.2],       [ -80. ,   -1. ,    3. ,    0.8],       [ -57. ,  -45. ,    1. ,    1.4],       [ -25. ,  -68. ,    5. ,    0.7],       [  18. ,  -75. ,    1. ,    0.6],       [  60. ,  -45. ,    3. ,    1.1],       [  84. ,   -4. ,    5. ,    1.4],       [  67. ,   47. ,    3. ,    0.7],       [  28. ,   79. ,    4. ,    1.3],       [ -29. ,   78. ,    6. ,    1.3],       [ -64. ,   45. ,    0. ,    0.6],       [ -88. ,   -5. ,    6. ,    1.3],       [ -70. ,  -53. ,    0. ,    1. ],       [ -24. ,  -75. ,    6. ,    0.7],       [  24. ,  -77. ,    4. ,    1. ],       [  69. ,  -51. ,   -1. ,    1.2],       [  90. ,   -2. ,    6. ,    0.9],       [  71. ,   53. ,    8. ,    1.4],       [  26. ,   87. ,    7. ,    0.9],       [ -26. ,   86. ,   -1. ,    0.6],       [ -75. ,   50. ,    0. ,    1.3],       [ -92. ,    3. ,    3. ,    0.8],       [ -74. ,  -52. ,    6. ,    0.8],       [ -33. ,  -88. ,    2. ,    0.8],       [  31. ,  -91. ,   -1. ,    0.6],       [  74. ,  -52. ,    1. ,    0.6],       [ 102. ,    0. ,    6. ,    0.8],       [  77. ,   57. ,    5. ,    0.9],       [  29. ,   95. ,    7. ,    1.3],       [ -28. ,   94. ,    9. ,    0.9],       [ -81. ,   63. ,    2. ,    1.1],       [-104. ,    1. ,    2. ,    1.3],       [ -78. ,  -57. ,    5. ,    1.1],       [ -29. ,  -92. ,    9. ,    0.8],       [  32. ,  -98. ,    6. ,    1.3],       [  81. ,  -64. ,    8. ,    0.8],       [  54. ,    1. ,   10. ,    1.4],       [  44. ,   33. ,    8. ,    0.9],       [  17. ,   50. ,    5. ,    0.6],       [ -16. ,   46. ,   11. ,    0.5],       [ -42. ,   24. ,    5. ,    1.2],       [ -47. ,   -1. ,   12. ,    0.5],       [ -37. ,  -28. ,    4. ,    0.6],       [ -18. ,  -44. ,    8. ,    1.5],       [  11. ,  -50. ,   12. ,    1.2],       [  42. ,  -29. ,    8. ,    0.8],       [  60. ,    1. ,    6. ,    1.3],       [  48. ,   33. ,   13. ,    0.9],       [  17. ,   55. ,   13. ,    1.1],       [ -21. ,   58. ,   13. ,    1.2],       [ -47. ,   35. ,    9. ,    1.3],       [ -54. ,    1. ,    5. ,    0.8],       [ -48. ,  -32. ,    7. ,    1.3],       [ -22. ,  -59. ,    8. ,    1.4],       [  13. ,  -55. ,   13. ,    1.2],       [  46. ,  -31. ,   13. ,    0.8],       [  71. ,    0. ,    6. ,    0.7],       [  57. ,   40. ,    8. ,    1.3],       [  23. ,   67. ,   11. ,    0.7],       [ -16. ,   59. ,   11. ,    1.3],       [ -59. ,   36. ,    7. ,    1.2],       [ -68. ,   -5. ,    4. ,    0.7],       [ -55. ,  -39. ,   11. ,    1.4],       [ -22. ,  -67. ,   10. ,    1. ],       [  21. ,  -59. ,    9. ,    1.3],       [  50. ,  -42. ,   12. ,    1.4],       [  75. ,   -1. ,   11. ,    0.8],       [  57. ,   41. ,   13. ,    0.8],       [  22. ,   69. ,   11. ,    0.9],       [ -22. ,   72. ,   12. ,    0.9],       [ -60. ,   42. ,   12. ,    1. ],       [ -77. ,   -5. ,    6. ,    0.8],       [ -62. ,  -42. ,    8. ,    1.1],       [ -27. ,  -72. ,    8. ,    1. ],       [  19. ,  -70. ,    7. ,    1. ],       [  63. ,  -43. ,    8. ,    1.1],       [  78. ,   -5. ,   13. ,    1.2],       [  69. ,   51. ,    8. ,    1. ],       [  27. ,   79. ,    6. ,    1.4],       [ -24. ,   84. ,    6. ,    1.1],       [ -65. ,   51. ,   13. ,    0.8],       [ -85. ,    4. ,    5. ,    1.1],       [ -65. ,  -51. ,   13. ,    0.9],       [ -25. ,  -77. ,   12. ,    1.4],       [  23. ,  -76. ,    6. ,    1.2],       [  72. ,  -45. ,   10. ,    0.5],       [  92. ,    1. ,    8. ,    0.8],       [  76. ,   52. ,   10. ,    0.5],       [  27. ,   84. ,    7. ,    1.1],       [ -28. ,   82. ,   12. ,    0.8],       [ -80. ,   53. ,   10. ,    1.1],       [ -88. ,    3. ,    5. ,    1.3],       [ -73. ,  -57. ,   10. ,    1.5],       [ -24. ,  -90. ,   11. ,    0.9],       [  27. ,  -89. ,    7. ,    0.8],       [  76. ,  -54. ,    9. ,    1.1],       [  95. ,   -4. ,    7. ,    0.6],       [  83. ,   59. ,    6. ,    1.4],       [  34. ,   99. ,   10. ,    1.2],       [ -30. ,   99. ,   13. ,    1.5],       [ -86. ,   55. ,   10. ,    1.4],       [-104. ,   -5. ,   11. ,    0.7],       [ -79. ,  -61. ,   13. ,    0.6],       [ -32. , -100. ,    6. ,    0.6],       [  29. ,  -98. ,   12. ,    1.4],       [  83. ,  -63. ,    5. ,    0.6],       [  45. ,   -3. ,   10. ,    1.4],       [  42. ,   26. ,   12. ,    0.7],       [  13. ,   46. ,   11. ,    0.9],       [ -19. ,   49. ,   13. ,    0.6],       [ -40. ,   25. ,   15. ,    1.3],       [ -50. ,   -1. ,    9. ,    0.9],       [ -40. ,  -27. ,   11. ,    1.2],       [ -20. ,  -45. ,    9. ,    1.1],       [  10. ,  -49. ,   12. ,    1.1],       [  37. ,  -29. ,   16. ,    0.7],       [  62. ,   -3. ,   12. ,    0.9],       [  50. ,   37. ,   12. ,    0.6],       [  19. ,   53. ,    8. ,    0.7],       [ -23. ,   59. ,   17. ,    0.8],       [ -52. ,   38. ,   13. ,    0.7],       [ -56. ,   -4. ,   16. ,    0.9],       [ -50. ,  -35. ,   14. ,    0.6],       [ -19. ,  -58. ,   13. ,    1.1],       [  22. ,  -53. ,   14. ,    0.9],       [  45. ,  -30. ,   14. ,    1.2],       [  67. ,   -1. ,   11. ,    1.1],       [  56. ,   35. ,   10. ,    1. ],       [  15. ,   58. ,   15. ,    0.9],       [ -21. ,   63. ,   10. ,    1.4],       [ -51. ,   38. ,   17. ,    0.9],       [ -69. ,    2. ,   10. ,    0.7],       [ -58. ,  -40. ,   10. ,    0.9],       [ -25. ,  -60. ,    8. ,    1.2],       [  21. ,  -64. ,   16. ,    1.3],       [  52. ,  -41. ,   14. ,    1.1],       [  78. ,    3. ,   13. ,    1. ],       [  56. ,   40. ,   14. ,    1.3],       [  22. ,   66. ,   13. ,    0.5],       [ -26. ,   67. ,   17. ,    1.1],       [ -66. ,   40. ,   10. ,    0.7],       [ -78. ,    4. ,   16. ,    1.2],       [ -57. ,  -49. ,   12. ,    0.9],       [ -25. ,  -68. ,   12. ,    1.1],       [  25. ,  -68. ,   15. ,    1.1],       [  64. ,  -41. ,   12. ,    0.9],       [  81. ,   -3. ,   16. ,    0.6],       [  69. ,   46. ,    9. ,    0.9],       [  21. ,   76. ,    9. ,    1.3],       [ -25. ,   80. ,   14. ,    0.6],       [ -69. ,   50. ,   15. ,    0.5],       [ -79. ,   -1. ,    8. ,    0.9],       [ -70. ,  -47. ,   13. ,    0.8],       [ -29. ,  -79. ,   10. ,    1.4],       [  24. ,  -76. ,   13. ,    1.5],       [  68. ,  -47. ,   15. ,    0.6],       [  93. ,   -4. ,   12. ,    1.1],       [  69. ,   50. ,    9. ,    1.4],       [  32. ,   87. ,   13. ,    0.9],       [ -29. ,   87. ,   16. ,    1.4],       [ -79. ,   56. ,   13. ,    0.6],       [ -92. ,   -3. ,   15. ,    0.7],       [ -71. ,  -53. ,   17. ,    1.3],       [ -29. ,  -86. ,   14. ,    1.2],       [  28. ,  -90. ,   16. ,    1.5],       [  70. ,  -53. ,    9. ,    1.2],       [ 100. ,    2. ,   11. ,    0.8],       [  85. ,   54. ,   11. ,    1. ],       [  27. ,   99. ,   12. ,    1.4],       [ -28. ,   99. ,   11. ,    1.2],       [ -83. ,   57. ,   13. ,    1.5],       [-101. ,    0. ,   14. ,    1.3],       [ -79. ,  -56. ,   14. ,    0.6],       [ -35. ,  -93. ,   13. ,    1.2],       [  26. ,  -94. ,   17. ,    1. ],       [  77. ,  -63. ,    8. ,    0.6],       [  49. ,    4. ,   19. ,    0.8],       [  40. ,   32. ,   19. ,    1.4],       [  15. ,   44. ,   15. ,    1.1],       [ -11. ,   43. ,   20. ,    0.9],       [ -46. ,   29. ,   15. ,    0.8],       [ -46. ,    0. ,   21. ,    0.8],       [ -38. ,  -26. ,   20. ,    1.1],       [ -17. ,  -51. ,   19. ,    0.6],       [  18. ,  -53. ,   15. ,    1.4],       [  43. ,  -28. ,   18. ,    1.3],       [  60. ,   -5. ,   22. ,    0.8],       [  48. ,   34. ,   13. ,    1. ],       [  16. ,   59. ,   18. ,    1. ],       [ -16. ,   55. ,   15. ,    0.7],       [ -52. ,   35. ,   16. ,    0.9],       [ -54. ,    4. ,   19. ,    1.4],       [ -49. ,  -30. ,   22. ,    0.7],       [ -15. ,  -55. ,   15. ,    1.1],       [  13. ,  -52. ,   22. ,    1.2],       [  51. ,  -38. ,   19. ,    0.6],       [  70. ,   -3. ,   14. ,    1.2],       [  54. ,   41. ,   13. ,    0.9],       [  19. ,   61. ,   15. ,    0.6],       [ -22. ,   59. ,   14. ,    0.8],       [ -59. ,   39. ,   13. ,    1.3],       [ -70. ,   -1. ,   20. ,    0.6],       [ -55. ,  -41. ,   21. ,    0.6],       [ -20. ,  -64. ,   19. ,    1.1],       [  20. ,  -67. ,   16. ,    0.6],       [  48. ,  -35. ,   20. ,    1. ],       [  76. ,   -1. ,   19. ,    1. ],       [  59. ,   48. ,   22. ,    1.2],       [  19. ,   73. ,   20. ,    1.2],       [ -23. ,   73. ,   13. ,    1.4],       [ -61. ,   40. ,   13. ,    1.1],       [ -75. ,    3. ,   22. ,    0.8],       [ -65. ,  -47. ,   19. ,    0.9],       [ -21. ,  -73. ,   18. ,    0.6],       [  20. ,  -67. ,   16. ,    1.4],       [  56. ,  -45. ,   13. ,    0.7],       [  83. ,    0. ,   15. ,    1.3],       [  68. ,   46. ,   18. ,    1.4],       [  30. ,   81. ,   14. ,    1.5],       [ -25. ,   79. ,   22. ,    1.5],       [ -64. ,   50. ,   21. ,    1.4],       [ -84. ,    3. ,   14. ,    1. ],       [ -70. ,  -53. ,   15. ,    1.5],       [ -28. ,  -75. ,   20. ,    0.5],       [  28. ,  -77. ,   21. ,    1.3],       [  68. ,  -49. ,   14. ,    0.9],       [  93. ,   -5. ,   19. ,    1.2],       [  77. ,   52. ,   14. ,    0.6],       [  24. ,   89. ,   22. ,    0.7],       [ -29. ,   85. ,   17. ,    0.8],       [ -79. ,   52. ,   14. ,    1.1],       [ -97. ,   -5. ,   17. ,    1.1],       [ -75. ,  -58. ,   20. ,    0.6],       [ -33. ,  -92. ,   16. ,    1.3],       [  28. ,  -87. ,   21. ,    0.9],       [  73. ,  -50. ,   21. ,    1.3],       [ 101. ,   -2. ,   13. ,    1.3],       [  76. ,   61. ,   15. ,    1.4],       [  30. ,   96. ,   20. ,    1.2],       [ -28. ,   93. ,   22. ,    1.5],       [ -84. ,   57. ,   19. ,    1.1],       [ -96. ,    0. ,   18. ,    0.9],       [ -77. ,  -54. ,   16. ,    0.7],       [ -32. ,  -94. ,   19. ,    0.6],       [  34. ,  -96. ,   14. ,    1.4],       [  85. ,  -61. ,   16. ,    1.1],       [  53. ,    1. ,   23. ,    0.8],       [  43. ,   27. ,   19. ,    1.1],       [  19. ,   44. ,   25. ,    0.6],       [ -19. ,   51. ,   17. ,    1.3],       [ -44. ,   24. ,   19. ,    0.7],       [ -46. ,   -5. ,   17. ,    1.3],       [ -38. ,  -27. ,   20. ,    0.5],       [ -16. ,  -45. ,   20. ,    1.2],       [  19. ,  -44. ,   24. ,    1.4],       [  35. ,  -28. ,   21. ,    0.6],       [  53. ,   -4. ,   24. ,    0.8],       [  44. ,   37. ,   19. ,    0.5],       [  22. ,   57. ,   20. ,    0.9],       [ -21. ,   54. ,   18. ,    1. ],       [ -50. ,   32. ,   23. ,    0.7],       [ -59. ,   -2. ,   20. ,    1. ],       [ -46. ,  -36. ,   22. ,    1. ],       [ -14. ,  -53. ,   24. ,    1.2],       [  18. ,  -54. ,   22. ,    0.8],       [  51. ,  -36. ,   21. ,    1.4],       [  69. ,    4. ,   20. ,    1.3],       [  56. ,   42. ,   17. ,    1.1],       [  17. ,   64. ,   19. ,    1.3],       [ -26. ,   60. ,   19. ,    1. ],       [ -52. ,   36. ,   18. ,    0.7],       [ -71. ,    2. ,   23. ,    1. ],       [ -51. ,  -41. ,   21. ,    0.5],       [ -23. ,  -67. ,   26. ,    1.5],       [  23. ,  -62. ,   27. ,    0.5],       [  51. ,  -35. ,   24. ,    1.2],       [  74. ,    2. ,   18. ,    1.4],       [  55. ,   41. ,   19. ,    0.9],       [  18. ,   73. ,   24. ,    1.2],       [ -23. ,   74. ,   24. ,    0.9],       [ -65. ,   40. ,   18. ,    0.6],       [ -75. ,   -4. ,   18. ,    1. ],       [ -60. ,  -45. ,   22. ,    1. ],       [ -20. ,  -75. ,   23. ,    0.7],       [  27. ,  -71. ,   26. ,    1.3],       [  63. ,  -43. ,   24. ,    0.5],       [  85. ,   -2. ,   25. ,    0.9],       [  71. ,   47. ,   26. ,    1.2],       [  28. ,   82. ,   25. ,    1.3],       [ -24. ,   80. ,   17. ,    1.3],       [ -67. ,   45. ,   22. ,    1.3],       [ -83. ,    4. ,   27. ,    0.6],       [ -65. ,  -54. ,   18. ,    0.6],       [ -22. ,  -81. ,   20. ,    0.6],       [  23. ,  -80. ,   26. ,    0.8],       [  66. ,  -48. ,   23. ,    0.7],       [  93. ,    0. ,   21. ,    0.5],       [  71. ,   50. ,   25. ,    0.7],       [  32. ,   86. ,   22. ,    1.5],       [ -30. ,   82. ,   23. ,    1.4],       [ -71. ,   57. ,   26. ,    1.1],       [ -92. ,    2. ,   21. ,    0.7],       [ -77. ,  -57. ,   25. ,    0.8],       [ -31. ,  -83. ,   22. ,    0.6],       [  27. ,  -83. ,   26. ,    1.2],       [  71. ,  -54. ,   19. ,    1.5],       [ 104. ,    3. ,   18. ,    1.2],       [  81. ,   55. ,   27. ,    1.4],       [  30. ,   96. ,   19. ,    0.5],       [ -30. ,   99. ,   21. ,    1. ],       [ -83. ,   54. ,   23. ,    1.1],       [-100. ,   -4. ,   26. ,    0.6],       [ -85. ,  -58. ,   23. ,    1.4],       [ -27. ,  -98. ,   19. ,    1.4],       [  27. ,  -99. ,   22. ,    1.4],       [  77. ,  -58. ,   24. ,    1. ],       [  50. ,   -5. ,   25. ,    1.4],       [  37. ,   32. ,   28. ,    0.8],       [  16. ,   47. ,   27. ,    1.3],       [ -13. ,   51. ,   25. ,    0.8],       [ -40. ,   32. ,   30. ,    0.8],       [ -51. ,    0. ,   29. ,    1.3],       [ -41. ,  -30. ,   26. ,    1. ],       [ -13. ,  -44. ,   30. ,    1.3],       [  12. ,  -50. ,   24. ,    0.9],       [  44. ,  -32. ,   24. ,    0.9],       [  58. ,   -4. ,   25. ,    1.1],       [  47. ,   32. ,   31. ,    1.2],       [  14. ,   55. ,   25. ,    1.4],       [ -15. ,   58. ,   26. ,    1.2],       [ -52. ,   32. ,   27. ,    0.7],       [ -58. ,    4. ,   28. ,    1.3],       [ -44. ,  -35. ,   29. ,    0.7],       [ -15. ,  -56. ,   29. ,    1.3],       [  20. ,  -56. ,   22. ,    1.1],       [  46. ,  -38. ,   22. ,    0.6],       [  68. ,    0. ,   25. ,    1.2],       [  54. ,   39. ,   30. ,    1. ],       [  23. ,   58. ,   26. ,    1.4],       [ -23. ,   64. ,   23. ,    0.8],       [ -55. ,   42. ,   30. ,    1.4],       [ -70. ,    1. ,   31. ,    0.9],       [ -58. ,  -39. ,   25. ,    1.1],       [ -24. ,  -66. ,   29. ,    0.6],       [  16. ,  -63. ,   22. ,    0.6],       [  52. ,  -39. ,   28. ,    1.2],       [  76. ,   -2. ,   25. ,    0.7],       [  60. ,   39. ,   24. ,    0.6],       [  24. ,   74. ,   22. ,    0.6],       [ -28. ,   76. ,   29. ,    0.8],       [ -60. ,   45. ,   30. ,    0.7],       [ -76. ,   -1. ,   23. ,    1.4],       [ -61. ,  -45. ,   23. ,    0.9],       [ -22. ,  -69. ,   27. ,    1.1],       [  24. ,  -71. ,   31. ,    1. ],       [  56. ,  -41. ,   23. ,    0.8],       [  79. ,   -5. ,   29. ,    0.6],       [  65. ,   48. ,   21. ,    0.6],       [  26. ,   76. ,   25. ,    0.9],       [ -27. ,   83. ,   30. ,    1.4],       [ -68. ,   48. ,   26. ,    0.9],       [ -81. ,   -5. ,   24. ,    0.6],       [ -67. ,  -54. ,   25. ,    0.7],       [ -24. ,  -83. ,   22. ,    0.9],       [  23. ,  -75. ,   28. ,    1.1],       [  68. ,  -53. ,   27. ,    1.2],       [  95. ,    0. ,   26. ,    1.2],       [  72. ,   52. ,   29. ,    0.7],       [  33. ,   91. ,   27. ,    0.7],       [ -26. ,   90. ,   29. ,    1.3],       [ -72. ,   50. ,   21. ,    0.9],       [ -92. ,    2. ,   22. ,    1.2],       [ -77. ,  -52. ,   28. ,    0.8],       [ -30. ,  -86. ,   24. ,    0.6],       [  32. ,  -86. ,   23. ,    1. ],       [  73. ,  -51. ,   28. ,    1.4],       [  96. ,    3. ,   31. ,    1.3],       [  82. ,   62. ,   28. ,    1.3],       [  27. ,   91. ,   28. ,    1.3],       [ -28. ,   96. ,   28. ,    1.5],       [ -85. ,   59. ,   25. ,    1.1],       [-104. ,    2. ,   29. ,    1.2],       [ -78. ,  -63. ,   29. ,    1.3],       [ -33. ,  -96. ,   26. ,    1. ],       [  31. ,  -92. ,   29. ,    0.7],       [  80. ,  -62. ,   30. ,    1.3],       [  53. ,   -2. ,   28. ,    1.2],       [  38. ,   30. ,   30. ,    1.3],       [  12. ,   49. ,   32. ,    1.2],       [ -16. ,   50. ,   35. ,    1. ],       [ -42. ,   32. ,   33. ,    0.9],       [ -46. ,    4. ,   32. ,    0.7],       [ -45. ,  -34. ,   32. ,    1.2],       [ -17. ,  -51. ,   32. ,    1.2],       [  13. ,  -52. ,   34. ,    1.3],       [  38. ,  -27. ,   33. ,    1.4],       [  60. ,    3. ,   32. ,    0.7],       [  44. ,   38. ,   30. ,    0.8],       [  14. ,   55. ,   27. ,    0.8],       [ -15. ,   59. ,   27. ,    1. ],       [ -45. ,   37. ,   30. ,    1. ],       [ -61. ,   -2. ,   31. ,    1.5],       [ -48. ,  -38. ,   30. ,    0.8],       [ -15. ,  -55. ,   30. ,    0.8],       [  19. ,  -58. ,   32. ,    1.1],       [  51. ,  -35. ,   27. ,    0.9],       [  69. ,   -3. ,   30. ,    1.3],       [  55. ,   39. ,   32. ,    1.4],       [  20. ,   62. ,   28. ,    0.9],       [ -20. ,   67. ,   34. ,    0.6],       [ -54. ,   42. ,   28. ,    1.4],       [ -70. ,   -2. ,   34. ,    0.6],       [ -51. ,  -41. ,   30. ,    1.4],       [ -23. ,  -61. ,   31. ,    0.9],       [  16. ,  -60. ,   33. ,    1.2],       [  55. ,  -38. ,   32. ,    1. ],       [  73. ,    1. ,   33. ,    1.1],       [  56. ,   47. ,   34. ,    1.4],       [  25. ,   69. ,   34. ,    1.1],       [ -25. ,   73. ,   30. ,    1.2],       [ -65. ,   42. ,   28. ,    1. ],       [ -75. ,    3. ,   30. ,    1.2],       [ -64. ,  -46. ,   28. ,    1.4],       [ -25. ,  -71. ,   35. ,    1.2],       [  22. ,  -71. ,   27. ,    1.2],       [  61. ,  -41. ,   28. ,    1.4],       [  87. ,    1. ,   29. ,    1. ],       [  68. ,   53. ,   31. ,    0.9],       [  29. ,   75. ,   26. ,    1.3],       [ -27. ,   79. ,   31. ,    1.1],       [ -65. ,   48. ,   31. ,    1.2],       [ -79. ,   -4. ,   26. ,    1.3],       [ -68. ,  -49. ,   32. ,    1.1],       [ -25. ,  -79. ,   31. ,    1.3],       [  21. ,  -75. ,   29. ,    0.6],       [  67. ,  -53. ,   30. ,    1. ],       [  87. ,    2. ,   29. ,    1.4],       [  72. ,   49. ,   26. ,    1.1],       [  25. ,   82. ,   29. ,    0.9],       [ -24. ,   85. ,   31. ,    0.6],       [ -70. ,   52. ,   30. ,    1. ],       [ -89. ,   -3. ,   30. ,    0.9],       [ -70. ,  -56. ,   34. ,    1.3],       [ -32. ,  -92. ,   35. ,    1.4],       [  25. ,  -91. ,   30. ,    0.5],       [  72. ,  -54. ,   35. ,    1. ],       [  95. ,    3. ,   28. ,    0.9],       [  83. ,   55. ,   28. ,    0.8],       [  33. ,   90. ,   31. ,    1.5],       [ -28. ,   97. ,   35. ,    1.2],       [ -81. ,   58. ,   33. ,    1. ],       [ -96. ,   -2. ,   30. ,    1.2],       [ -81. ,  -62. ,   26. ,    1.1],       [ -35. ,  -98. ,   31. ,    0.6],       [  32. , -100. ,   34. ,    1.4],       [  80. ,  -56. ,   26. ,    1.2],       [  53. ,    1. ,   31. ,    0.6],       [  42. ,   29. ,   33. ,    0.8],       [  15. ,   46. ,   36. ,    1.4],       [ -19. ,   45. ,   36. ,    1.5],       [ -45. ,   28. ,   31. ,    0.7],       [ -51. ,   -2. ,   31. ,    1.2],       [ -39. ,  -26. ,   30. ,    1.4],       [ -14. ,  -50. ,   35. ,    1.4],       [  16. ,  -47. ,   40. ,    1.4],       [  44. ,  -29. ,   37. ,    1. ],       [  62. ,   -3. ,   30. ,    0.8],       [  48. ,   30. ,   33. ,    1.4],       [  13. ,   57. ,   31. ,    0.8],       [ -22. ,   55. ,   35. ,    0.9],       [ -49. ,   33. ,   35. ,    0.9],       [ -56. ,   -2. ,   36. ,    1.3],       [ -43. ,  -36. ,   36. ,    0.7],       [ -23. ,  -55. ,   35. ,    1.4],       [  20. ,  -57. ,   31. ,    0.8],       [  47. ,  -39. ,   38. ,    1. ],       [  64. ,    0. ,   31. ,    0.9],       [  51. ,   36. ,   39. ,    1.4],       [  24. ,   66. ,   35. ,    0.8],       [ -17. ,   63. ,   37. ,    1.5],       [ -59. ,   41. ,   35. ,    1.2],       [ -69. ,    3. ,   35. ,    0.8],       [ -59. ,  -37. ,   38. ,    0.8],       [ -25. ,  -64. ,   30. ,    1. ],       [  19. ,  -66. ,   40. ,    0.7],       [  52. ,  -35. ,   35. ,    0.8],       [  77. ,   -1. ,   33. ,    0.8],       [  61. ,   44. ,   32. ,    1.2],       [  21. ,   66. ,   40. ,    1. ],       [ -22. ,   67. ,   36. ,    1.3],       [ -65. ,   45. ,   32. ,    1. ],       [ -73. ,   -3. ,   39. ,    0.7],       [ -63. ,  -41. ,   32. ,    0.9],       [ -19. ,  -68. ,   38. ,    0.9],       [  26. ,  -73. ,   33. ,    1.5],       [  59. ,  -40. ,   36. ,    1.4],       [  82. ,    4. ,   38. ,    0.9],       [  63. ,   52. ,   39. ,    1.3],       [  24. ,   81. ,   39. ,    0.8],       [ -30. ,   74. ,   32. ,    0.8],       [ -69. ,   49. ,   31. ,    1.1],       [ -80. ,    2. ,   34. ,    0.6],       [ -67. ,  -45. ,   34. ,    1. ],       [ -25. ,  -83. ,   32. ,    0.7],       [  29. ,  -79. ,   32. ,    1.3],       [  70. ,  -50. ,   40. ,    1.4],       [  93. ,   -1. ,   33. ,    0.9],       [  72. ,   48. ,   33. ,    1.4],       [  23. ,   83. ,   33. ,    1. ],       [ -25. ,   85. ,   37. ,    1.2],       [ -70. ,   51. ,   35. ,    0.7],       [ -97. ,   -5. ,   36. ,    1. ],       [ -77. ,  -58. ,   36. ,    0.5],       [ -29. ,  -87. ,   32. ,    0.7],       [  25. ,  -90. ,   39. ,    1.1],       [  74. ,  -56. ,   34. ,    1.3],       [  96. ,    4. ,   31. ,    0.7],       [  81. ,   60. ,   30. ,    1.5],       [  35. ,   91. ,   35. ,    0.8],       [ -36. ,   94. ,   30. ,    1.3],       [ -79. ,   59. ,   34. ,    1. ],       [-100. ,   -1. ,   30. ,    1.1],       [ -86. ,  -57. ,   40. ,    0.8],       [ -36. ,  -94. ,   33. ,    1.4],       [  31. ,  -99. ,   37. ,    1.3],       [  75. ,  -60. ,   31. ,    0.6],       [  50. ,   -3. ,   43. ,    0.8],       [  42. ,   28. ,   40. ,    0.7],       [  14. ,   45. ,   35. ,    1.3],       [ -14. ,   44. ,   44. ,    1.2],       [ -40. ,   31. ,   40. ,    1.4],       [ -51. ,   -1. ,   37. ,    0.8],       [ -41. ,  -27. ,   37. ,    0.7],       [ -15. ,  -46. ,   39. ,    0.9],       [  16. ,  -44. ,   40. ,    0.6],       [  40. ,  -28. ,   35. ,    1.2],       [  57. ,   -3. ,   37. ,    1. ],       [  44. ,   30. ,   39. ,    0.8],       [  19. ,   57. ,   40. ,    0.9],       [ -22. ,   53. ,   41. ,    1.4],       [ -45. ,   37. ,   38. ,    1.2],       [ -58. ,   -5. ,   44. ,    1.2],       [ -44. ,  -37. ,   35. ,    0.7],       [ -16. ,  -56. ,   44. ,    1. ],       [  15. ,  -58. ,   35. ,    1. ],       [  44. ,  -32. ,   35. ,    0.7],       [  65. ,    3. ,   43. ,    0.5],       [  49. ,   38. ,   36. ,    0.6],       [  18. ,   61. ,   39. ,    1.2],       [ -16. ,   61. ,   41. ,    0.5],       [ -56. ,   34. ,   43. ,    1.4],       [ -65. ,    2. ,   39. ,    0.5],       [ -59. ,  -39. ,   35. ,    1. ],       [ -20. ,  -65. ,   41. ,    0.8],       [  24. ,  -61. ,   35. ,    1.1],       [  58. ,  -37. ,   35. ,    1.2],       [  72. ,   -3. ,   40. ,    0.6],       [  59. ,   44. ,   38. ,    0.6],       [  21. ,   73. ,   36. ,    0.6],       [ -19. ,   71. ,   36. ,    0.8],       [ -62. ,   43. ,   37. ,    0.7],       [ -71. ,   -2. ,   44. ,    0.8],       [ -58. ,  -47. ,   36. ,    0.7],       [ -23. ,  -72. ,   39. ,    1. ],       [  24. ,  -70. ,   39. ,    1.5],       [  64. ,  -44. ,   38. ,    0.5],       [  84. ,   -1. ,   40. ,    1.5],       [  66. ,   51. ,   43. ,    0.8],       [  27. ,   77. ,   35. ,    0.7],       [ -23. ,   82. ,   41. ,    0.5],       [ -66. ,   44. ,   35. ,    0.8],       [ -84. ,   -4. ,   44. ,    1.2],       [ -67. ,  -45. ,   40. ,    0.8],       [ -29. ,  -78. ,   37. ,    0.6],       [  26. ,  -78. ,   43. ,    0.7],       [  66. ,  -45. ,   39. ,    0.7],       [  87. ,    3. ,   38. ,    1.1],       [  72. ,   58. ,   41. ,    1.4],       [  24. ,   86. ,   39. ,    0.6],       [ -29. ,   83. ,   42. ,    0.8],       [ -79. ,   50. ,   44. ,    1. ],       [ -93. ,   -5. ,   36. ,    1. ],       [ -76. ,  -55. ,   40. ,    1. ],       [ -26. ,  -91. ,   37. ,    0.9],       [  32. ,  -92. ,   36. ,    1.4],       [  72. ,  -54. ,   35. ,    0.9],       [ 103. ,    1. ,   35. ,    1.4],       [  79. ,   54. ,   40. ,    0.9],       [  30. ,   95. ,   42. ,    1.3],       [ -33. ,   93. ,   35. ,    1. ],       [ -80. ,   58. ,   35. ,    1. ],       [-100. ,    0. ,   40. ,    0.9],       [ -84. ,  -61. ,   38. ,    0.9],       [ -33. ,  -98. ,   40. ,    0.6],       [  27. ,  -96. ,   37. ,    0.6],       [  79. ,  -56. ,   43. ,    1.4]])
        basis0 = BSplineBasis(7, np.array([-2. , -0.8,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.7,  3. ,  4. ,
        5.2,  6. ,  6. ,  6. ,  6. ,  6. ,  6.9,  7.7]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        basis2 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2.4,  3.3,  4.4,  4.9,  6. ,
        6. ,  6. ,  6. ,  6. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 += np.array([ 4.5,  1.3,  1. ])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 4.500000
        pt2[...,1] -= 1.300000
        pt2[...,2] -= 1.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p657_rational_C1_periodic(self):
        controlpoints = np.array([[  51. ,    4. ,   -4. ,    1.4],       [  38. ,   30. ,   -4. ,    1.3],       [  18. ,   49. ,    4. ,    1.1],       [  -7. ,   45. ,   -5. ,    0.5],       [ -31. ,   37. ,   -1. ,    0.8],       [ -50. ,   17. ,   -1. ,    0.7],       [ -51. ,  -14. ,   -3. ,    1. ],       [ -36. ,  -38. ,    1. ,    0.7],       [  -8. ,  -46. ,    1. ,    1.4],       [  17. ,  -46. ,   -3. ,    1.1],       [  46. ,  -28. ,   -2. ,    0.7],       [  58. ,   -3. ,    2. ,    1.2],       [  47. ,   34. ,    2. ,    1.4],       [  20. ,   48. ,    1. ,    0.7],       [ -13. ,   61. ,   -5. ,    0.7],       [ -37. ,   40. ,   -3. ,    1.1],       [ -55. ,   19. ,   -1. ,    1. ],       [ -57. ,  -19. ,   -3. ,    0.8],       [ -34. ,  -42. ,    1. ,    0.5],       [  -7. ,  -57. ,    2. ,    0.8],       [  22. ,  -51. ,   -5. ,    0.9],       [  45. ,  -36. ,    3. ,    0.8],       [  62. ,    4. ,   -1. ,    0.5],       [  51. ,   37. ,    4. ,    1.2],       [  25. ,   64. ,    0. ,    1.4],       [  -9. ,   65. ,   -2. ,    1.3],       [ -47. ,   50. ,   -1. ,    1.3],       [ -62. ,   17. ,   -2. ,    1.3],       [ -64. ,  -21. ,    0. ,    0.7],       [ -48. ,  -50. ,   -3. ,    1. ],       [  -6. ,  -68. ,   -1. ,    1.1],       [  28. ,  -62. ,    1. ,    1.3],       [  53. ,  -41. ,    0. ,    1.1],       [  76. ,   -3. ,    4. ,    1.4],       [  66. ,   40. ,    4. ,    1.3],       [  28. ,   66. ,   -2. ,    1.1],       [  -7. ,   71. ,    1. ,    1.4],       [ -45. ,   54. ,    2. ,    0.8],       [ -77. ,   16. ,   -2. ,    1.4],       [ -70. ,  -22. ,   -3. ,    0.6],       [ -48. ,  -61. ,   -4. ,    1.2],       [  -7. ,  -79. ,   -3. ,    0.9],       [  34. ,  -70. ,   -2. ,    1.1],       [  65. ,  -37. ,   -2. ,    1. ],       [  87. ,   -3. ,    4. ,    0.7],       [  72. ,   40. ,    0. ,    1.1],       [  34. ,   77. ,   -2. ,    0.7],       [ -12. ,   78. ,   -5. ,    0.8],       [ -60. ,   59. ,   -4. ,    1.2],       [ -80. ,   25. ,   -2. ,    1.2],       [ -82. ,  -21. ,   -5. ,    1.2],       [ -58. ,  -63. ,   -1. ,    1.4],       [ -16. ,  -84. ,    3. ,    0.6],       [  35. ,  -81. ,   -3. ,    1.5],       [  73. ,  -43. ,    2. ,    0.7],       [  89. ,    3. ,   -5. ,    1.3],       [  73. ,   45. ,   -1. ,    1. ],       [  40. ,   87. ,    0. ,    1. ],       [ -18. ,   90. ,    0. ,    0.7],       [ -57. ,   73. ,    0. ,    0.9],       [ -90. ,   28. ,   -5. ,    1.5],       [ -92. ,  -29. ,   -4. ,    0.6],       [ -63. ,  -67. ,   -4. ,    1.3],       [ -11. ,  -90. ,   -4. ,    1. ],       [  42. ,  -88. ,    2. ,    1. ],       [  81. ,  -54. ,    2. ,    1. ],       [  96. ,   -3. ,   -3. ,    1.2],       [  88. ,   58. ,   -5. ,    1.2],       [  38. ,   91. ,    2. ,    1.1],       [ -19. ,  103. ,    1. ,    1.4],       [ -66. ,   75. ,    0. ,    1.3],       [ -95. ,   27. ,   -1. ,    0.8],       [ -98. ,  -28. ,   -2. ,    1. ],       [ -71. ,  -80. ,    4. ,    1. ],       [ -12. ,  -97. ,    3. ,    0.7],       [  37. ,  -90. ,   -2. ,    1.2],       [  81. ,  -59. ,   -5. ,    0.8],       [  49. ,   -1. ,    5. ,    0.9],       [  42. ,   28. ,    8. ,    1.1],       [  23. ,   46. ,    2. ,    0.8],       [  -7. ,   54. ,    5. ,    0.7],       [ -30. ,   32. ,    7. ,    0.7],       [ -45. ,   16. ,    6. ,    1. ],       [ -48. ,  -10. ,    5. ,    1.2],       [ -36. ,  -42. ,    6. ,    1.4],       [  -4. ,  -48. ,    5. ,    1. ],       [  19. ,  -43. ,    7. ,    0.6],       [  46. ,  -27. ,    8. ,    0.5],       [  60. ,    3. ,    0. ,    1.5],       [  52. ,   29. ,    3. ,    0.7],       [  28. ,   52. ,    2. ,    0.8],       [  -4. ,   55. ,    9. ,    0.8],       [ -43. ,   47. ,    0. ,    1.4],       [ -54. ,   21. ,    7. ,    0.6],       [ -57. ,  -21. ,    0. ,    1.3],       [ -35. ,  -49. ,    4. ,    1.5],       [  -6. ,  -55. ,    2. ,    1.2],       [  26. ,  -50. ,    3. ,    1.2],       [  53. ,  -36. ,    5. ,    0.8],       [  64. ,   -5. ,    6. ,    0.9],       [  52. ,   35. ,    0. ,    1.1],       [  23. ,   56. ,    3. ,    0.5],       [  -6. ,   69. ,    8. ,    0.6],       [ -41. ,   46. ,    5. ,    0.7],       [ -68. ,   23. ,    9. ,    0.6],       [ -67. ,  -17. ,    7. ,    1.4],       [ -44. ,  -53. ,    2. ,    0.6],       [  -7. ,  -65. ,    4. ,    1.5],       [  24. ,  -62. ,    6. ,    1.3],       [  52. ,  -34. ,    6. ,    0.7],       [  76. ,    1. ,    1. ,    1.2],       [  62. ,   43. ,    7. ,    0.8],       [  33. ,   64. ,    6. ,    0.8],       [ -15. ,   74. ,    7. ,    0.9],       [ -48. ,   61. ,    3. ,    0.9],       [ -69. ,   24. ,    9. ,    1.3],       [ -73. ,  -19. ,    8. ,    1.3],       [ -49. ,  -58. ,    3. ,    1.1],       [  -8. ,  -74. ,    4. ,    1.3],       [  34. ,  -72. ,    6. ,    1.1],       [  65. ,  -42. ,    7. ,    1. ],       [  87. ,   -4. ,    6. ,    0.6],       [  69. ,   44. ,    9. ,    0.8],       [  36. ,   78. ,    4. ,    1.5],       [ -14. ,   78. ,    9. ,    0.9],       [ -52. ,   63. ,    2. ,    1.4],       [ -79. ,   23. ,    8. ,    0.5],       [ -80. ,  -23. ,    4. ,    1.1],       [ -59. ,  -64. ,    6. ,    0.6],       [ -17. ,  -83. ,    6. ,    0.8],       [  30. ,  -74. ,    7. ,    0.5],       [  70. ,  -48. ,    5. ,    0.5],       [  92. ,   -3. ,    9. ,    0.7],       [  74. ,   51. ,    9. ,    1. ],       [  36. ,   80. ,    5. ,    1.1],       [ -13. ,   93. ,    3. ,    0.6],       [ -62. ,   71. ,    6. ,    1.1],       [ -90. ,   27. ,    2. ,    1.5],       [ -88. ,  -25. ,    7. ,    1.3],       [ -61. ,  -68. ,    4. ,    1.1],       [ -15. ,  -88. ,    2. ,    1. ],       [  34. ,  -81. ,    5. ,    1. ],       [  78. ,  -55. ,    5. ,    1.1],       [  97. ,   -1. ,    2. ,    0.8],       [  81. ,   57. ,    0. ,    1.1],       [  43. ,   93. ,    9. ,    0.8],       [ -19. ,   94. ,    8. ,    1.5],       [ -63. ,   76. ,    0. ,    0.7],       [ -99. ,   24. ,    8. ,    0.9],       [ -96. ,  -27. ,    6. ,    1.5],       [ -62. ,  -75. ,    8. ,    1.3],       [ -14. , -101. ,    5. ,    1.2],       [  39. ,  -93. ,    6. ,    0.8],       [  83. ,  -58. ,    4. ,    1.2],       [  46. ,    1. ,   14. ,    0.5],       [  39. ,   22. ,   14. ,    1.5],       [  24. ,   44. ,    7. ,    1.3],       [ -10. ,   48. ,    8. ,    1.4],       [ -37. ,   36. ,   13. ,    1.1],       [ -53. ,   15. ,    6. ,    0.7],       [ -52. ,  -18. ,   10. ,    1.4],       [ -34. ,  -40. ,    9. ,    0.7],       [ -11. ,  -54. ,   10. ,    0.8],       [  24. ,  -43. ,   12. ,    1. ],       [  39. ,  -29. ,    7. ,    1.1],       [  54. ,    0. ,    5. ,    0.8],       [  49. ,   36. ,    5. ,    0.6],       [  23. ,   54. ,    5. ,    0.6],       [ -10. ,   54. ,   14. ,    0.9],       [ -36. ,   42. ,    6. ,    1.2],       [ -54. ,   16. ,   12. ,    1.4],       [ -61. ,  -17. ,    5. ,    1.5],       [ -37. ,  -48. ,    8. ,    0.8],       [ -11. ,  -58. ,   12. ,    1.3],       [  25. ,  -55. ,   12. ,    1. ],       [  49. ,  -37. ,    5. ,    1.1],       [  65. ,   -5. ,   10. ,    1. ],       [  58. ,   37. ,    6. ,    1. ],       [  32. ,   56. ,    7. ,    0.7],       [ -12. ,   67. ,   13. ,    0.6],       [ -46. ,   46. ,   13. ,    1. ],       [ -66. ,   16. ,   10. ,    0.8],       [ -63. ,  -19. ,   13. ,    0.8],       [ -40. ,  -51. ,   10. ,    0.9],       [  -6. ,  -69. ,    5. ,    1.5],       [  24. ,  -61. ,   11. ,    1.3],       [  52. ,  -34. ,    5. ,    0.9],       [  76. ,    0. ,    5. ,    1.1],       [  65. ,   45. ,   13. ,    1.2],       [  31. ,   63. ,   13. ,    1.5],       [ -14. ,   77. ,    9. ,    0.6],       [ -46. ,   61. ,    9. ,    1. ],       [ -70. ,   17. ,    9. ,    1. ],       [ -77. ,  -25. ,    5. ,    1.1],       [ -46. ,  -62. ,    7. ,    1.5],       [ -16. ,  -80. ,    9. ,    1. ],       [  35. ,  -68. ,    9. ,    1.3],       [  63. ,  -45. ,    9. ,    0.9],       [  85. ,    3. ,    6. ,    0.5],       [  65. ,   50. ,    7. ,    0.7],       [  32. ,   75. ,    6. ,    1.3],       [ -10. ,   80. ,   14. ,    1.2],       [ -57. ,   67. ,   10. ,    0.6],       [ -77. ,   24. ,    9. ,    0.7],       [ -77. ,  -27. ,   10. ,    0.7],       [ -57. ,  -63. ,    9. ,    0.8],       [  -9. ,  -79. ,   14. ,    0.7],       [  36. ,  -77. ,    7. ,    1.3],       [  67. ,  -49. ,    8. ,    1. ],       [  96. ,   -4. ,   13. ,    0.9],       [  76. ,   48. ,   12. ,    1.1],       [  34. ,   81. ,   11. ,    0.9],       [ -13. ,   90. ,    5. ,    1.2],       [ -56. ,   65. ,    8. ,    0.6],       [ -90. ,   25. ,    5. ,    0.9],       [ -87. ,  -30. ,    9. ,    1. ],       [ -65. ,  -68. ,    8. ,    0.6],       [ -15. ,  -94. ,    8. ,    1. ],       [  35. ,  -87. ,   12. ,    1.4],       [  79. ,  -46. ,   11. ,    1.1],       [ 102. ,   -5. ,   12. ,    1.5],       [  82. ,   50. ,   14. ,    1.3],       [  38. ,   86. ,   11. ,    0.7],       [ -10. ,  101. ,   14. ,    0.7],       [ -70. ,   76. ,    7. ,    0.9],       [ -96. ,   23. ,    6. ,    0.7],       [ -99. ,  -26. ,    6. ,    1.1],       [ -71. ,  -80. ,    5. ,    0.8],       [ -12. ,  -99. ,    7. ,    1.2],       [  43. ,  -90. ,    7. ,    0.6],       [  80. ,  -59. ,    6. ,    0.5],       [  47. ,   -2. ,   17. ,    0.8],       [  46. ,   24. ,   10. ,    1.2],       [  20. ,   47. ,   14. ,    1.1],       [ -10. ,   53. ,   12. ,    1.2],       [ -29. ,   33. ,   12. ,    1. ],       [ -48. ,   14. ,   15. ,    1.1],       [ -50. ,  -17. ,   14. ,    0.7],       [ -32. ,  -33. ,   17. ,    1.3],       [  -9. ,  -50. ,   18. ,    1.4],       [  16. ,  -48. ,   15. ,    1. ],       [  42. ,  -26. ,   12. ,    0.8],       [  55. ,    1. ,   14. ,    1.5],       [  45. ,   27. ,   15. ,    0.8],       [  20. ,   55. ,   18. ,    0.8],       [ -12. ,   54. ,   13. ,    1.3],       [ -43. ,   44. ,   16. ,    0.9],       [ -58. ,   20. ,   19. ,    0.7],       [ -52. ,  -15. ,   12. ,    1.4],       [ -39. ,  -48. ,   19. ,    1.2],       [  -7. ,  -60. ,   11. ,    1. ],       [  23. ,  -49. ,   19. ,    0.7],       [  50. ,  -33. ,   17. ,    1. ],       [  64. ,    3. ,   10. ,    0.9],       [  60. ,   36. ,   10. ,    1.4],       [  25. ,   62. ,   10. ,    1.2],       [ -14. ,   65. ,   18. ,    0.7],       [ -42. ,   53. ,   12. ,    1.4],       [ -64. ,   18. ,   10. ,    0.7],       [ -69. ,  -16. ,   11. ,    0.7],       [ -48. ,  -51. ,   13. ,    0.8],       [  -8. ,  -62. ,   14. ,    1.4],       [  32. ,  -65. ,   13. ,    0.9],       [  57. ,  -39. ,   12. ,    1.4],       [  70. ,   -4. ,   16. ,    0.9],       [  62. ,   43. ,   14. ,    0.7],       [  35. ,   63. ,   14. ,    1.2],       [ -10. ,   73. ,   12. ,    1.4],       [ -49. ,   52. ,   13. ,    1. ],       [ -68. ,   18. ,   15. ,    1.2],       [ -70. ,  -21. ,   19. ,    0.7],       [ -50. ,  -53. ,   13. ,    1.4],       [  -9. ,  -75. ,   15. ,    0.7],       [  30. ,  -71. ,   12. ,    0.7],       [  66. ,  -39. ,   18. ,    0.9],       [  80. ,    1. ,   10. ,    1.5],       [  73. ,   42. ,   13. ,    0.7],       [  32. ,   72. ,   16. ,    1.4],       [ -12. ,   85. ,   18. ,    1. ],       [ -58. ,   58. ,   12. ,    0.8],       [ -82. ,   23. ,   17. ,    1.5],       [ -77. ,  -20. ,   16. ,    1.3],       [ -50. ,  -59. ,   14. ,    0.5],       [ -16. ,  -82. ,   13. ,    1.4],       [  33. ,  -78. ,   16. ,    0.7],       [  70. ,  -45. ,   15. ,    0.9],       [  96. ,    1. ,   14. ,    0.8],       [  74. ,   52. ,   11. ,    1. ],       [  36. ,   82. ,   18. ,    0.7],       [ -14. ,   86. ,   16. ,    0.7],       [ -56. ,   66. ,   17. ,    0.6],       [ -87. ,   21. ,   14. ,    1.2],       [ -84. ,  -24. ,   16. ,    1.1],       [ -62. ,  -71. ,   18. ,    1.4],       [ -12. ,  -95. ,   12. ,    1. ],       [  42. ,  -80. ,   16. ,    1. ],       [  81. ,  -46. ,   16. ,    0.7],       [ 102. ,   -3. ,   18. ,    0.7],       [  86. ,   53. ,   15. ,    1.2],       [  43. ,   95. ,   10. ,    1.4],       [ -18. ,   99. ,   11. ,    0.6],       [ -64. ,   75. ,   17. ,    0.5],       [-100. ,   29. ,   10. ,    1.4],       [ -93. ,  -28. ,   11. ,    1.1],       [ -63. ,  -71. ,   17. ,    0.8],       [ -14. ,  -96. ,   10. ,    1.3],       [  46. ,  -92. ,   10. ,    0.8],       [  85. ,  -57. ,   18. ,    1.2],       [  50. ,    1. ,   15. ,    0.7],       [  45. ,   29. ,   18. ,    1.3],       [  22. ,   47. ,   22. ,    0.6],       [  -3. ,   54. ,   22. ,    1.3],       [ -31. ,   42. ,   24. ,    0.5],       [ -53. ,   15. ,   15. ,    1.3],       [ -49. ,  -14. ,   20. ,    0.6],       [ -36. ,  -35. ,   24. ,    1.2],       [  -4. ,  -47. ,   15. ,    1. ],       [  23. ,  -41. ,   23. ,    1. ],       [  41. ,  -26. ,   21. ,    1.5],       [  54. ,    2. ,   23. ,    1.3],       [  53. ,   32. ,   24. ,    1.4],       [  26. ,   54. ,   16. ,    1. ],       [ -13. ,   53. ,   20. ,    1.1],       [ -37. ,   47. ,   24. ,    0.6],       [ -57. ,   11. ,   16. ,    0.5],       [ -54. ,  -20. ,   20. ,    0.7],       [ -35. ,  -41. ,   18. ,    0.8],       [  -5. ,  -58. ,   16. ,    1.5],       [  24. ,  -56. ,   18. ,    0.9],       [  46. ,  -30. ,   15. ,    0.5],       [  70. ,    1. ,   22. ,    1.2],       [  59. ,   39. ,   21. ,    1.3],       [  27. ,   57. ,   15. ,    0.6],       [ -14. ,   70. ,   20. ,    1.1],       [ -46. ,   50. ,   23. ,    0.6],       [ -60. ,   16. ,   15. ,    1.5],       [ -62. ,  -18. ,   19. ,    0.8],       [ -40. ,  -50. ,   24. ,    1. ],       [ -10. ,  -62. ,   15. ,    1.3],       [  32. ,  -57. ,   24. ,    1.3],       [  59. ,  -40. ,   21. ,    1.1],       [  78. ,   -5. ,   18. ,    0.8],       [  66. ,   38. ,   24. ,    0.6],       [  29. ,   63. ,   17. ,    0.6],       [  -8. ,   72. ,   15. ,    0.9],       [ -49. ,   54. ,   22. ,    1.2],       [ -75. ,   20. ,   23. ,    1. ],       [ -73. ,  -17. ,   16. ,    1.1],       [ -50. ,  -60. ,   23. ,    1.2],       [  -7. ,  -79. ,   20. ,    0.5],       [  29. ,  -73. ,   18. ,    0.7],       [  64. ,  -42. ,   17. ,    1.3],       [  80. ,   -5. ,   18. ,    0.7],       [  69. ,   45. ,   18. ,    0.9],       [  36. ,   77. ,   17. ,    0.6],       [ -10. ,   85. ,   15. ,    1.4],       [ -56. ,   62. ,   17. ,    1.2],       [ -83. ,   22. ,   16. ,    0.7],       [ -76. ,  -21. ,   23. ,    1.4],       [ -54. ,  -59. ,   22. ,    1.1],       [  -9. ,  -88. ,   17. ,    0.8],       [  35. ,  -74. ,   15. ,    0.5],       [  68. ,  -50. ,   22. ,    0.7],       [  90. ,   -4. ,   17. ,    0.6],       [  78. ,   47. ,   18. ,    0.6],       [  42. ,   88. ,   15. ,    0.5],       [ -14. ,   93. ,   19. ,    1.1],       [ -58. ,   71. ,   15. ,    1.1],       [ -92. ,   29. ,   22. ,    1.1],       [ -92. ,  -29. ,   24. ,    0.7],       [ -64. ,  -70. ,   19. ,    1.3],       [ -11. ,  -87. ,   22. ,    1.5],       [  40. ,  -83. ,   16. ,    1. ],       [  76. ,  -46. ,   18. ,    0.7],       [ 103. ,   -1. ,   21. ,    1. ],       [  85. ,   52. ,   22. ,    0.9],       [  39. ,   92. ,   22. ,    1.3],       [ -11. ,  102. ,   19. ,    0.6],       [ -67. ,   79. ,   16. ,    1.1],       [-101. ,   27. ,   22. ,    0.6],       [ -94. ,  -25. ,   15. ,    0.5],       [ -66. ,  -76. ,   19. ,    0.8],       [ -13. ,  -98. ,   22. ,    1.2],       [  46. ,  -90. ,   19. ,    1.5],       [  82. ,  -53. ,   21. ,    1.1],       [  54. ,   -2. ,   29. ,    0.5],       [  44. ,   29. ,   22. ,    1.3],       [  16. ,   44. ,   27. ,    1. ],       [  -3. ,   49. ,   20. ,    0.9],       [ -36. ,   41. ,   24. ,    0.8],       [ -52. ,   13. ,   27. ,    0.6],       [ -51. ,  -13. ,   21. ,    1.2],       [ -33. ,  -42. ,   22. ,    0.7],       [ -10. ,  -53. ,   27. ,    0.9],       [  21. ,  -47. ,   27. ,    0.8],       [  38. ,  -28. ,   28. ,    1.3],       [  53. ,   -3. ,   23. ,    1.4],       [  50. ,   32. ,   25. ,    0.6],       [  22. ,   50. ,   26. ,    1.1],       [  -5. ,   60. ,   20. ,    1.1],       [ -43. ,   43. ,   26. ,    1.5],       [ -58. ,   15. ,   20. ,    0.6],       [ -57. ,  -15. ,   20. ,    0.7],       [ -37. ,  -46. ,   29. ,    1.2],       [  -9. ,  -56. ,   26. ,    1.1],       [  19. ,  -58. ,   20. ,    1. ],       [  52. ,  -30. ,   25. ,    1.2],       [  62. ,    1. ,   28. ,    1.4],       [  58. ,   35. ,   20. ,    0.6],       [  28. ,   58. ,   27. ,    0.5],       [  -5. ,   65. ,   20. ,    1.1],       [ -41. ,   53. ,   22. ,    0.5],       [ -60. ,   17. ,   25. ,    1.2],       [ -67. ,  -24. ,   21. ,    0.9],       [ -45. ,  -51. ,   23. ,    0.8],       [ -10. ,  -62. ,   29. ,    0.8],       [  23. ,  -63. ,   28. ,    0.8],       [  56. ,  -37. ,   26. ,    0.8],       [  78. ,   -2. ,   20. ,    1.3],       [  58. ,   37. ,   26. ,    0.8],       [  29. ,   70. ,   25. ,    1.2],       [  -9. ,   72. ,   29. ,    1.2],       [ -48. ,   59. ,   26. ,    0.8],       [ -72. ,   17. ,   24. ,    1. ],       [ -77. ,  -23. ,   24. ,    0.9],       [ -53. ,  -61. ,   23. ,    1.3],       [  -8. ,  -78. ,   29. ,    0.9],       [  32. ,  -69. ,   28. ,    0.6],       [  62. ,  -37. ,   20. ,    0.9],       [  86. ,   -3. ,   25. ,    0.6],       [  68. ,   45. ,   29. ,    1.2],       [  37. ,   75. ,   25. ,    1.1],       [ -16. ,   82. ,   28. ,    0.8],       [ -60. ,   63. ,   26. ,    1.2],       [ -76. ,   25. ,   22. ,    0.5],       [ -77. ,  -29. ,   28. ,    1. ],       [ -53. ,  -68. ,   23. ,    1.3],       [ -12. ,  -81. ,   24. ,    1.1],       [  35. ,  -76. ,   21. ,    0.9],       [  71. ,  -50. ,   26. ,    1.1],       [  93. ,    4. ,   29. ,    0.6],       [  81. ,   47. ,   29. ,    0.7],       [  36. ,   82. ,   21. ,    0.6],       [ -13. ,   94. ,   20. ,    1.3],       [ -61. ,   70. ,   28. ,    1.3],       [ -87. ,   26. ,   29. ,    0.5],       [ -91. ,  -23. ,   24. ,    0.6],       [ -59. ,  -74. ,   25. ,    0.9],       [ -14. ,  -87. ,   25. ,    1.2],       [  33. ,  -80. ,   25. ,    0.7],       [  79. ,  -48. ,   23. ,    0.5],       [ 104. ,    2. ,   21. ,    1.3],       [  88. ,   58. ,   29. ,    1.1],       [  46. ,   90. ,   28. ,    1.2],       [ -17. ,  103. ,   25. ,    0.7],       [ -65. ,   74. ,   29. ,    1.4],       [ -94. ,   23. ,   21. ,    1.2],       [-100. ,  -24. ,   21. ,    1.3],       [ -64. ,  -76. ,   28. ,    1.2],       [ -19. ,  -97. ,   25. ,    1.2],       [  44. ,  -88. ,   27. ,    1.1],       [  82. ,  -55. ,   22. ,    0.7],       [  52. ,   -3. ,   27. ,    1.3],       [  46. ,   30. ,   31. ,    0.5],       [  16. ,   49. ,   25. ,    1.2],       [  -7. ,   48. ,   30. ,    1.1],       [ -32. ,   40. ,   28. ,    0.6],       [ -50. ,   17. ,   25. ,    0.9],       [ -52. ,  -15. ,   27. ,    0.7],       [ -33. ,  -41. ,   33. ,    1.2],       [  -8. ,  -54. ,   29. ,    1.2],       [  22. ,  -46. ,   30. ,    1.4],       [  42. ,  -27. ,   27. ,    1.4],       [  60. ,    3. ,   30. ,    0.9],       [  46. ,   35. ,   33. ,    0.8],       [  20. ,   50. ,   27. ,    1.1],       [  -6. ,   52. ,   34. ,    0.6],       [ -36. ,   43. ,   33. ,    0.8],       [ -54. ,   11. ,   32. ,    1. ],       [ -61. ,  -17. ,   33. ,    1.2],       [ -42. ,  -49. ,   31. ,    0.9],       [  -9. ,  -63. ,   28. ,    0.9],       [  23. ,  -51. ,   34. ,    1.3],       [  52. ,  -33. ,   32. ,    0.9],       [  68. ,    2. ,   31. ,    0.7],       [  57. ,   40. ,   34. ,    1.5],       [  24. ,   56. ,   34. ,    1.3],       [  -8. ,   62. ,   27. ,    1.1],       [ -45. ,   53. ,   25. ,    0.5],       [ -68. ,   21. ,   30. ,    0.8],       [ -69. ,  -21. ,   26. ,    0.7],       [ -46. ,  -54. ,   33. ,    1.1],       [ -11. ,  -70. ,   25. ,    1.5],       [  31. ,  -61. ,   33. ,    0.8],       [  51. ,  -36. ,   25. ,    0.9],       [  78. ,   -1. ,   31. ,    0.7],       [  67. ,   37. ,   29. ,    0.8],       [  29. ,   66. ,   31. ,    1.3],       [  -8. ,   73. ,   29. ,    1.5],       [ -51. ,   60. ,   28. ,    1. ],       [ -71. ,   22. ,   32. ,    1.3],       [ -70. ,  -25. ,   26. ,    1. ],       [ -50. ,  -61. ,   25. ,    1.4],       [ -10. ,  -78. ,   31. ,    0.8],       [  32. ,  -65. ,   32. ,    1.3],       [  60. ,  -38. ,   33. ,    1.2],       [  87. ,   -1. ,   27. ,    1.2],       [  65. ,   46. ,   34. ,    0.9],       [  32. ,   76. ,   31. ,    1.2],       [ -10. ,   82. ,   32. ,    0.8],       [ -53. ,   58. ,   33. ,    0.9],       [ -83. ,   21. ,   28. ,    1.3],       [ -76. ,  -22. ,   32. ,    0.7],       [ -55. ,  -59. ,   31. ,    0.7],       [ -11. ,  -79. ,   31. ,    0.7],       [  29. ,  -77. ,   33. ,    0.7],       [  72. ,  -46. ,   25. ,    1.4],       [  86. ,   -2. ,   26. ,    1.3],       [  76. ,   48. ,   27. ,    1.2],       [  35. ,   87. ,   29. ,    1.5],       [ -15. ,   86. ,   29. ,    1. ],       [ -61. ,   65. ,   32. ,    1. ],       [ -92. ,   23. ,   27. ,    1.1],       [ -90. ,  -26. ,   34. ,    1.4],       [ -63. ,  -73. ,   32. ,    1. ],       [ -14. ,  -91. ,   28. ,    0.6],       [  35. ,  -83. ,   28. ,    0.9],       [  74. ,  -48. ,   28. ,    0.8],       [ 101. ,    0. ,   33. ,    0.8],       [  88. ,   51. ,   30. ,    0.5],       [  37. ,   94. ,   34. ,    1.4],       [ -11. ,  103. ,   26. ,    0.6],       [ -68. ,   79. ,   32. ,    1.3],       [-101. ,   26. ,   25. ,    0.9],       [ -99. ,  -24. ,   32. ,    1.5],       [ -64. ,  -76. ,   32. ,    1.3],       [ -11. ,  -99. ,   33. ,    1.1],       [  37. ,  -90. ,   26. ,    1. ],       [  85. ,  -54. ,   31. ,    1.5],       [  49. ,   -1. ,   30. ,    1. ],       [  41. ,   24. ,   39. ,    0.6],       [  20. ,   43. ,   35. ,    0.7],       [  -6. ,   52. ,   38. ,    1. ],       [ -32. ,   36. ,   32. ,    1. ],       [ -50. ,   18. ,   36. ,    1.4],       [ -47. ,  -18. ,   31. ,    0.9],       [ -33. ,  -43. ,   32. ,    0.8],       [ -12. ,  -54. ,   34. ,    0.9],       [  21. ,  -42. ,   31. ,    0.8],       [  45. ,  -30. ,   38. ,    0.6],       [  60. ,   -1. ,   34. ,    1.2],       [  52. ,   31. ,   32. ,    0.9],       [  21. ,   57. ,   39. ,    1.4],       [  -8. ,   56. ,   36. ,    0.9],       [ -36. ,   41. ,   34. ,    1.2],       [ -55. ,   13. ,   34. ,    1.4],       [ -54. ,  -18. ,   37. ,    1.3],       [ -35. ,  -45. ,   31. ,    1.1],       [ -13. ,  -63. ,   35. ,    1. ],       [  27. ,  -54. ,   39. ,    1.2],       [  45. ,  -37. ,   33. ,    0.9],       [  70. ,    1. ,   39. ,    1. ],       [  59. ,   35. ,   37. ,    0.5],       [  22. ,   56. ,   30. ,    1.3],       [  -9. ,   64. ,   32. ,    1.1],       [ -42. ,   47. ,   39. ,    0.9],       [ -64. ,   16. ,   36. ,    0.9],       [ -67. ,  -22. ,   34. ,    1.5],       [ -44. ,  -47. ,   33. ,    0.6],       [  -8. ,  -67. ,   37. ,    1. ],       [  31. ,  -65. ,   38. ,    0.9],       [  59. ,  -33. ,   31. ,    1.4],       [  75. ,    4. ,   37. ,    1.3],       [  66. ,   40. ,   31. ,    1. ],       [  26. ,   67. ,   39. ,    0.8],       [  -9. ,   72. ,   35. ,    0.8],       [ -54. ,   55. ,   35. ,    1.2],       [ -75. ,   26. ,   35. ,    1.5],       [ -71. ,  -21. ,   35. ,    1.5],       [ -51. ,  -59. ,   34. ,    1.3],       [  -8. ,  -77. ,   37. ,    0.6],       [  35. ,  -68. ,   32. ,    1. ],       [  62. ,  -38. ,   30. ,    0.6],       [  84. ,   -4. ,   36. ,    1. ],       [  69. ,   47. ,   38. ,    0.5],       [  31. ,   79. ,   32. ,    0.8],       [  -8. ,   83. ,   31. ,    0.9],       [ -52. ,   61. ,   38. ,    1.1],       [ -79. ,   23. ,   39. ,    0.5],       [ -80. ,  -26. ,   31. ,    0.8],       [ -55. ,  -65. ,   30. ,    1.2],       [ -12. ,  -78. ,   33. ,    1.3],       [  31. ,  -80. ,   32. ,    0.7],       [  74. ,  -50. ,   35. ,    0.5],       [  86. ,   -4. ,   30. ,    1.4],       [  76. ,   47. ,   35. ,    1.1],       [  36. ,   80. ,   33. ,    1. ],       [ -16. ,   87. ,   33. ,    1. ],       [ -56. ,   74. ,   37. ,    0.6],       [ -89. ,   25. ,   33. ,    0.9],       [ -86. ,  -27. ,   32. ,    1.5],       [ -57. ,  -65. ,   34. ,    1.5],       [ -15. ,  -86. ,   30. ,    1.2],       [  36. ,  -83. ,   35. ,    1.5],       [  75. ,  -45. ,   33. ,    1.1],       [  99. ,    4. ,   30. ,    0.6],       [  84. ,   57. ,   31. ,    1.4],       [  45. ,   91. ,   32. ,    0.8],       [ -10. ,  101. ,   36. ,    0.9],       [ -65. ,   74. ,   31. ,    0.5],       [ -94. ,   25. ,   32. ,    0.9],       [ -96. ,  -30. ,   39. ,    0.8],       [ -62. ,  -81. ,   38. ,    0.5],       [ -15. ,  -99. ,   34. ,    1. ],       [  37. ,  -88. ,   33. ,    1. ],       [  81. ,  -56. ,   32. ,    1.1],       [  48. ,    0. ,   43. ,    1.2],       [  39. ,   28. ,   35. ,    1.4],       [  16. ,   40. ,   36. ,    0.9],       [ -12. ,   46. ,   42. ,    0.7],       [ -32. ,   41. ,   36. ,    1. ],       [ -48. ,   17. ,   40. ,    1.2],       [ -48. ,  -11. ,   40. ,    1.2],       [ -32. ,  -41. ,   43. ,    0.9],       [  -9. ,  -52. ,   41. ,    1.4],       [  23. ,  -42. ,   41. ,    1.2],       [  40. ,  -32. ,   35. ,    0.9],       [  59. ,    2. ,   44. ,    1.4],       [  52. ,   35. ,   41. ,    1.5],       [  22. ,   48. ,   38. ,    1.2],       [  -8. ,   54. ,   40. ,    1.3],       [ -36. ,   47. ,   39. ,    1.2],       [ -61. ,   17. ,   38. ,    0.9],       [ -59. ,  -14. ,   39. ,    0.5],       [ -36. ,  -49. ,   35. ,    1.4],       [ -14. ,  -57. ,   38. ,    1.1],       [  21. ,  -53. ,   44. ,    0.8],       [  44. ,  -29. ,   44. ,    0.5],       [  69. ,   -3. ,   43. ,    1.1],       [  56. ,   38. ,   40. ,    0.9],       [  28. ,   65. ,   38. ,    0.9],       [ -10. ,   62. ,   44. ,    1. ],       [ -49. ,   54. ,   37. ,    0.8],       [ -66. ,   14. ,   35. ,    0.7],       [ -67. ,  -15. ,   44. ,    0.8],       [ -42. ,  -52. ,   35. ,    0.7],       [  -5. ,  -69. ,   35. ,    0.9],       [  24. ,  -59. ,   43. ,    1.1],       [  58. ,  -37. ,   38. ,    0.6],       [  71. ,    2. ,   43. ,    1.2],       [  66. ,   41. ,   40. ,    1.1],       [  35. ,   67. ,   44. ,    0.6],       [  -6. ,   73. ,   42. ,    0.6],       [ -47. ,   58. ,   38. ,    1.4],       [ -75. ,   21. ,   42. ,    0.7],       [ -76. ,  -22. ,   37. ,    0.6],       [ -45. ,  -54. ,   42. ,    0.7],       [  -7. ,  -71. ,   38. ,    1.2],       [  36. ,  -72. ,   38. ,    1.5],       [  66. ,  -42. ,   36. ,    0.8],       [  85. ,   -3. ,   38. ,    1.4],       [  74. ,   41. ,   38. ,    1.1],       [  30. ,   76. ,   37. ,    1.3],       [  -8. ,   84. ,   41. ,    0.6],       [ -59. ,   61. ,   35. ,    1.1],       [ -80. ,   27. ,   41. ,    0.6],       [ -82. ,  -23. ,   40. ,    1.5],       [ -59. ,  -68. ,   40. ,    1. ],       [  -9. ,  -82. ,   44. ,    1.5],       [  30. ,  -76. ,   37. ,    1. ],       [  72. ,  -43. ,   44. ,    0.9],       [  95. ,    1. ,   40. ,    1.3],       [  72. ,   45. ,   40. ,    1. ],       [  33. ,   86. ,   41. ,    1.3],       [ -15. ,   92. ,   41. ,    0.5],       [ -65. ,   74. ,   35. ,    0.9],       [ -85. ,   21. ,   35. ,    1.2],       [ -85. ,  -24. ,   37. ,    0.6],       [ -59. ,  -68. ,   37. ,    0.7],       [ -17. ,  -92. ,   44. ,    0.6],       [  37. ,  -86. ,   35. ,    0.8],       [  78. ,  -49. ,   41. ,    0.8],       [  96. ,   -1. ,   41. ,    0.9],       [  84. ,   49. ,   37. ,    0.6],       [  46. ,   92. ,   40. ,    1.2],       [ -16. ,   96. ,   42. ,    1.2],       [ -61. ,   76. ,   44. ,    1.5],       [ -93. ,   31. ,   35. ,    1.1],       [-101. ,  -33. ,   39. ,    1.1],       [ -68. ,  -79. ,   38. ,    1.2],       [ -18. , -104. ,   38. ,    0.9],       [  40. ,  -91. ,   35. ,    0.6],       [  81. ,  -54. ,   39. ,    1.3]])
        basis0 = BSplineBasis(6, np.array([-2.2, -1. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.9,  3.3,  3.6,  4.7,
        5.8,  7. ,  8. ,  8. ,  8. ,  8. ,  9.3,  9.9]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2.3,  3. ,  3. ,  3. ,  3. ,
        3. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  1.8,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,True)
        vol2 = vol.clone()
        vol2 *= np.array([  5.8,  10.2,  11.6])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 5.800000
        pt2[...,1] /= 10.200000
        pt2[...,2] /= 11.600000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p6(self):
        controlpoints = np.array([[  -1.,    0.,   -1.],
       [  15.,    4.,   -1.],
       [  23.,   -1.,   -4.],
       [  28.,   -4.,    4.],
       [  41.,   -4.,   -3.],
       [  51.,    3.,    3.],
       [  64.,    0.,   -1.],
       [  75.,    4.,   -5.],
       [  91.,   -2.,   -3.],
       [ 101.,    2.,    3.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  3.3,  3.9,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 6.1,  7.9,  2.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 6.100000
        pt2[...,1] -= 7.900000
        pt2[...,2] -= 2.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p6(self):
        controlpoints = np.array([[ -2.,  -2.,  -4.],
       [  8.,   3.,  -2.],
       [ 29.,  -5.,  -5.],
       [ 37.,  -2.,  -4.],
       [ 45.,  -2.,   0.],
       [ 63.,   4.,  -1.],
       [ 78.,  -2.,   4.],
       [ 86.,   2.,   2.],
       [ 95.,   4.,  -1.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.8,  3.2,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([  8.7,  11.8,   2.1])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 8.700000
        pt2[...,1] /= 11.800000
        pt2[...,2] /= 2.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p77(self):
        controlpoints = np.array([[   2.,    1.,   -3.],       [   8.,    2.,    0.],       [  22.,   -2.,   -5.],       [  29.,   -5.,    1.],       [  39.,    1.,    4.],       [  44.,    3.,   -2.],       [  50.,    2.,    0.],       [  59.,    2.,   -5.],       [  76.,    4.,    3.],       [  85.,    1.,    3.],       [  92.,    3.,   -3.],       [  98.,   -3.,    0.],       [   4.,    8.,    3.],       [   4.,   11.,    4.],       [  16.,    5.,    2.],       [  23.,   10.,   -4.],       [  31.,   11.,    3.],       [  43.,   14.,    4.],       [  56.,   10.,    3.],       [  60.,    7.,   -3.],       [  73.,   10.,   -5.],       [  77.,   13.,   -1.],       [  92.,    4.,   -2.],       [ 103.,    8.,   -1.],       [   3.,   21.,    1.],       [   9.,   17.,    4.],       [  18.,   18.,   -5.],       [  26.,   23.,   -5.],       [  35.,   20.,    3.],       [  46.,   19.,    4.],       [  50.,   15.,    1.],       [  60.,   22.,   -1.],       [  72.,   16.,    2.],       [  83.,   14.,    0.],       [  90.,   22.,   -1.],       [  95.,   21.,    1.],       [  -3.,   23.,   -3.],       [   8.,   23.,    4.],       [  22.,   25.,    0.],       [  23.,   32.,   -5.],       [  36.,   31.,    4.],       [  48.,   24.,    0.],       [  57.,   31.,   -2.],       [  59.,   26.,    0.],       [  70.,   25.,   -3.],       [  77.,   29.,   -5.],       [  90.,   30.,    1.],       [  99.,   22.,    1.],       [   1.,   38.,    1.],       [   8.,   36.,   -4.],       [  13.,   37.,   -4.],       [  22.,   34.,    4.],       [  33.,   35.,    2.],       [  45.,   35.,   -4.],       [  54.,   32.,    3.],       [  60.,   35.,   -2.],       [  73.,   39.,    3.],       [  86.,   37.,   -1.],       [  93.,   40.,   -5.],       [ 103.,   36.,   -2.],       [   2.,   47.,    1.],       [   4.,   49.,    4.],       [  15.,   42.,    0.],       [  26.,   46.,    1.],       [  32.,   48.,    3.],       [  42.,   45.,    3.],       [  59.,   46.,    4.],       [  61.,   46.,    3.],       [  74.,   42.,   -5.],       [  82.,   46.,    0.],       [  92.,   42.,    2.],       [ 104.,   41.,    0.],       [   1.,   56.,    4.],       [   8.,   53.,   -1.],       [  17.,   52.,    1.],       [  29.,   57.,   -3.],       [  32.,   54.,   -2.],       [  43.,   55.,    1.],       [  53.,   49.,   -2.],       [  59.,   58.,    3.],       [  73.,   53.,    1.],       [  85.,   50.,   -2.],       [  88.,   51.,    0.],       [  95.,   49.,   -2.],       [   3.,   63.,   -5.],       [  11.,   64.,   -5.],       [  20.,   59.,    4.],       [  24.,   60.,   -3.],       [  35.,   63.,   -5.],       [  50.,   59.,    2.],       [  57.,   66.,    1.],       [  60.,   59.,   -1.],       [  75.,   68.,    1.],       [  83.,   65.,   -3.],       [  86.,   58.,   -1.],       [  96.,   63.,    2.],       [  -2.,   75.,    4.],       [  12.,   68.,   -3.],       [  21.,   69.,    0.],       [  22.,   67.,    4.],       [  34.,   75.,    1.],       [  43.,   77.,   -5.],       [  55.,   70.,    1.],       [  63.,   70.,   -3.],       [  74.,   71.,    2.],       [  86.,   75.,   -2.],       [  93.,   75.,    0.],       [  98.,   72.,    2.],       [   0.,   85.,   -1.],       [   6.,   79.,    0.],       [  18.,   85.,   -5.],       [  23.,   80.,   -3.],       [  41.,   79.,   -3.],       [  49.,   85.,    0.],       [  53.,   79.,   -2.],       [  62.,   86.,    4.],       [  68.,   84.,   -3.],       [  83.,   84.,    2.],       [  89.,   86.,    0.],       [ 103.,   82.,   -1.],       [   1.,   88.,    4.],       [   5.,   91.,   -5.],       [  21.,   86.,   -4.],       [  26.,   90.,    0.],       [  32.,   87.,   -2.],       [  48.,   86.,   -3.],       [  53.,   91.,   -2.],       [  66.,   86.,   -3.],       [  74.,   94.,   -2.],       [  83.,   94.,   -1.],       [  88.,   87.,   -3.],       [  95.,   95.,   -1.],       [   4.,   98.,   -1.],       [  10.,   98.,   -2.],       [  15.,   99.,    1.],       [  31.,  101.,   -1.],       [  37.,  102.,   -1.],       [  43.,   98.,    4.],       [  58.,   97.,    3.],       [  60.,  104.,    1.],       [  69.,  101.,    2.],       [  84.,  101.,   -2.],       [  88.,  102.,   -4.],       [ 100.,  101.,    3.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  1.9,  3.1,  3.9,
        5.1,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.4,  2.8,  4. ,
        4.9,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ,  6. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 0.5,  9.7,  9.4])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 0.500000
        pt2[...,1] -= 9.700000
        pt2[...,2] -= 9.400000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p75(self):
        controlpoints = np.array([[   1.,    1.,    3.],       [   8.,    3.,   -1.],       [  23.,   -1.,   -3.],       [  33.,    2.,    2.],       [  43.,   -3.,   -2.],       [  54.,   -4.,   -4.],       [  55.,   -3.,    1.],       [  65.,    2.,   -5.],       [  82.,    1.,   -5.],       [  90.,    2.,   -2.],       [  96.,   -4.,    0.],       [   2.,    8.,   -1.],       [  10.,   10.,   -4.],       [  16.,   17.,   -1.],       [  26.,   10.,   -5.],       [  37.,    8.,   -1.],       [  50.,   15.,    0.],       [  58.,   10.,   -1.],       [  66.,    7.,   -5.],       [  83.,   10.,   -5.],       [  92.,   16.,    4.],       [ 100.,   10.,    4.],       [   3.,   22.,    4.],       [   5.,   22.,    4.],       [  18.,   21.,   -2.],       [  28.,   22.,    3.],       [  44.,   25.,    3.],       [  53.,   26.,    2.],       [  62.,   26.,    1.],       [  66.,   29.,    3.],       [  75.,   22.,   -2.],       [  86.,   23.,   -3.],       [  97.,   20.,    1.],       [   3.,   40.,   -4.],       [  13.,   33.,   -3.],       [  22.,   36.,    2.],       [  33.,   40.,    2.],       [  36.,   39.,   -5.],       [  48.,   41.,    2.],       [  61.,   34.,   -5.],       [  74.,   36.,    4.],       [  79.,   32.,    4.],       [  91.,   34.,   -4.],       [ 104.,   32.,    4.],       [  -2.,   54.,   -4.],       [   5.,   50.,    4.],       [  19.,   54.,   -1.],       [  25.,   45.,    0.],       [  42.,   45.,    3.],       [  46.,   48.,   -3.],       [  56.,   54.,   -5.],       [  74.,   51.,    2.],       [  81.,   51.,    3.],       [  92.,   47.,    3.],       [ 100.,   47.,    4.],       [  -5.,   58.,   -2.],       [  10.,   66.,   -3.],       [  18.,   57.,   -3.],       [  33.,   66.,    3.],       [  36.,   63.,    1.],       [  50.,   65.,   -5.],       [  56.,   60.,    0.],       [  67.,   58.,   -2.],       [  82.,   65.,   -5.],       [  94.,   60.,    1.],       [  96.,   62.,    4.],       [   3.,   74.,   -1.],       [  12.,   75.,    1.],       [  24.,   77.,   -4.],       [  34.,   71.,   -5.],       [  35.,   70.,   -4.],       [  51.,   77.,   -5.],       [  64.,   71.,   -3.],       [  73.,   72.,   -5.],       [  81.,   76.,    2.],       [  90.,   73.,    0.],       [  99.,   71.,    4.],       [   2.,   90.,   -5.],       [   9.,   83.,   -4.],       [  15.,   87.,   -4.],       [  31.,   82.,   -1.],       [  43.,   89.,    3.],       [  52.,   87.,   -3.],       [  62.,   92.,   -1.],       [  69.,   83.,   -5.],       [  77.,   87.,    1.],       [  85.,   85.,    0.],       [ 102.,   87.,    2.],       [   3.,  101.,    4.],       [  11.,   97.,    1.],       [  23.,  103.,   -5.],       [  28.,   98.,    4.],       [  35.,   99.,   -5.],       [  45.,  101.,   -2.],       [  63.,  100.,   -1.],       [  71.,   97.,   -4.],       [  80.,   99.,    2.],       [  94.,  101.,    4.],       [  97.,   99.,    0.]])
        basis0 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.1,  2.6,  3.7,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.4,  3.4,  4.3,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([  5.1,   7.2,  11.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 5.100000
        pt2[...,1] /= 7.200000
        pt2[...,2] /= 11.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p576(self):
        controlpoints = np.array([[   1.,   -3.,    3.],       [  16.,   -3.,   -3.],       [  22.,   -5.,   -3.],       [  39.,    4.,    0.],       [  45.,    2.,   -2.],       [  59.,   -5.,   -1.],       [  76.,   -1.,   -5.],       [  85.,    4.,   -5.],       [ 103.,    2.,   -4.],       [   1.,   10.,    3.],       [  14.,    7.,   -4.],       [  29.,    6.,   -5.],       [  40.,    9.,    3.],       [  49.,   10.,   -4.],       [  62.,   13.,    2.],       [  78.,    8.,    1.],       [  85.,   13.,    0.],       [  99.,   10.,    2.],       [  -3.,   19.,   -4.],       [   8.,   27.,    1.],       [  21.,   24.,    3.],       [  37.,   17.,    1.],       [  47.,   25.,   -4.],       [  64.,   19.,   -3.],       [  72.,   20.,    1.],       [  82.,   27.,   -1.],       [  97.,   23.,    3.],       [  -5.,   32.,   -3.],       [  13.,   31.,    3.],       [  28.,   35.,   -2.],       [  33.,   32.,   -5.],       [  52.,   35.,   -3.],       [  65.,   37.,   -3.],       [  79.,   36.,    3.],       [  89.,   31.,    1.],       [  96.,   37.,    3.],       [   1.,   46.,   -3.],       [   8.,   46.,   -1.],       [  24.,   42.,    1.],       [  36.,   43.,   -5.],       [  53.,   45.,    3.],       [  64.,   44.,   -3.],       [  78.,   40.,   -2.],       [  83.,   47.,   -2.],       [ 100.,   46.,    4.],       [  -4.,   54.,    2.],       [  13.,   52.,   -2.],       [  24.,   53.,   -3.],       [  36.,   51.,    0.],       [  50.,   55.,    2.],       [  61.,   54.,    0.],       [  71.,   51.,   -4.],       [  89.,   53.,   -5.],       [ 104.,   58.,    4.],       [   3.,   67.,   -4.],       [  14.,   63.,   -5.],       [  26.,   68.,   -1.],       [  34.,   69.,    3.],       [  50.,   62.,   -4.],       [  60.,   68.,   -3.],       [  76.,   67.,    1.],       [  88.,   64.,    3.],       [  95.,   66.,   -4.],       [  -1.,   75.,   -1.],       [  12.,   79.,   -3.],       [  22.,   77.,   -3.],       [  41.,   74.,   -2.],       [  45.,   79.,    0.],       [  62.,   82.,   -3.],       [  73.,   79.,    2.],       [  87.,   79.,    3.],       [  99.,   79.,   -2.],       [   2.,   92.,   -3.],       [  11.,   86.,   -4.],       [  22.,   85.,   -4.],       [  35.,   85.,    4.],       [  54.,   86.,   -2.],       [  63.,   86.,   -4.],       [  76.,   91.,   -4.],       [  87.,   91.,    4.],       [  95.,   88.,    0.],       [   1.,  103.,    0.],       [  13.,   99.,   -3.],       [  22.,  100.,    0.],       [  40.,   96.,   -3.],       [  52.,  103.,   -1.],       [  58.,   95.,   -2.],       [  70.,  100.,   -4.],       [  85.,  103.,    4.],       [ 104.,   97.,   -2.],       [  -4.,   -1.,   14.],       [  15.,   -5.,   19.],       [  26.,   -5.,   20.],       [  36.,   -1.,   14.],       [  49.,    0.,   13.],       [  62.,    4.,   18.],       [  79.,   -5.,   16.],       [  85.,    4.,   14.],       [ 103.,    2.,   13.],       [  -2.,   15.,   15.],       [  16.,    8.,   16.],       [  26.,   11.,   17.],       [  32.,   14.,   20.],       [  45.,   12.,   12.],       [  67.,    9.,   15.],       [  76.,   13.,   13.],       [  87.,    9.,   20.],       [ 102.,    8.,   14.],       [   0.,   25.,   17.],       [  13.,   18.,   13.],       [  22.,   21.,   16.],       [  41.,   24.,   19.],       [  49.,   23.,   14.],       [  64.,   18.,   17.],       [  76.,   24.,   19.],       [  85.,   26.,   18.],       [ 101.,   26.,   11.],       [   4.,   35.,   21.],       [  10.,   29.,   13.],       [  22.,   33.,   14.],       [  35.,   34.,   18.],       [  49.,   36.,   20.],       [  61.,   29.,   15.],       [  71.,   29.,   19.],       [  85.,   36.,   17.],       [  95.,   37.,   15.],       [   1.,   40.,   18.],       [  11.,   41.,   16.],       [  24.,   41.,   15.],       [  32.,   45.,   19.],       [  46.,   42.,   17.],       [  59.,   48.,   16.],       [  72.,   44.,   17.],       [  88.,   45.,   13.],       [  96.,   48.,   14.],       [  -5.,   55.,   15.],       [  16.,   59.,   20.],       [  21.,   60.,   20.],       [  33.,   56.,   13.],       [  47.,   53.,   20.],       [  61.,   51.,   19.],       [  75.,   52.,   13.],       [  88.,   57.,   14.],       [  99.,   52.,   13.],       [  -3.,   71.,   13.],       [   8.,   68.,   11.],       [  29.,   65.,   20.],       [  40.,   67.,   21.],       [  49.,   70.,   15.],       [  66.,   64.,   20.],       [  70.,   67.,   15.],       [  85.,   67.,   20.],       [  99.,   71.,   18.],       [   1.,   76.,   19.],       [  13.,   76.,   12.],       [  29.,   73.,   11.],       [  39.,   76.,   15.],       [  48.,   81.,   19.],       [  66.,   73.,   17.],       [  76.,   77.,   14.],       [  82.,   73.,   17.],       [ 103.,   75.,   18.],       [  -4.,   92.,   19.],       [   9.,   85.,   20.],       [  24.,   93.,   18.],       [  41.,   87.,   12.],       [  47.,   90.,   12.],       [  58.,   92.,   21.],       [  79.,   92.,   15.],       [  87.,   90.,   13.],       [  97.,   84.,   20.],       [   2.,   95.,   17.],       [  15.,  100.,   17.],       [  26.,  100.,   14.],       [  34.,  103.,   12.],       [  53.,   96.,   19.],       [  61.,  100.,   19.],       [  79.,  100.,   11.],       [  83.,  103.,   18.],       [ 103.,  102.,   18.],       [  -3.,   -2.,   28.],       [  11.,    3.,   29.],       [  22.,    3.,   36.],       [  37.,    2.,   37.],       [  45.,   -3.,   37.],       [  61.,    3.,   37.],       [  70.,   -4.,   28.],       [  89.,    3.,   38.],       [ 102.,    4.,   30.],       [  -2.,   15.,   31.],       [  10.,   13.,   37.],       [  23.,   13.,   32.],       [  37.,   10.,   36.],       [  54.,    7.,   35.],       [  64.,   14.,   30.],       [  73.,   11.,   38.],       [  86.,   15.,   38.],       [ 101.,   12.,   32.],       [  -2.,   22.,   29.],       [   8.,   24.,   36.],       [  28.,   20.,   34.],       [  37.,   19.,   36.],       [  49.,   23.,   33.],       [  62.,   22.,   30.],       [  73.,   25.,   29.],       [  83.,   22.,   36.],       [ 103.,   19.,   35.],       [   4.,   31.,   35.],       [  11.,   34.,   28.],       [  21.,   35.,   36.],       [  37.,   30.,   30.],       [  49.,   28.,   37.],       [  58.,   28.,   33.],       [  71.,   29.,   33.],       [  83.,   34.,   35.],       [  95.,   31.,   28.],       [  -2.,   45.,   28.],       [  11.,   41.,   31.],       [  25.,   42.,   35.],       [  34.,   42.,   37.],       [  50.,   39.,   28.],       [  64.,   44.,   31.],       [  78.,   45.,   32.],       [  83.,   48.,   33.],       [ 102.,   45.,   29.],       [  -1.,   59.,   32.],       [  10.,   57.,   37.],       [  29.,   51.,   33.],       [  38.,   55.,   38.],       [  51.,   51.,   36.],       [  62.,   50.,   30.],       [  70.,   59.,   33.],       [  91.,   53.,   36.],       [  97.,   52.,   36.],       [   1.,   64.,   34.],       [  14.,   66.,   32.],       [  26.,   68.,   37.],       [  35.,   70.,   36.],       [  51.,   70.,   36.],       [  59.,   62.,   34.],       [  77.,   65.,   34.],       [  83.,   65.,   38.],       [  95.,   64.,   38.],       [  -5.,   74.,   35.],       [  14.,   79.,   35.],       [  26.,   78.,   34.],       [  38.,   80.,   35.],       [  51.,   82.,   36.],       [  64.,   77.,   38.],       [  72.,   74.,   32.],       [  86.,   82.,   31.],       [ 103.,   76.,   30.],       [  -5.,   86.,   29.],       [  13.,   86.,   30.],       [  22.,   91.,   29.],       [  33.,   88.,   34.],       [  46.,   89.,   36.],       [  66.,   92.,   36.],       [  79.,   85.,   36.],       [  84.,   91.,   36.],       [  97.,   86.,   32.],       [   4.,   99.,   31.],       [  17.,   99.,   32.],       [  29.,  100.,   36.],       [  36.,  101.,   33.],       [  49.,  101.,   31.],       [  67.,  101.,   33.],       [  77.,  102.,   28.],       [  85.,  102.,   31.],       [ 103.,  100.,   29.],       [   1.,   -5.,   53.],       [   8.,    4.,   51.],       [  29.,    0.,   45.],       [  33.,    0.,   48.],       [  49.,    3.,   46.],       [  60.,   -1.,   46.],       [  70.,   -5.,   50.],       [  87.,    4.,   45.],       [ 101.,    1.,   54.],       [   2.,   11.,   54.],       [   9.,   15.,   53.],       [  21.,    7.,   50.],       [  36.,   14.,   52.],       [  50.,   14.,   52.],       [  59.,   11.,   53.],       [  77.,   12.,   53.],       [  88.,    7.,   49.],       [  97.,   12.,   53.],       [   1.,   24.,   50.],       [   9.,   22.,   45.],       [  29.,   17.,   49.],       [  37.,   21.,   51.],       [  54.,   19.,   48.],       [  57.,   25.,   45.],       [  74.,   18.,   52.],       [  84.,   17.,   51.],       [  98.,   25.,   45.],       [  -4.,   29.,   48.],       [  17.,   34.,   50.],       [  20.,   31.,   52.],       [  38.,   37.,   53.],       [  53.,   29.,   51.],       [  65.,   35.,   53.],       [  76.,   32.,   50.],       [  84.,   35.,   49.],       [ 104.,   36.,   54.],       [   1.,   49.,   47.],       [  11.,   40.,   51.],       [  22.,   41.,   51.],       [  41.,   42.,   45.],       [  51.,   49.,   52.],       [  65.,   43.,   50.],       [  72.,   42.,   48.],       [  88.,   41.,   46.],       [ 102.,   41.,   54.],       [   0.,   59.,   46.],       [  10.,   51.,   48.],       [  21.,   50.,   52.],       [  37.,   50.,   53.],       [  50.,   58.,   47.],       [  63.,   59.,   45.],       [  74.,   59.,   45.],       [  91.,   53.,   51.],       [  98.,   57.,   48.],       [   3.,   68.,   52.],       [   8.,   69.,   54.],       [  20.,   69.,   45.],       [  33.,   65.,   45.],       [  50.,   69.,   48.],       [  57.,   66.,   49.],       [  79.,   70.,   54.],       [  84.,   67.,   46.],       [  98.,   62.,   54.],       [   0.,   82.,   51.],       [  15.,   81.,   50.],       [  26.,   76.,   51.],       [  38.,   81.,   52.],       [  46.,   80.,   46.],       [  66.,   81.,   53.],       [  77.,   80.,   54.],       [  85.,   77.,   54.],       [ 100.,   75.,   48.],       [   0.,   91.,   52.],       [  14.,   84.,   52.],       [  27.,   88.,   53.],       [  38.,   92.,   54.],       [  50.,   88.,   45.],       [  67.,   90.,   46.],       [  73.,   90.,   52.],       [  83.,   92.,   52.],       [  95.,   89.,   52.],       [   0.,   99.,   51.],       [   9.,  102.,   45.],       [  20.,  100.,   53.],       [  36.,  100.,   53.],       [  45.,   96.,   46.],       [  67.,  101.,   49.],       [  74.,  102.,   51.],       [  86.,   98.,   47.],       [  98.,  101.,   53.],       [   1.,   -5.,   61.],       [  12.,   -2.,   69.],       [  25.,    3.,   67.],       [  40.,   -3.,   61.],       [  45.,    3.,   66.],       [  60.,    0.,   67.],       [  77.,   -3.,   68.],       [  89.,    3.,   67.],       [ 104.,   -5.,   67.],       [   1.,   15.,   66.],       [  14.,    6.,   71.],       [  23.,   14.,   69.],       [  41.,    8.,   71.],       [  52.,   13.,   62.],       [  59.,    8.,   63.],       [  78.,   16.,   66.],       [  90.,    7.,   67.],       [ 102.,   10.,   69.],       [   4.,   26.,   63.],       [   8.,   19.,   69.],       [  23.,   25.,   62.],       [  38.,   20.,   64.],       [  54.,   22.,   63.],       [  62.,   26.,   66.],       [  70.,   25.,   71.],       [  89.,   17.,   68.],       [  97.,   23.,   66.],       [   4.,   37.,   69.],       [  16.,   34.,   62.],       [  23.,   30.,   63.],       [  32.,   37.,   66.],       [  54.,   31.,   67.],       [  57.,   34.,   66.],       [  78.,   38.,   64.],       [  89.,   29.,   70.],       [ 102.,   35.,   68.],       [   1.,   40.,   64.],       [  12.,   43.,   69.],       [  21.,   47.,   67.],       [  38.,   46.,   65.],       [  49.,   43.,   65.],       [  61.,   48.,   65.],       [  74.,   49.,   67.],       [  85.,   40.,   64.],       [ 104.,   43.,   64.],       [   0.,   56.,   66.],       [  12.,   52.,   71.],       [  23.,   53.,   66.],       [  34.,   55.,   70.],       [  48.,   51.,   69.],       [  65.,   57.,   61.],       [  71.,   53.,   71.],       [  90.,   57.,   70.],       [  99.,   56.,   69.],       [  -3.,   69.,   66.],       [  11.,   69.,   65.],       [  27.,   70.,   69.],       [  34.,   63.,   71.],       [  47.,   71.,   65.],       [  65.,   69.,   71.],       [  73.,   63.,   69.],       [  87.,   66.,   62.],       [  97.,   68.,   71.],       [   3.,   77.,   68.],       [  15.,   77.,   63.],       [  25.,   79.,   66.],       [  36.,   73.,   68.],       [  49.,   81.,   66.],       [  62.,   80.,   65.],       [  72.,   74.,   67.],       [  88.,   81.,   69.],       [ 104.,   74.,   69.],       [   0.,   91.,   66.],       [  11.,   84.,   71.],       [  21.,   92.,   70.],       [  38.,   85.,   71.],       [  45.,   85.,   64.],       [  64.,   88.,   70.],       [  71.,   91.,   66.],       [  85.,   92.,   62.],       [ 102.,   88.,   64.],       [  -3.,  104.,   64.],       [  10.,   99.,   62.],       [  27.,   95.,   71.],       [  38.,   95.,   62.],       [  54.,   95.,   65.],       [  61.,   97.,   63.],       [  76.,   95.,   71.],       [  84.,   96.,   66.],       [ 104.,   96.,   68.],       [  -4.,    4.,   88.],       [   7.,   -1.,   83.],       [  23.,   -3.,   87.],       [  35.,   -1.,   84.],       [  51.,    2.,   79.],       [  64.,   -5.,   85.],       [  75.,    1.,   85.],       [  92.,   -2.,   82.],       [ 103.,    4.,   87.],       [   4.,   14.,   83.],       [  11.,   14.,   78.],       [  21.,   14.,   83.],       [  34.,   11.,   81.],       [  46.,   10.,   78.],       [  65.,   14.,   86.],       [  79.,   13.,   83.],       [  87.,   14.,   87.],       [  99.,    9.,   84.],       [  -2.,   22.,   79.],       [   7.,   17.,   83.],       [  27.,   20.,   86.],       [  41.,   21.,   84.],       [  52.,   23.,   82.],       [  66.,   23.,   81.],       [  74.,   23.,   79.],       [  83.,   21.,   82.],       [  96.,   17.,   86.],       [  -5.,   34.,   84.],       [   9.,   32.,   85.],       [  24.,   30.,   82.],       [  35.,   29.,   82.],       [  45.,   36.,   79.],       [  58.,   31.,   85.],       [  78.,   29.,   81.],       [  86.,   34.,   87.],       [  95.,   30.,   87.],       [  -1.,   48.,   88.],       [  12.,   42.,   82.],       [  24.,   42.,   79.],       [  38.,   46.,   84.],       [  52.,   49.,   81.],       [  60.,   44.,   82.],       [  78.,   41.,   87.],       [  89.,   42.,   81.],       [ 104.,   43.,   82.],       [   1.,   53.,   87.],       [  10.,   55.,   83.],       [  25.,   51.,   82.],       [  41.,   59.,   87.],       [  54.,   55.,   80.],       [  64.,   56.,   87.],       [  71.,   55.,   81.],       [  87.,   56.,   82.],       [  96.,   53.,   78.],       [   4.,   67.,   80.],       [  14.,   65.,   83.],       [  25.,   65.,   84.],       [  38.,   63.,   80.],       [  52.,   64.,   82.],       [  62.,   61.,   87.],       [  76.,   64.,   81.],       [  83.,   63.,   83.],       [ 100.,   64.,   81.],       [  -2.,   72.,   81.],       [  10.,   81.,   87.],       [  28.,   77.,   87.],       [  38.,   78.,   79.],       [  47.,   82.,   78.],       [  61.,   81.,   79.],       [  77.,   74.,   83.],       [  88.,   81.,   84.],       [  97.,   80.,   82.],       [  -1.,   84.,   85.],       [  14.,   84.,   81.],       [  29.,   87.,   84.],       [  42.,   90.,   85.],       [  53.,   89.,   80.],       [  66.,   84.,   84.],       [  72.,   89.,   82.],       [  82.,   85.,   85.],       [  96.,   87.,   86.],       [  -1.,   99.,   78.],       [   9.,   95.,   78.],       [  21.,   97.,   85.],       [  37.,  103.,   87.],       [  49.,   95.,   82.],       [  58.,  101.,   85.],       [  77.,   95.,   84.],       [  84.,   98.,   86.],       [ 104.,   98.,   78.],       [  -1.,   -2.,  100.],       [  17.,    3.,   96.],       [  25.,    0.,   95.],       [  41.,    4.,  102.],       [  49.,    3.,   96.],       [  65.,    2.,   96.],       [  70.,   -2.,  100.],       [  91.,   -4.,  101.],       [ 102.,    2.,  101.],       [   0.,   15.,  102.],       [  13.,   11.,  104.],       [  28.,   15.,  102.],       [  36.,    7.,  100.],       [  48.,   13.,  104.],       [  66.,    7.,  101.],       [  70.,    8.,  104.],       [  88.,    7.,   95.],       [ 104.,   14.,   95.],       [  -1.,   21.,  103.],       [  10.,   26.,   99.],       [  25.,   21.,   96.],       [  34.,   22.,  101.],       [  45.,   19.,   97.],       [  61.,   22.,   98.],       [  77.,   18.,   96.],       [  91.,   20.,   98.],       [  95.,   17.,   98.],       [   3.,   34.,   95.],       [  11.,   36.,   95.],       [  29.,   29.,  101.],       [  37.,   31.,  101.],       [  46.,   36.,  104.],       [  60.,   32.,  102.],       [  76.,   31.,   95.],       [  87.,   32.,   97.],       [ 103.,   37.,  100.],       [  -5.,   42.,   95.],       [  16.,   43.,   96.],       [  29.,   43.,  101.],       [  34.,   42.,   97.],       [  46.,   42.,   97.],       [  58.,   40.,   96.],       [  79.,   47.,  102.],       [  87.,   41.,   96.],       [  99.,   45.,  101.],       [   1.,   58.,   95.],       [  15.,   53.,   97.],       [  20.,   59.,  103.],       [  39.,   56.,   96.],       [  47.,   56.,   97.],       [  65.,   57.,   96.],       [  76.,   54.,  100.],       [  91.,   59.,   96.],       [  98.,   53.,   96.],       [   1.,   65.,   96.],       [  14.,   62.,   99.],       [  26.,   64.,  101.],       [  39.,   69.,  103.],       [  46.,   69.,   96.],       [  63.,   67.,  103.],       [  78.,   63.,  101.],       [  87.,   67.,   99.],       [ 101.,   62.,   95.],       [   1.,   77.,   97.],       [  10.,   78.,   98.],       [  28.,   81.,   99.],       [  35.,   80.,   97.],       [  54.,   74.,  101.],       [  58.,   73.,  102.],       [  75.,   72.,  100.],       [  91.,   80.,   97.],       [  98.,   74.,   96.],       [   3.,   93.,  100.],       [  15.,   84.,   95.],       [  29.,   86.,  100.],       [  36.,   93.,  101.],       [  48.,   85.,   97.],       [  64.,   88.,   98.],       [  72.,   87.,  104.],       [  92.,   89.,  102.],       [ 103.,   92.,   98.],       [   4.,  103.,  102.],       [  12.,   99.,   99.],       [  26.,  104.,  104.],       [  36.,   98.,   96.],       [  53.,  102.,  104.],       [  58.,  104.,   95.],       [  72.,   99.,  100.],       [  87.,   98.,   99.],       [ 101.,   95.,  102.]])
        basis0 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  1.8,  3.2,  3.9,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.3,  2.7,  4. ,
        4. ,  4. ,  4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 3. ,  7.1,  5.3])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 3.000000
        pt2[...,1] -= 7.100000
        pt2[...,2] -= 5.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p656(self):
        controlpoints = np.array([[   3.,    4.,   -1.],       [  13.,   -2.,   -5.],       [  23.,    1.,    4.],       [  30.,    4.,   -4.],       [  43.,    0.,   -5.],       [  57.,    1.,   -5.],       [  69.,   -1.,   -3.],       [  72.,    2.,    1.],       [  85.,    0.,   -1.],       [  97.,   -4.,   -3.],       [  -2.,    9.,   -4.],       [  10.,   14.,   -4.],       [  25.,   14.,   -5.],       [  29.,   16.,    4.],       [  47.,   11.,    2.],       [  53.,   13.,    3.],       [  62.,   12.,   -5.],       [  77.,   16.,   -2.],       [  93.,   15.,    0.],       [  99.,   10.,   -1.],       [   4.,   26.,   -1.],       [  11.,   26.,    1.],       [  21.,   28.,    3.],       [  38.,   20.,   -4.],       [  49.,   27.,   -2.],       [  59.,   27.,    3.],       [  71.,   29.,    0.],       [  73.,   20.,    1.],       [  84.,   29.,   -4.],       [  99.,   26.,   -1.],       [   3.,   32.,   -1.],       [  13.,   38.,    0.],       [  24.,   37.,    2.],       [  33.,   36.,    0.],       [  41.,   33.,   -3.],       [  57.,   34.,    4.],       [  67.,   32.,    1.],       [  81.,   40.,    1.],       [  86.,   37.,   -4.],       [  97.,   39.,   -2.],       [  -2.,   47.,    1.],       [  10.,   46.,    0.],       [  23.,   45.,   -2.],       [  35.,   48.,   -4.],       [  42.,   53.,    0.],       [  52.,   47.,   -4.],       [  70.,   47.,   -2.],       [  78.,   52.,    0.],       [  85.,   54.,    2.],       [  97.,   54.,    2.],       [  -4.,   58.,    0.],       [  12.,   59.,    0.],       [  22.,   60.,   -5.],       [  31.,   62.,    4.],       [  46.,   64.,    2.],       [  56.,   65.,   -2.],       [  68.,   63.,   -1.],       [  77.,   64.,    4.],       [  90.,   60.,    4.],       [  99.,   65.,   -1.],       [  -2.,   77.,    3.],       [   8.,   79.,   -2.],       [  21.,   72.,   -2.],       [  31.,   78.,   -4.],       [  41.,   70.,   -1.],       [  52.,   70.,   -3.],       [  71.,   75.,   -2.],       [  75.,   73.,   -3.],       [  88.,   79.,   -2.],       [  99.,   77.,    3.],       [  -2.,   90.,    0.],       [  15.,   82.,    4.],       [  20.,   82.,   -1.],       [  36.,   86.,   -2.],       [  44.,   83.,   -4.],       [  51.,   85.,    1.],       [  70.,   89.,    0.],       [  81.,   82.,   -3.],       [  90.,   92.,   -1.],       [  98.,   91.,    4.],       [   1.,  103.,    3.],       [  10.,   97.,   -2.],       [  21.,  104.,    1.],       [  35.,   98.,    1.],       [  40.,  100.,    0.],       [  54.,  102.,    2.],       [  71.,   96.,    1.],       [  76.,   95.,    1.],       [  89.,  101.,    0.],       [  97.,   95.,   -4.],       [  -1.,   -1.,   12.],       [   9.,    0.,    9.],       [  20.,   -3.,    6.],       [  30.,    0.,   11.],       [  39.,   -2.,   10.],       [  56.,   -5.,   15.],       [  63.,    4.,   11.],       [  81.,    1.,    6.],       [  90.,    4.,   14.],       [  96.,    0.,   10.],       [   4.,    7.,    9.],       [  12.,   15.,   12.],       [  17.,   10.,   15.],       [  37.,   17.,   15.],       [  44.,   12.,   12.],       [  58.,   11.,    9.],       [  65.,   13.,   13.],       [  82.,   17.,   11.],       [  93.,    9.,   15.],       [  99.,   12.,    7.],       [  -3.,   26.,   12.],       [  12.,   21.,   12.],       [  18.,   21.,   11.],       [  28.,   29.,   10.],       [  48.,   23.,   13.],       [  58.,   20.,   13.],       [  71.,   28.,    8.],       [  76.,   20.,   10.],       [  88.,   27.,    9.],       [ 103.,   26.,    7.],       [   2.,   42.,    8.],       [  14.,   34.,   15.],       [  22.,   40.,   11.],       [  35.,   33.,    8.],       [  41.,   40.,    8.],       [  51.,   42.,   15.],       [  63.,   41.,   10.],       [  76.,   36.,   11.],       [  88.,   39.,   11.],       [  96.,   36.,   11.],       [   3.,   54.,   15.],       [  13.,   54.,   13.],       [  23.,   48.,   12.],       [  29.,   45.,    8.],       [  46.,   48.,   12.],       [  51.,   48.,    8.],       [  70.,   53.,    9.],       [  79.,   52.,   12.],       [  92.,   53.,   15.],       [ 103.,   45.,   10.],       [   2.,   66.,    8.],       [   8.,   67.,    8.],       [  24.,   64.,    6.],       [  34.,   65.,   13.],       [  42.,   63.,    8.],       [  51.,   63.,    8.],       [  67.,   61.,   14.],       [  79.,   59.,   10.],       [  89.,   65.,   14.],       [  98.,   62.,    6.],       [   2.,   75.,   12.],       [  10.,   77.,   13.],       [  23.,   71.,   14.],       [  31.,   79.,   13.],       [  48.,   78.,    7.],       [  56.,   71.,    7.],       [  70.,   75.,    8.],       [  81.,   74.,   10.],       [  84.,   78.,   11.],       [ 103.,   73.,   13.],       [   3.,   89.,   14.],       [   8.,   84.,   14.],       [  24.,   87.,   15.],       [  32.,   84.,    6.],       [  48.,   86.,   15.],       [  56.,   83.,   15.],       [  62.,   89.,   12.],       [  79.,   91.,   12.],       [  93.,   86.,   12.],       [ 101.,   89.,   15.],       [   3.,   99.,   14.],       [  12.,  103.,   10.],       [  24.,   97.,   12.],       [  37.,  104.,    6.],       [  46.,   98.,    7.],       [  54.,   98.,    7.],       [  68.,  102.,   10.],       [  75.,  100.,   10.],       [  91.,   97.,    7.],       [ 100.,  103.,    6.],       [   4.,    4.,   22.],       [  15.,   -4.,   26.],       [  24.,    1.,   23.],       [  35.,    3.,   18.],       [  43.,   -3.,   18.],       [  54.,   -1.,   21.],       [  68.,   -2.,   27.],       [  74.,   -2.,   25.],       [  90.,    0.,   17.],       [  98.,   -5.,   21.],       [   0.,   14.,   23.],       [   7.,   14.,   20.],       [  17.,   16.,   20.],       [  30.,    9.,   17.],       [  48.,   13.,   20.],       [  59.,   17.,   21.],       [  64.,   16.,   20.],       [  81.,   16.,   22.],       [  84.,   16.,   18.],       [ 101.,   10.,   25.],       [   0.,   26.,   20.],       [  15.,   22.,   19.],       [  17.,   21.,   26.],       [  32.,   21.,   26.],       [  46.,   26.,   17.],       [  52.,   29.,   18.],       [  63.,   28.,   18.],       [  79.,   20.,   25.],       [  93.,   22.,   24.],       [  97.,   26.,   21.],       [  -1.,   37.,   17.],       [  12.,   33.,   27.],       [  18.,   41.,   22.],       [  35.,   41.,   23.],       [  47.,   42.,   23.],       [  51.,   33.,   25.],       [  65.,   41.,   25.],       [  74.,   39.,   17.],       [  90.,   32.,   22.],       [  95.,   35.,   18.],       [  -2.,   46.,   19.],       [  14.,   49.,   18.],       [  18.,   45.,   20.],       [  29.,   50.,   18.],       [  49.,   50.,   24.],       [  53.,   47.,   19.],       [  70.,   51.,   24.],       [  81.,   50.,   17.],       [  93.,   48.,   22.],       [ 104.,   47.,   22.],       [  -5.,   64.,   20.],       [   8.,   65.,   20.],       [  18.,   63.,   19.],       [  33.,   61.,   18.],       [  40.,   63.,   20.],       [  54.,   63.,   21.],       [  62.,   64.,   18.],       [  80.,   64.,   18.],       [  89.,   63.,   26.],       [ 104.,   59.,   23.],       [   2.,   72.,   22.],       [   6.,   76.,   18.],       [  17.,   71.,   18.],       [  36.,   72.,   24.],       [  45.,   76.,   19.],       [  52.,   79.,   24.],       [  62.,   70.,   19.],       [  74.,   72.,   24.],       [  93.,   77.,   20.],       [ 103.,   71.,   26.],       [  -3.,   90.,   17.],       [   6.,   91.,   20.],       [  20.,   83.,   22.],       [  34.,   90.,   27.],       [  41.,   92.,   23.],       [  57.,   92.,   22.],       [  71.,   86.,   18.],       [  82.,   85.,   22.],       [  86.,   88.,   17.],       [ 101.,   82.,   21.],       [  -4.,   98.,   18.],       [  13.,   97.,   23.],       [  19.,   99.,   19.],       [  28.,   97.,   17.],       [  43.,  103.,   24.],       [  59.,   95.,   22.],       [  65.,   96.,   25.],       [  75.,  100.,   17.],       [  89.,  104.,   27.],       [  97.,  100.,   22.],       [   2.,    4.,   32.],       [   8.,    0.,   28.],       [  23.,   -4.,   32.],       [  29.,   -2.,   30.],       [  42.,    0.,   34.],       [  56.,    0.,   32.],       [  63.,   -2.,   37.],       [  74.,    3.,   37.],       [  91.,   -5.,   32.],       [ 103.,   -4.,   33.],       [  -1.,   15.,   28.],       [   7.,   14.,   37.],       [  18.,   10.,   29.],       [  31.,   16.,   35.],       [  41.,   10.,   31.],       [  53.,   12.,   30.],       [  63.,   13.,   33.],       [  74.,   10.,   34.],       [  87.,   10.,   36.],       [ 104.,   14.,   37.],       [   1.,   21.,   34.],       [  14.,   28.,   31.],       [  19.,   23.,   30.],       [  37.,   26.,   38.],       [  41.,   25.,   38.],       [  56.,   23.,   29.],       [  64.,   20.,   33.],       [  80.,   23.,   29.],       [  90.,   24.,   30.],       [  97.,   28.,   33.],       [  -1.,   34.,   29.],       [   7.,   41.,   33.],       [  26.,   37.,   36.],       [  37.,   40.,   33.],       [  41.,   36.,   28.],       [  55.,   33.,   33.],       [  62.,   39.,   36.],       [  80.,   33.,   36.],       [  93.,   41.,   37.],       [ 104.,   40.,   30.],       [  -2.,   47.,   35.],       [  14.,   46.,   32.],       [  26.,   45.,   33.],       [  29.,   50.,   33.],       [  42.,   46.,   35.],       [  54.,   50.,   28.],       [  63.,   47.,   35.],       [  76.,   48.,   30.],       [  90.,   49.,   30.],       [  96.,   48.,   34.],       [   1.,   62.,   30.],       [   9.,   63.,   37.],       [  20.,   59.,   32.],       [  36.,   57.,   29.],       [  44.,   63.,   35.],       [  57.,   67.,   30.],       [  67.,   64.,   37.],       [  80.,   65.,   29.],       [  92.,   63.,   32.],       [  96.,   62.,   33.],       [   0.,   74.,   35.],       [  11.,   78.,   29.],       [  18.,   75.,   37.],       [  33.,   79.,   29.],       [  39.,   74.,   31.],       [  52.,   75.,   35.],       [  70.,   79.,   35.],       [  73.,   72.,   33.],       [  86.,   78.,   31.],       [  95.,   72.,   35.],       [   2.,   85.,   35.],       [  14.,   88.,   35.],       [  25.,   91.,   30.],       [  35.,   86.,   36.],       [  45.,   89.,   35.],       [  60.,   87.,   29.],       [  65.,   87.,   33.],       [  80.,   88.,   30.],       [  87.,   85.,   30.],       [ 104.,   85.,   35.],       [  -2.,  101.,   32.],       [  13.,  102.,   33.],       [  26.,  103.,   35.],       [  32.,  103.,   36.],       [  43.,   96.,   29.],       [  60.,  100.,   33.],       [  64.,  101.,   33.],       [  73.,  104.,   30.],       [  87.,  103.,   37.],       [  97.,   99.,   32.],       [  -4.,    2.,   42.],       [  13.,    4.,   43.],       [  24.,   -4.,   44.],       [  33.,    1.,   41.],       [  49.,    0.,   41.],       [  58.,   -3.,   47.],       [  70.,    3.,   43.],       [  79.,   -4.,   42.],       [  84.,    1.,   47.],       [  97.,   -1.,   45.],       [  -2.,   10.,   41.],       [   7.,   15.,   46.],       [  24.,   12.,   45.],       [  33.,   14.,   41.],       [  44.,    9.,   44.],       [  57.,   17.,   39.],       [  71.,   10.,   39.],       [  80.,   13.,   43.],       [  87.,    8.,   40.],       [  99.,   15.,   47.],       [   3.,   20.,   46.],       [  11.,   20.,   48.],       [  22.,   28.,   39.],       [  31.,   26.,   39.],       [  41.,   22.,   44.],       [  52.,   23.,   39.],       [  70.,   25.,   41.],       [  75.,   26.,   47.],       [  86.,   23.,   42.],       [ 100.,   20.,   44.],       [   2.,   33.,   45.],       [  13.,   34.,   42.],       [  21.,   36.,   41.],       [  30.,   42.,   47.],       [  43.,   40.,   49.],       [  51.,   37.,   47.],       [  71.,   42.,   44.],       [  75.,   40.,   41.],       [  84.,   38.,   39.],       [  99.,   36.,   39.],       [   4.,   50.,   40.],       [  14.,   45.,   39.],       [  19.,   45.,   40.],       [  35.,   54.,   42.],       [  45.,   53.,   49.],       [  55.,   52.,   45.],       [  70.,   46.,   42.],       [  81.,   53.,   46.],       [  85.,   48.,   42.],       [  97.,   51.,   47.],       [  -1.,   64.,   46.],       [  14.,   64.,   41.],       [  24.,   61.,   47.],       [  30.,   62.,   41.],       [  46.,   67.,   42.],       [  55.,   65.,   48.],       [  62.,   58.,   48.],       [  74.,   58.,   47.],       [  87.,   65.,   42.],       [  96.,   61.,   42.],       [  -1.,   78.,   40.],       [   7.,   72.,   45.],       [  26.,   72.,   47.],       [  35.,   73.,   43.],       [  41.,   70.,   40.],       [  60.,   74.,   43.],       [  65.,   76.,   43.],       [  77.,   73.,   48.],       [  87.,   70.,   46.],       [  98.,   74.,   44.],       [   4.,   85.,   48.],       [   8.,   84.,   49.],       [  17.,   85.,   46.],       [  34.,   82.,   40.],       [  42.,   84.,   48.],       [  55.,   87.,   46.],       [  69.,   85.,   40.],       [  77.,   90.,   48.],       [  89.,   90.,   47.],       [ 101.,   85.,   45.],       [   3.,  104.,   48.],       [  14.,  104.,   43.],       [  22.,   95.,   46.],       [  30.,   96.,   45.],       [  45.,  100.,   49.],       [  60.,  104.,   44.],       [  62.,  100.,   44.],       [  78.,   95.,   48.],       [  91.,  103.,   40.],       [  98.,  104.,   43.],       [   1.,    0.,   59.],       [  14.,   -2.,   59.],       [  22.,    1.,   59.],       [  34.,   -2.,   54.],       [  40.,   -4.,   56.],       [  57.,    1.,   51.],       [  70.,   -3.,   51.],       [  78.,   -2.,   60.],       [  89.,    2.,   54.],       [  95.,   -4.,   54.],       [  -2.,   14.,   52.],       [  14.,    8.,   58.],       [  25.,   16.,   60.],       [  30.,   12.,   57.],       [  49.,   14.,   53.],       [  51.,    8.,   55.],       [  67.,    9.,   57.],       [  81.,   14.,   57.],       [  90.,    7.,   52.],       [ 103.,   14.,   52.],       [  -2.,   23.,   53.],       [  11.,   21.,   54.],       [  21.,   24.,   59.],       [  32.,   27.,   59.],       [  46.,   22.,   57.],       [  52.,   23.,   52.],       [  69.,   24.,   51.],       [  73.,   28.,   51.],       [  90.,   23.,   51.],       [ 103.,   20.,   53.],       [   0.,   39.,   58.],       [  11.,   36.,   55.],       [  22.,   42.,   53.],       [  32.,   37.,   58.],       [  41.,   33.,   59.],       [  60.,   33.,   57.],       [  64.,   32.,   53.],       [  77.,   32.,   50.],       [  91.,   34.,   55.],       [ 100.,   36.,   51.],       [  -1.,   49.,   60.],       [  12.,   52.,   51.],       [  26.,   45.,   54.],       [  34.,   47.,   59.],       [  39.,   54.,   52.],       [  54.,   54.,   53.],       [  66.,   46.,   60.],       [  78.,   48.,   58.],       [  90.,   49.,   51.],       [  95.,   51.,   59.],       [   1.,   63.,   56.],       [  10.,   60.,   51.],       [  23.,   59.,   50.],       [  38.,   58.,   53.],       [  44.,   62.,   53.],       [  51.,   63.,   51.],       [  64.,   57.,   53.],       [  75.,   66.,   60.],       [  90.,   66.,   51.],       [  97.,   61.,   58.],       [   3.,   79.,   56.],       [  14.,   74.,   52.],       [  22.,   78.,   59.],       [  31.,   71.,   57.],       [  40.,   71.,   51.],       [  55.,   79.,   57.],       [  69.,   74.,   51.],       [  79.,   76.,   50.],       [  89.,   76.,   56.],       [  98.,   75.,   53.],       [   2.,   88.,   52.],       [   7.,   86.,   55.],       [  23.,   92.,   54.],       [  34.,   91.,   51.],       [  48.,   82.,   58.],       [  51.,   86.,   59.],       [  61.,   84.,   57.],       [  81.,   84.,   58.],       [  84.,   87.,   54.],       [ 100.,   88.,   59.],       [   2.,   99.,   59.],       [   7.,   96.,   58.],       [  17.,  103.,   50.],       [  31.,  103.,   59.],       [  47.,  100.,   56.],       [  52.,  104.,   50.],       [  65.,  101.,   56.],       [  81.,   95.,   52.],       [  88.,  103.,   59.],       [  96.,   96.,   57.],       [   3.,    0.,   66.],       [   7.,   -2.,   62.],       [  17.,    4.,   65.],       [  31.,    2.,   66.],       [  48.,    0.,   64.],       [  53.,    0.,   67.],       [  65.,    2.,   71.],       [  79.,   -5.,   62.],       [  84.,    4.,   61.],       [ 103.,    3.,   67.],       [   4.,    9.,   64.],       [  10.,   13.,   67.],       [  25.,   17.,   66.],       [  32.,   11.,   68.],       [  45.,   10.,   70.],       [  52.,    8.,   69.],       [  63.,   13.,   61.],       [  76.,   14.,   70.],       [  84.,    8.,   68.],       [ 104.,   12.,   70.],       [   4.,   26.,   68.],       [  10.,   24.,   66.],       [  19.,   22.,   62.],       [  38.,   29.,   70.],       [  43.,   26.,   67.],       [  59.,   29.,   65.],       [  62.,   26.,   68.],       [  78.,   22.,   65.],       [  87.,   24.,   68.],       [  98.,   22.,   61.],       [  -2.,   38.,   69.],       [  13.,   37.,   62.],       [  24.,   42.,   66.],       [  29.,   42.,   66.],       [  45.,   40.,   71.],       [  58.,   34.,   62.],       [  68.,   36.,   68.],       [  74.,   36.,   68.],       [  88.,   37.,   66.],       [ 104.,   35.,   67.],       [  -4.,   48.,   61.],       [   9.,   54.,   64.],       [  17.,   47.,   62.],       [  31.,   51.,   65.],       [  40.,   46.,   70.],       [  51.,   45.,   68.],       [  70.,   46.,   70.],       [  82.,   51.,   64.],       [  93.,   48.,   71.],       [  97.,   48.,   67.],       [   2.,   65.,   62.],       [   6.,   60.,   65.],       [  19.,   60.,   62.],       [  35.,   66.,   65.],       [  42.,   63.,   68.],       [  56.,   59.,   65.],       [  68.,   61.,   69.],       [  74.,   64.,   64.],       [  84.,   64.,   69.],       [ 100.,   67.,   71.],       [  -2.,   77.,   62.],       [  15.,   79.,   63.],       [  20.,   79.,   62.],       [  34.,   79.,   62.],       [  39.,   79.,   63.],       [  55.,   72.,   65.],       [  67.,   72.,   63.],       [  77.,   73.,   62.],       [  92.,   79.,   69.],       [  97.,   74.,   69.],       [  -3.,   83.,   69.],       [   9.,   92.,   70.],       [  22.,   90.,   65.],       [  32.,   82.,   65.],       [  48.,   90.,   67.],       [  59.,   90.,   68.],       [  63.,   85.,   64.],       [  78.,   91.,   64.],       [  88.,   89.,   62.],       [  99.,   84.,   67.],       [  -2.,   98.,   67.],       [  15.,  104.,   68.],       [  22.,  101.,   64.],       [  37.,  103.,   70.],       [  43.,   99.,   67.],       [  53.,   95.,   65.],       [  67.,  104.,   62.],       [  78.,  103.,   68.],       [  90.,   98.,   62.],       [  97.,   97.,   65.],       [  -1.,    4.,   75.],       [  15.,   -3.,   81.],       [  25.,   -2.,   80.],       [  36.,    0.,   73.],       [  46.,   -3.,   72.],       [  51.,   -2.,   74.],       [  70.,   -5.,   76.],       [  73.,   -5.,   75.],       [  89.,    4.,   82.],       [ 101.,   -2.,   81.],       [  -1.,   11.,   78.],       [   9.,   14.,   79.],       [  19.,   14.,   73.],       [  37.,   12.,   72.],       [  48.,   17.,   76.],       [  55.,   13.,   73.],       [  69.,   13.,   81.],       [  73.,   12.,   77.],       [  88.,   10.,   79.],       [ 101.,   14.,   74.],       [  -4.,   27.,   79.],       [  10.,   20.,   75.],       [  24.,   25.,   72.],       [  28.,   20.,   73.],       [  40.,   29.,   81.],       [  56.,   29.,   77.],       [  69.,   20.,   76.],       [  77.,   24.,   79.],       [  83.,   22.,   74.],       [  98.,   26.,   77.],       [   1.,   36.,   81.],       [   6.,   32.,   77.],       [  24.,   39.,   73.],       [  28.,   33.,   76.],       [  40.,   35.,   73.],       [  52.,   39.,   79.],       [  63.,   33.,   76.],       [  72.,   34.,   78.],       [  87.,   39.,   80.],       [  98.,   33.,   81.],       [  -1.,   52.,   79.],       [  11.,   54.,   75.],       [  24.,   45.,   76.],       [  29.,   45.,   81.],       [  46.,   54.,   75.],       [  58.,   54.,   74.],       [  63.,   53.,   79.],       [  76.,   51.,   76.],       [  87.,   53.,   77.],       [ 101.,   50.,   80.],       [  -3.,   64.,   76.],       [  11.,   59.,   77.],       [  18.,   67.,   80.],       [  34.,   66.,   74.],       [  46.,   67.,   74.],       [  54.,   67.,   73.],       [  71.,   58.,   81.],       [  73.,   64.,   77.],       [  84.,   66.,   76.],       [  99.,   66.,   74.],       [  -3.,   77.,   76.],       [   8.,   78.,   79.],       [  24.,   70.,   76.],       [  32.,   78.,   77.],       [  47.,   79.,   74.],       [  57.,   73.,   77.],       [  68.,   73.,   74.],       [  74.,   77.,   75.],       [  90.,   78.,   76.],       [ 103.,   77.,   82.],       [  -2.,   83.,   73.],       [  15.,   86.,   79.],       [  23.,   89.,   81.],       [  34.,   88.,   74.],       [  43.,   87.,   80.],       [  51.,   90.,   80.],       [  67.,   85.,   81.],       [  72.,   82.,   77.],       [  89.,   91.,   80.],       [ 103.,   88.,   82.],       [  -2.,  101.,   78.],       [   7.,   99.,   80.],       [  17.,  102.,   81.],       [  33.,   96.,   78.],       [  41.,  100.,   78.],       [  54.,   99.,   74.],       [  69.,  103.,   74.],       [  80.,   96.,   76.],       [  91.,   99.,   80.],       [ 101.,   99.,   75.],       [  -2.,   -5.,   86.],       [  14.,    4.,   86.],       [  24.,   -2.,   86.],       [  35.,    4.,   85.],       [  42.,    0.,   90.],       [  51.,   -5.,   85.],       [  64.,    1.,   87.],       [  77.,    2.,   91.],       [  86.,   -1.,   88.],       [  97.,    3.,   91.],       [   1.,   12.,   88.],       [  13.,   11.,   84.],       [  19.,   15.,   88.],       [  29.,   11.,   90.],       [  45.,   14.,   93.],       [  52.,   14.,   92.],       [  71.,    9.,   85.],       [  78.,   14.,   84.],       [  88.,   12.,   87.],       [ 104.,   16.,   85.],       [   1.,   24.,   88.],       [  15.,   26.,   89.],       [  21.,   20.,   88.],       [  36.,   28.,   88.],       [  44.,   20.,   86.],       [  51.,   23.,   83.],       [  62.,   26.,   90.],       [  76.,   24.,   84.],       [  93.,   29.,   89.],       [ 101.,   28.,   92.],       [   2.,   35.,   91.],       [   9.,   33.,   89.],       [  17.,   35.,   93.],       [  30.,   38.,   86.],       [  42.,   40.,   86.],       [  54.,   34.,   93.],       [  66.,   41.,   92.],       [  73.,   38.,   91.],       [  84.,   32.,   87.],       [  97.,   32.,   91.],       [   3.,   49.,   91.],       [  13.,   54.,   92.],       [  25.,   53.,   91.],       [  29.,   48.,   89.],       [  40.,   50.,   89.],       [  53.,   45.,   89.],       [  67.,   46.,   87.],       [  75.,   52.,   89.],       [  88.,   48.,   86.],       [  99.,   45.,   87.],       [  -4.,   61.,   91.],       [  15.,   61.,   84.],       [  17.,   65.,   87.],       [  34.,   60.,   83.],       [  41.,   60.,   93.],       [  58.,   67.,   92.],       [  61.,   63.,   90.],       [  77.,   62.,   86.],       [  92.,   59.,   93.],       [ 104.,   60.,   92.],       [  -3.,   78.,   90.],       [   6.,   72.,   84.],       [  22.,   74.,   86.],       [  28.,   79.,   92.],       [  44.,   73.,   90.],       [  54.,   74.,   87.],       [  71.,   77.,   91.],       [  80.,   77.,   88.],       [  87.,   71.,   86.],       [ 102.,   75.,   90.],       [   4.,   91.,   90.],       [  16.,   87.,   92.],       [  22.,   89.,   92.],       [  37.,   82.,   93.],       [  47.,   84.,   84.],       [  58.,   84.,   90.],       [  68.,   91.,   86.],       [  80.,   85.,   89.],       [  85.,   86.,   85.],       [  98.,   82.,   86.],       [  -3.,   98.,   87.],       [   7.,  102.,   85.],       [  21.,  100.,   93.],       [  31.,   98.,   89.],       [  44.,   98.,   90.],       [  52.,  101.,   87.],       [  64.,   96.,   85.],       [  77.,   95.,   85.],       [  89.,   97.,   93.],       [ 103.,   95.,   93.],       [  -1.,   -1.,  103.],       [  13.,   -4.,   99.],       [  25.,   -1.,  103.],       [  34.,    4.,  102.],       [  48.,   -5.,   95.],       [  57.,   -2.,  103.],       [  66.,    2.,   96.],       [  76.,   -2.,  104.],       [  91.,    0.,  101.],       [ 102.,    2.,   99.],       [   4.,   13.,   97.],       [   9.,    8.,   95.],       [  23.,   13.,  103.],       [  28.,   12.,  101.],       [  40.,   12.,   98.],       [  52.,    9.,  100.],       [  62.,   16.,  100.],       [  75.,    7.,  104.],       [  86.,   10.,   96.],       [ 102.,   17.,   95.],       [  -2.,   27.,   97.],       [   6.,   25.,   96.],       [  26.,   21.,  100.],       [  30.,   21.,   97.],       [  49.,   27.,  103.],       [  57.,   21.,  103.],       [  69.,   28.,   98.],       [  75.,   21.,  102.],       [  84.,   22.,   96.],       [ 101.,   21.,   99.],       [   3.,   38.,  101.],       [  13.,   36.,  104.],       [  20.,   40.,   99.],       [  34.,   37.,  104.],       [  49.,   42.,   99.],       [  55.,   38.,   95.],       [  68.,   32.,  102.],       [  75.,   38.,   99.],       [  86.,   40.,   99.],       [ 104.,   36.,  103.],       [  -5.,   46.,  102.],       [  10.,   50.,  101.],       [  22.,   46.,   95.],       [  29.,   50.,   95.],       [  45.,   48.,  104.],       [  53.,   45.,   97.],       [  68.,   48.,   95.],       [  75.,   54.,   98.],       [  85.,   47.,   97.],       [  99.,   47.,   95.],       [   0.,   61.,  102.],       [  13.,   63.,  101.],       [  20.,   62.,   95.],       [  38.,   60.,  101.],       [  45.,   65.,  100.],       [  58.,   64.,   99.],       [  63.,   61.,   99.],       [  74.,   62.,  101.],       [  91.,   58.,  100.],       [  95.,   59.,   99.],       [  -3.,   72.,  104.],       [   8.,   77.,   96.],       [  17.,   78.,   97.],       [  36.,   74.,   99.],       [  45.,   79.,  104.],       [  58.,   73.,  104.],       [  65.,   76.,  101.],       [  79.,   77.,   95.],       [  89.,   79.,  103.],       [ 103.,   72.,  104.],       [   2.,   87.,  103.],       [   8.,   84.,  101.],       [  23.,   87.,   98.],       [  33.,   83.,   95.],       [  44.,   88.,  104.],       [  53.,   91.,   97.],       [  62.,   87.,  102.],       [  80.,   86.,   95.],       [  85.,   86.,  102.],       [ 100.,   90.,  104.],       [  -5.,  102.,   98.],       [  10.,  101.,   99.],       [  19.,  104.,  102.],       [  31.,  103.,  102.],       [  44.,  102.,   98.],       [  59.,  101.,   96.],       [  68.,  100.,  101.],       [  76.,  104.,   96.],       [  92.,  102.,   99.],       [  99.,   95.,   98.]])
        basis0 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  2. ,  2.7,  3.9,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  2.3,  3.2,  3.9,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.4,  3.2,  3.8,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([ 4.1,  2.5,  8.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 4.100000
        pt2[...,1] /= 2.500000
        pt2[...,2] /= 8.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p5_C0_periodic(self):
        controlpoints = np.array([[ 99.,   1.,   4.],
       [ 59.,  74.,   4.],
       [-24.,  98.,   3.],
       [-94.,  42.,  -1.],
       [-90., -40.,  -3.],
       [-18., -94.,  -3.],
       [ 64., -83.,   3.]])
        basis0 = BSplineBasis(5, np.array([-0.8,  0. ,  0. ,  0. ,  0. ,  0.9,  2.1,  3.2,  4. ,  4. ,  4. ,
        4. ,  4.9]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 6.3,  8.9,  2. ])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 6.300000
        pt2[...,1] -= 8.900000
        pt2[...,2] -= 2.000000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p5_C0_periodic(self):
        controlpoints = np.array([[  98.,   -3.,    2.],
       [  49.,   90.,    3.],
       [ -52.,   81.,   -4.],
       [-103.,   -3.,    1.],
       [ -48.,  -90.,   -1.],
       [  49.,  -84.,    3.]])
        basis0 = BSplineBasis(5, np.array([-0.8,  0. ,  0. ,  0. ,  0. ,  1.1,  2.2,  3. ,  3. ,  3. ,  3. ,
        4.1]),0)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([  5.8,   9.1,  11.9])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 5.800000
        pt2[...,1] /= 9.100000
        pt2[...,2] /= 11.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p77_C0_periodic(self):
        controlpoints = np.array([[  64.,   -2.,    4.],       [  47.,   36.,    1.],       [  17.,   55.,   -1.],       [ -21.,   58.,   -3.],       [ -53.,   38.,    0.],       [ -58.,   -2.,    4.],       [ -50.,  -39.,   -1.],       [ -15.,  -62.,   -4.],       [  22.,  -57.,   -2.],       [  47.,  -40.,    2.],       [  62.,    1.,   -3.],       [  56.,   39.,   -2.],       [  16.,   58.,   -3.],       [ -19.,   60.,   -4.],       [ -58.,   36.,    1.],       [ -65.,   -3.,    0.],       [ -53.,  -41.,   -4.],       [ -25.,  -64.,    2.],       [  17.,  -65.,   -1.],       [  55.,  -40.,    2.],       [  72.,   -1.,   -2.],       [  57.,   37.,   -1.],       [  23.,   71.,   -3.],       [ -19.,   72.,    3.],       [ -61.,   42.,    3.],       [ -72.,    1.,   -3.],       [ -62.,  -44.,   -4.],       [ -26.,  -65.,   -4.],       [  22.,  -70.,   -4.],       [  60.,  -38.,    4.],       [  80.,    1.,   -1.],       [  62.,   46.,   -2.],       [  27.,   68.,    3.],       [ -21.,   75.,    4.],       [ -66.,   50.,    1.],       [ -79.,   -1.,   -4.],       [ -58.,  -50.,   -4.],       [ -21.,  -74.,   -4.],       [  26.,  -70.,    3.],       [  65.,  -42.,    0.],       [  84.,   -4.,   -3.],       [  70.,   51.,    2.],       [  29.,   83.,   -1.],       [ -30.,   82.,   -5.],       [ -70.,   45.,    1.],       [ -83.,    2.,   -5.],       [ -63.,  -48.,   -5.],       [ -26.,  -76.,    0.],       [  21.,  -81.,   -2.],       [  70.,  -51.,    4.],       [  87.,   -2.,    4.],       [  69.,   47.,    3.],       [  31.,   89.,   -5.],       [ -23.,   83.,    2.],       [ -74.,   53.,    0.],       [ -86.,    1.,    4.],       [ -74.,  -53.,    0.],       [ -29.,  -81.,   -3.],       [  23.,  -85.,   -4.],       [  75.,  -57.,    4.],       [  96.,   -3.,   -3.],       [  81.,   52.,    1.],       [  25.,   87.,   -1.],       [ -27.,   87.,    3.],       [ -82.,   57.,    2.],       [ -99.,    0.,   -3.],       [ -82.,  -58.,   -5.],       [ -31.,  -89.,    0.],       [  24.,  -86.,   -3.],       [  72.,  -57.,   -1.],       [ 101.,   -2.,   -2.],       [  83.,   58.,   -5.],       [  31.,   94.,   -4.],       [ -35.,   97.,   -2.],       [ -80.,   62.,   -4.],       [-103.,   -4.,    1.],       [ -78.,  -57.,   -3.],       [ -29.,  -93.,    1.],       [  33.,  -95.,   -4.],       [  82.,  -63.,    4.]])
        basis0 = BSplineBasis(7, np.array([-1.2,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.2,  3.3,  3.8,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  6.2]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.4,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 1.3,  5.3,  1.9])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 1.300000
        pt2[...,1] -= 5.300000
        pt2[...,2] -= 1.900000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p55_C0_periodic(self):
        controlpoints = np.array([[  58.,   -1.,   -1.],       [  43.,   43.,    3.],       [  -1.,   58.,   -2.],       [ -44.,   45.,   -4.],       [ -57.,    0.,    4.],       [ -39.,  -42.,    2.],       [   3.,  -65.,   -4.],       [  46.,  -45.,    4.],       [  68.,    2.,    0.],       [  48.,   49.,    0.],       [   1.,   65.,   -2.],       [ -51.,   42.,    1.],       [ -70.,   -3.,   -2.],       [ -44.,  -48.,   -5.],       [   4.,  -62.,    3.],       [  45.,  -47.,   -3.],       [  67.,    4.,    0.],       [  49.,   50.,    4.],       [   4.,   72.,    3.],       [ -45.,   49.,   -5.],       [ -67.,   -1.,   -3.],       [ -49.,  -54.,    1.],       [   4.,  -66.,    1.],       [  49.,  -48.,    1.],       [  73.,   -4.,    2.],       [  54.,   49.,   -1.],       [  -3.,   79.,   -3.],       [ -51.,   49.,    1.],       [ -74.,    4.,    2.],       [ -49.,  -49.,   -3.],       [   1.,  -80.,   -2.],       [  51.,  -49.,    4.],       [  79.,    4.,   -2.],       [  51.,   54.,   -2.],       [   3.,   82.,    2.],       [ -62.,   59.,   -1.],       [ -78.,    4.,   -5.],       [ -55.,  -61.,   -5.],       [  -4.,  -81.,    2.],       [  56.,  -57.,    4.],       [  87.,   -5.,   -4.],       [  60.,   61.,    1.],       [  -4.,   81.,   -2.],       [ -56.,   56.,   -2.],       [ -87.,    3.,    3.],       [ -62.,  -56.,    2.],       [   2.,  -88.,   -3.],       [  64.,  -65.,   -1.],       [  86.,    0.,   -4.],       [  62.,   66.,   -1.],       [   3.,   91.,   -1.],       [ -63.,   64.,   -4.],       [ -87.,   -1.,   -3.],       [ -61.,  -60.,   -1.],       [   3.,  -87.,    2.],       [  66.,  -62.,   -1.],       [  91.,   -4.,    1.],       [  70.,   71.,   -4.],       [   0.,   91.,   -2.],       [ -68.,   67.,    3.],       [ -95.,   -3.,   -5.],       [ -63.,  -68.,    4.],       [   3.,  -98.,    2.],       [  65.,  -70.,    3.],       [ 103.,    3.,   -1.],       [  68.,   66.,   -5.],       [  -4.,  103.,    3.],       [ -66.,   70.,   -1.],       [-101.,    4.,    2.],       [ -75.,  -67.,    1.],       [  -2.,  -97.,    0.],       [  73.,  -74.,   -3.]])
        basis0 = BSplineBasis(5, np.array([-0.7,  0. ,  0. ,  0. ,  0. ,  1.3,  1.7,  3.2,  4.3,  5. ,  5. ,
        5. ,  5. ,  6.3]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.1,  3.2,  4. ,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([  4.9,   9.9,  11.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 4.900000
        pt2[...,1] /= 9.900000
        pt2[...,2] /= 11.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p676_C0_periodic(self):
        controlpoints = np.array([[  50.,    0.,   -5.],       [  27.,   35.,    3.],       [ -15.,   44.,    2.],       [ -41.,   26.,   -1.],       [ -41.,  -20.,    2.],       [ -12.,  -49.,   -3.],       [  27.,  -37.,   -2.],       [  58.,    2.,    4.],       [  38.,   47.,    2.],       [ -11.,   55.,    2.],       [ -45.,   26.,   -2.],       [ -48.,  -28.,   -2.],       [ -12.,  -53.,   -3.],       [  31.,  -41.,    0.],       [  59.,   -5.,   -2.],       [  40.,   50.,   -5.],       [ -17.,   58.,    1.],       [ -55.,   25.,   -5.],       [ -50.,  -25.,    0.],       [ -19.,  -63.,    2.],       [  41.,  -48.,   -3.],       [  62.,    3.,   -5.],       [  43.,   47.,   -1.],       [ -17.,   67.,    0.],       [ -61.,   32.,    2.],       [ -54.,  -25.,    2.],       [ -15.,  -61.,   -3.],       [  38.,  -52.,   -1.],       [  74.,   -4.,    3.],       [  47.,   55.,   -1.],       [ -18.,   64.,   -5.],       [ -59.,   30.,   -4.],       [ -65.,  -28.,    0.],       [ -19.,  -67.,    0.],       [  42.,  -56.,   -4.],       [  73.,   -1.,   -4.],       [  41.,   53.,   -1.],       [ -20.,   77.,   -4.],       [ -67.,   28.,    3.],       [ -66.,  -32.,   -2.],       [ -18.,  -70.,    1.],       [  41.,  -60.,   -3.],       [  80.,   -1.,    2.],       [  50.,   64.,   -1.],       [ -21.,   82.,   -2.],       [ -72.,   32.,    2.],       [ -76.,  -33.,    1.],       [ -14.,  -83.,    2.],       [  53.,  -61.,   -4.],       [  89.,   -3.,   -5.],       [  55.,   65.,    3.],       [ -23.,   79.,    4.],       [ -75.,   39.,    2.],       [ -75.,  -42.,   -2.],       [ -21.,  -85.,   -5.],       [  51.,  -63.,   -4.],       [  89.,    4.,   -2.],       [  58.,   67.,    4.],       [ -20.,   91.,   -1.],       [ -83.,   37.,    4.],       [ -78.,  -42.,   -3.],       [ -21.,  -89.,   -1.],       [  51.,  -75.,   -4.],       [  90.,    0.,   -1.],       [  63.,   79.,    0.],       [ -27.,   92.,   -3.],       [ -84.,   43.,    1.],       [ -85.,  -42.,   -2.],       [ -25.,  -89.,    4.],       [  60.,  -78.,    0.],       [  96.,    3.,   -4.],       [  65.,   81.,    4.],       [ -26.,  100.,    2.],       [ -94.,   39.,    3.],       [ -94.,  -41.,    0.],       [ -20.,  -93.,    0.],       [  58.,  -78.,   -4.],       [  48.,   -1.,    4.],       [  34.,   38.,    0.],       [  -9.,   46.,    3.],       [ -49.,   18.,    6.],       [ -46.,  -19.,    0.],       [  -9.,  -52.,    7.],       [  26.,  -39.,    4.],       [  54.,   -4.,    1.],       [  31.,   45.,    1.],       [ -14.,   57.,    6.],       [ -51.,   20.,    5.],       [ -46.,  -27.,    7.],       [ -14.,  -49.,    0.],       [  30.,  -41.,    7.],       [  56.,   -5.,    8.],       [  37.,   48.,    9.],       [ -10.,   59.,    0.],       [ -51.,   26.,    6.],       [ -51.,  -26.,    7.],       [ -17.,  -63.,    4.],       [  35.,  -49.,    9.],       [  62.,   -1.,    8.],       [  36.,   49.,    8.],       [ -15.,   65.,    2.],       [ -55.,   28.,    4.],       [ -60.,  -26.,    4.],       [ -13.,  -69.,    7.],       [  44.,  -49.,    7.],       [  70.,   -3.,    5.],       [  41.,   55.,    4.],       [ -14.,   70.,    3.],       [ -64.,   30.,    2.],       [ -61.,  -29.,    1.],       [ -16.,  -66.,    8.],       [  39.,  -56.,    1.],       [  72.,    1.,    2.],       [  49.,   56.,    4.],       [ -16.,   75.,    1.],       [ -64.,   35.,    1.],       [ -69.,  -29.,    8.],       [ -14.,  -74.,    3.],       [  44.,  -62.,    4.],       [  75.,    3.,    2.],       [  52.,   64.,    1.],       [ -14.,   75.,    9.],       [ -74.,   34.,    9.],       [ -70.,  -33.,    9.],       [ -20.,  -80.,    1.],       [  52.,  -58.,    3.],       [  83.,    3.,    8.],       [  55.,   64.,    0.],       [ -24.,   80.,    5.],       [ -81.,   34.,    6.],       [ -82.,  -37.,    4.],       [ -16.,  -83.,    5.],       [  49.,  -72.,    2.],       [  93.,   -3.,    7.],       [  59.,   70.,    3.],       [ -21.,   88.,    7.],       [ -81.,   39.,    8.],       [ -81.,  -42.,    4.],       [ -25.,  -89.,    6.],       [  59.,  -69.,    9.],       [  93.,   -1.,    2.],       [  61.,   76.,    8.],       [ -25.,   94.,    6.],       [ -89.,   39.,    6.],       [ -84.,  -40.,    3.],       [ -25.,  -90.,    3.],       [  56.,  -78.,    8.],       [  96.,   -4.,    0.],       [  60.,   74.,    0.],       [ -20.,   97.,    8.],       [ -90.,   45.,    0.],       [ -88.,  -40.,    9.],       [ -23.,  -95.,    4.],       [  59.,  -82.,    8.],       [  50.,    0.,    9.],       [  34.,   37.,   13.],       [  -7.,   44.,   10.],       [ -46.,   18.,   13.],       [ -43.,  -25.,    7.],       [ -11.,  -53.,    9.],       [  36.,  -43.,   14.],       [  59.,    1.,    5.],       [  33.,   44.,   14.],       [ -17.,   56.,    7.],       [ -49.,   20.,   10.],       [ -53.,  -24.,   13.],       [ -14.,  -53.,   12.],       [  35.,  -48.,   13.],       [  63.,   -4.,   13.],       [  36.,   44.,   11.],       [ -17.,   53.,   11.],       [ -53.,   26.,    8.],       [ -54.,  -27.,    8.],       [ -10.,  -55.,    8.],       [  32.,  -52.,    5.],       [  68.,   -1.,   13.],       [  41.,   52.,   10.],       [ -18.,   67.,    8.],       [ -54.,   25.,    5.],       [ -63.,  -26.,    9.],       [ -12.,  -66.,    7.],       [  38.,  -54.,   12.],       [  65.,    4.,    6.],       [  46.,   54.,   11.],       [ -21.,   67.,   12.],       [ -69.,   27.,   10.],       [ -67.,  -32.,    8.],       [ -15.,  -65.,    6.],       [  40.,  -53.,   12.],       [  71.,    4.,    6.],       [  45.,   57.,    8.],       [ -19.,   68.,   12.],       [ -70.,   33.,   12.],       [ -65.,  -38.,   13.],       [ -13.,  -74.,    5.],       [  46.,  -56.,    9.],       [  84.,    4.,   12.],       [  53.,   63.,    9.],       [ -16.,   73.,    8.],       [ -75.,   30.,   14.],       [ -68.,  -33.,   11.],       [ -14.,  -74.,    8.],       [  50.,  -68.,   13.],       [  88.,    3.,   10.],       [  57.,   71.,   14.],       [ -18.,   85.,    9.],       [ -75.,   35.,   11.],       [ -81.,  -38.,    7.],       [ -23.,  -80.,   11.],       [  48.,  -64.,   11.],       [  89.,    4.,    5.],       [  56.,   66.,    8.],       [ -24.,   90.,    6.],       [ -79.,   38.,    6.],       [ -85.,  -35.,   10.],       [ -26.,  -89.,    7.],       [  57.,  -74.,    8.],       [  96.,   -4.,   12.],       [  61.,   73.,   11.],       [ -21.,   94.,   14.],       [ -89.,   40.,    6.],       [ -85.,  -38.,   13.],       [ -19.,  -93.,   11.],       [  62.,  -79.,    7.],       [  97.,   -3.,   12.],       [  58.,   77.,   13.],       [ -21.,  101.,   13.],       [ -86.,   42.,    5.],       [ -87.,  -40.,    8.],       [ -27., -100.,   10.],       [  58.,  -81.,   14.],       [  46.,   -2.,   12.],       [  29.,   36.,   14.],       [ -11.,   46.,   17.],       [ -44.,   19.,   16.],       [ -47.,  -18.,   11.],       [ -13.,  -51.,   17.],       [  30.,  -37.,   10.],       [  59.,    3.,   17.],       [  32.,   42.,   18.],       [ -11.,   54.,   12.],       [ -46.,   24.,   12.],       [ -46.,  -29.,   16.],       [ -17.,  -51.,   14.],       [  36.,  -42.,   13.],       [  61.,   -3.,   11.],       [  41.,   42.,   11.],       [ -15.,   56.,   12.],       [ -54.,   22.,   19.],       [ -50.,  -31.,   10.],       [ -17.,  -58.,   10.],       [  36.,  -45.,   18.],       [  63.,   -4.,   15.],       [  43.,   49.,   19.],       [ -11.,   62.,   13.],       [ -58.,   32.,   15.],       [ -58.,  -28.,   10.],       [ -10.,  -62.,   10.],       [  42.,  -48.,   19.],       [  67.,    4.,   11.],       [  46.,   57.,   11.],       [ -15.,   64.,   14.],       [ -61.,   32.,   15.],       [ -60.,  -26.,   18.],       [ -13.,  -71.,   10.],       [  43.,  -53.,   12.],       [  76.,   -4.,   13.],       [  50.,   59.,   11.],       [ -17.,   77.,   13.],       [ -64.,   27.,   16.],       [ -68.,  -34.,   15.],       [ -20.,  -78.,   16.],       [  44.,  -59.,   15.],       [  83.,    1.,   17.],       [  52.,   58.,   11.],       [ -23.,   82.,   18.],       [ -70.,   39.,   13.],       [ -75.,  -36.,   16.],       [ -21.,  -83.,   14.],       [  51.,  -67.,   14.],       [  86.,    4.,   16.],       [  51.,   64.,   17.],       [ -15.,   87.,   15.],       [ -81.,   34.,   15.],       [ -75.,  -41.,   13.],       [ -20.,  -86.,   18.],       [  50.,  -67.,   11.],       [  86.,    4.,   17.],       [  51.,   70.,   10.],       [ -24.,   89.,   13.],       [ -85.,   39.,   14.],       [ -86.,  -41.,   19.],       [ -18.,  -88.,   10.],       [  56.,  -72.,   15.],       [  90.,   -2.,   18.],       [  55.,   69.,   14.],       [ -20.,   91.,   18.],       [ -87.,   45.,   15.],       [ -88.,  -40.,   10.],       [ -25.,  -93.,   14.],       [  59.,  -79.,   12.],       [  97.,    0.,   13.],       [  64.,   79.,   12.],       [ -27.,   96.,   19.],       [ -87.,   39.,   13.],       [ -86.,  -42.,   15.],       [ -23., -101.,   14.],       [  63.,  -81.,   19.],       [  46.,    0.,   18.],       [  34.,   35.,   16.],       [ -14.,   49.,   23.],       [ -43.,   17.,   15.],       [ -50.,  -27.,   19.],       [  -8.,  -45.,   22.],       [  35.,  -43.,   22.],       [  51.,   -1.,   17.],       [  39.,   38.,   21.],       [ -12.,   50.,   16.],       [ -47.,   19.,   18.],       [ -54.,  -27.,   17.],       [ -12.,  -53.,   15.],       [  31.,  -48.,   24.],       [  58.,   -2.,   17.],       [  34.,   51.,   16.],       [ -18.,   59.,   20.],       [ -53.,   26.,   22.],       [ -60.,  -24.,   17.],       [ -13.,  -58.,   16.],       [  39.,  -43.,   21.],       [  62.,   -4.,   22.],       [  42.,   49.,   24.],       [ -15.,   58.,   21.],       [ -64.,   32.,   15.],       [ -56.,  -27.,   19.],       [ -14.,  -65.,   16.],       [  44.,  -50.,   15.],       [  69.,    4.,   23.],       [  39.,   59.,   23.],       [ -14.,   71.,   16.],       [ -61.,   28.,   23.],       [ -61.,  -34.,   20.],       [ -20.,  -65.,   16.],       [  38.,  -50.,   21.],       [  78.,   -1.,   17.],       [  47.,   62.,   21.],       [ -15.,   73.,   23.],       [ -72.,   31.,   15.],       [ -67.,  -33.,   15.],       [ -13.,  -73.,   23.],       [  45.,  -62.,   22.],       [  75.,    2.,   15.],       [  45.,   60.,   16.],       [ -19.,   82.,   23.],       [ -70.,   38.,   19.],       [ -77.,  -35.,   24.],       [ -22.,  -75.,   15.],       [  49.,  -60.,   15.],       [  86.,    2.,   23.],       [  57.,   68.,   19.],       [ -19.,   81.,   15.],       [ -79.,   38.,   21.],       [ -82.,  -40.,   15.],       [ -20.,  -78.,   19.],       [  51.,  -67.,   24.],       [  94.,   -3.,   21.],       [  59.,   71.,   22.],       [ -18.,   92.,   18.],       [ -85.,   43.,   18.],       [ -83.,  -36.,   18.],       [ -18.,  -83.,   17.],       [  53.,  -74.,   17.],       [  96.,    1.,   20.],       [  58.,   74.,   17.],       [ -25.,   96.,   17.],       [ -82.,   45.,   15.],       [ -83.,  -38.,   15.],       [ -19.,  -92.,   21.],       [  57.,  -71.,   17.],       [ 102.,   -2.,   16.],       [  60.,   78.,   23.],       [ -24.,   95.,   15.],       [ -88.,   47.,   24.],       [ -92.,  -44.,   18.],       [ -27.,  -95.,   19.],       [  66.,  -79.,   18.],       [  52.,   -3.,   21.],       [  33.,   40.,   20.],       [ -15.,   50.,   24.],       [ -50.,   17.,   28.],       [ -46.,  -19.,   26.],       [ -15.,  -45.,   25.],       [  29.,  -40.,   24.],       [  58.,    4.,   26.],       [  33.,   44.,   24.],       [  -9.,   48.,   20.],       [ -47.,   23.,   29.],       [ -53.,  -21.,   20.],       [ -10.,  -59.,   20.],       [  32.,  -42.,   20.],       [  55.,   -5.,   21.],       [  41.,   42.,   26.],       [ -10.,   62.,   23.],       [ -59.,   24.,   27.],       [ -57.,  -27.,   26.],       [ -14.,  -58.,   20.],       [  35.,  -52.,   24.],       [  62.,   -3.,   22.],       [  41.,   54.,   26.],       [ -16.,   61.,   25.],       [ -64.,   25.,   27.],       [ -62.,  -30.,   22.],       [ -19.,  -63.,   23.],       [  43.,  -54.,   20.],       [  70.,   -3.,   20.],       [  42.,   54.,   29.],       [ -16.,   69.,   23.],       [ -62.,   29.,   20.],       [ -59.,  -30.,   29.],       [ -16.,  -71.,   25.],       [  41.,  -55.,   25.],       [  76.,    2.,   24.],       [  42.,   55.,   20.],       [ -21.,   75.,   20.],       [ -67.,   33.,   22.],       [ -69.,  -29.,   27.],       [ -17.,  -69.,   28.],       [  43.,  -55.,   29.],       [  76.,   -3.,   25.],       [  47.,   64.,   21.],       [ -21.,   80.,   22.],       [ -75.,   34.,   29.],       [ -75.,  -37.,   25.],       [ -22.,  -83.,   26.],       [  51.,  -66.,   27.],       [  88.,    4.,   21.],       [  48.,   65.,   20.],       [ -19.,   83.,   24.],       [ -74.,   40.,   28.],       [ -75.,  -36.,   21.],       [ -19.,  -84.,   21.],       [  52.,  -63.,   22.],       [  88.,   -4.,   29.],       [  58.,   71.,   26.],       [ -25.,   90.,   20.],       [ -79.,   41.,   23.],       [ -77.,  -45.,   21.],       [ -18.,  -89.,   29.],       [  56.,  -73.,   24.],       [  94.,   -3.,   25.],       [  55.,   76.,   21.],       [ -22.,   93.,   29.],       [ -86.,   44.,   27.],       [ -83.,  -45.,   20.],       [ -19.,  -94.,   26.],       [  63.,  -75.,   23.],       [  98.,   -1.,   21.],       [  63.,   81.,   22.],       [ -24.,   99.,   23.],       [ -86.,   39.,   29.],       [ -88.,  -41.,   28.],       [ -27.,  -95.,   20.],       [  60.,  -82.,   28.],       [  46.,   -3.,   28.],       [  31.,   43.,   25.],       [  -9.,   45.,   30.],       [ -44.,   25.,   29.],       [ -47.,  -25.,   34.],       [ -11.,  -49.,   28.],       [  34.,  -37.,   31.],       [  51.,    2.,   27.],       [  33.,   42.,   29.],       [  -9.,   56.,   30.],       [ -46.,   21.,   32.],       [ -54.,  -21.,   25.],       [ -17.,  -57.,   33.],       [  29.,  -39.,   26.],       [  55.,    3.,   28.],       [  39.,   46.,   33.],       [ -13.,   54.,   25.],       [ -53.,   28.,   25.],       [ -50.,  -24.,   25.],       [ -11.,  -55.,   29.],       [  39.,  -45.,   31.],       [  69.,    2.,   28.],       [  38.,   50.,   32.],       [ -12.,   61.,   33.],       [ -59.,   31.,   34.],       [ -61.,  -29.,   28.],       [ -14.,  -67.,   33.],       [  44.,  -51.,   27.],       [  73.,    4.,   25.],       [  47.,   56.,   33.],       [ -17.,   66.,   25.],       [ -65.,   33.,   28.],       [ -60.,  -35.,   25.],       [ -18.,  -71.,   30.],       [  45.,  -53.,   32.],       [  74.,    0.,   25.],       [  42.,   55.,   33.],       [ -21.,   68.,   27.],       [ -68.,   36.,   25.],       [ -73.,  -30.,   31.],       [ -22.,  -74.,   32.],       [  48.,  -56.,   33.],       [  84.,    2.,   32.],       [  48.,   62.,   34.],       [ -18.,   82.,   33.],       [ -75.,   37.,   29.],       [ -71.,  -33.,   32.],       [ -23.,  -74.,   32.],       [  53.,  -64.,   34.],       [  84.,   -5.,   29.],       [  55.,   70.,   27.],       [ -23.,   79.,   31.],       [ -78.,   37.,   29.],       [ -77.,  -40.,   27.],       [ -24.,  -86.,   28.],       [  52.,  -65.,   28.],       [  88.,   -4.,   26.],       [  51.,   74.,   25.],       [ -18.,   90.,   32.],       [ -80.,   39.,   25.],       [ -81.,  -44.,   32.],       [ -25.,  -90.,   25.],       [  56.,  -69.,   32.],       [  97.,   -3.,   32.],       [  58.,   76.,   31.],       [ -22.,   95.,   30.],       [ -90.,   44.,   33.],       [ -85.,  -45.,   30.],       [ -23.,  -95.,   27.],       [  56.,  -77.,   27.],       [ 101.,   -5.,   29.],       [  60.,   74.,   32.],       [ -26.,   92.,   30.],       [ -89.,   42.,   26.],       [ -87.,  -45.,   26.],       [ -23.,  -96.,   27.],       [  64.,  -75.,   33.],       [  51.,    0.,   35.],       [  35.,   37.,   37.],       [  -9.,   48.,   33.],       [ -49.,   17.,   36.],       [ -41.,  -21.,   33.],       [  -8.,  -54.,   37.],       [  31.,  -39.,   33.],       [  58.,    2.,   39.],       [  35.,   42.,   37.],       [ -15.,   58.,   35.],       [ -49.,   28.,   37.],       [ -47.,  -26.,   32.],       [ -17.,  -50.,   35.],       [  29.,  -43.,   35.],       [  57.,    2.,   32.],       [  40.,   42.,   31.],       [ -12.,   54.,   34.],       [ -50.,   30.,   34.],       [ -58.,  -30.,   30.],       [ -17.,  -59.,   31.],       [  37.,  -49.,   37.],       [  61.,    4.,   34.],       [  40.,   46.,   33.],       [ -15.,   66.,   37.],       [ -60.,   23.,   39.],       [ -61.,  -28.,   30.],       [ -17.,  -63.,   30.],       [  41.,  -50.,   37.],       [  69.,    1.,   38.],       [  44.,   56.,   36.],       [ -16.,   72.,   38.],       [ -61.,   34.,   31.],       [ -66.,  -34.,   34.],       [ -15.,  -71.,   32.],       [  38.,  -52.,   35.],       [  70.,   -5.,   34.],       [  46.,   57.,   38.],       [ -13.,   71.,   31.],       [ -73.,   30.,   30.],       [ -66.,  -29.,   35.],       [ -15.,  -71.,   37.],       [  43.,  -59.,   36.],       [  75.,    4.,   39.],       [  47.,   61.,   36.],       [ -19.,   79.,   30.],       [ -70.,   37.,   38.],       [ -75.,  -32.,   39.],       [ -23.,  -80.,   35.],       [  45.,  -67.,   38.],       [  84.,   -5.,   31.],       [  53.,   63.,   36.],       [ -23.,   84.,   39.],       [ -75.,   34.,   31.],       [ -81.,  -36.,   37.],       [ -24.,  -87.,   38.],       [  55.,  -67.,   34.],       [  90.,   -5.,   30.],       [  52.,   67.,   30.],       [ -19.,   89.,   34.],       [ -82.,   41.,   32.],       [ -86.,  -39.,   38.],       [ -23.,  -90.,   35.],       [  54.,  -71.,   33.],       [  97.,    2.,   36.],       [  62.,   76.,   33.],       [ -20.,   87.,   33.],       [ -89.,   46.,   32.],       [ -88.,  -39.,   31.],       [ -20.,  -91.,   33.],       [  56.,  -74.,   36.],       [ 102.,   -5.,   38.],       [  64.,   74.,   31.],       [ -26.,   98.,   39.],       [ -93.,   39.,   35.],       [ -92.,  -46.,   30.],       [ -27.,  -96.,   32.],       [  67.,  -80.,   35.],       [  48.,   -5.,   37.],       [  27.,   38.,   44.],       [  -7.,   47.,   37.],       [ -43.,   22.,   38.],       [ -45.,  -27.,   38.],       [ -16.,  -46.,   44.],       [  34.,  -43.,   40.],       [  50.,    4.,   40.],       [  38.,   47.,   39.],       [ -16.,   54.,   44.],       [ -53.,   23.,   37.],       [ -55.,  -24.,   44.],       [ -17.,  -50.,   37.],       [  39.,  -41.,   35.],       [  59.,   -2.,   39.],       [  37.,   43.,   43.],       [ -12.,   55.,   36.],       [ -53.,   26.,   35.],       [ -50.,  -26.,   40.],       [ -17.,  -63.,   36.],       [  32.,  -44.,   36.],       [  63.,    0.,   37.],       [  37.,   51.,   37.],       [ -15.,   63.,   37.],       [ -56.,   29.,   36.],       [ -57.,  -25.,   42.],       [ -14.,  -63.,   36.],       [  38.,  -55.,   37.],       [  66.,   -3.,   39.],       [  38.,   50.,   39.],       [ -20.,   66.,   36.],       [ -66.,   29.,   40.],       [ -60.,  -32.,   38.],       [ -20.,  -67.,   43.],       [  48.,  -57.,   44.],       [  76.,   -2.,   42.],       [  43.,   59.,   43.],       [ -17.,   71.,   43.],       [ -64.,   34.,   44.],       [ -68.,  -36.,   42.],       [ -15.,  -73.,   37.],       [  45.,  -58.,   44.],       [  75.,   -5.,   35.],       [  45.,   61.,   42.],       [ -17.,   74.,   42.],       [ -72.,   31.,   40.],       [ -74.,  -35.,   35.],       [ -20.,  -75.,   40.],       [  53.,  -59.,   38.],       [  81.,    3.,   36.],       [  54.,   66.,   41.],       [ -22.,   78.,   37.],       [ -79.,   33.,   36.],       [ -81.,  -39.,   44.],       [ -19.,  -81.,   41.],       [  50.,  -67.,   38.],       [  93.,   -2.,   41.],       [  54.,   66.,   41.],       [ -23.,   90.,   44.],       [ -80.,   43.,   39.],       [ -79.,  -42.,   35.],       [ -22.,  -84.,   36.],       [  55.,  -74.,   41.],       [  94.,   -2.,   35.],       [  62.,   77.,   43.],       [ -19.,   88.,   43.],       [ -86.,   36.,   39.],       [ -86.,  -39.,   44.],       [ -18.,  -89.,   43.],       [  56.,  -74.,   37.],       [  95.,    4.,   43.],       [  62.,   80.,   36.],       [ -22.,   93.,   39.],       [ -93.,   41.,   35.],       [ -87.,  -39.,   38.],       [ -27., -101.,   37.],       [  64.,  -82.,   44.]])
        basis0 = BSplineBasis(6, np.array([-1.3,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  1.7,  3. ,  3. ,  3. ,
        3. ,  3. ,  3.9]),0)
        basis1 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.3,  2.8,  3.8,
        5. ,  5. ,  5. ,  5. ,  5. ,  5. ,  5. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.9,  2.3,  3.3,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 0.4,  3.8,  7.2])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 0.400000
        pt2[...,1] -= 3.800000
        pt2[...,2] -= 7.200000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p556_C0_periodic(self):
        controlpoints = np.array([[  51.,   -3.,   -4.],       [  33.,   43.,   -4.],       [  -7.,   46.,    3.],       [ -47.,   25.,   -1.],       [ -47.,  -19.,   -4.],       [ -13.,  -46.,    2.],       [  28.,  -40.,   -3.],       [  52.,    2.,    4.],       [  35.,   43.,   -3.],       [ -16.,   53.,   -2.],       [ -55.,   25.,   -4.],       [ -50.,  -28.,    0.],       [ -11.,  -55.,   -1.],       [  32.,  -42.,   -4.],       [  65.,   -2.,   -5.],       [  42.,   45.,    3.],       [ -18.,   61.,   -5.],       [ -56.,   28.,   -2.],       [ -56.,  -30.,   -1.],       [ -19.,  -62.,    3.],       [  37.,  -47.,   -2.],       [  67.,    2.,    1.],       [  46.,   58.,   -5.],       [ -19.,   66.,   -3.],       [ -62.,   31.,   -4.],       [ -67.,  -34.,   -5.],       [ -19.,  -69.,    4.],       [  40.,  -54.,    4.],       [  81.,    3.,    1.],       [  52.,   58.,    3.],       [ -16.,   79.,    3.],       [ -69.,   33.,    2.],       [ -70.,  -30.,   -1.],       [ -14.,  -72.,   -5.],       [  50.,  -66.,    2.],       [  86.,    0.,    1.],       [  56.,   71.,   -3.],       [ -21.,   88.,   -4.],       [ -76.,   37.,   -2.],       [ -74.,  -33.,   -4.],       [ -22.,  -88.,   -2.],       [  55.,  -67.,    3.],       [  97.,   -2.,   -4.],       [  60.,   73.,    3.],       [ -25.,   90.,    1.],       [ -84.,   37.,   -5.],       [ -81.,  -40.,    4.],       [ -17.,  -91.,   -5.],       [  60.,  -78.,    3.],       [ 103.,   -3.,   -5.],       [  57.,   82.,   -3.],       [ -22.,   99.,   -1.],       [ -93.,   43.,    2.],       [ -93.,  -44.,   -4.],       [ -27.,  -99.,    2.],       [  60.,  -79.,   -3.],       [  50.,    0.,    5.],       [  33.,   41.,    7.],       [ -10.,   47.,    7.],       [ -49.,   18.,    3.],       [ -50.,  -19.,    9.],       [  -9.,  -53.,    2.],       [  31.,  -42.,    8.],       [  60.,   -4.,    9.],       [  34.,   44.,    2.],       [ -12.,   51.,    1.],       [ -55.,   22.,    6.],       [ -51.,  -21.,    0.],       [ -13.,  -57.,    0.],       [  38.,  -47.,    2.],       [  64.,    3.,    7.],       [  41.,   55.,    8.],       [ -11.,   66.,    5.],       [ -55.,   24.,   -1.],       [ -61.,  -24.,    9.],       [ -12.,  -63.,    2.],       [  41.,  -50.,    3.],       [  74.,   -3.,    6.],       [  48.,   57.,    3.],       [ -17.,   72.,    9.],       [ -66.,   26.,    0.],       [ -70.,  -36.,    2.],       [ -21.,  -73.,    0.],       [  45.,  -55.,    8.],       [  76.,   -4.,    6.],       [  50.,   64.,    7.],       [ -20.,   81.,    6.],       [ -71.,   35.,   -1.],       [ -69.,  -34.,    6.],       [ -21.,  -76.,    0.],       [  45.,  -67.,    4.],       [  85.,    2.,    9.],       [  53.,   70.,    1.],       [ -24.,   86.,    9.],       [ -74.,   40.,    6.],       [ -73.,  -36.,    1.],       [ -23.,  -82.,    3.],       [  55.,  -69.,    1.],       [  96.,    1.,    7.],       [  59.,   75.,    0.],       [ -17.,   91.,    6.],       [ -87.,   37.,    3.],       [ -87.,  -40.,    1.],       [ -24.,  -92.,    4.],       [  55.,  -71.,    1.],       [  98.,    0.,    6.],       [  62.,   76.,    7.],       [ -21.,  100.,    9.],       [ -87.,   39.,   -1.],       [ -88.,  -43.,    0.],       [ -25.,  -99.,    6.],       [  61.,  -76.,    8.],       [  46.,    1.,    6.],       [  27.,   43.,   13.],       [ -15.,   52.,    4.],       [ -45.,   24.,    7.],       [ -41.,  -18.,    8.],       [  -9.,  -52.,    9.],       [  26.,  -43.,   13.],       [  57.,   -4.,   12.],       [  34.,   47.,    7.],       [ -18.,   56.,    6.],       [ -55.,   28.,   12.],       [ -53.,  -21.,    7.],       [ -18.,  -61.,   13.],       [  30.,  -46.,    8.],       [  61.,   -3.,    5.],       [  37.,   51.,    8.],       [ -10.,   58.,    6.],       [ -56.,   29.,    4.],       [ -57.,  -33.,    5.],       [ -14.,  -65.,    4.],       [  41.,  -50.,    8.],       [  73.,   -5.,    9.],       [  43.,   51.,    5.],       [ -15.,   72.,    9.],       [ -66.,   34.,    4.],       [ -65.,  -29.,   10.],       [ -21.,  -70.,    8.],       [  41.,  -56.,    4.],       [  74.,    2.,    6.],       [  46.,   64.,    7.],       [ -19.,   77.,   12.],       [ -76.,   33.,   10.],       [ -69.,  -35.,    8.],       [ -17.,  -78.,    9.],       [  53.,  -66.,    9.],       [  85.,   -1.,   10.],       [  48.,   68.,   12.],       [ -22.,   81.,    9.],       [ -78.,   36.,    6.],       [ -81.,  -40.,   10.],       [ -20.,  -88.,    4.],       [  53.,  -64.,    5.],       [  91.,    4.,    9.],       [  62.,   72.,   12.],       [ -21.,   86.,    7.],       [ -81.,   41.,   12.],       [ -88.,  -43.,    5.],       [ -24.,  -92.,   10.],       [  53.,  -70.,    8.],       [  97.,   -5.,   12.],       [  66.,   77.,    9.],       [ -27.,   98.,    6.],       [ -91.,   42.,   11.],       [ -91.,  -48.,    8.],       [ -22.,  -95.,   10.],       [  63.,  -76.,   12.],       [  52.,   -4.,   15.],       [  29.,   36.,   10.],       [ -14.,   44.,   17.],       [ -44.,   17.,    9.],       [ -51.,  -26.,   10.],       [  -9.,  -48.,   12.],       [  31.,  -43.,    8.],       [  58.,    2.,   17.],       [  35.,   46.,   14.],       [ -13.,   54.,    9.],       [ -57.,   27.,   17.],       [ -53.,  -22.,   12.],       [  -9.,  -56.,   13.],       [  32.,  -47.,   13.],       [  60.,   -3.,   12.],       [  41.,   51.,    9.],       [ -13.,   65.,   16.],       [ -56.,   29.,   17.],       [ -56.,  -32.,   12.],       [ -18.,  -63.,   13.],       [  38.,  -53.,   11.],       [  66.,   -4.,   15.],       [  49.,   56.,   10.],       [ -21.,   64.,    8.],       [ -68.,   32.,   18.],       [ -60.,  -29.,   13.],       [ -13.,  -69.,   17.],       [  46.,  -59.,   17.],       [  77.,    4.,   13.],       [  51.,   57.,   15.],       [ -18.,   74.,   11.],       [ -71.,   38.,   16.],       [ -71.,  -35.,   16.],       [ -17.,  -80.,   15.],       [  53.,  -65.,   15.],       [  88.,   -4.,   15.],       [  52.,   69.,   10.],       [ -22.,   81.,   17.],       [ -79.,   33.,   10.],       [ -79.,  -33.,   18.],       [ -15.,  -79.,   14.],       [  54.,  -71.,   13.],       [  89.,    4.,   11.],       [  56.,   69.,   14.],       [ -25.,   85.,   12.],       [ -86.,   39.,    9.],       [ -83.,  -44.,   12.],       [ -23.,  -92.,   13.],       [  56.,  -69.,    9.],       [  97.,    0.,   10.],       [  63.,   82.,   17.],       [ -21.,   96.,   14.],       [ -86.,   45.,    8.],       [ -88.,  -43.,   14.],       [ -25., -103.,   12.],       [  59.,  -81.,   18.],       [  53.,   -4.,   19.],       [  35.,   34.,   16.],       [ -16.,   44.,   12.],       [ -49.,   17.,   14.],       [ -47.,  -24.,   18.],       [  -9.,  -54.,   17.],       [  27.,  -42.,   14.],       [  54.,    3.,   17.],       [  38.,   40.,   13.],       [ -13.,   59.,   14.],       [ -49.,   22.,   18.],       [ -49.,  -25.,   13.],       [ -18.,  -56.,   16.],       [  32.,  -42.,   13.],       [  63.,   -4.,   14.],       [  41.,   46.,   13.],       [ -18.,   59.,   13.],       [ -63.,   30.,   15.],       [ -63.,  -28.,   21.],       [ -18.,  -67.,   15.],       [  40.,  -46.,   16.],       [  69.,    1.,   21.],       [  49.,   55.,   17.],       [ -14.,   69.,   15.],       [ -63.,   28.,   21.],       [ -68.,  -31.,   19.],       [ -19.,  -68.,   18.],       [  43.,  -52.,   20.],       [  75.,   -4.,   15.],       [  51.,   63.,   16.],       [ -22.,   80.,   15.],       [ -71.,   33.,   20.],       [ -68.,  -39.,   20.],       [ -22.,  -73.,   13.],       [  51.,  -63.,   13.],       [  83.,   -5.,   20.],       [  52.,   71.,   19.],       [ -24.,   80.,   15.],       [ -79.,   34.,   21.],       [ -78.,  -43.,   20.],       [ -24.,  -87.,   18.],       [  55.,  -69.,   16.],       [  94.,    2.,   19.],       [  62.,   76.,   18.],       [ -25.,   92.,   18.],       [ -83.,   41.,   16.],       [ -88.,  -45.,   19.],       [ -16.,  -92.,   12.],       [  62.,  -71.,   16.],       [  99.,   -1.,   19.],       [  58.,   80.,   13.],       [ -27.,   97.,   14.],       [ -91.,   48.,   18.],       [ -91.,  -46.,   16.],       [ -19., -101.,   22.],       [  66.,  -78.,   20.],       [  54.,    3.,   23.],       [  27.,   39.,   18.],       [ -13.,   44.,   24.],       [ -48.,   22.,   23.],       [ -45.,  -17.,   21.],       [ -16.,  -49.,   24.],       [  29.,  -40.,   25.],       [  55.,   -5.,   22.],       [  33.,   49.,   22.],       [ -17.,   55.,   26.],       [ -47.,   27.,   19.],       [ -54.,  -29.,   21.],       [ -12.,  -55.,   21.],       [  36.,  -41.,   27.],       [  61.,   -5.,   25.],       [  39.,   53.,   21.],       [ -15.,   63.,   27.],       [ -55.,   29.,   19.],       [ -59.,  -29.,   18.],       [ -13.,  -66.,   26.],       [  36.,  -49.,   24.],       [  74.,   -2.,   20.],       [  46.,   57.,   24.],       [ -17.,   69.,   23.],       [ -64.,   28.,   27.],       [ -63.,  -32.,   23.],       [ -17.,  -74.,   26.],       [  39.,  -52.,   26.],       [  76.,    1.,   25.],       [  48.,   65.,   17.],       [ -20.,   80.,   20.],       [ -73.,   31.,   21.],       [ -69.,  -31.,   24.],       [ -14.,  -80.,   24.],       [  51.,  -65.,   26.],       [  82.,   -4.,   18.],       [  55.,   67.,   23.],       [ -16.,   81.,   22.],       [ -81.,   39.,   23.],       [ -74.,  -35.,   18.],       [ -22.,  -83.,   17.],       [  57.,  -67.,   17.],       [  91.,    2.,   19.],       [  61.,   68.,   17.],       [ -26.,   90.,   21.],       [ -80.,   41.,   20.],       [ -83.,  -45.,   25.],       [ -17.,  -90.,   21.],       [  60.,  -76.,   26.],       [ 100.,   -3.,   26.],       [  60.,   73.,   25.],       [ -22.,   94.,   23.],       [ -92.,   40.,   22.],       [ -86.,  -41.,   26.],       [ -19.,  -96.,   22.],       [  64.,  -77.,   18.],       [  54.,   -3.,   31.],       [  35.,   38.,   31.],       [ -11.,   43.,   27.],       [ -46.,   25.,   22.],       [ -45.,  -20.,   21.],       [ -11.,  -52.,   28.],       [  34.,  -37.,   27.],       [  53.,    4.,   28.],       [  36.,   45.,   31.],       [ -11.,   55.,   24.],       [ -48.,   29.,   29.],       [ -47.,  -29.,   31.],       [ -11.,  -51.,   29.],       [  34.,  -46.,   24.],       [  63.,   -1.,   23.],       [  35.,   46.,   25.],       [ -11.,   64.,   30.],       [ -54.,   23.,   25.],       [ -63.,  -24.,   29.],       [ -16.,  -63.,   28.],       [  42.,  -46.,   25.],       [  75.,    1.,   29.],       [  42.,   53.,   22.],       [ -19.,   68.,   22.],       [ -66.,   32.,   28.],       [ -61.,  -35.,   24.],       [ -18.,  -67.,   28.],       [  46.,  -54.,   25.],       [  76.,   -4.,   29.],       [  49.,   64.,   29.],       [ -14.,   76.,   24.],       [ -73.,   35.,   22.],       [ -72.,  -35.,   25.],       [ -19.,  -73.,   23.],       [  45.,  -60.,   25.],       [  90.,   -3.,   30.],       [  51.,   69.,   31.],       [ -23.,   88.,   22.],       [ -73.,   33.,   22.],       [ -73.,  -33.,   24.],       [ -16.,  -88.,   28.],       [  55.,  -65.,   27.],       [  94.,   -1.,   27.],       [  54.,   74.,   24.],       [ -18.,   90.,   23.],       [ -87.,   42.,   21.],       [ -87.,  -44.,   24.],       [ -24.,  -94.,   30.],       [  56.,  -73.,   31.],       [ 101.,   -1.,   29.],       [  63.,   73.,   24.],       [ -24.,   97.,   28.],       [ -88.,   43.,   26.],       [ -93.,  -43.,   30.],       [ -27.,  -99.,   22.],       [  61.,  -81.,   27.],       [  49.,   -4.,   33.],       [  35.,   35.,   34.],       [  -9.,   47.,   33.],       [ -50.,   26.,   33.],       [ -49.,  -26.,   32.],       [  -7.,  -50.,   31.],       [  28.,  -35.,   27.],       [  57.,    2.,   33.],       [  32.,   43.,   34.],       [ -15.,   59.,   31.],       [ -55.,   27.,   28.],       [ -51.,  -30.,   34.],       [ -12.,  -54.,   29.],       [  38.,  -44.,   28.],       [  68.,    2.,   33.],       [  35.,   50.,   29.],       [ -12.,   65.,   26.],       [ -63.,   27.,   27.],       [ -63.,  -26.,   30.],       [ -11.,  -60.,   33.],       [  35.,  -50.,   31.],       [  70.,    1.,   32.],       [  44.,   60.,   27.],       [ -13.,   73.,   34.],       [ -66.,   29.,   34.],       [ -62.,  -30.,   30.],       [ -15.,  -71.,   32.],       [  42.,  -60.,   28.],       [  78.,    1.,   28.],       [  44.,   57.,   30.],       [ -19.,   78.,   26.],       [ -73.,   39.,   33.],       [ -68.,  -33.,   26.],       [ -17.,  -75.,   28.],       [  52.,  -64.,   33.],       [  88.,    4.,   28.],       [  56.,   69.,   30.],       [ -16.,   84.,   26.],       [ -82.,   42.,   28.],       [ -74.,  -37.,   31.],       [ -23.,  -82.,   26.],       [  57.,  -64.,   34.],       [  90.,   -1.,   34.],       [  59.,   71.,   34.],       [ -24.,   87.,   28.],       [ -83.,   39.,   28.],       [ -81.,  -42.,   30.],       [ -22.,  -87.,   29.],       [  62.,  -78.,   35.],       [  99.,   -3.,   29.],       [  66.,   83.,   33.],       [ -25.,  101.,   33.],       [ -93.,   39.,   30.],       [ -90.,  -48.,   30.],       [ -24.,  -99.,   31.],       [  60.,  -78.,   28.],       [  47.,    0.,   40.],       [  28.,   34.,   36.],       [ -12.,   45.,   38.],       [ -46.,   16.,   40.],       [ -44.,  -26.,   33.],       [ -10.,  -48.,   34.],       [  31.,  -35.,   39.],       [  58.,    3.,   37.],       [  34.,   47.,   33.],       [  -9.,   55.,   31.],       [ -47.,   26.,   40.],       [ -54.,  -27.,   35.],       [  -9.,  -61.,   36.],       [  34.,  -48.,   37.],       [  66.,   -2.,   40.],       [  40.,   50.,   38.],       [ -12.,   66.,   37.],       [ -58.,   23.,   31.],       [ -61.,  -30.,   38.],       [ -12.,  -62.,   40.],       [  45.,  -54.,   40.],       [  67.,    4.,   32.],       [  48.,   58.,   40.],       [ -21.,   69.,   36.],       [ -65.,   35.,   34.],       [ -65.,  -34.,   36.],       [ -19.,  -70.,   40.],       [  42.,  -58.,   31.],       [  82.,   -2.,   34.],       [  48.,   61.,   32.],       [ -20.,   76.,   37.],       [ -75.,   32.,   36.],       [ -76.,  -34.,   34.],       [ -17.,  -82.,   35.],       [  44.,  -64.,   31.],       [  86.,    2.,   33.],       [  48.,   62.,   33.],       [ -17.,   84.,   31.],       [ -73.,   34.,   39.],       [ -74.,  -37.,   36.],       [ -15.,  -81.,   33.],       [  55.,  -70.,   38.],       [  91.,    4.,   38.],       [  58.,   71.,   38.],       [ -20.,   92.,   38.],       [ -81.,   44.,   36.],       [ -83.,  -45.,   40.],       [ -23.,  -94.,   39.],       [  59.,  -69.,   35.],       [  96.,    4.,   40.],       [  58.,   82.,   36.],       [ -26.,   99.,   37.],       [ -90.,   45.,   34.],       [ -87.,  -49.,   39.],       [ -25.,  -95.,   36.],       [  62.,  -74.,   39.],       [  48.,   -4.,   41.],       [  33.,   41.,   43.],       [  -9.,   45.,   42.],       [ -44.,   23.,   37.],       [ -45.,  -23.,   40.],       [ -11.,  -48.,   38.],       [  26.,  -36.,   39.],       [  54.,    3.,   42.],       [  36.,   45.,   38.],       [ -18.,   53.,   38.],       [ -55.,   24.,   37.],       [ -51.,  -27.,   39.],       [ -11.,  -54.,   38.],       [  30.,  -41.,   44.],       [  67.,    1.,   35.],       [  41.,   47.,   42.],       [ -12.,   65.,   35.],       [ -54.,   28.,   42.],       [ -56.,  -32.,   38.],       [ -13.,  -68.,   41.],       [  43.,  -51.,   42.],       [  69.,    1.,   38.],       [  48.,   53.,   40.],       [ -20.,   71.,   40.],       [ -67.,   31.,   35.],       [ -65.,  -35.,   35.],       [ -15.,  -72.,   36.],       [  40.,  -53.,   44.],       [  74.,   -3.,   43.],       [  46.,   57.,   39.],       [ -20.,   77.,   44.],       [ -75.,   38.,   44.],       [ -75.,  -34.,   38.],       [ -21.,  -80.,   37.],       [  53.,  -58.,   36.],       [  86.,   -2.,   36.],       [  58.,   67.,   41.],       [ -25.,   85.,   39.],       [ -74.,   33.,   41.],       [ -78.,  -33.,   43.],       [ -18.,  -84.,   42.],       [  49.,  -69.,   44.],       [  88.,   -4.,   39.],       [  56.,   69.,   35.],       [ -20.,   89.,   38.],       [ -81.,   38.,   39.],       [ -89.,  -41.,   43.],       [ -18.,  -91.,   39.],       [  59.,  -70.,   39.],       [  99.,   -4.,   44.],       [  64.,   80.,   43.],       [ -20.,   97.,   44.],       [ -93.,   43.,   37.],       [ -93.,  -43.,   40.],       [ -24.,  -95.,   40.],       [  59.,  -81.,   44.]])
        basis0 = BSplineBasis(5, np.array([-1.4,  0. ,  0. ,  0. ,  0. ,  1.1,  2.4,  2.6,  4. ,  4. ,  4. ,
        4. ,  5.1]),0)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.1,  3.2,  4. ,  4. ,  4. ,
        4. ,  4. ]))
        basis2 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.8,  1.9,  2.9,  4.2,  5. ,
        5. ,  5. ,  5. ,  5. ,  5. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([ 6.2,  3.3,  2.8])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 6.200000
        pt2[...,1] /= 3.300000
        pt2[...,2] /= 2.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_curve_3D_p7_C1_periodic(self):
        controlpoints = np.array([[ 103.,   -1.,    0.],
       [  84.,   52.,   -2.],
       [  41.,   91.,   -3.],
       [ -15.,   97.,    4.],
       [ -62.,   73.,   -3.],
       [-101.,   33.,    1.],
       [ -93.,  -26.,    4.],
       [ -63.,  -80.,   -1.],
       [ -17., -101.,    4.],
       [  38.,  -93.,   -5.],
       [  84.,  -51.,    1.]])
        basis0 = BSplineBasis(7, np.array([-1.9, -0.7,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2. ,  2.8,  4.4,
        5.1,  6.3,  7. ,  7. ,  7. ,  7. ,  7. ,  8.2,  9. ]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 += np.array([ 7.6,  3.6,  6.3])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] -= 7.600000
        pt2[...,1] -= 3.600000
        pt2[...,2] -= 6.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_curve_3D_p5_C1_periodic(self):
        controlpoints = np.array([[ 96.,  -3.,  -1.],
       [ 84.,  54.,   3.],
       [ 27.,  97.,   4.],
       [-29.,  98.,  -1.],
       [-85.,  57.,   0.],
       [-96.,   1.,  -2.],
       [-84., -56.,   1.],
       [-33., -95.,   0.],
       [ 29., -95.,  -3.],
       [ 79., -55.,  -1.]])
        basis0 = BSplineBasis(5, np.array([-2. , -0.8,  0. ,  0. ,  0. ,  1. ,  1.9,  3. ,  4.2,  5.1,  6. ,
        7.2,  8. ,  8. ,  8. ,  9. ,  9.9]),1)
        crv  = Curve(basis0, controlpoints,False)
        crv2 = crv.clone()
        crv2 *= np.array([ 10. ,   9.5,   9.7])

        u    = np.linspace(crv.start(0), crv.end(0), 13)
        pt   = crv(u)
        pt2  = crv2(u)
        pt2[...,0] /= 10.000000
        pt2[...,1] /= 9.500000
        pt2[...,2] /= 9.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_surface_3D_p56_C1_periodic(self):
        controlpoints = np.array([[  59.,   -2.,    2.],       [  44.,   38.,   -3.],       [  14.,   56.,   -2.],       [ -35.,   51.,    0.],       [ -61.,   19.,    4.],       [ -61.,  -21.,    0.],       [ -29.,  -49.,    4.],       [  10.,  -56.,    1.],       [  44.,  -34.,   -4.],       [  69.,    4.,    1.],       [  45.,   40.,    3.],       [   7.,   65.,    2.],       [ -29.,   57.,   -2.],       [ -57.,   18.,    1.],       [ -63.,  -27.,    4.],       [ -29.,  -59.,    4.],       [  15.,  -67.,    3.],       [  54.,  -45.,    2.],       [  66.,    3.,    3.],       [  51.,   41.,    1.],       [  10.,   70.,   -5.],       [ -33.,   61.,    2.],       [ -63.,   28.,   -5.],       [ -68.,  -21.,    3.],       [ -38.,  -65.,   -4.],       [  16.,  -71.,   -4.],       [  49.,  -44.,   -4.],       [  77.,    0.,    4.],       [  54.,   51.,    3.],       [   8.,   72.,   -1.],       [ -34.,   60.,    1.],       [ -68.,   26.,   -4.],       [ -70.,  -23.,    1.],       [ -41.,  -61.,    3.],       [  10.,  -73.,   -4.],       [  55.,  -46.,   -5.],       [  77.,    1.,    1.],       [  61.,   54.,    3.],       [  18.,   81.,   -3.],       [ -42.,   67.,    1.],       [ -71.,   29.,    0.],       [ -77.,  -25.,    2.],       [ -39.,  -72.,   -4.],       [  11.,  -81.,   -5.],       [  56.,  -51.,    1.],       [  82.,   -2.,    0.],       [  68.,   52.,   -1.],       [   9.,   79.,    0.],       [ -41.,   75.,    0.],       [ -78.,   30.,    1.],       [ -82.,  -33.,    4.],       [ -40.,  -79.,   -3.],       [  10.,  -85.,   -4.],       [  65.,  -51.,    2.],       [  89.,   -4.,    4.],       [  70.,   57.,   -1.],       [  19.,   85.,    3.],       [ -50.,   74.,    4.],       [ -88.,   33.,    0.],       [ -87.,  -28.,   -1.],       [ -48.,  -75.,    2.],       [  11.,  -93.,   -4.],       [  71.,  -63.,    1.],       [  91.,   -5.,   -3.],       [  75.,   61.,   -3.],       [  17.,   95.,    1.],       [ -43.,   80.,    4.],       [ -92.,   36.,   -1.],       [ -92.,  -36.,    1.],       [ -47.,  -82.,   -3.],       [  15.,  -94.,    4.],       [  68.,  -62.,   -2.],       [ 101.,    1.,   -4.],       [  79.,   69.,   -5.],       [  18.,  103.,   -4.],       [ -53.,   91.,    3.],       [ -96.,   29.,   -1.],       [ -94.,  -35.,   -4.],       [ -46.,  -87.,   -1.],       [  21., -102.,    2.],       [  80.,  -68.,   -1.]])
        basis0 = BSplineBasis(5, np.array([-1.9, -0.8,  0. ,  0. ,  0. ,  0.9,  2. ,  2.6,  3.6,  5.1,  6.2,
        7. ,  7. ,  7. ,  7.9,  9. ]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.7,  2.1,  3.3,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 += np.array([ 4.6,  1.3,  1.3])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] -= 4.600000
        pt2[...,1] -= 1.300000
        pt2[...,2] -= 1.300000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_surface_3D_p76_C1_periodic(self):
        controlpoints = np.array([[  64.,    3.,   -1.],       [  49.,   32.,    0.],       [  20.,   52.,    1.],       [ -15.,   55.,   -5.],       [ -52.,   30.,    1.],       [ -64.,   -1.,    0.],       [ -52.,  -34.,   -2.],       [ -24.,  -54.,    4.],       [  23.,  -61.,   -2.],       [  50.,  -34.,   -4.],       [  61.,   -1.,    1.],       [  55.,   39.,   -2.],       [  16.,   63.,    0.],       [ -23.,   64.,   -1.],       [ -53.,   41.,    1.],       [ -68.,    3.,    1.],       [ -55.,  -40.,    1.],       [ -25.,  -68.,    4.],       [  16.,  -66.,    0.],       [  58.,  -39.,    4.],       [  74.,    1.,   -1.],       [  58.,   44.,   -3.],       [  20.,   71.,   -1.],       [ -21.,   73.,    4.],       [ -59.,   40.,   -5.],       [ -70.,   -3.,    2.],       [ -55.,  -47.,   -2.],       [ -19.,  -66.,   -1.],       [  23.,  -74.,    2.],       [  59.,  -48.,    0.],       [  84.,    1.,   -2.],       [  61.,   44.,   -3.],       [  24.,   78.,    0.],       [ -23.,   74.,    2.],       [ -67.,   46.,   -1.],       [ -77.,    0.,   -1.],       [ -66.,  -45.,   -4.],       [ -24.,  -75.,   -4.],       [  26.,  -74.,    3.],       [  65.,  -48.,    0.],       [  83.,    3.,   -2.],       [  72.,   53.,   -1.],       [  22.,   84.,    0.],       [ -24.,   77.,    4.],       [ -73.,   48.,    4.],       [ -87.,   -4.,   -5.],       [ -66.,  -50.,    1.],       [ -28.,  -79.,    0.],       [  31.,  -79.,    3.],       [  70.,  -53.,   -3.],       [  93.,   -2.,   -2.],       [  71.,   59.,   -2.],       [  32.,   85.,   -4.],       [ -33.,   85.,    4.],       [ -78.,   56.,   -3.],       [ -93.,   -4.,   -1.],       [ -81.,  -52.,    0.],       [ -25.,  -87.,   -3.],       [  30.,  -92.,    3.],       [  70.,  -55.,   -5.],       [ 102.,   -5.,    2.],       [  80.,   54.,   -5.],       [  27.,   93.,   -4.],       [ -36.,   92.,    2.],       [ -80.,   58.,    4.],       [-105.,    0.,    1.],       [ -82.,  -63.,    1.],       [ -30.,  -93.,    4.],       [  33.,  -93.,   -5.],       [  77.,  -57.,   -1.]])
        basis0 = BSplineBasis(7, np.array([-1.8, -0.8,  0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2.1,  3.2,  4.2,
        5.2,  6. ,  6. ,  6. ,  6. ,  6. ,  7.2,  8.1]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2. ,  2. ,  2. ,
        2. ,  2. ]))
        surf  = Surface(basis0, basis1, controlpoints,False)
        surf2 = surf.clone()
        surf2 *= np.array([ 5.2,  5.9,  6.7])

        u    = np.linspace(surf.start(0), surf.end(0), 9)
        v    = np.linspace(surf.start(1), surf.end(1), 9)
        pt   = surf(u,v)
        pt2  = surf2(u,v)

        pt2[...,0] /= 5.200000
        pt2[...,1] /= 5.900000
        pt2[...,2] /= 6.700000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_translate_volume_3D_p767_C1_periodic(self):
        controlpoints = np.array([[  49.,    4.,    3.],       [  42.,   31.,   -2.],       [   5.,   52.,    4.],       [ -25.,   43.,    2.],       [ -48.,   14.,   -3.],       [ -45.,  -22.,   -5.],       [ -28.,  -42.,    4.],       [  12.,  -52.,    1.],       [  39.,  -36.,   -2.],       [  52.,   -5.,   -2.],       [  39.,   31.,   -4.],       [  13.,   56.,   -5.],       [ -26.,   44.,   -3.],       [ -58.,   22.,   -2.],       [ -56.,  -20.,   -5.],       [ -27.,  -53.,   -3.],       [  14.,  -53.,    1.],       [  38.,  -39.,   -2.],       [  64.,    2.,    4.],       [  44.,   44.,   -3.],       [  11.,   65.,    1.],       [ -30.,   54.,   -4.],       [ -58.,   23.,   -2.],       [ -54.,  -18.,   -5.],       [ -35.,  -56.,   -1.],       [  10.,  -64.,    1.],       [  44.,  -45.,    0.],       [  67.,   -4.,   -3.],       [  56.,   40.,   -3.],       [  11.,   64.,   -3.],       [ -35.,   55.,    2.],       [ -64.,   21.,    2.],       [ -62.,  -24.,   -1.],       [ -32.,  -58.,    0.],       [   9.,  -70.,   -2.],       [  55.,  -47.,   -4.],       [  78.,    3.,    1.],       [  56.,   46.,   -5.],       [   9.,   75.,    2.],       [ -43.,   63.,    1.],       [ -68.,   23.,   -4.],       [ -71.,  -23.,   -4.],       [ -40.,  -69.,    0.],       [  13.,  -69.,   -1.],       [  53.,  -53.,   -2.],       [  85.,   -3.,   -4.],       [  63.,   56.,    1.],       [  10.,   79.,   -5.],       [ -37.,   69.,   -3.],       [ -75.,   23.,    2.],       [ -81.,  -31.,   -4.],       [ -43.,  -71.,    3.],       [   9.,  -85.,    4.],       [  64.,  -57.,   -5.],       [  87.,   -5.,   -3.],       [  64.,   57.,    4.],       [  10.,   86.,    2.],       [ -42.,   73.,   -4.],       [ -86.,   32.,    1.],       [ -79.,  -32.,   -3.],       [ -47.,  -80.,    4.],       [  17.,  -86.,    4.],       [  64.,  -60.,   -4.],       [  93.,    4.,   -3.],       [  76.,   58.,    1.],       [  13.,   94.,   -4.],       [ -52.,   77.,    3.],       [ -93.,   34.,    3.],       [ -90.,  -30.,    1.],       [ -48.,  -83.,   -4.],       [  18.,  -92.,   -1.],       [  69.,  -63.,    0.],       [  99.,   -2.,    0.],       [  80.,   65.,    2.],       [  20.,  100.,    2.],       [ -48.,   86.,    0.],       [ -99.,   30.,   -3.],       [ -91.,  -40.,    2.],       [ -47.,  -87.,    4.],       [  16.,  -95.,    0.],       [  71.,  -62.,   -4.],       [  54.,   -3.,    7.],       [  35.,   34.,    0.],       [   5.,   45.,    1.],       [ -29.,   40.,    1.],       [ -51.,   13.,    3.],       [ -51.,  -22.,    5.],       [ -22.,  -43.,    3.],       [   8.,  -47.,    1.],       [  40.,  -32.,    9.],       [  60.,    1.,    1.],       [  43.,   36.,    0.],       [   8.,   58.,    5.],       [ -26.,   45.,    5.],       [ -49.,   20.,    0.],       [ -51.,  -18.,    3.],       [ -25.,  -49.,    3.],       [   6.,  -51.,    3.],       [  40.,  -41.,    8.],       [  67.,    2.,    6.],       [  44.,   36.,    7.],       [   7.,   63.,    9.],       [ -28.,   57.,    9.],       [ -57.,   25.,    4.],       [ -55.,  -22.,    6.],       [ -35.,  -58.,    5.],       [   8.,  -62.,    0.],       [  51.,  -42.,    5.],       [  72.,   -5.,    0.],       [  57.,   43.,    2.],       [  13.,   63.,    5.],       [ -32.,   57.,    8.],       [ -64.,   24.,    1.],       [ -70.,  -27.,    9.],       [ -33.,  -57.,    8.],       [  13.,  -66.,    7.],       [  53.,  -41.,    1.],       [  79.,   -4.,    4.],       [  59.,   45.,    5.],       [  14.,   75.,    5.],       [ -41.,   69.,    7.],       [ -71.,   29.,    1.],       [ -66.,  -21.,    8.],       [ -41.,  -61.,    0.],       [   8.,  -76.,    3.],       [  59.,  -52.,    9.],       [  77.,    0.,    4.],       [  58.,   51.,    6.],       [   9.,   77.,    9.],       [ -43.,   67.,    6.],       [ -76.,   29.,    2.],       [ -73.,  -26.,    3.],       [ -39.,  -66.,    8.],       [  18.,  -81.,    5.],       [  61.,  -51.,    9.],       [  84.,   -2.,    6.],       [  63.,   58.,    7.],       [  18.,   89.,    5.],       [ -42.,   77.,    7.],       [ -82.,   24.,    1.],       [ -83.,  -34.,    6.],       [ -49.,  -71.,    2.],       [  17.,  -91.,    9.],       [  66.,  -61.,    3.],       [  98.,    0.,    6.],       [  73.,   58.,    1.],       [  19.,   92.,    2.],       [ -52.,   78.,    4.],       [ -86.,   36.,    6.],       [ -92.,  -29.,    1.],       [ -44.,  -81.,    8.],       [  20.,  -97.,    0.],       [  74.,  -59.,    3.],       [  96.,   -5.,    3.],       [  79.,   61.,    7.],       [  12.,   96.,    1.],       [ -53.,   82.,    9.],       [ -90.,   32.,    0.],       [ -93.,  -31.,    3.],       [ -53.,  -89.,    0.],       [  20.,  -96.,    9.],       [  74.,  -65.,    7.],       [  54.,    3.,    7.],       [  42.,   32.,   10.],       [   8.,   47.,    9.],       [ -30.,   38.,    7.],       [ -44.,   13.,   14.],       [ -47.,  -19.,   12.],       [ -25.,  -40.,    5.],       [   8.,  -50.,   11.],       [  37.,  -33.,   12.],       [  60.,   -4.,    8.],       [  40.,   35.,    5.],       [  10.,   60.,    5.],       [ -30.,   51.,    6.],       [ -52.,   22.,    5.],       [ -53.,  -22.,   12.],       [ -26.,  -51.,   13.],       [  11.,  -59.,    9.],       [  45.,  -40.,   12.],       [  58.,   -4.,   10.],       [  51.,   41.,    5.],       [  14.,   59.,   10.],       [ -32.,   57.,    7.],       [ -59.,   17.,    5.],       [ -64.,  -19.,    5.],       [ -29.,  -57.,   10.],       [  13.,  -59.,   13.],       [  46.,  -39.,   14.],       [  64.,    3.,    9.],       [  55.,   43.,    6.],       [   7.,   66.,    5.],       [ -32.,   55.,    6.],       [ -67.,   28.,   10.],       [ -70.,  -22.,    8.],       [ -39.,  -55.,   11.],       [   8.,  -69.,   12.],       [  50.,  -40.,    6.],       [  73.,    4.,   10.],       [  59.,   51.,    6.],       [   9.,   78.,    9.],       [ -36.,   63.,    9.],       [ -69.,   27.,    7.],       [ -76.,  -24.,    6.],       [ -37.,  -63.,    9.],       [  12.,  -70.,   10.],       [  53.,  -50.,    8.],       [  85.,   -5.,   10.],       [  59.,   50.,   13.],       [  13.,   79.,   11.],       [ -39.,   69.,   14.],       [ -81.,   30.,    7.],       [ -75.,  -26.,    6.],       [ -43.,  -67.,   11.],       [  13.,  -80.,    5.],       [  67.,  -49.,    8.],       [  86.,   -4.,   10.],       [  68.,   57.,    8.],       [  14.,   83.,   13.],       [ -44.,   76.,    8.],       [ -81.,   32.,    6.],       [ -81.,  -30.,    5.],       [ -48.,  -79.,   10.],       [  15.,  -91.,    7.],       [  63.,  -59.,   12.],       [  92.,    2.,   11.],       [  66.,   56.,   11.],       [  11.,   94.,   14.],       [ -45.,   76.,    6.],       [ -89.,   29.,   14.],       [ -88.,  -29.,    6.],       [ -46.,  -79.,    6.],       [  14.,  -93.,    9.],       [  69.,  -63.,   14.],       [ 104.,   -5.,    6.],       [  72.,   60.,    5.],       [  15.,  100.,    5.],       [ -46.,   85.,    6.],       [ -92.,   35.,   14.],       [ -92.,  -38.,   14.],       [ -49.,  -91.,    8.],       [  16., -104.,    7.],       [  75.,  -67.,   10.],       [  45.,   -1.,   14.],       [  42.,   34.,   15.],       [  13.,   48.,   10.],       [ -22.,   47.,   16.],       [ -52.,   20.,   13.],       [ -45.,  -18.,   18.],       [ -30.,  -44.,   11.],       [   5.,  -48.,   14.],       [  37.,  -36.,   17.],       [  59.,    1.,   19.],       [  45.,   36.,   13.],       [  13.,   55.,   18.],       [ -27.,   46.,   11.],       [ -50.,   14.,   14.],       [ -55.,  -16.,   16.],       [ -30.,  -46.,   15.],       [   5.,  -59.,   12.],       [  41.,  -35.,   16.],       [  66.,   -5.,   16.],       [  51.,   43.,   13.],       [  13.,   59.,   19.],       [ -28.,   57.,   14.],       [ -57.,   20.,   12.],       [ -61.,  -25.,   14.],       [ -31.,  -57.,   17.],       [  13.,  -58.,   15.],       [  47.,  -43.,   18.],       [  68.,   -1.,   12.],       [  51.,   42.,   18.],       [  11.,   68.,   12.],       [ -34.,   55.,   12.],       [ -67.,   19.,   10.],       [ -62.,  -24.,   18.],       [ -36.,  -61.,   13.],       [   8.,  -66.,   10.],       [  48.,  -48.,   15.],       [  72.,    2.,   11.],       [  57.,   44.,   19.],       [   9.,   73.,   18.],       [ -34.,   67.,   12.],       [ -73.,   23.,   18.],       [ -73.,  -22.,   13.],       [ -42.,  -69.,   17.],       [  15.,  -71.,   17.],       [  60.,  -44.,   12.],       [  86.,    1.,   17.],       [  57.,   52.,   11.],       [  18.,   84.,   18.],       [ -37.,   66.,   16.],       [ -73.,   25.,   19.],       [ -78.,  -31.,   13.],       [ -45.,  -69.,   12.],       [  13.,  -79.,   11.],       [  58.,  -51.,   17.],       [  92.,   -3.,   16.],       [  66.,   54.,   10.],       [  13.,   86.,   19.],       [ -43.,   78.,   15.],       [ -80.,   33.,   10.],       [ -84.,  -27.,   17.],       [ -41.,  -77.,   18.],       [  13.,  -83.,   19.],       [  65.,  -54.,   17.],       [  90.,    2.,   15.],       [  73.,   60.,   14.],       [  18.,   89.,   17.],       [ -50.,   83.,   15.],       [ -86.,   33.,   10.],       [ -92.,  -36.,   11.],       [ -46.,  -85.,   13.],       [  13.,  -97.,   12.],       [  70.,  -59.,   12.],       [  97.,   -4.,   11.],       [  78.,   67.,   17.],       [  21.,   97.,   13.],       [ -50.,   90.,   19.],       [ -92.,   36.,   11.],       [ -91.,  -35.,   12.],       [ -49.,  -86.,   18.],       [  14.,  -95.,   11.],       [  78.,  -69.,   18.],       [  50.,   -1.,   16.],       [  42.,   35.,   23.],       [  10.,   51.,   21.],       [ -26.,   46.,   19.],       [ -46.,   15.,   20.],       [ -46.,  -18.,   15.],       [ -25.,  -44.,   21.],       [   4.,  -52.,   16.],       [  35.,  -36.,   16.],       [  59.,    4.,   19.],       [  44.,   33.,   21.],       [  13.,   52.,   19.],       [ -28.,   50.,   24.],       [ -51.,   15.,   19.],       [ -56.,  -19.,   18.],       [ -28.,  -51.,   17.],       [   9.,  -52.,   21.],       [  45.,  -33.,   20.],       [  64.,    2.,   21.],       [  49.,   40.,   18.],       [   5.,   57.,   18.],       [ -33.,   50.,   21.],       [ -64.,   19.,   20.],       [ -56.,  -20.,   22.],       [ -35.,  -51.,   22.],       [  14.,  -61.,   24.],       [  49.,  -37.,   22.],       [  65.,   -1.,   16.],       [  51.,   46.,   16.],       [   8.,   69.,   16.],       [ -37.,   55.,   17.],       [ -62.,   23.,   18.],       [ -67.,  -21.,   24.],       [ -32.,  -60.,   21.],       [  12.,  -70.,   23.],       [  49.,  -42.,   23.],       [  71.,    4.,   21.],       [  54.,   46.,   20.],       [  17.,   76.,   16.],       [ -36.,   62.,   15.],       [ -68.,   24.,   18.],       [ -76.,  -24.,   17.],       [ -37.,  -70.,   16.],       [  14.,  -72.,   16.],       [  57.,  -51.,   24.],       [  78.,    1.,   21.],       [  57.,   54.,   19.],       [  13.,   75.,   24.],       [ -38.,   67.,   17.],       [ -78.,   23.,   16.],       [ -73.,  -24.,   20.],       [ -44.,  -73.,   24.],       [  14.,  -80.,   24.],       [  61.,  -49.,   16.],       [  89.,    0.,   24.],       [  65.,   60.,   15.],       [  10.,   90.,   24.],       [ -46.,   71.,   23.],       [ -79.,   32.,   19.],       [ -78.,  -32.,   18.],       [ -47.,  -80.,   21.],       [  16.,  -90.,   24.],       [  66.,  -59.,   16.],       [  89.,   -5.,   17.],       [  75.,   56.,   18.],       [  16.,   87.,   21.],       [ -52.,   77.,   20.],       [ -87.,   34.,   18.],       [ -93.,  -35.,   18.],       [ -51.,  -78.,   23.],       [  17.,  -88.,   16.],       [  68.,  -60.,   18.],       [  98.,    1.,   18.],       [  79.,   68.,   20.],       [  21.,   93.,   17.],       [ -51.,   83.,   18.],       [ -97.,   33.,   15.],       [ -91.,  -32.,   24.],       [ -46.,  -91.,   22.],       [  16., -102.,   18.],       [  76.,  -67.,   18.],       [  52.,    4.,   28.],       [  39.,   30.,   26.],       [  10.,   50.,   24.],       [ -23.,   47.,   29.],       [ -45.,   16.,   29.],       [ -49.,  -15.,   23.],       [ -28.,  -42.,   27.],       [   8.,  -52.,   22.],       [  38.,  -29.,   29.],       [  55.,   -4.,   29.],       [  40.,   33.,   21.],       [  14.,   51.,   25.],       [ -31.,   45.,   22.],       [ -53.,   16.,   27.],       [ -52.,  -21.,   26.],       [ -27.,  -47.,   26.],       [   9.,  -59.,   25.],       [  47.,  -41.,   28.],       [  58.,   -2.,   25.],       [  48.,   43.,   22.],       [   8.,   65.,   25.],       [ -34.,   57.,   28.],       [ -62.,   25.,   29.],       [ -62.,  -20.,   22.],       [ -36.,  -56.,   28.],       [   8.,  -58.,   28.],       [  48.,  -39.,   22.],       [  67.,    3.,   20.],       [  50.,   46.,   24.],       [  13.,   72.,   20.],       [ -35.,   54.,   28.],       [ -66.,   21.,   27.],       [ -69.,  -24.,   22.],       [ -33.,  -59.,   25.],       [  14.,  -73.,   21.],       [  52.,  -43.,   20.],       [  75.,   -1.,   20.],       [  53.,   50.,   25.],       [  16.,   75.,   20.],       [ -41.,   66.,   27.],       [ -69.,   21.,   21.],       [ -71.,  -24.,   29.],       [ -40.,  -65.,   20.],       [  13.,  -72.,   26.],       [  53.,  -50.,   20.],       [  81.,   -4.,   20.],       [  60.,   55.,   26.],       [  12.,   79.,   22.],       [ -42.,   69.,   29.],       [ -74.,   26.,   24.],       [ -75.,  -30.,   28.],       [ -37.,  -76.,   29.],       [   9.,  -84.,   24.],       [  62.,  -57.,   27.],       [  91.,   -4.,   22.],       [  70.,   56.,   28.],       [  15.,   85.,   21.],       [ -48.,   78.,   23.],       [ -78.,   33.,   23.],       [ -83.,  -31.,   28.],       [ -43.,  -81.,   25.],       [  15.,  -88.,   26.],       [  66.,  -58.,   29.],       [  91.,   -4.,   29.],       [  68.,   61.,   23.],       [  16.,   87.,   23.],       [ -47.,   76.,   22.],       [ -88.,   32.,   23.],       [ -91.,  -37.,   22.],       [ -52.,  -83.,   20.],       [  14.,  -93.,   20.],       [  69.,  -56.,   23.],       [  99.,   -4.,   22.],       [  73.,   67.,   21.],       [  20.,   93.,   27.],       [ -50.,   87.,   26.],       [ -97.,   30.,   26.],       [ -91.,  -34.,   28.],       [ -52.,  -88.,   29.],       [  15., -100.,   22.],       [  77.,  -61.,   29.],       [  50.,    0.,   33.],       [  34.,   34.,   29.],       [  12.,   50.,   33.],       [ -25.,   38.,   26.],       [ -45.,   20.,   32.],       [ -44.,  -18.,   29.],       [ -30.,  -48.,   28.],       [   9.,  -50.,   31.],       [  35.,  -34.,   27.],       [  59.,   -2.,   31.],       [  44.,   40.,   29.],       [  13.,   52.,   34.],       [ -25.,   50.,   30.],       [ -53.,   24.,   27.],       [ -58.,  -18.,   32.],       [ -27.,  -46.,   33.],       [   8.,  -57.,   31.],       [  39.,  -32.,   33.],       [  64.,   -3.,   31.],       [  50.,   40.,   31.],       [   9.,   58.,   28.],       [ -35.,   57.,   28.],       [ -55.,   17.,   29.],       [ -62.,  -18.,   31.],       [ -35.,  -54.,   30.],       [  12.,  -62.,   31.],       [  43.,  -45.,   26.],       [  70.,    0.,   32.],       [  56.,   48.,   34.],       [   9.,   70.,   26.],       [ -38.,   55.,   32.],       [ -70.,   26.,   27.],       [ -64.,  -28.,   32.],       [ -39.,  -63.,   26.],       [   9.,  -71.,   31.],       [  57.,  -44.,   28.],       [  75.,   -2.,   27.],       [  54.,   43.,   32.],       [  13.,   75.,   26.],       [ -40.,   63.,   34.],       [ -66.,   23.,   29.],       [ -72.,  -27.,   25.],       [ -39.,  -65.,   32.],       [  15.,  -77.,   25.],       [  59.,  -51.,   26.],       [  86.,    0.,   25.],       [  58.,   55.,   25.],       [   9.,   83.,   28.],       [ -36.,   69.,   34.],       [ -74.,   27.,   29.],       [ -81.,  -29.,   34.],       [ -44.,  -76.,   31.],       [  14.,  -76.,   26.],       [  60.,  -54.,   34.],       [  87.,    1.,   29.],       [  68.,   57.,   26.],       [  17.,   89.,   28.],       [ -46.,   77.,   31.],       [ -80.,   31.,   31.],       [ -86.,  -26.,   25.],       [ -41.,  -76.,   34.],       [  18.,  -92.,   26.],       [  69.,  -52.,   30.],       [  90.,    1.,   30.],       [  70.,   64.,   27.],       [  16.,   91.,   33.],       [ -43.,   83.,   26.],       [ -89.,   35.,   31.],       [ -86.,  -29.,   25.],       [ -45.,  -82.,   27.],       [  21.,  -92.,   30.],       [  67.,  -59.,   27.],       [ 101.,    0.,   28.],       [  73.,   67.,   30.],       [  16.,   97.,   27.],       [ -46.,   83.,   34.],       [ -91.,   36.,   27.],       [ -94.,  -31.,   26.],       [ -46.,  -92.,   28.],       [  17.,  -98.,   34.],       [  75.,  -69.,   28.],       [  52.,   -2.,   36.],       [  41.,   28.,   38.],       [   5.,   46.,   32.],       [ -21.,   43.,   31.],       [ -48.,   14.,   32.],       [ -45.,  -20.,   30.],       [ -28.,  -48.,   38.],       [  11.,  -54.,   31.],       [  34.,  -38.,   32.],       [  60.,   -4.,   31.],       [  46.,   31.,   35.],       [   5.,   53.,   36.],       [ -26.,   44.,   32.],       [ -50.,   15.,   36.],       [ -57.,  -16.,   31.],       [ -27.,  -52.,   32.],       [   9.,  -52.,   38.],       [  41.,  -32.,   33.],       [  60.,    2.,   31.],       [  48.,   44.,   32.],       [   6.,   60.,   36.],       [ -30.,   49.,   35.],       [ -63.,   16.,   39.],       [ -64.,  -24.,   32.],       [ -28.,  -53.,   31.],       [  12.,  -63.,   36.],       [  44.,  -43.,   31.],       [  68.,    2.,   34.],       [  50.,   43.,   36.],       [   9.,   69.,   36.],       [ -36.,   59.,   32.],       [ -66.,   19.,   37.],       [ -60.,  -22.,   34.],       [ -39.,  -65.,   34.],       [  15.,  -70.,   39.],       [  55.,  -44.,   34.],       [  71.,   -4.,   34.],       [  54.,   45.,   31.],       [  11.,   73.,   36.],       [ -35.,   62.,   31.],       [ -67.,   27.,   30.],       [ -66.,  -23.,   37.],       [ -38.,  -62.,   31.],       [  13.,  -70.,   34.],       [  57.,  -53.,   32.],       [  81.,   -1.,   38.],       [  63.,   56.,   38.],       [  14.,   84.,   35.],       [ -38.,   74.,   37.],       [ -80.,   31.,   31.],       [ -76.,  -27.,   39.],       [ -45.,  -74.,   39.],       [  17.,  -78.,   39.],       [  58.,  -51.,   30.],       [  87.,    1.,   39.],       [  63.,   54.,   31.],       [  15.,   87.,   34.],       [ -46.,   79.,   36.],       [ -86.,   25.,   39.],       [ -84.,  -27.,   39.],       [ -49.,  -79.,   36.],       [  19.,  -91.,   39.],       [  62.,  -62.,   32.],       [  94.,    2.,   31.],       [  74.,   60.,   32.],       [  11.,   96.,   35.],       [ -48.,   82.,   31.],       [ -89.,   28.,   38.],       [ -92.,  -34.,   34.],       [ -52.,  -83.,   37.],       [  16.,  -90.,   30.],       [  74.,  -63.,   38.],       [  96.,    1.,   37.],       [  73.,   68.,   34.],       [  19.,  100.,   31.],       [ -49.,   89.,   32.],       [ -96.,   37.,   36.],       [ -91.,  -34.,   37.],       [ -48.,  -92.,   37.],       [  16.,  -96.,   39.],       [  80.,  -64.,   34.],       [  48.,    0.,   40.],       [  33.,   32.,   42.],       [   6.,   52.,   42.],       [ -25.,   47.,   40.],       [ -44.,   21.,   38.],       [ -47.,  -19.,   44.],       [ -21.,  -46.,   40.],       [  10.,  -50.,   35.],       [  38.,  -30.,   35.],       [  57.,   -5.,   44.],       [  38.,   36.,   40.],       [  10.,   56.,   40.],       [ -29.,   51.,   43.],       [ -56.,   23.,   42.],       [ -57.,  -23.,   43.],       [ -31.,  -45.,   39.],       [  11.,  -52.,   36.],       [  43.,  -38.,   35.],       [  64.,    0.,   44.],       [  48.,   41.,   43.],       [  11.,   57.,   42.],       [ -29.,   54.,   42.],       [ -61.,   18.,   44.],       [ -57.,  -19.,   36.],       [ -33.,  -55.,   43.],       [   8.,  -67.,   41.],       [  44.,  -40.,   38.],       [  66.,    3.,   38.],       [  48.,   46.,   41.],       [   9.,   64.,   36.],       [ -33.,   62.,   38.],       [ -63.,   23.,   44.],       [ -68.,  -27.,   39.],       [ -30.,  -56.,   37.],       [  11.,  -68.,   36.],       [  57.,  -42.,   42.],       [  74.,   -4.,   35.],       [  57.,   49.,   39.],       [  14.,   74.,   35.],       [ -34.,   67.,   38.],       [ -75.,   24.,   41.],       [ -70.,  -27.,   37.],       [ -39.,  -64.,   40.],       [  13.,  -77.,   35.],       [  58.,  -45.,   43.],       [  80.,   -3.,   44.],       [  64.,   52.,   37.],       [  17.,   83.,   37.],       [ -46.,   74.,   35.],       [ -80.,   32.,   38.],       [ -78.,  -25.,   36.],       [ -43.,  -69.,   37.],       [  10.,  -82.,   44.],       [  65.,  -56.,   43.],       [  82.,   -3.,   43.],       [  70.,   56.,   35.],       [  10.,   83.,   44.],       [ -46.,   74.,   39.],       [ -86.,   27.,   39.],       [ -85.,  -30.,   39.],       [ -41.,  -76.,   44.],       [  11.,  -84.,   39.],       [  67.,  -59.,   42.],       [  97.,   -4.,   44.],       [  70.,   59.,   44.],       [  12.,   91.,   44.],       [ -51.,   81.,   40.],       [ -92.,   31.,   39.],       [ -88.,  -31.,   44.],       [ -43.,  -77.,   44.],       [  16.,  -93.,   35.],       [  68.,  -56.,   40.],       [ 104.,   -5.,   37.],       [  78.,   66.,   38.],       [  15.,   94.,   38.],       [ -47.,   84.,   43.],       [ -91.,   31.,   43.],       [ -93.,  -34.,   36.],       [ -48.,  -87.,   40.],       [  19.,  -94.,   38.],       [  73.,  -68.,   36.]])
        basis0 = BSplineBasis(7, np.array([-2.2, -0.9,  0. ,  0. ,  0. ,  0. ,  0. ,  1. ,  2. ,  2.8,  4.1,
        5. ,  5. ,  5. ,  5. ,  5. ,  6. ,  7. ]),1)
        basis1 = BSplineBasis(6, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0.6,  1.8,  3.3,  4. ,  4. ,
        4. ,  4. ,  4. ,  4. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.3,  1.8,  3. ,  3. ,
        3. ,  3. ,  3. ,  3. ,  3. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 += np.array([ 9.9,  4.8,  7.1])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] -= 9.900000
        pt2[...,1] -= 4.800000
        pt2[...,2] -= 7.100000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)

    def test_scale_volume_3D_p557_C1_periodic(self):
        controlpoints = np.array([[  54.,   -1.,   -3.],       [  29.,   37.,    3.],       [ -15.,   46.,    3.],       [ -44.,   21.,    2.],       [ -43.,  -27.,    2.],       [  -9.,  -50.,   -4.],       [  28.,  -44.,    0.],       [  56.,   -5.,   -5.],       [  33.,   42.,   -4.],       [ -10.,   50.,    4.],       [ -53.,   20.,    0.],       [ -51.,  -23.,    3.],       [ -11.,  -51.,    4.],       [  39.,  -40.,   -2.],       [  62.,    0.,    1.],       [  34.,   52.,   -5.],       [ -17.,   63.,   -2.],       [ -56.,   27.,   -4.],       [ -61.,  -30.,    1.],       [ -11.,  -57.,   -5.],       [  41.,  -54.,   -3.],       [  64.,   -2.,   -3.],       [  38.,   50.,   -5.],       [ -12.,   64.,    2.],       [ -64.,   26.,   -5.],       [ -63.,  -30.,   -5.],       [ -13.,  -68.,    4.],       [  41.,  -53.,   -2.],       [  72.,    3.,   -2.],       [  42.,   54.,   -3.],       [ -17.,   75.,   -1.],       [ -66.,   36.,   -1.],       [ -65.,  -29.,   -1.],       [ -17.,  -70.,    4.],       [  48.,  -54.,   -4.],       [  81.,   -2.,   -1.],       [  45.,   63.,   -2.],       [ -18.,   79.,   -4.],       [ -70.,   32.,    3.],       [ -75.,  -40.,   -2.],       [ -23.,  -83.,    4.],       [  52.,  -62.,   -2.],       [  83.,    2.,   -1.],       [  58.,   72.,    3.],       [ -18.,   87.,    3.],       [ -81.,   37.,    1.],       [ -83.,  -40.,    3.],       [ -20.,  -81.,   -5.],       [  56.,  -71.,    4.],       [  97.,   -1.,   -3.],       [  63.,   68.,   -3.],       [ -17.,   91.,   -1.],       [ -88.,   40.,    2.],       [ -88.,  -42.,    2.],       [ -22.,  -91.,   -2.],       [  59.,  -75.,   -2.],       [ 101.,    0.,   -3.],       [  62.,   82.,    3.],       [ -25.,  100.,   -1.],       [ -95.,   38.,    4.],       [ -93.,  -45.,   -3.],       [ -23.,  -98.,    2.],       [  59.,  -77.,    3.],       [  54.,   -5.,   10.],       [  35.,   42.,    9.],       [ -12.,   47.,    3.],       [ -41.,   16.,    7.],       [ -47.,  -25.,    3.],       [ -12.,  -51.,    1.],       [  26.,  -39.,    4.],       [  54.,   -5.,    4.],       [  36.,   47.,    5.],       [ -15.,   54.,    2.],       [ -47.,   23.,    8.],       [ -48.,  -25.,    1.],       [ -13.,  -54.,   10.],       [  30.,  -40.,    1.],       [  60.,    4.,    1.],       [  40.,   49.,    4.],       [ -10.,   60.,    3.],       [ -61.,   24.,    3.],       [ -55.,  -25.,   10.],       [ -13.,  -63.,    7.],       [  41.,  -47.,   10.],       [  72.,    1.,    8.],       [  41.,   55.,    7.],       [ -19.,   66.,    6.],       [ -60.,   33.,    7.],       [ -64.,  -27.,    1.],       [ -16.,  -69.,    2.],       [  44.,  -57.,    5.],       [  79.,   -1.,    0.],       [  42.,   60.,    3.],       [ -22.,   74.,    6.],       [ -66.,   28.,    2.],       [ -68.,  -31.,    8.],       [ -22.,  -75.,    1.],       [  50.,  -60.,    2.],       [  83.,    1.,    4.],       [  47.,   66.,    6.],       [ -15.,   80.,   10.],       [ -75.,   36.,    6.],       [ -78.,  -40.,    8.],       [ -19.,  -81.,   10.],       [  54.,  -64.,    5.],       [  86.,   -3.,    7.],       [  57.,   68.,    4.],       [ -18.,   88.,    9.],       [ -78.,   39.,    2.],       [ -79.,  -34.,    1.],       [ -18.,  -87.,    3.],       [  50.,  -71.,    6.],       [  92.,   -2.,    7.],       [  60.,   69.,    7.],       [ -20.,   91.,    8.],       [ -83.,   35.,    8.],       [ -87.,  -40.,    9.],       [ -19.,  -91.,    1.],       [  61.,  -76.,    9.],       [ 101.,    0.,    5.],       [  66.,   77.,    4.],       [ -27.,   97.,    9.],       [ -88.,   41.,    5.],       [ -90.,  -45.,    7.],       [ -18.,  -96.,    6.],       [  61.,  -79.,    0.],       [  45.,   -3.,   14.],       [  29.,   43.,   12.],       [ -16.,   45.,   10.],       [ -45.,   25.,    9.],       [ -42.,  -21.,    7.],       [  -8.,  -45.,   11.],       [  26.,  -37.,    8.],       [  56.,    4.,    6.],       [  33.,   45.,    7.],       [ -10.,   54.,   14.],       [ -50.,   20.,   13.],       [ -48.,  -29.,   10.],       [ -10.,  -60.,   15.],       [  38.,  -43.,    6.],       [  59.,    2.,   16.],       [  34.,   47.,   13.],       [ -14.,   60.,   10.],       [ -55.,   26.,   11.],       [ -61.,  -32.,   11.],       [ -18.,  -63.,    8.],       [  39.,  -53.,   12.],       [  65.,   -1.,   13.],       [  43.,   51.,   15.],       [ -15.,   63.,    7.],       [ -58.,   28.,   13.],       [ -58.,  -32.,    8.],       [ -16.,  -64.,    8.],       [  47.,  -52.,   16.],       [  79.,    2.,    9.],       [  41.,   63.,    7.],       [ -19.,   75.,   15.],       [ -72.,   33.,    8.],       [ -71.,  -37.,    6.],       [ -19.,  -70.,    7.],       [  43.,  -61.,   10.],       [  81.,    0.,    9.],       [  49.,   66.,   14.],       [ -19.,   79.,   16.],       [ -69.,   36.,   14.],       [ -72.,  -38.,    7.],       [ -22.,  -76.,   11.],       [  51.,  -60.,   13.],       [  91.,   -5.,   13.],       [  59.,   63.,   14.],       [ -16.,   84.,    8.],       [ -81.,   42.,    8.],       [ -82.,  -42.,   12.],       [ -23.,  -86.,   13.],       [  58.,  -73.,    8.],       [  92.,   -5.,    8.],       [  59.,   74.,   10.],       [ -26.,   90.,   10.],       [ -87.,   39.,   10.],       [ -89.,  -43.,   12.],       [ -21.,  -92.,    6.],       [  62.,  -75.,    6.],       [ 101.,    4.,   13.],       [  66.,   76.,   12.],       [ -20.,  102.,    7.],       [ -92.,   43.,   12.],       [ -87.,  -45.,   10.],       [ -25.,  -99.,    6.],       [  61.,  -81.,    8.],       [  48.,   -1.,   14.],       [  31.,   42.,   21.],       [ -15.,   50.,   18.],       [ -42.,   21.,   14.],       [ -46.,  -19.,   13.],       [ -16.,  -49.,   13.],       [  30.,  -38.,   19.],       [  57.,   -2.,   16.],       [  31.,   39.,   20.],       [ -17.,   57.,   14.],       [ -46.,   19.,   14.],       [ -48.,  -23.,   20.],       [ -17.,  -59.,   12.],       [  36.,  -40.,   18.],       [  60.,    1.,   19.],       [  36.,   51.,   18.],       [ -16.,   57.,   15.],       [ -58.,   24.,   18.],       [ -55.,  -23.,   22.],       [ -14.,  -57.,   15.],       [  40.,  -51.,   15.],       [  68.,   -3.,   17.],       [  47.,   55.,   20.],       [ -20.,   69.,   19.],       [ -60.,   31.,   14.],       [ -67.,  -31.,   19.],       [ -17.,  -66.,   15.],       [  46.,  -56.,   21.],       [  73.,   -5.,   12.],       [  47.,   59.,   15.],       [ -16.,   74.,   19.],       [ -65.,   37.,   15.],       [ -72.,  -29.,   21.],       [ -13.,  -69.,   20.],       [  48.,  -61.,   16.],       [  85.,   -2.,   12.],       [  48.,   61.,   16.],       [ -15.,   81.,   19.],       [ -74.,   34.,   17.],       [ -73.,  -35.,   17.],       [ -17.,  -84.,   17.],       [  48.,  -61.,   18.],       [  87.,   -5.,   13.],       [  50.,   72.,   20.],       [ -24.,   84.,   15.],       [ -80.,   37.,   19.],       [ -80.,  -38.,   14.],       [ -21.,  -82.,   15.],       [  52.,  -64.,   16.],       [  93.,   -1.,   18.],       [  58.,   75.,   13.],       [ -18.,   91.,   21.],       [ -85.,   40.,   12.],       [ -89.,  -37.,   16.],       [ -17.,  -88.,   13.],       [  56.,  -78.,   13.],       [  97.,    4.,   14.],       [  58.,   82.,   20.],       [ -19.,   99.,   17.],       [ -92.,   41.,   14.],       [ -89.,  -42.,   14.],       [ -24.,  -98.,   18.],       [  58.,  -75.,   13.],       [  45.,   -2.,   26.],       [  32.,   36.,   22.],       [  -7.,   50.,   22.],       [ -44.,   21.,   24.],       [ -48.,  -19.,   26.],       [  -8.,  -49.,   24.],       [  31.,  -42.,   26.],       [  54.,   -3.,   18.],       [  34.,   39.,   24.],       [ -13.,   58.,   22.],       [ -47.,   24.,   23.],       [ -54.,  -20.,   18.],       [  -9.,  -57.,   18.],       [  30.,  -40.,   18.],       [  58.,   -4.,   26.],       [  38.,   46.,   19.],       [ -19.,   64.,   20.],       [ -60.,   30.,   21.],       [ -55.,  -23.,   22.],       [ -18.,  -63.,   23.],       [  43.,  -44.,   19.],       [  70.,    3.,   19.],       [  47.,   54.,   18.],       [ -16.,   63.,   20.],       [ -64.,   32.,   20.],       [ -63.,  -34.,   18.],       [ -13.,  -70.,   24.],       [  40.,  -53.,   22.],       [  70.,    4.,   25.],       [  42.,   57.,   24.],       [ -20.,   77.,   23.],       [ -64.,   33.,   17.],       [ -72.,  -33.,   18.],       [ -18.,  -71.,   24.],       [  42.,  -57.,   26.],       [  77.,   -3.,   18.],       [  47.,   65.,   22.],       [ -20.,   75.,   19.],       [ -70.,   37.,   24.],       [ -74.,  -32.,   27.],       [ -16.,  -83.,   25.],       [  52.,  -65.,   22.],       [  89.,   -3.,   19.],       [  51.,   65.,   20.],       [ -19.,   85.,   23.],       [ -77.,   33.,   20.],       [ -78.,  -42.,   21.],       [ -20.,  -88.,   24.],       [  52.,  -66.,   21.],       [  93.,    4.,   19.],       [  57.,   73.,   26.],       [ -18.,   87.,   24.],       [ -85.,   42.,   24.],       [ -90.,  -38.,   23.],       [ -26.,  -94.,   25.],       [  61.,  -74.,   22.],       [  98.,    3.,   22.],       [  65.,   81.,   22.],       [ -26.,   95.,   21.],       [ -94.,   41.,   24.],       [ -90.,  -45.,   20.],       [ -27.,  -95.,   22.],       [  63.,  -74.,   24.],       [  50.,   -3.,   26.],       [  27.,   42.,   29.],       [ -11.,   45.,   29.],       [ -42.,   20.,   32.],       [ -49.,  -22.,   30.],       [ -15.,  -46.,   28.],       [  29.,  -37.,   28.],       [  52.,   -3.,   29.],       [  30.,   44.,   28.],       [ -17.,   51.,   31.],       [ -55.,   21.,   31.],       [ -54.,  -24.,   28.],       [ -11.,  -56.,   28.],       [  35.,  -40.,   26.],       [  65.,   -2.,   31.],       [  36.,   50.,   26.],       [ -19.,   59.,   24.],       [ -58.,   29.,   23.],       [ -54.,  -23.,   29.],       [ -16.,  -64.,   26.],       [  36.,  -50.,   28.],       [  68.,   -3.,   31.],       [  40.,   52.,   23.],       [ -15.,   66.,   27.],       [ -61.,   33.,   25.],       [ -58.,  -33.,   25.],       [ -17.,  -66.,   26.],       [  47.,  -51.,   26.],       [  73.,    1.,   28.],       [  44.,   54.,   32.],       [ -21.,   74.,   31.],       [ -63.,   31.,   32.],       [ -68.,  -30.,   23.],       [ -19.,  -74.,   32.],       [  45.,  -57.,   23.],       [  82.,   -3.,   30.],       [  49.,   59.,   30.],       [ -15.,   74.,   29.],       [ -71.,   37.,   30.],       [ -71.,  -34.,   26.],       [ -23.,  -78.,   27.],       [  52.,  -64.,   27.],       [  88.,   -5.,   28.],       [  58.,   72.,   30.],       [ -17.,   87.,   30.],       [ -80.,   42.,   25.],       [ -83.,  -38.,   25.],       [ -21.,  -88.,   27.],       [  57.,  -69.,   29.],       [  95.,    1.,   28.],       [  59.,   70.,   24.],       [ -19.,   94.,   24.],       [ -84.,   39.,   29.],       [ -82.,  -45.,   28.],       [ -17.,  -90.,   31.],       [  55.,  -77.,   28.],       [  98.,    0.,   23.],       [  63.,   76.,   33.],       [ -23.,   94.,   25.],       [ -87.,   40.,   30.],       [ -93.,  -41.,   25.],       [ -22.,  -96.,   30.],       [  65.,  -83.,   24.],       [  52.,   -3.,   34.],       [  35.,   43.,   38.],       [  -8.,   46.,   35.],       [ -41.,   17.,   38.],       [ -43.,  -21.,   30.],       [ -14.,  -53.,   37.],       [  31.,  -44.,   33.],       [  55.,   -2.,   29.],       [  38.,   45.,   38.],       [ -11.,   53.,   33.],       [ -55.,   24.,   36.],       [ -49.,  -25.,   33.],       [ -17.,  -54.,   38.],       [  33.,  -40.,   34.],       [  58.,   -1.,   33.],       [  35.,   52.,   38.],       [ -13.,   58.,   35.],       [ -54.,   28.,   36.],       [ -57.,  -30.,   34.],       [ -19.,  -58.,   30.],       [  36.,  -52.,   36.],       [  70.,   -5.,   31.],       [  42.,   53.,   36.],       [ -19.,   66.,   30.],       [ -67.,   32.,   36.],       [ -57.,  -28.,   29.],       [ -17.,  -64.,   37.],       [  43.,  -51.,   32.],       [  71.,   -1.,   32.],       [  48.,   55.,   31.],       [ -17.,   77.,   32.],       [ -65.,   34.,   35.],       [ -65.,  -29.,   36.],       [ -13.,  -71.,   36.],       [  49.,  -62.,   33.],       [  76.,    4.,   32.],       [  52.,   60.,   35.],       [ -19.,   74.,   37.],       [ -78.,   32.,   35.],       [ -77.,  -40.,   30.],       [ -21.,  -78.,   31.],       [  53.,  -61.,   30.],       [  85.,   -2.,   33.],       [  57.,   69.,   33.],       [ -20.,   90.,   34.],       [ -75.,   40.,   29.],       [ -83.,  -42.,   33.],       [ -16.,  -85.,   36.],       [  55.,  -72.,   33.],       [  96.,    0.,   32.],       [  54.,   72.,   35.],       [ -26.,   95.,   37.],       [ -87.,   43.,   37.],       [ -83.,  -43.,   39.],       [ -21.,  -96.,   39.],       [  59.,  -76.,   35.],       [ 100.,   -3.,   31.],       [  66.,   78.,   33.],       [ -19.,   97.,   31.],       [ -90.,   44.,   38.],       [ -88.,  -48.,   37.],       [ -18., -101.,   30.],       [  66.,  -80.,   38.],       [  48.,    1.,   37.],       [  31.,   35.,   38.],       [ -10.,   48.,   37.],       [ -48.,   16.,   39.],       [ -45.,  -18.,   36.],       [  -8.,  -49.,   40.],       [  33.,  -44.,   43.],       [  61.,    1.,   44.],       [  30.,   41.,   39.],       [ -17.,   56.,   44.],       [ -55.,   24.,   40.],       [ -54.,  -26.,   40.],       [ -11.,  -60.,   43.],       [  31.,  -45.,   44.],       [  61.,    1.,   42.],       [  38.,   51.,   38.],       [ -18.,   61.,   36.],       [ -56.,   24.,   38.],       [ -60.,  -24.,   38.],       [ -19.,  -58.,   36.],       [  34.,  -54.,   44.],       [  64.,    2.,   41.],       [  45.,   49.,   40.],       [ -13.,   69.,   39.],       [ -62.,   32.,   36.],       [ -61.,  -28.,   44.],       [ -16.,  -68.,   44.],       [  40.,  -57.,   39.],       [  73.,    4.,   35.],       [  50.,   56.,   37.],       [ -22.,   71.,   39.],       [ -63.,   29.,   42.],       [ -67.,  -34.,   42.],       [ -20.,  -78.,   37.],       [  47.,  -64.,   37.],       [  83.,   -1.,   39.],       [  45.,   63.,   38.],       [ -23.,   81.,   40.],       [ -78.,   33.,   39.],       [ -77.,  -34.,   43.],       [ -17.,  -78.,   43.],       [  46.,  -64.,   40.],       [  91.,   -4.,   37.],       [  57.,   63.,   36.],       [ -17.,   88.,   43.],       [ -80.,   39.,   36.],       [ -77.,  -38.,   36.],       [ -21.,  -85.,   43.],       [  55.,  -68.,   39.],       [  94.,    3.,   39.],       [  59.,   76.,   42.],       [ -20.,   87.,   36.],       [ -89.,   39.,   38.],       [ -84.,  -37.,   39.],       [ -25.,  -92.,   38.],       [  54.,  -75.,   36.],       [ 100.,   -5.,   39.],       [  61.,   80.,   44.],       [ -26.,   99.,   44.],       [ -88.,   42.,   44.],       [ -88.,  -40.,   38.],       [ -19.,  -94.,   36.],       [  64.,  -83.,   43.]])
        basis0 = BSplineBasis(5, np.array([-2.4, -0.9,  0. ,  0. ,  0. ,  0.9,  2. ,  2.6,  4.1,  5. ,  5. ,
        5. ,  5.9,  7. ]),1)
        basis1 = BSplineBasis(5, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  1.2,  2. ,  2.9,  4.3,  5. ,  5. ,
        5. ,  5. ,  5. ]))
        basis2 = BSplineBasis(7, np.array([ 0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  0. ,  1.1,  2. ,  2. ,  2. ,
        2. ,  2. ,  2. ,  2. ]))
        vol  = Volume(basis0, basis1, basis2, controlpoints,False)
        vol2 = vol.clone()
        vol2 *= np.array([ 10.4,   3.1,  10.8])

        u    = np.linspace(vol.start(0), vol.end(0), 7)
        v    = np.linspace(vol.start(1), vol.end(1), 7)
        w    = np.linspace(vol.start(2), vol.end(2), 7)
        pt   = vol(u,v,w)
        pt2  = vol2(u,v,w)
        pt2[...,0] /= 10.400000
        pt2[...,1] /= 3.100000
        pt2[...,2] /= 10.800000
        self.assertAlmostEqual(np.max(pt-pt2), 0.0)


if __name__ == '__main__':
    unittest.main()
